{"version":3,"file":"poseBody.js","sources":["../../../../extensions/scripts/node_modules/.pnpm/@rollup+plugin-typescript@11.1.6_rollup@4.18.0_tslib@2.6.2_typescript@5.4.5/node_modules/tslib/tslib.es6.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/backend.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/util_base.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/environment.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/global_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/profiler.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/tensor_format.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/tensor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/types.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/engine.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/tape.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/device_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/flags.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/complex.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/types.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/model_management.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/cast.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/clone.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/print.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/progress.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/http.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/browser.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/serialization.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/test_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/version.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/globals.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/add.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/div.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/mul.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/abs.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/acos.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/all.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/any.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/asin.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/atan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/cos.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/diag.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/equal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/where.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/dot.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/elu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/erf.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/exp.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tile.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/eye.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/fill.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/floor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/gather.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/greater.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/imag.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/less.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/log.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/gradients.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/neg.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/max.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sub.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/mean.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/min.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/mod.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/square.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/moments.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/ones.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pool.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/pow.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/prod.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/rand.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/alea.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/xor128.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/xorwow.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/xorshift7.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/xor4096.js","../../../../extensions/src/poseBody/node_modules/seedrandom/lib/tychei.js","../../../../extensions/src/poseBody/node_modules/seedrandom/seedrandom.js","../../../../extensions/src/poseBody/node_modules/seedrandom/index.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/range.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/real.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/round.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/selu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sign.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sin.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/split.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/stack.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/step.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/topk.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/unique.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/variable.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/norm.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/ops.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/train.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/browser_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/log.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-core/dist/index.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/flags.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/sparse.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/string.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/sparse_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/string_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js","../../../../extensions/src/poseBody/node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js","../../../../extensions/src/poseBody/node_modules/@tensorflow-models/posenet/dist/posenet.esm.js","../../../../extensions/src/poseBody/legacy.ts","../../../../extensions/src/poseBody/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend {\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n//# sourceMappingURL=backend.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array) {\n    let counter = array.length;\n    let temp = 0;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\n/** Clamps a value to a specified range. */\nexport function clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexport function nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nexport function sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nexport function assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nexport function assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexport function isScalarShape(shape) {\n    return shape.length === 0;\n}\nexport function arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isInt(a) {\n    return a % 1 === 0;\n}\nexport function tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexport function sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexport function rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexport function repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexport function parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nexport function getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexport function isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nexport function bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\nexport function inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array || values instanceof Uint8Array) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nexport function isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexport function nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nexport function computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0];\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(shape, a) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}.`);\n    }\n    return createNestedArray(0, shape, a);\n}\nexport function makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nexport function makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nexport function assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=util_base.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            console.warn(`Platform ${this.platformName} has already been set. ` +\n                `Overwriting the platform with ${platform}.`);\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because the\n        // environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if (isPromise(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nexport function getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n    return ENV;\n}\nexport let ENV = null;\nexport function setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n//# sourceMappingURL=environment.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace;\n// tslint:disable-next-line:no-any\nexport function getGlobalNamespace() {\n    if (globalNameSpace == null) {\n        // tslint:disable-next-line:no-any\n        let ns;\n        if (typeof (window) !== 'undefined') {\n            ns = window;\n        }\n        else if (typeof (global) !== 'undefined') {\n            ns = global;\n        }\n        else if (typeof (process) !== 'undefined') {\n            ns = process;\n        }\n        else if (typeof (self) !== 'undefined') {\n            ns = self;\n        }\n        else {\n            throw new Error('Could not find a global object');\n        }\n        globalNameSpace = ns;\n    }\n    return globalNameSpace;\n}\n// tslint:disable-next-line:no-any\nfunction getGlobalMap() {\n    const ns = getGlobalNamespace();\n    if (ns._tfGlobals == null) {\n        ns._tfGlobals = new Map();\n    }\n    return ns._tfGlobals;\n}\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nexport function getGlobal(key, init) {\n    const globalMap = getGlobalMap();\n    if (globalMap.has(key)) {\n        return globalMap.get(key);\n    }\n    else {\n        const singleton = init();\n        globalMap.set(key, singleton);\n        return globalMap.get(key);\n    }\n}\n//# sourceMappingURL=global_util.js.map","export const Abs = 'Abs';\nexport const Acos = 'Acos';\nexport const Acosh = 'Acosh';\nexport const Add = 'Add';\nexport const AddN = 'AddN';\nexport const All = 'All';\nexport const Any = 'Any';\nexport const ArgMax = 'ArgMax';\nexport const ArgMin = 'ArgMin';\nexport const Asin = 'Asin';\nexport const Asinh = 'Asinh';\nexport const Atan = 'Atan';\nexport const Atanh = 'Atanh';\nexport const Atan2 = 'Atan2';\nexport const AvgPool = 'AvgPool';\nexport const AvgPoolGrad = 'AvgPoolGrad';\nexport const AvgPool3D = 'AvgPool3D';\nexport const AvgPool3DGrad = 'AvgPool3DGrad';\nexport const BatchMatMul = 'BatchMatMul';\nexport const BatchToSpaceND = 'BatchToSpaceND';\nexport const Bincount = 'Bincount';\nexport const BroadcastTo = 'BroadcastTo';\nexport const Cast = 'Cast';\nexport const Ceil = 'Ceil';\nexport const ClipByValue = 'ClipByValue';\nexport const Complex = 'Complex';\nexport const ComplexAbs = 'ComplexAbs';\nexport const Concat = 'Concat';\nexport const Conv2D = 'Conv2D';\nexport const Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nexport const Conv2DBackpropInput = 'Conv2DBackpropInput';\nexport const Conv3D = 'Conv3D';\nexport const Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nexport const Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nexport const Cos = 'Cos';\nexport const Cosh = 'Cosh';\nexport const Cumsum = 'Cumsum';\nexport const CropAndResize = 'CropAndResize';\nexport const DenseBincount = 'DenseBincount';\nexport const DepthToSpace = 'DepthToSpace';\nexport const DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nexport const DepthwiseConv2dNativeBackpropFilter = 'DepthwiseConv2dNativeBackpropFilter';\nexport const DepthwiseConv2dNativeBackpropInput = 'DepthwiseConv2dNativeBackpropInput';\nexport const Diag = 'Diag';\nexport const Dilation2D = 'Dilation2D';\nexport const Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nexport const Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nexport const RealDiv = 'RealDiv';\nexport const Elu = 'Elu';\nexport const EluGrad = 'EluGrad';\nexport const Erf = 'Erf';\nexport const Equal = 'Equal';\nexport const Exp = 'Exp';\nexport const ExpandDims = 'ExpandDims';\nexport const Expm1 = 'Expm1';\nexport const FFT = 'FFT';\nexport const Fill = 'Fill';\nexport const FlipLeftRight = 'FlipLeftRight';\nexport const Floor = 'Floor';\nexport const FloorDiv = 'FloorDiv';\nexport const FusedBatchNorm = 'FusedBatchNorm';\nexport const GatherV2 = 'GatherV2';\nexport const GatherNd = 'GatherNd';\nexport const Greater = 'Greater';\nexport const GreaterEqual = 'GreaterEqual';\nexport const Identity = 'Identity';\nexport const IFFT = 'IFFT';\nexport const Imag = 'Imag';\nexport const IsFinite = 'IsFinite';\nexport const IsInf = 'IsInf';\nexport const IsNan = 'IsNan';\nexport const LeakyRelu = 'LeakyRelu';\nexport const Less = 'Less';\nexport const LessEqual = 'LessEqual';\nexport const LinSpace = 'LinSpace';\nexport const Log = 'Log';\nexport const Log1p = 'Log1p';\nexport const LogicalAnd = 'LogicalAnd';\nexport const LogicalNot = 'LogicalNot';\nexport const LogicalOr = 'LogicalOr';\nexport const LogSoftmax = 'LogSoftmax';\nexport const LRN = 'LRN';\nexport const LRNGrad = 'LRNGrad';\nexport const Max = 'Max';\nexport const Maximum = 'Maximum';\nexport const MaxPool = 'MaxPool';\nexport const MaxPoolGrad = 'MaxPoolGrad';\nexport const MaxPool3D = 'MaxPool3D';\nexport const MaxPool3DGrad = 'MaxPool3DGrad';\nexport const MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nexport const Mean = 'Mean';\nexport const Min = 'Min';\nexport const Minimum = 'Minimum';\nexport const MirrorPad = 'MirrorPad';\nexport const Mod = 'Mod';\nexport const Multinomial = 'Multinomial';\nexport const Multiply = 'Multiply';\nexport const Neg = 'Neg';\nexport const NotEqual = 'NotEqual';\nexport const NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nexport const NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nexport const NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nexport const OnesLike = 'OnesLike';\nexport const OneHot = 'OneHot';\nexport const Pack = 'Pack';\nexport const PadV2 = 'PadV2';\nexport const Pool = 'Pool';\nexport const Pow = 'Pow';\nexport const Prelu = 'Prelu';\nexport const Prod = 'Prod';\nexport const Range = 'Range';\nexport const Real = 'Real';\nexport const Reciprocal = 'Reciprocal';\nexport const Relu = 'Relu';\nexport const Reshape = 'Reshape';\nexport const ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nexport const ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nexport const ResizeBilinear = 'ResizeBilinear';\nexport const ResizeBilinearGrad = 'ResizeBilinearGrad';\nexport const Relu6 = 'Relu6';\nexport const Reverse = 'Reverse';\nexport const Round = 'Round';\nexport const Rsqrt = 'Rsqrt';\nexport const ScatterNd = 'ScatterNd';\nexport const Select = 'Select';\nexport const Selu = 'Selu';\nexport const Slice = 'Slice';\nexport const Sin = 'Sin';\nexport const Sinh = 'Sinh';\nexport const Sign = 'Sign';\nexport const Sigmoid = 'Sigmoid';\nexport const Softplus = 'Softplus';\nexport const Sqrt = 'Sqrt';\nexport const Sum = 'Sum';\nexport const SpaceToBatchND = 'SpaceToBatchND';\nexport const SplitV = 'SplitV';\nexport const Softmax = 'Softmax';\nexport const SquaredDifference = 'SquaredDifference';\nexport const Square = 'Square';\nexport const Sub = 'Sub';\nexport const SparseToDense = 'SparseToDense';\nexport const StridedSlice = 'StridedSlice';\nexport const Tan = 'Tan';\nexport const Tanh = 'Tanh';\nexport const Tile = 'Tile';\nexport const TopK = 'TopK';\nexport const Transpose = 'Transpose';\nexport const Unique = 'Unique';\nexport const Unpack = 'Unpack';\nexport const UnsortedSegmentSum = 'UnsortedSegmentSum';\nexport const ZerosLike = 'ZerosLike';\n/**\n * TensorFlow.js-only kernels\n */\nexport const Step = 'Step';\nexport const FromPixels = 'FromPixels';\nexport const RotateWithOffset = 'RotateWithOffset';\nexport const _FusedMatMul = '_FusedMatMul';\nexport const FusedConv2D = 'FusedConv2D';\nexport const FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\n//# sourceMappingURL=kernel_names.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport { getGlobal } from './global_util';\nconst kernelRegistry = getGlobal('kernelRegistry', () => new Map());\nconst gradRegistry = getGlobal('gradRegistry', () => new Map());\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nexport function getKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    return kernelRegistry.get(key);\n}\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nexport function getGradient(kernelName) {\n    return gradRegistry.get(kernelName);\n}\nexport function getKernelsForBackend(backendName) {\n    const it = kernelRegistry.entries();\n    const result = [];\n    while (true) {\n        const { done, value } = it.next();\n        if (done) {\n            break;\n        }\n        const [key, config] = value;\n        const [backend,] = key.split('_');\n        if (backend === backendName) {\n            result.push(config);\n        }\n    }\n    return result;\n}\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nexport function registerKernel(config) {\n    const { kernelName, backendName } = config;\n    const key = makeKey(kernelName, backendName);\n    if (kernelRegistry.has(key)) {\n        console.warn(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is already registered`);\n    }\n    kernelRegistry.set(key, config);\n}\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nexport function registerGradient(config) {\n    const { kernelName } = config;\n    if (gradRegistry.has(kernelName)) {\n        // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n        // to debug mode.\n        if (env().getBool('DEBUG')) {\n            console.warn(`Overriding the gradient for '${kernelName}'`);\n        }\n    }\n    gradRegistry.set(kernelName, config);\n}\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nexport function unregisterKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    if (!kernelRegistry.has(key)) {\n        throw new Error(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is not registered`);\n    }\n    kernelRegistry.delete(key);\n}\n/** Removes the registered gradient from the global registry. */\nexport function unregisterGradient(kernelName) {\n    if (!gradRegistry.has(kernelName)) {\n        throw new Error(`The gradient '${kernelName}' for backend is not registered`);\n    }\n    gradRegistry.delete(kernelName);\n}\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nexport function copyRegisteredKernels(registeredBackendName, newBackendName) {\n    const kernels = getKernelsForBackend(registeredBackendName);\n    kernels.forEach(kernelConfig => {\n        const newKernelConfig = Object.assign({}, kernelConfig, { backendName: newBackendName });\n        registerKernel(newKernelConfig);\n    });\n}\nfunction makeKey(kernelName, backendName) {\n    return `${backendName}_${kernelName}`;\n}\n//# sourceMappingURL=kernel_registry.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as base from './util_base';\nexport * from './util_base';\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nexport function toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = base.flatten(a);\n    }\n    if (env().getBool('DEBUG')) {\n        base.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now() {\n    return env().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(path, requestInits) {\n    return env().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as util from './util';\nexport class Profiler {\n    constructor(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    profileKernel(kernelName, inputs, f) {\n        let outputs;\n        const holdResultWrapperFn = () => {\n            outputs = f();\n        };\n        const timer = this.backendTimer.time(holdResultWrapperFn);\n        if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n            for (let i = 0; i < outputs.length; i++) {\n                const output = outputs[i];\n                // Dangling promise here because we don't want to propagate up\n                // asynchronicity.\n                output.data().then(tensorVals => {\n                    checkComputationForErrors(tensorVals, output.dtype, kernelName);\n                });\n            }\n        }\n        const kernelProfile = {\n            kernelName,\n            outputs,\n            inputs,\n            timeMs: timer.then(timing => timing.kernelMs),\n            extraInfo: timer.then(timing => timing.getExtraProfileInfo != null ?\n                timing.getExtraProfileInfo() :\n                '')\n        };\n        return kernelProfile;\n    }\n    logKernelProfile(kernelProfile) {\n        const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;\n        outputs.forEach(result => {\n            Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n                this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n            });\n        });\n    }\n}\nexport function checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(`Found ${num} in the result of '${kernelName}'`);\n            return true;\n        }\n    }\n    return false;\n}\nexport class Logger {\n    logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n        const time = typeof timeMs === 'number' ? util.rightPad(`${timeMs}ms`, 9) :\n            timeMs['error'];\n        const paddedName = util.rightPad(name, 25);\n        const rank = result.rank;\n        const size = result.size;\n        const shape = util.rightPad(result.shape.toString(), 14);\n        let inputShapesDescription = '';\n        for (const name in inputs) {\n            const input = inputs[name];\n            if (input != null) {\n                // The input might be a non-tensor (e.g HTMLImageElement), in which case\n                // we claim the output shape as input shape.\n                const inputShape = input.shape || result.shape;\n                const inputRank = inputShape.length;\n                inputShapesDescription +=\n                    `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n            }\n        }\n        console.log(`%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${inputShapesDescription}\\t%c${extraInfo}`, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n}\n//# sourceMappingURL=profiler.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { computeStrides, isString, rightPad, sizeFromShape } from './util';\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nexport function tensorToString(vals, shape, dtype, verbose) {\n    const strides = computeStrides(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = sizeFromShape(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if (isString(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return rightPad(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlobal } from './global_util';\nimport { tensorToString } from './tensor_format';\nimport * as util from './util';\nimport { computeStrides, toNestedArray } from './util';\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            util.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || util.getArrayFromDType(dtype, this.size);\n        this.strides = computeStrides(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = util.sizeFromShape(shape);\n        this.strides = computeStrides(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return toNestedArray(this.shape, vals);\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return toNestedArray(this.shape, this.dataSync());\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return tensorToString(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\nexport function getGlobalTensorClass() {\n    // Use getGlobal so that we can augment the Tensor class across package\n    // boundaries becase the node resolution alg may result in different modules\n    // being returned for this file depending on the path they are loaded from.\n    return getGlobal('Tensor', () => {\n        return Tensor;\n    });\n}\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nexport function upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nexport function sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=types.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from './tensor';\nimport { upcastType } from './types';\nimport { assert } from './util';\nexport function makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = upcastType(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nexport function assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nexport function isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { KernelBackend } from './backends/backend';\nimport { Environment, setEnvironmentGlobal } from './environment';\nimport { getGlobalNamespace } from './global_util';\nimport { Add, Cast } from './kernel_names';\nimport { getGradient, getKernel, getKernelsForBackend } from './kernel_registry';\nimport { Profiler } from './profiler';\nimport { backpropagateGradients, getFilteredNodesXToY } from './tape';\nimport { setTensorTracker, Tensor, Variable } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\nimport * as util from './util';\nimport { bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape } from './util';\nfunction isRegisteredKernelInvocation(kernelInvocation) {\n    return kernelInvocation.kernelName != null;\n}\nclass EngineState {\n    constructor() {\n        // Public since optimizers will use it.\n        this.registeredVariables = {};\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numStringTensors = 0;\n        this.numDataBuffers = 0;\n        // Number of nested tf.grad() statements when computing higher-order\n        // gradients. E.g. `1` for first-order gradients and `2` for second-order\n        // gradients. Used to track if the tape should be removed after a backprop.\n        this.gradientDepth = 0;\n        // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n        // off the tape.\n        this.kernelDepth = 0;\n        this.scopeStack = [];\n        /**\n         * Keeps track of the number of data moves during a kernel execution. We\n         * maintain a stack since kernels can call other kernels, recursively.\n         */\n        this.numDataMovesStack = [];\n        this.nextScopeId = 0;\n        this.tensorInfo = new WeakMap();\n        this.profiling = false;\n        this.activeProfile = {\n            newBytes: 0,\n            newTensors: 0,\n            peakBytes: 0,\n            kernels: [],\n            result: null,\n            get kernelNames() {\n                return Array.from(new Set(this.kernels.map(k => k.name)));\n            }\n        };\n    }\n    dispose() {\n        for (const variableName in this.registeredVariables) {\n            this.registeredVariables[variableName].dispose();\n        }\n    }\n}\nexport class Engine {\n    constructor(ENV) {\n        this.ENV = ENV;\n        this.registry = {};\n        this.registryFactory = {};\n        this.pendingBackendInitId = 0;\n        this.state = new EngineState();\n    }\n    async ready() {\n        if (this.pendingBackendInit != null) {\n            return this.pendingBackendInit.then(() => { });\n        }\n        if (this.backendInstance != null) {\n            return;\n        }\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const success = await this.initializeBackend(backendName).success;\n            if (success) {\n                await this.setBackend(backendName);\n                return;\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    get backend() {\n        if (this.pendingBackendInit != null) {\n            throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make ` +\n                `sure to await tf.ready() or await tf.setBackend() before calling ` +\n                `other methods`);\n        }\n        if (this.backendInstance == null) {\n            const { name, asyncInit } = this.initializeBackendsAndReturnBest();\n            if (asyncInit) {\n                throw new Error(`The highest priority backend '${name}' has not yet been ` +\n                    `initialized. Make sure to await tf.ready() or ` +\n                    `await tf.setBackend() before calling other methods`);\n            }\n            this.setBackend(name);\n        }\n        return this.backendInstance;\n    }\n    backendNames() {\n        return Object.keys(this.registryFactory);\n    }\n    findBackend(backendName) {\n        if (!(backendName in this.registry)) {\n            // If the backend hasn't been initialized but we have a registry entry for\n            // it, initialize it and return it.\n            if (backendName in this.registryFactory) {\n                const { asyncInit } = this.initializeBackend(backendName);\n                if (asyncInit) {\n                    // Backend is not ready yet.\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        return this.registry[backendName];\n    }\n    findBackendFactory(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            return null;\n        }\n        return this.registryFactory[backendName].factory;\n    }\n    registerBackend(backendName, factory, priority = 1) {\n        if (backendName in this.registryFactory) {\n            console.warn(`${backendName} backend was already registered. ` +\n                `Reusing existing backend factory.`);\n            return false;\n        }\n        this.registryFactory[backendName] = { factory, priority };\n        return true;\n    }\n    async setBackend(backendName) {\n        if (this.registryFactory[backendName] == null) {\n            throw new Error(`Backend name '${backendName}' not found in registry`);\n        }\n        this.backendName = backendName;\n        if (this.registry[backendName] == null) {\n            this.backendInstance = null;\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            const result = asyncInit ? await success : success;\n            if (!result) {\n                return false;\n            }\n        }\n        this.backendInstance = this.registry[backendName];\n        this.setupRegisteredKernels();\n        // Reset the profiler.\n        this.profiler = new Profiler(this.backendInstance);\n        return true;\n    }\n    setupRegisteredKernels() {\n        const kernels = getKernelsForBackend(this.backendName);\n        kernels.forEach(kernel => {\n            if (kernel.setupFunc != null) {\n                kernel.setupFunc(this.backendInstance);\n            }\n        });\n    }\n    disposeRegisteredKernels(backendName) {\n        const kernels = getKernelsForBackend(backendName);\n        kernels.forEach(kernel => {\n            if (kernel.disposeFunc != null) {\n                kernel.disposeFunc(this.registry[backendName]);\n            }\n        });\n    }\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n    initializeBackend(backendName) {\n        const registryFactoryEntry = this.registryFactory[backendName];\n        if (registryFactoryEntry == null) {\n            throw new Error(`Cannot initialize backend ${backendName}, no registration found.`);\n        }\n        try {\n            const backend = registryFactoryEntry.factory();\n            /* Test if the factory returns a promise.\n            Done in a more liberal way than\n            previous 'Promise.resolve(backend)===backend'\n            as we needed to account for custom Promise\n            implementations (e.g. Angular) */\n            if (backend && !(backend instanceof KernelBackend) &&\n                typeof backend.then === 'function') {\n                const promiseId = ++this.pendingBackendInitId;\n                const success = backend\n                    .then(backendInstance => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.registry[backendName] = backendInstance;\n                    this.pendingBackendInit = null;\n                    return true;\n                })\n                    .catch(err => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.pendingBackendInit = null;\n                    console.warn(`Initialization of backend ${backendName} failed`);\n                    console.warn(err.stack || err.message);\n                    return false;\n                });\n                this.pendingBackendInit = success;\n                return { success, asyncInit: true };\n            }\n            else {\n                this.registry[backendName] = backend;\n                return { success: true, asyncInit: false };\n            }\n        }\n        catch (err) {\n            console.warn(`Initialization of backend ${backendName} failed`);\n            console.warn(err.stack || err.message);\n            return { success: false, asyncInit: false };\n        }\n    }\n    removeBackend(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            throw new Error(`${backendName} backend not found in registry`);\n        }\n        if (this.backendName === backendName && this.pendingBackendInit != null) {\n            // There is a pending promise of the backend we want to remove. Make it\n            // obsolete.\n            this.pendingBackendInitId++;\n        }\n        if (backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        delete this.registryFactory[backendName];\n        // Unset the backend if it is active.\n        if (this.backendName === backendName) {\n            this.pendingBackendInit = null;\n            this.backendName = null;\n            this.backendInstance = null;\n        }\n    }\n    getSortedBackends() {\n        if (Object.keys(this.registryFactory).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        return Object.keys(this.registryFactory).sort((a, b) => {\n            // Highest priority comes first.\n            return this.registryFactory[b].priority -\n                this.registryFactory[a].priority;\n        });\n    }\n    initializeBackendsAndReturnBest() {\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            if (asyncInit || success) {\n                return { name: backendName, asyncInit };\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    moveData(backend, dataId) {\n        const info = this.state.tensorInfo.get(dataId);\n        const srcBackend = info.backend;\n        const values = this.readSync(dataId);\n        // Delete the tensor from the old backend and move it to the new\n        // backend.\n        srcBackend.disposeData(dataId);\n        info.backend = backend;\n        backend.move(dataId, values, info.shape, info.dtype);\n        if (this.shouldCheckForMemLeaks()) {\n            // Track the number of moves during a kernel execution to correctly\n            // detect memory leaks.\n            this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n        }\n    }\n    tidy(nameOrFn, fn) {\n        let name = null;\n        if (fn == null) {\n            // Called with only 1 argument.\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            // Called with 2 arguments.\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n            // TODO(nsthorat,smilkov): Do operation logging and performance\n            // profiling.\n        }\n        let result;\n        return this.scopedRun(() => this.startScope(name), () => this.endScope(result), () => {\n            result = fn();\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            return result;\n        });\n    }\n    scopedRun(start, end, f) {\n        start();\n        try {\n            const res = f();\n            end();\n            return res;\n        }\n        catch (ex) {\n            end();\n            throw ex;\n        }\n    }\n    nextTensorId() {\n        return Engine.nextTensorId++;\n    }\n    nextVariableId() {\n        return Engine.nextVariableId++;\n    }\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     */\n    clone(x) {\n        const y = this.makeTensorFromDataId(x.dataId, x.shape, x.dtype);\n        const inputs = { x };\n        const grad = (dy) => ({\n            x: () => {\n                const dtype = 'float32';\n                const gradInputs = { x: dy };\n                const attrs = { dtype };\n                return ENGINE.runKernel(Cast, gradInputs, \n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                attrs);\n            }\n        });\n        const saved = [];\n        this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n        return y;\n    }\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n    runKernel(kernelName, inputs, attrs) {\n        const hasKernel = getKernel(kernelName, this.backendName) != null;\n        if (!hasKernel) {\n            throw new Error(`Kernel '${kernelName}' not registered for backend '${this.backendName}'`);\n        }\n        return this.runKernelFunc({ kernelName, inputs, attrs });\n    }\n    shouldCheckForMemLeaks() {\n        return this.ENV.getBool('IS_TEST');\n    }\n    checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {\n        const numDataIdsAfter = this.backend.numDataIds();\n        // Count the number of data ids associated with the result of the kernel.\n        let numOutputDataIds = 0;\n        outInfos.forEach(info => {\n            // Complex numbers allocate 3 data ids, one for 'real', one for\n            // 'imaginary', and one for the container that holds the former two.\n            numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n        });\n        // Account for the number of moves during kernel execution. A \"data move\"\n        // can happen in the middle of a kernel execution, placing a new (key,value)\n        // pair in the data storage. Since data moves have net zero effect (we\n        // always remove the data from the old backend), we have to cancel them out\n        // when detecting memory leaks.\n        const numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n        const dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n        if (dataIdsLeaked > 0) {\n            throw new Error(`Backend '${this.backendName}' has an internal memory leak ` +\n                `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n        }\n    }\n    /**\n     * Internal helper method to execute a kernel Func\n     *\n     * Use `runKernel` to execute kernels from outside of engine.\n     */\n    runKernelFunc(kernelParams) {\n        let outputs;\n        let saved = [];\n        const isTapeOn = this.isTapeOn();\n        const startingBytecount = this.state.numBytes;\n        const startingNumTensors = this.state.numTensors;\n        if (this.shouldCheckForMemLeaks()) {\n            this.state.numDataMovesStack.push(0);\n        }\n        let kernelFunc;\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        let out;\n        const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n            kernelParams.kernelName :\n            this.state.activeScope != null ? this.state.activeScope.name : '';\n        // Create the kernelFunc from either a registered kernel OR passed in\n        // forward/backward functions (used by custom grad). In this context a\n        // kernelFunc wraps a kernel implementation with some bookkeeping.\n        if (isRegisteredKernelInvocation(kernelParams)) {\n            const { kernelName, inputs, attrs } = kernelParams;\n            if (this.backendName == null) {\n                // backend has not been initialized yet (backend initialization is lazy\n                // can be deferred until an op/ kernel is run).\n                // The below getter has side effects that will try to initialize the\n                // backend and set properties like this.backendName\n                // tslint:disable-next-line: no-unused-expression\n                this.backend;\n            }\n            const kernel = getKernel(kernelName, this.backendName);\n            util.assert(kernel != null, () => `Cannot find registered kernel '${kernelName}' for backend '${this.backendName}'`);\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = kernel.kernelFunc({ inputs, attrs, backend: this.backend });\n                const outInfos = Array.isArray(out) ? out : [out];\n                if (this.shouldCheckForMemLeaks()) {\n                    this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n                }\n                const outTensors = outInfos.map((outInfo) => {\n                    // todo (yassogba) remove this option (Tensor) when node backend\n                    // methods have been modularized and they all return tensorInfo.\n                    // TensorInfos do not have a rank attribute.\n                    if (outInfo.rank != null) {\n                        return outInfo;\n                    }\n                    const { dataId, shape, dtype } = outInfo;\n                    return this.makeTensorFromDataId(dataId, shape, dtype);\n                });\n                // Save any required inputs and outputs.\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since there would be no backprop for these tensors\n                // (which would otherwise dispose them).\n                if (isTapeOn) {\n                    const tensorsToSave = this.getTensorsForGradient(kernelName, inputs, outTensors);\n                    saved = this.saveTensorsForBackwardMode(tensorsToSave);\n                }\n                return outTensors;\n            };\n        }\n        else {\n            const { forwardFunc } = kernelParams;\n            // Running a customGrad op.\n            const saveFunc = (tensors) => {\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since we would never run backprop, which disposes\n                // the kept tensors.\n                if (!isTapeOn) {\n                    return;\n                }\n                saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n            };\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n                const outs = (Array.isArray(out) ? out : [out]);\n                if (this.shouldCheckForMemLeaks()) {\n                    // Scope name is used to print a more helpful error message if needed.\n                    this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n                }\n                return outs;\n            };\n        }\n        //\n        // Run the kernelFunc. Optionally profiling it.\n        //\n        const { inputs, attrs } = kernelParams;\n        const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n            null :\n            kernelParams.backwardsFunc;\n        let kernelProfile;\n        this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n            if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n                outputs = kernelFunc();\n            }\n            else {\n                kernelProfile = this.profiler.profileKernel(kernelOrScopeName, inputs, () => kernelFunc());\n                if (this.ENV.getBool('DEBUG')) {\n                    this.profiler.logKernelProfile(kernelProfile);\n                }\n                outputs = kernelProfile.outputs;\n            }\n        });\n        if (isTapeOn) {\n            this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n        }\n        if (this.state.profiling) {\n            this.state.activeProfile.kernels.push({\n                name: kernelOrScopeName,\n                bytesAdded: this.state.numBytes - startingBytecount,\n                totalBytesSnapshot: this.state.numBytes,\n                tensorsAdded: this.state.numTensors - startingNumTensors,\n                totalTensorsSnapshot: this.state.numTensors,\n                inputShapes: Object.keys(inputs).map(key => inputs[key] != null ? inputs[key].shape : null),\n                outputShapes: outputs.map(item => item.shape),\n                kernelTimeMs: kernelProfile.timeMs,\n                extraInfo: kernelProfile.extraInfo\n            });\n        }\n        return (Array.isArray(out) ? outputs : outputs[0]);\n    }\n    /**\n     * Saves tensors used in forward mode for use in backward mode.\n     *\n     * @param tensors the list of tensors to save.\n     */\n    saveTensorsForBackwardMode(tensors) {\n        const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n        return saved;\n    }\n    /**\n     * Returns a list of tensors to save for a given gradient calculation.\n     *\n     * @param kernelName name of kernel to look up gradient for.\n     * @param inputs a map of input tensors.\n     * @param outputs an array of output tensors from forward mode of kernel.\n     */\n    getTensorsForGradient(kernelName, inputs, outputs) {\n        const gradConfig = getGradient(kernelName);\n        if (gradConfig != null) {\n            const inputsToSave = gradConfig.inputsToSave || [];\n            const outputsToSave = gradConfig.outputsToSave || [];\n            // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n            // specified in inputsToSave will be saved.\n            let inputTensorsToSave;\n            if (gradConfig.saveAllInputs) {\n                util.assert(Array.isArray(inputs), () => 'saveAllInputs is true, expected inputs to be an array.');\n                inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n            }\n            else {\n                inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n            }\n            const outputTensorsToSave = outputs.filter((_, i) => outputsToSave[i]);\n            return inputTensorsToSave.concat(outputTensorsToSave);\n        }\n        // We return an empty list rather than throw an error because the kernel we\n        // are looking up may not actually be relevant to backproping through the\n        // overall function\n        //\n        // See 'does not error if irrelevant (pruned) ops are missing grads' test\n        // in gradients_test.ts for an example.\n        return [];\n    }\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n    makeTensor(values, shape, dtype, backend) {\n        if (values == null) {\n            throw new Error('Values passed to engine.makeTensor() are null');\n        }\n        dtype = dtype || 'float32';\n        backend = backend || this.backend;\n        let backendVals = values;\n        if (dtype === 'string' && util.isString(values[0])) {\n            backendVals = values.map(d => util.encodeString(d));\n        }\n        const dataId = backend.write(backendVals, shape, dtype);\n        const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.incRef(t, backend);\n        // Count bytes for string tensors.\n        if (dtype === 'string') {\n            const info = this.state.tensorInfo.get(dataId);\n            const newBytes = bytesFromStringArray(backendVals);\n            this.state.numBytes += newBytes - info.bytes;\n            info.bytes = newBytes;\n        }\n        return t;\n    }\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n    makeTensorFromDataId(dataId, shape, dtype, backend) {\n        dtype = dtype || 'float32';\n        const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.incRef(t, backend);\n        return t;\n    }\n    makeVariable(initialValue, trainable = true, name, dtype) {\n        name = name || this.nextVariableId().toString();\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.cast(dtype);\n        }\n        const v = new Variable(initialValue, trainable, name, this.nextTensorId());\n        if (this.state.registeredVariables[v.name] != null) {\n            throw new Error(`Variable with name ${v.name} was already registered`);\n        }\n        this.state.registeredVariables[v.name] = v;\n        this.incRef(v, this.backend);\n        return v;\n    }\n    incRef(a, backend) {\n        const refCount = this.state.tensorInfo.has(a.dataId) ?\n            this.state.tensorInfo.get(a.dataId).refCount :\n            0;\n        this.state.numTensors++;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors++;\n        }\n        if (refCount === 0) {\n            this.state.numDataBuffers++;\n            // Bytes for complex numbers are counted by their components. Bytes for\n            // string tensors are counted when writing values.\n            let bytes = 0;\n            if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n                bytes = a.size * util.bytesPerElement(a.dtype);\n            }\n            this.state.tensorInfo.set(a.dataId, {\n                backend: backend || this.backend,\n                dtype: a.dtype,\n                shape: a.shape,\n                bytes,\n                refCount: 0\n            });\n            this.state.numBytes += bytes;\n        }\n        this.state.tensorInfo.get(a.dataId).refCount++;\n        if (!(a instanceof Variable)) {\n            this.track(a);\n        }\n    }\n    disposeTensor(a) {\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            return;\n        }\n        this.state.numTensors--;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors--;\n        }\n        const info = this.state.tensorInfo.get(a.dataId);\n        const refCount = info.refCount;\n        if (refCount <= 1) {\n            // Don't count bytes for complex numbers as they are counted by their\n            // components.\n            if (a.dtype !== 'complex64') {\n                this.state.numBytes -= info.bytes;\n            }\n            this.state.numDataBuffers--;\n            info.backend.disposeData(a.dataId);\n            this.state.tensorInfo.delete(a.dataId);\n        }\n        else {\n            this.state.tensorInfo.get(a.dataId).refCount--;\n        }\n        // TODO(nsthorat): Construct an error and save the stack trace for\n        // debugging when in debug mode. Creating a stack trace is too expensive\n        // to do unconditionally.\n    }\n    disposeVariables() {\n        for (const varName in this.state.registeredVariables) {\n            const v = this.state.registeredVariables[varName];\n            this.disposeVariable(v);\n        }\n    }\n    disposeVariable(v) {\n        this.disposeTensor(v);\n        if (this.state.registeredVariables[v.name] != null) {\n            delete this.state.registeredVariables[v.name];\n        }\n    }\n    memory() {\n        const info = this.backend.memory();\n        info.numTensors = this.state.numTensors;\n        info.numDataBuffers = this.state.numDataBuffers;\n        info.numBytes = this.state.numBytes;\n        if (this.state.numStringTensors > 0) {\n            info.unreliable = true;\n            if (info.reasons == null) {\n                info.reasons = [];\n            }\n            info.reasons.push('Memory usage by string tensors is approximate ' +\n                '(2 bytes per character)');\n        }\n        return info;\n    }\n    async profile(query) {\n        this.state.profiling = true;\n        const startBytes = this.state.numBytes;\n        const startNumTensors = this.state.numTensors;\n        this.state.activeProfile.kernels = [];\n        this.state.activeProfile.result = await query();\n        this.state.profiling = false;\n        this.state.activeProfile.peakBytes = Math.max(...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n        this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n        this.state.activeProfile.newTensors =\n            this.state.numTensors - startNumTensors;\n        for (const kernel of this.state.activeProfile.kernels) {\n            kernel.kernelTimeMs = await kernel.kernelTimeMs;\n            kernel.extraInfo = await kernel.extraInfo;\n        }\n        return this.state.activeProfile;\n    }\n    isTapeOn() {\n        return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    }\n    addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {\n        const tapeNode = { id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved };\n        const gradConfig = getGradient(kernelName);\n        if (gradConfig != null) {\n            gradientsFunc = gradConfig.gradFunc;\n        }\n        if (gradientsFunc != null) {\n            tapeNode.gradient = (dys) => {\n                // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n                // the backprop graph to the user as null instead of zeros\n                dys = dys.map((dy, i) => {\n                    if (dy == null) {\n                        const output = outputs[i];\n                        const vals = util.makeZerosTypedArray(output.size, output.dtype);\n                        return this.makeTensor(vals, output.shape, output.dtype);\n                    }\n                    return dy;\n                });\n                // Grad functions of ops with single outputs expect a dy, while ops\n                // with multiple outputs expect dys (array of dy).\n                return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n            };\n        }\n        this.state.activeTape.push(tapeNode);\n    }\n    keep(result) {\n        result.kept = true;\n        return result;\n    }\n    startTape() {\n        if (this.state.gradientDepth === 0) {\n            this.state.activeTape = [];\n        }\n        this.state.gradientDepth++;\n    }\n    endTape() {\n        this.state.gradientDepth--;\n    }\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    startScope(name) {\n        const scopeInfo = {\n            track: [],\n            name: 'unnamed scope',\n            id: this.state.nextScopeId++\n        };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.state.scopeStack.push(scopeInfo);\n        this.state.activeScope = scopeInfo;\n    }\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    endScope(result) {\n        const tensorsToTrackInParent = getTensorsInContainer(result);\n        const tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(t => t.id));\n        // Dispose the arrays tracked in this scope.\n        for (let i = 0; i < this.state.activeScope.track.length; i++) {\n            const tensor = this.state.activeScope.track[i];\n            if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n                tensor.dispose();\n            }\n        }\n        const oldScope = this.state.scopeStack.pop();\n        this.state.activeScope = this.state.scopeStack.length === 0 ?\n            null :\n            this.state.scopeStack[this.state.scopeStack.length - 1];\n        // Track the current result in the parent scope.\n        tensorsToTrackInParent.forEach(tensor => {\n            // Only track the tensor if was allocated in the inner scope and is not\n            // globally kept.\n            if (!tensor.kept && tensor.scopeId === oldScope.id) {\n                this.track(tensor);\n            }\n        });\n    }\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n    gradients(f, xs, dy, allowNoGradients = false) {\n        util.assert(xs.length > 0, () => 'gradients() received an empty list of xs.');\n        if (dy != null && dy.dtype !== 'float32') {\n            throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n        }\n        const y = this.scopedRun(() => this.startTape(), () => this.endTape(), () => this.tidy('forward', f));\n        util.assert(y instanceof Tensor, () => 'The result y returned by f() must be a tensor.');\n        // Filter out the nodes that don't connect x => y.\n        const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n        if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n            throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                'that the f you passed encloses all operations that lead from x ' +\n                'to y.');\n        }\n        return this.tidy('backward', () => {\n            const accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n            // Backprop gradients through the filtered nodes.\n            backpropagateGradients(accumulatedGradientMap, filteredTape, \n            // Pass the tidy function to avoid circular dep with `tape.ts`.\n            f => this.tidy(f), \n            // Pass an add function to avoide a circular dep with `tape.ts`.\n            add);\n            const grads = xs.map(x => accumulatedGradientMap[x.id]);\n            if (this.state.gradientDepth === 0) {\n                // This means that we are not computing higher-order gradients\n                // and can clean up the tape.\n                this.state.activeTape.forEach(node => {\n                    for (const tensor of node.saved) {\n                        tensor.dispose();\n                    }\n                });\n                this.state.activeTape = null;\n            }\n            return { value: y, grads };\n        });\n    }\n    customGrad(f) {\n        util.assert(util.isFunction(f), () => 'The f passed in customGrad(f) must be a function.');\n        return (...inputs) => {\n            util.assert(inputs.every(t => t instanceof Tensor), () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n                'tensors');\n            let res;\n            const inputMap = {};\n            inputs.forEach((input, i) => {\n                inputMap[i] = input;\n            });\n            const forwardFunc = (_, save) => {\n                res = f(...[...inputs, save]);\n                util.assert(res.value instanceof Tensor, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor');\n                util.assert(util.isFunction(res.gradFunc), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.');\n                return res.value;\n            };\n            const backwardsFunc = (dy, saved) => {\n                const gradRes = res.gradFunc(dy, saved);\n                const grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n                util.assert(grads.length === inputs.length, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).');\n                util.assert(grads.every(t => t instanceof Tensor), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.');\n                const gradMap = {};\n                grads.forEach((grad, i) => {\n                    gradMap[i] = () => grad;\n                });\n                return gradMap;\n            };\n            return this.runKernelFunc({\n                forwardFunc,\n                backwardsFunc,\n                inputs: inputMap,\n            });\n        };\n    }\n    readSync(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.readSync(dataId);\n    }\n    read(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.read(dataId);\n    }\n    async time(query) {\n        const start = now();\n        const timingInfo = await this.backend.time(query);\n        timingInfo.wallMs = now() - start;\n        return timingInfo;\n    }\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n    track(result) {\n        if (this.state.activeScope != null) {\n            result.scopeId = this.state.activeScope.id;\n            this.state.activeScope.track.push(result);\n        }\n        return result;\n    }\n    get registeredVariables() {\n        return this.state.registeredVariables;\n    }\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n    reset() {\n        // Make any pending promise obsolete.\n        this.pendingBackendInitId++;\n        this.state.dispose();\n        this.ENV.reset();\n        this.state = new EngineState();\n        for (const backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        this.backendName = null;\n        this.backendInstance = null;\n        this.pendingBackendInit = null;\n    }\n}\nEngine.nextTensorId = 0;\nEngine.nextVariableId = 0;\nfunction ones(shape) {\n    const values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n    return ENGINE.makeTensor(values, shape, 'float32');\n}\nexport function getOrMakeEngine() {\n    const ns = getGlobalNamespace();\n    if (ns._tfengine == null) {\n        const environment = new Environment(ns);\n        ns._tfengine = new Engine(environment);\n    }\n    setEnvironmentGlobal(ns._tfengine.ENV);\n    // Tell the current tensor interface that the global engine is responsible\n    // for tracking.\n    setTensorTracker(() => ns._tfengine);\n    return ns._tfengine;\n}\nexport const ENGINE = getOrMakeEngine();\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nexport function add(a, b) {\n    // We duplicate Add here to avoid a circular dependency with add.ts.\n    const inputs = { a, b };\n    return ENGINE.runKernel(Add, inputs);\n}\n//# sourceMappingURL=engine.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined() {\n    return typeof navigator !== 'undefined' && navigator != null;\n}\nexport function isMobile() {\n    if (_isNavigatorDefined()) {\n        // tslint:disable-next-line:no-any\n        const a = navigator.userAgent || navigator.vendor || window.opera;\n        // tslint:disable-next-line:max-line-length\n        return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n            .test(a) ||\n            // tslint:disable-next-line:max-line-length\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n                .test(a.substr(0, 4));\n    }\n    return false;\n}\nexport function isBrowser() {\n    return (typeof window !== 'undefined' && window.document != null) ||\n        //@ts-ignore\n        (typeof WorkerGlobalScope !== 'undefined');\n}\n//# sourceMappingURL=device_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './engine';\nimport * as device_util from './device_util';\nimport { env } from './environment';\nconst ENV = env();\n/**\n * This file contains environment-related flag registrations.\n */\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => device_util.isBrowser());\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_NODE', () => (typeof process !== 'undefined') &&\n    (typeof process.versions !== 'undefined') &&\n    (typeof process.versions.node !== 'undefined'));\n/** Whether this browser is Chrome. */\nENV.registerFlag('IS_CHROME', () => typeof navigator !== 'undefined' && navigator != null &&\n    navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n    /Google Inc/.test(navigator.vendor));\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n/** Whether to check computation result for errors. */\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', () => true);\n//# sourceMappingURL=flags.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { Tensor } from './tensor';\nimport { assert, flatten, inferDtype, isTypedArray, toTypedArray } from './util';\nexport function inferShape(val, dtype) {\n    let firstElem = val;\n    if (isTypedArray(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        isTypedArray(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !isTypedArray(val)) {\n        assert(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    assert(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    assert(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nexport function convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = inferDtype(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!isTypedArray(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        toTypedArray(x, inferredDtype) :\n        flatten(x, [], skipTypedArray);\n    return ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexport function convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=tensor_util_env.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { isPromise } from '../util';\nexport const OP_SCOPE_SUFFIX = '__op';\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nexport function op(f) {\n    const keys = Object.keys(f);\n    if (keys.length !== 1) {\n        throw new Error(`Please provide an object with a single key ` +\n            `(operation name) mapping to a function. Got an object with ` +\n            `${keys.length} keys.`);\n    }\n    let opName = keys[0];\n    const fn = f[opName];\n    // Strip the underscore from the end of the function name.\n    if (opName.endsWith('_')) {\n        opName = opName.substring(0, opName.length - 1);\n    }\n    // add an __op suffix to distinguish ops from kernels in tf.profile\n    opName = opName + OP_SCOPE_SUFFIX;\n    // tslint:disable-next-line:no-any\n    const f2 = (...args) => {\n        ENGINE.startScope(opName);\n        try {\n            const result = fn(...args);\n            if (isPromise(result)) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            ENGINE.endScope(result);\n            return result;\n        }\n        catch (ex) {\n            ENGINE.endScope(null);\n            throw ex;\n        }\n    };\n    Object.defineProperty(f2, 'name', { value: opName, configurable: true });\n    // tslint:disable-next-line:no-any\n    return f2;\n}\n//# sourceMappingURL=operation.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Complex } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_(real, imag) {\n    const $real = convertToTensor(real, 'real', 'complex');\n    const $imag = convertToTensor(imag, 'imag', 'complex');\n    util.assertShapesMatch($real.shape, $imag.shape, `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n        `must match in call to tf.complex().`);\n    const inputs = { real: $real, imag: $imag };\n    return ENGINE.runKernel(Complex, inputs);\n}\nexport const complex = op({ complex_ });\n//# sourceMappingURL=complex.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { assert, assertNonNegativeIntegerDimensions, flatten, inferDtype, isTypedArray, sizeFromShape, toTypedArray } from '../util';\n/** This is shared code across all tensor creation methods. */\nexport function makeTensor(values, shape, inferredShape, dtype) {\n    if (dtype == null) {\n        dtype = inferDtype(values);\n    }\n    if (dtype === 'complex64') {\n        throw new Error(`Cannot construct a complex64 tensor directly. ` +\n            `Please use tf.complex(real, imag).`);\n    }\n    if (!isTypedArray(values) && !Array.isArray(values) &&\n        typeof values !== 'number' && typeof values !== 'boolean' &&\n        typeof values !== 'string') {\n        throw new Error('values passed to tensor(values) must be a number/boolean/string or ' +\n            'an array of numbers/booleans/strings, or a TypedArray');\n    }\n    if (shape != null) {\n        assertNonNegativeIntegerDimensions(shape);\n        const providedSize = sizeFromShape(shape);\n        const inferredSize = sizeFromShape(inferredShape);\n        assert(providedSize === inferredSize, () => `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n        for (let i = 0; i < inferredShape.length; ++i) {\n            const inferred = inferredShape[i];\n            const flatDimsDontMatch = i === inferredShape.length - 1 ?\n                inferred !== sizeFromShape(shape.slice(i)) :\n                true;\n            assert(inferredShape[i] === shape[i] || !flatDimsDontMatch, () => `Error creating a new Tensor. Inferred shape ` +\n                `(${inferredShape}) does not match the provided ` +\n                `shape (${shape}). `);\n        }\n    }\n    if (!isTypedArray(values) && !Array.isArray(values)) {\n        values = [values];\n    }\n    shape = shape || inferredShape;\n    values = dtype !== 'string' ?\n        toTypedArray(values, dtype) :\n        flatten(values, [], true);\n    return ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=tensor_ops_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor(values, shape, dtype) {\n    const inferredShape = inferShape(values, dtype);\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/* Type definitions for exporting and importing of models. */\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport const DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'float16': 2,\n    'int32': 4,\n    'uint16': 2,\n    'uint8': 1,\n    'bool': 1,\n    'complex64': 8\n};\n//# sourceMappingURL=types.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { complex } from '../ops/complex';\nimport { tensor } from '../ops/tensor';\nimport { sizeFromShape } from '../util';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nexport async function encodeWeights(tensors, group) {\n    // TODO(adarob, cais): Support quantization.\n    const specs = [];\n    const dataPromises = [];\n    const names = Array.isArray(tensors) ?\n        tensors.map(tensor => tensor.name) :\n        Object.keys(tensors);\n    for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n        const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n            t.dtype !== 'string' && t.dtype !== 'complex64') {\n            throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n        }\n        const spec = { name, shape: t.shape, dtype: t.dtype };\n        if (t.dtype === 'string') {\n            const utf8bytes = new Promise(async (resolve) => {\n                const vals = await t.bytes();\n                const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n                    NUM_BYTES_STRING_LENGTH * vals.length;\n                const bytes = new Uint8Array(totalNumBytes);\n                let offset = 0;\n                for (let i = 0; i < vals.length; i++) {\n                    const val = vals[i];\n                    const bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                    bytes.set(bytesOfLength, offset);\n                    offset += NUM_BYTES_STRING_LENGTH;\n                    bytes.set(val, offset);\n                    offset += val.length;\n                }\n                resolve(bytes);\n            });\n            dataPromises.push(utf8bytes);\n        }\n        else {\n            dataPromises.push(t.data());\n        }\n        if (group != null) {\n            spec.group = group;\n        }\n        specs.push(spec);\n    }\n    const tensorValues = await Promise.all(dataPromises);\n    return { data: concatenateTypedArrays(tensorValues), specs };\n}\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nexport function decodeWeights(buffer, specs) {\n    // TODO(adarob, cais): Support quantization.\n    const out = {};\n    let float16Decode;\n    let offset = 0;\n    for (const spec of specs) {\n        const name = spec.name;\n        const dtype = spec.dtype;\n        const shape = spec.shape;\n        const size = sizeFromShape(shape);\n        let values;\n        if ('quantization' in spec) {\n            const quantization = spec.quantization;\n            if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                if (!('min' in quantization && 'scale' in quantization)) {\n                    throw new Error(`Weight ${spec.name} with quantization ${quantization.dtype} ` +\n                        `doesn't have corresponding metadata min and scale.`);\n                }\n            }\n            else if (quantization.dtype === 'float16') {\n                if (dtype !== 'float32') {\n                    throw new Error(`Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n                        `which only supports weights of type float32 not ${dtype}.`);\n                }\n            }\n            else {\n                throw new Error(`Weight ${spec.name} has unknown ` +\n                    `quantization dtype ${quantization.dtype}. ` +\n                    `Supported quantization dtypes are: ` +\n                    `'uint8', 'uint16', and 'float16'.`);\n            }\n            const quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n            const quantizedArray = (quantization.dtype === 'uint8') ?\n                new Uint8Array(byteBuffer) :\n                new Uint16Array(byteBuffer);\n            if (dtype === 'float32') {\n                if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                    values = new Float32Array(quantizedArray.length);\n                    for (let i = 0; i < quantizedArray.length; i++) {\n                        const v = quantizedArray[i];\n                        values[i] = v * quantization.scale + quantization.min;\n                    }\n                }\n                else if (quantization.dtype === 'float16') {\n                    if (float16Decode === undefined) {\n                        float16Decode = getFloat16Decoder();\n                    }\n                    values = float16Decode(quantizedArray);\n                }\n                else {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type float32.`);\n                }\n            }\n            else if (dtype === 'int32') {\n                if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type int32.`);\n                }\n                values = new Int32Array(quantizedArray.length);\n                for (let i = 0; i < quantizedArray.length; i++) {\n                    const v = quantizedArray[i];\n                    values[i] = Math.round(v * quantization.scale + quantization.min);\n                }\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * quantizationSizeFactor;\n        }\n        else if (dtype === 'string') {\n            const size = sizeFromShape(spec.shape);\n            values = [];\n            for (let i = 0; i < size; i++) {\n                const byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n                offset += NUM_BYTES_STRING_LENGTH;\n                const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n                values.push(bytes);\n                offset += byteLength;\n            }\n        }\n        else {\n            const dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n            if (dtype === 'float32') {\n                values = new Float32Array(byteBuffer);\n            }\n            else if (dtype === 'int32') {\n                values = new Int32Array(byteBuffer);\n            }\n            else if (dtype === 'bool') {\n                values = new Uint8Array(byteBuffer);\n            }\n            else if (dtype === 'complex64') {\n                values = new Float32Array(byteBuffer);\n                const real = new Float32Array(values.length / 2);\n                const image = new Float32Array(values.length / 2);\n                for (let i = 0; i < real.length; i++) {\n                    real[i] = values[i * 2];\n                    image[i] = values[i * 2 + 1];\n                }\n                const realTensor = tensor(real, shape, 'float32');\n                const imageTensor = tensor(image, shape, 'float32');\n                out[name] = complex(realTensor, imageTensor);\n                realTensor.dispose();\n                imageTensor.dispose();\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * dtypeFactor;\n        }\n        if (dtype !== 'complex64') {\n            out[name] = tensor(values, shape, dtype);\n        }\n    }\n    return out;\n}\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nexport function concatenateTypedArrays(xs) {\n    // TODO(adarob, cais): Support quantization.\n    if (xs === null) {\n        throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n    }\n    let totalByteLength = 0;\n    // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n    // can have a different byte length from that of the `TypedArray` itself,\n    // for example, when the `TypedArray` is created from an offset in an\n    // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n    // the `TypedArray` in byte length. If an element of `xs` does not show\n    // this property, a new `TypedArray` that satisfy this property will be\n    // constructed and pushed into `normalizedXs`.\n    const normalizedXs = [];\n    xs.forEach((x) => {\n        totalByteLength += x.byteLength;\n        // tslint:disable:no-any\n        normalizedXs.push(x.byteLength === x.buffer.byteLength ? x :\n            new x.constructor(x));\n        if (!(x instanceof Float32Array || x instanceof Int32Array ||\n            x instanceof Uint8Array)) {\n            throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n        }\n        // tslint:enable:no-any\n    });\n    const y = new Uint8Array(totalByteLength);\n    let offset = 0;\n    normalizedXs.forEach((x) => {\n        y.set(new Uint8Array(x.buffer), offset);\n        offset += x.byteLength;\n    });\n    return y.buffer;\n}\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n        typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nexport function stringByteLength(str) {\n    if (useNodeBuffer) {\n        return Buffer.byteLength(str);\n    }\n    return new Blob([str]).size;\n}\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nexport function arrayBufferToBase64String(buffer) {\n    if (useNodeBuffer) {\n        return Buffer.from(buffer).toString('base64');\n    }\n    const buf = new Uint8Array(buffer);\n    let s = '';\n    for (let i = 0, l = buf.length; i < l; i++) {\n        s += String.fromCharCode(buf[i]);\n    }\n    return btoa(s);\n}\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nexport function base64StringToArrayBuffer(str) {\n    if (useNodeBuffer) {\n        const buf = Buffer.from(str, 'base64');\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n    const s = atob(str);\n    const buffer = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nexport function concatenateArrayBuffers(buffers) {\n    if (buffers.length === 1) {\n        return buffers[0];\n    }\n    let totalByteLength = 0;\n    buffers.forEach((buffer) => {\n        totalByteLength += buffer.byteLength;\n    });\n    const temp = new Uint8Array(totalByteLength);\n    let offset = 0;\n    buffers.forEach((buffer) => {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nexport function basename(path) {\n    const SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    const items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nexport function getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ?\n            0 :\n            modelArtifacts.weightData.byteLength,\n    };\n}\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable() {\n    const convertMantissa = (i) => {\n        let m = i << 13;\n        let e = 0;\n        while ((m & 0x00800000) === 0) {\n            e -= 0x00800000;\n            m <<= 1;\n        }\n        m &= ~0x00800000;\n        e += 0x38800000;\n        return m | e;\n    };\n    const mantisaTable = new Uint32Array(2048);\n    mantisaTable[0] = 0;\n    for (let i = 1; i < 1024; i++) {\n        mantisaTable[i] = convertMantissa(i);\n    }\n    for (let i = 1024; i < 2048; i++) {\n        mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n    }\n    return mantisaTable;\n}\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable() {\n    const exponentTable = new Uint32Array(64);\n    exponentTable[0] = 0;\n    exponentTable[31] = 0x47800000;\n    exponentTable[32] = 0x80000000;\n    exponentTable[63] = 0xc7800000;\n    for (let i = 1; i < 31; i++) {\n        exponentTable[i] = i << 23;\n    }\n    for (let i = 33; i < 63; i++) {\n        exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n    }\n    return exponentTable;\n}\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable() {\n    const offsetTable = new Uint32Array(64);\n    for (let i = 0; i < 64; i++) {\n        offsetTable[i] = 1024;\n    }\n    offsetTable[0] = offsetTable[32] = 0;\n    return offsetTable;\n}\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nexport function getFloat16Decoder() {\n    // Algorithm is based off of\n    // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n    // Cache lookup tables\n    const mantisaTable = computeFloat16MantisaTable();\n    const exponentTable = computeFloat16ExponentTable();\n    const offsetTable = computeFloat16OffsetTable();\n    return (quantizedArray) => {\n        const buffer = new ArrayBuffer(4 * quantizedArray.length);\n        const bufferUint32View = new Uint32Array(buffer);\n        for (let index = 0; index < quantizedArray.length; index++) {\n            const float16Bits = quantizedArray[index];\n            const float32Bits = mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n                exponentTable[float16Bits >> 10];\n            bufferUint32View[index] = float32Bits;\n        }\n        return new Float32Array(buffer);\n    };\n}\n//# sourceMappingURL=io_utils.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class IORouterRegistry {\n    constructor() {\n        this.saveRouters = [];\n        this.loadRouters = [];\n    }\n    static getInstance() {\n        if (IORouterRegistry.instance == null) {\n            IORouterRegistry.instance = new IORouterRegistry();\n        }\n        return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerSaveRouter(saveRouter) {\n        IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n    static registerLoadRouter(loadRouter) {\n        IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n    static getSaveHandlers(url) {\n        return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n    static getLoadHandlers(url, loadOptions) {\n        return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n    static getHandlers(url, handlerType, loadOptions) {\n        const validHandlers = [];\n        const routers = handlerType === 'load' ?\n            IORouterRegistry.getInstance().loadRouters :\n            IORouterRegistry.getInstance().saveRouters;\n        routers.forEach(router => {\n            const handler = router(url, loadOptions);\n            if (handler !== null) {\n                validHandlers.push(handler);\n            }\n        });\n        return validHandlers;\n    }\n}\nexport const registerSaveRouter = (loudRouter) => IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter) => IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url) => IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers = (url, loadOptions) => IORouterRegistry.getLoadHandlers(url, loadOptions);\n//# sourceMappingURL=router_registry.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nexport async function deleteDatabase() {\n    const idbFactory = getIndexedDBFactory();\n    return new Promise((resolve, reject) => {\n        const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n        deleteRequest.onsuccess = () => resolve();\n        deleteRequest.onerror = error => reject(error);\n    });\n}\nfunction getIndexedDBFactory() {\n    if (!env().getBool('IS_BROWSER')) {\n        // TODO(cais): Add more info about what IOHandler subtypes are available.\n        //   Maybe point to a doc page on the web and/or automatically determine\n        //   the available IOHandlers and print them in the error message.\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\n            'is not a web browser.');\n    }\n    // tslint:disable-next-line:no-any\n    const theWindow = typeof window === 'undefined' ? self : window;\n    const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n        theWindow.shimIndexedDB;\n    if (factory == null) {\n        throw new Error('The current browser does not appear to support IndexedDB.');\n    }\n    return factory;\n}\nfunction setUpDatabase(openRequest) {\n    const db = openRequest.result;\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nexport class BrowserIndexedDB {\n    constructor(modelPath) {\n        this.indexedDB = getIndexedDBFactory();\n        if (modelPath == null || !modelPath) {\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n    }\n    async save(modelArtifacts) {\n        // TODO(cais): Support saving GraphDef models.\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        return this.databaseAction(this.modelPath, modelArtifacts);\n    }\n    async load() {\n        return this.databaseAction(this.modelPath);\n    }\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n    databaseAction(modelPath, modelArtifacts) {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (modelArtifacts == null) {\n                    // Read model out from object store.\n                    const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n                    const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                    const getRequest = modelStore.get(this.modelPath);\n                    getRequest.onsuccess = () => {\n                        if (getRequest.result == null) {\n                            db.close();\n                            return reject(new Error(`Cannot find model with path '${this.modelPath}' ` +\n                                `in IndexedDB.`));\n                        }\n                        else {\n                            resolve(getRequest.result.modelArtifacts);\n                        }\n                    };\n                    getRequest.onerror = error => {\n                        db.close();\n                        return reject(getRequest.error);\n                    };\n                    modelTx.oncomplete = () => db.close();\n                }\n                else {\n                    // Put model into object store.\n                    const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\n                    // First, put ModelArtifactsInfo into info store.\n                    const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                    const putInfoRequest = infoStore.put({ modelPath: this.modelPath, modelArtifactsInfo });\n                    let modelTx;\n                    putInfoRequest.onsuccess = () => {\n                        // Second, put model data into model store.\n                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                        const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                        const putModelRequest = modelStore.put({\n                            modelPath: this.modelPath,\n                            modelArtifacts,\n                            modelArtifactsInfo\n                        });\n                        putModelRequest.onsuccess = () => resolve({ modelArtifactsInfo });\n                        putModelRequest.onerror = error => {\n                            // If the put-model request fails, roll back the info entry as\n                            // well.\n                            infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                            const deleteInfoRequest = infoStore.delete(this.modelPath);\n                            deleteInfoRequest.onsuccess = () => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                            deleteInfoRequest.onerror = error => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                        };\n                    };\n                    putInfoRequest.onerror = error => {\n                        db.close();\n                        return reject(putInfoRequest.error);\n                    };\n                    infoTx.oncomplete = () => {\n                        if (modelTx == null) {\n                            db.close();\n                        }\n                        else {\n                            modelTx.oncomplete = () => db.close();\n                        }\n                    };\n                }\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\nBrowserIndexedDB.URL_SCHEME = 'indexeddb://';\nexport const indexedDBRouter = (url) => {\n    if (!env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nexport function browserIndexedDB(modelPath) {\n    return new BrowserIndexedDB(modelPath);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n        key;\n}\nexport class BrowserIndexedDBManager {\n    constructor() {\n        this.indexedDB = getIndexedDBFactory();\n    }\n    async listModels() {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                const store = tx.objectStore(INFO_STORE_NAME);\n                // tslint:disable:max-line-length\n                // Need to cast `store` as `any` here because TypeScript's DOM\n                // library does not have the `getAll()` method even though the\n                // method is supported in the latest version of most mainstream\n                // browsers:\n                // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                // tslint:enable:max-line-length\n                // tslint:disable-next-line:no-any\n                const getAllInfoRequest = store.getAll();\n                getAllInfoRequest.onsuccess = () => {\n                    const out = {};\n                    for (const item of getAllInfoRequest.result) {\n                        out[item.modelPath] = item.modelArtifactsInfo;\n                    }\n                    resolve(out);\n                };\n                getAllInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getAllInfoRequest.error);\n                };\n                tx.oncomplete = () => db.close();\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                const getInfoRequest = infoStore.get(path);\n                let modelTx;\n                getInfoRequest.onsuccess = () => {\n                    if (getInfoRequest.result == null) {\n                        db.close();\n                        return reject(new Error(`Cannot find model with path '${path}' ` +\n                            `in IndexedDB.`));\n                    }\n                    else {\n                        // First, delete the entry in the info store.\n                        const deleteInfoRequest = infoStore.delete(path);\n                        const deleteModelData = () => {\n                            // Second, delete the entry in the model store.\n                            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                            const deleteModelRequest = modelStore.delete(path);\n                            deleteModelRequest.onsuccess = () => resolve(getInfoRequest.result.modelArtifactsInfo);\n                            deleteModelRequest.onerror = error => reject(getInfoRequest.error);\n                        };\n                        // Proceed with deleting model data regardless of whether deletion\n                        // of info data succeeds or not.\n                        deleteInfoRequest.onsuccess = deleteModelData;\n                        deleteInfoRequest.onerror = error => {\n                            deleteModelData();\n                            db.close();\n                            return reject(getInfoRequest.error);\n                        };\n                    }\n                };\n                getInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getInfoRequest.error);\n                };\n                infoTx.oncomplete = () => {\n                    if (modelTx == null) {\n                        db.close();\n                    }\n                    else {\n                        modelTx.oncomplete = () => db.close();\n                    }\n                };\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\n//# sourceMappingURL=indexed_db.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { assert } from '../util';\nimport { arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nexport function purgeLocalStorageArtifacts() {\n    if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n        typeof window.localStorage === 'undefined') {\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\n            'unavailable in the current environment.');\n    }\n    const LS = window.localStorage;\n    const purgedModelPaths = [];\n    for (let i = 0; i < LS.length; ++i) {\n        const key = LS.key(i);\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            LS.removeItem(key);\n            const modelName = getModelPathFromKey(key);\n            if (purgedModelPaths.indexOf(modelName) === -1) {\n                purgedModelPaths.push(modelName);\n            }\n        }\n    }\n    return purgedModelPaths;\n}\nfunction getModelKeys(path) {\n    return {\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n        modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n    };\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key) {\n    const items = key.split(PATH_SEPARATOR);\n    if (items.length < 3) {\n        throw new Error(`Invalid key format: ${key}`);\n    }\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n        key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nexport class BrowserLocalStorage {\n    constructor(modelPath) {\n        if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n            typeof window.localStorage === 'undefined') {\n            // TODO(cais): Add more info about what IOHandler subtypes are\n            // available.\n            //   Maybe point to a doc page on the web and/or automatically determine\n            //   the available IOHandlers and print them in the error message.\n            throw new Error('The current environment does not support local storage.');\n        }\n        this.LS = window.localStorage;\n        if (modelPath == null || !modelPath) {\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n        this.keys = getModelKeys(this.modelPath);\n    }\n    /**\n     * Save model artifacts to browser local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @param modelArtifacts The model artifacts to be stored.\n     * @returns An instance of SaveResult.\n     */\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const topology = JSON.stringify(modelArtifacts.modelTopology);\n            const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n            const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\n            try {\n                this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                this.LS.setItem(this.keys.topology, topology);\n                this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                this.LS.setItem(this.keys.weightData, arrayBufferToBase64String(modelArtifacts.weightData));\n                const result = {\n                    format: modelArtifacts.format,\n                    generatedBy: modelArtifacts.generatedBy,\n                    convertedBy: modelArtifacts.convertedBy\n                };\n                if (modelArtifacts.signature != null) {\n                    result.signature = modelArtifacts.signature;\n                }\n                if (modelArtifacts.userDefinedMetadata != null) {\n                    result.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                }\n                if (modelArtifacts.modelInitializer != null) {\n                    result.modelInitializer = modelArtifacts.modelInitializer;\n                }\n                this.LS.setItem(this.keys.modelMetadata, JSON.stringify(result));\n                return { modelArtifactsInfo };\n            }\n            catch (err) {\n                // If saving failed, clean up all items saved so far.\n                this.LS.removeItem(this.keys.info);\n                this.LS.removeItem(this.keys.topology);\n                this.LS.removeItem(this.keys.weightSpecs);\n                this.LS.removeItem(this.keys.weightData);\n                this.LS.removeItem(this.keys.modelMetadata);\n                throw new Error(`Failed to save model '${this.modelPath}' to local storage: ` +\n                    `size quota being exceeded is a possible cause of this failure: ` +\n                    `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n                    `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n                    `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n            }\n        }\n    }\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n    async load() {\n        const info = JSON.parse(this.LS.getItem(this.keys.info));\n        if (info == null) {\n            throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);\n        }\n        if (info.modelTopologyType !== 'JSON') {\n            throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\n                'topology yet.');\n        }\n        const out = {};\n        // Load topology.\n        const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n        if (topology == null) {\n            throw new Error(`In local storage, the topology of model '${this.modelPath}' ` +\n                `is missing.`);\n        }\n        out.modelTopology = topology;\n        // Load weight specs.\n        const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n        if (weightSpecs == null) {\n            throw new Error(`In local storage, the weight specs of model '${this.modelPath}' ` +\n                `are missing.`);\n        }\n        out.weightSpecs = weightSpecs;\n        // Load meta-data fields.\n        const metadataString = this.LS.getItem(this.keys.modelMetadata);\n        if (metadataString != null) {\n            const metadata = JSON.parse(metadataString);\n            out.format = metadata['format'];\n            out.generatedBy = metadata['generatedBy'];\n            out.convertedBy = metadata['convertedBy'];\n            if (metadata['signature'] != null) {\n                out.signature = metadata['signature'];\n            }\n            if (metadata['userDefinedMetadata'] != null) {\n                out.userDefinedMetadata = metadata['userDefinedMetadata'];\n            }\n            if (metadata['modelInitializer'] != null) {\n                out.modelInitializer = metadata['modelInitializer'];\n            }\n        }\n        // Load weight data.\n        const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n        if (weightDataBase64 == null) {\n            throw new Error(`In local storage, the binary weight values of model ` +\n                `'${this.modelPath}' are missing.`);\n        }\n        out.weightData = base64StringToArrayBuffer(weightDataBase64);\n        return out;\n    }\n}\nBrowserLocalStorage.URL_SCHEME = 'localstorage://';\nexport const localStorageRouter = (url) => {\n    if (!env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nIORouterRegistry.registerSaveRouter(localStorageRouter);\nIORouterRegistry.registerLoadRouter(localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nexport function browserLocalStorage(modelPath) {\n    return new BrowserLocalStorage(modelPath);\n}\nexport class BrowserLocalStorageManager {\n    constructor() {\n        assert(env().getBool('IS_BROWSER'), () => 'Current environment is not a web browser');\n        assert(typeof window === 'undefined' ||\n            typeof window.localStorage !== 'undefined', () => 'Current browser does not appear to support localStorage');\n        this.LS = window.localStorage;\n    }\n    async listModels() {\n        const out = {};\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n        for (let i = 0; i < this.LS.length; ++i) {\n            const key = this.LS.key(i);\n            if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                const modelPath = getModelPathFromKey(key);\n                out[modelPath] = JSON.parse(this.LS.getItem(key));\n            }\n        }\n        return out;\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        const keys = getModelKeys(path);\n        if (this.LS.getItem(keys.info) == null) {\n            throw new Error(`Cannot find model at path '${path}'`);\n        }\n        const info = JSON.parse(this.LS.getItem(keys.info));\n        this.LS.removeItem(keys.info);\n        this.LS.removeItem(keys.topology);\n        this.LS.removeItem(keys.weightSpecs);\n        this.LS.removeItem(keys.weightData);\n        return info;\n    }\n}\n//# sourceMappingURL=local_storage.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\nimport { assert } from '../util';\nimport { IORouterRegistry } from './router_registry';\nconst URL_SCHEME_SUFFIX = '://';\nexport class ModelStoreManagerRegistry {\n    constructor() {\n        this.managers = {};\n    }\n    static getInstance() {\n        if (ModelStoreManagerRegistry.instance == null) {\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n        }\n        return ModelStoreManagerRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerManager(scheme, manager) {\n        assert(scheme != null, () => 'scheme must not be undefined or null.');\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n        }\n        assert(scheme.length > 0, () => 'scheme must not be an empty string.');\n        const registry = ModelStoreManagerRegistry.getInstance();\n        assert(registry.managers[scheme] == null, () => `A model store manager is already registered for scheme '${scheme}'.`);\n        registry.managers[scheme] = manager;\n    }\n    static getManager(scheme) {\n        const manager = this.getInstance().managers[scheme];\n        if (manager == null) {\n            throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n        }\n        return manager;\n    }\n    static getSchemes() {\n        return Object.keys(this.getInstance().managers);\n    }\n}\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url) {\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n        throw new Error(`The url string provided does not contain a scheme. ` +\n            `Supported schemes are: ` +\n            `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n    }\n    return {\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\n        path: url.split(URL_SCHEME_SUFFIX)[1],\n    };\n}\nasync function cloneModelInternal(sourceURL, destURL, deleteSource = false) {\n    assert(sourceURL !== destURL, () => `Old path and new path are the same: '${sourceURL}'`);\n    const loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n    assert(loadHandlers.length > 0, () => `Copying failed because no load handler is found for source URL ${sourceURL}.`);\n    assert(loadHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `load handlers for source URL ${sourceURL}.`);\n    const loadHandler = loadHandlers[0];\n    const saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n    assert(saveHandlers.length > 0, () => `Copying failed because no save handler is found for destination ` +\n        `URL ${destURL}.`);\n    assert(saveHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `save handlers for destination URL ${destURL}.`);\n    const saveHandler = saveHandlers[0];\n    const sourceScheme = parseURL(sourceURL).scheme;\n    const sourcePath = parseURL(sourceURL).path;\n    const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n    const modelArtifacts = await loadHandler.load();\n    // If moving within the same storage medium, remove the old model as soon as\n    // the loading is done. Without doing this, it is possible that the combined\n    // size of the two models will cause the cloning to fail.\n    if (deleteSource && sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    const saveResult = await saveHandler.save(modelArtifacts);\n    // If moving between mediums, the deletion is done after the save succeeds.\n    // This guards against the case in which saving to the destination medium\n    // fails.\n    if (deleteSource && !sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    return saveResult.modelArtifactsInfo;\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels() {\n    const schemes = ModelStoreManagerRegistry.getSchemes();\n    const out = {};\n    for (const scheme of schemes) {\n        const schemeOut = await ModelStoreManagerRegistry.getManager(scheme).listModels();\n        for (const path in schemeOut) {\n            const url = scheme + URL_SCHEME_SUFFIX + path;\n            out[url] = schemeOut[path];\n        }\n    }\n    return out;\n}\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url) {\n    const schemeAndPath = parseURL(url);\n    const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n    return manager.removeModel(schemeAndPath.path);\n}\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(sourceURL, destURL) {\n    const deleteSource = false;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(sourceURL, destURL) {\n    const deleteSource = true;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\nexport { moveModel, copyModel, removeModel, listModels };\n//# sourceMappingURL=model_management.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport class PlatformBrowser {\n    fetch(path, init) {\n        return fetch(path, init);\n    }\n    now() {\n        return performance.now();\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    }\n}\nif (env().get('IS_BROWSER')) {\n    env().setPlatform('browser', new PlatformBrowser());\n    // Register LocalStorage IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n    // Register IndexedDB IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=platform_browser.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment';\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nexport const getNodeFetch = {\n    // tslint:disable-next-line:no-require-imports\n    importFetch: () => require('node-fetch')\n};\nlet systemFetch;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nexport function resetSystemFetch() {\n    systemFetch = null;\n}\nexport function setSystemFetch(fetchFn) {\n    systemFetch = fetchFn;\n}\nexport function getSystemFetch() {\n    return systemFetch;\n}\nexport class PlatformNode {\n    constructor() {\n        // tslint:disable-next-line:no-require-imports\n        this.util = require('util');\n        // According to the spec, the built-in encoder can do only UTF-8 encoding.\n        // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n        this.textEncoder = new this.util.TextEncoder();\n    }\n    fetch(path, requestInits) {\n        if (env().global.fetch != null) {\n            return env().global.fetch(path, requestInits);\n        }\n        if (systemFetch == null) {\n            systemFetch = getNodeFetch.importFetch();\n        }\n        return systemFetch(path, requestInits);\n    }\n    now() {\n        const time = process.hrtime();\n        return time[0] * 1000 + time[1] / 1000000;\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Node built-in encoder only supports utf-8, but got ${encoding}`);\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        if (bytes.length === 0) {\n            return '';\n        }\n        return new this.util.TextDecoder(encoding).decode(bytes);\n    }\n}\nif (env().get('IS_NODE')) {\n    env().setPlatform('node', new PlatformNode());\n}\n//# sourceMappingURL=platform_node.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer } from '../tensor';\nimport * as util from '../util';\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function buffer(shape, dtype = 'float32', values) {\n    dtype = dtype || 'float32';\n    util.assertNonNegativeIntegerDimensions(shape);\n    return new TensorBuffer(shape, dtype, values);\n}\n//# sourceMappingURL=buffer.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_(x, dtype) {\n    const $x = convertToTensor(x, 'x', 'cast');\n    // Sanity checks.\n    if (!util.isValidDtype(dtype)) {\n        throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    const inputs = { x: $x };\n    const attrs = { dtype };\n    return ENGINE.runKernel(Cast, inputs, attrs);\n}\nexport const cast = op({ cast_ });\n//# sourceMappingURL=cast.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Identity } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_(x) {\n    const $x = convertToTensor(x, 'x', 'clone', 'string_or_numeric');\n    const inputs = { x: $x };\n    // Note this op is called tf.identity in python. Hence the kernel name used\n    // here.\n    return ENGINE.runKernel(Identity, inputs);\n}\nexport const clone = op({ clone_ });\n//# sourceMappingURL=clone.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print(x, verbose = false) {\n    console.log(x.toString(verbose));\n}\n//# sourceMappingURL=print.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code for tfjs-core\n// Set up Engine and ENV\nimport { getOrMakeEngine } from './engine';\ngetOrMakeEngine();\n// Register backend-agnostic flags.\nimport './flags';\n// Register platforms\nimport './platforms/platform_browser';\nimport './platforms/platform_node';\n// Set up OpHandler\nimport { buffer } from './ops/buffer';\nimport { cast } from './ops/cast';\nimport { clone } from './ops/clone';\nimport { print } from './ops/print';\nimport { setOpHandler } from './tensor';\nconst opHandler = {\n    buffer,\n    cast,\n    clone,\n    print\n};\nsetOpHandler(opHandler);\n//# sourceMappingURL=base_side_effects.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { basename, concatenateArrayBuffers, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\nfunction defer(f) {\n    return new Promise(resolve => setTimeout(resolve)).then(f);\n}\nexport class BrowserDownloads {\n    constructor(fileNamePrefix) {\n        if (!env().getBool('IS_BROWSER')) {\n            // TODO(cais): Provide info on what IOHandlers are available under the\n            //   current environment.\n            throw new Error('browserDownloads() cannot proceed because the current environment ' +\n                'is not a browser.');\n        }\n        if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n            fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n        }\n        if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n            fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n        }\n        this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n        this.weightDataFileName =\n            fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n    }\n    async save(modelArtifacts) {\n        if (typeof (document) === 'undefined') {\n            throw new Error('Browser downloads are not supported in ' +\n                'this environment since `document` is not present');\n        }\n        const weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }));\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserDownloads.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const weightsManifest = [{\n                    paths: ['./' + this.weightDataFileName],\n                    weights: modelArtifacts.weightSpecs\n                }];\n            const modelTopologyAndWeightManifest = {\n                modelTopology: modelArtifacts.modelTopology,\n                format: modelArtifacts.format,\n                generatedBy: modelArtifacts.generatedBy,\n                convertedBy: modelArtifacts.convertedBy,\n                weightsManifest\n            };\n            if (modelArtifacts.signature != null) {\n                modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n            }\n            if (modelArtifacts.userDefinedMetadata != null) {\n                modelTopologyAndWeightManifest.userDefinedMetadata =\n                    modelArtifacts.userDefinedMetadata;\n            }\n            if (modelArtifacts.modelInitializer != null) {\n                modelTopologyAndWeightManifest.modelInitializer =\n                    modelArtifacts.modelInitializer;\n            }\n            const modelTopologyAndWeightManifestURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: 'application/json' }));\n            // If anchor elements are not provided, create them without attaching them\n            // to parents, so that the downloaded file names can be controlled.\n            const jsonAnchor = this.jsonAnchor == null ? document.createElement('a') :\n                this.jsonAnchor;\n            jsonAnchor.download = this.modelTopologyFileName;\n            jsonAnchor.href = modelTopologyAndWeightManifestURL;\n            // Trigger downloads by evoking a click event on the download anchors.\n            // When multiple downloads are started synchronously, Firefox will only\n            // save the last one.\n            await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n            if (modelArtifacts.weightData != null) {\n                const weightDataAnchor = this.weightDataAnchor == null ?\n                    document.createElement('a') :\n                    this.weightDataAnchor;\n                weightDataAnchor.download = this.weightDataFileName;\n                weightDataAnchor.href = weightsURL;\n                await defer(() => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n            }\n            return { modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts) };\n        }\n    }\n}\nBrowserDownloads.URL_SCHEME = 'downloads://';\nclass BrowserFiles {\n    constructor(files) {\n        if (files == null || files.length < 1) {\n            throw new Error(`When calling browserFiles, at least 1 file is required, ` +\n                `but received ${files}`);\n        }\n        this.files = files;\n    }\n    async load() {\n        const jsonFile = this.files[0];\n        const weightFiles = this.files.slice(1);\n        return new Promise((resolve, reject) => {\n            const jsonReader = new FileReader();\n            jsonReader.onload = (event) => {\n                // tslint:disable-next-line:no-any\n                const modelJSON = JSON.parse(event.target.result);\n                const modelTopology = modelJSON.modelTopology;\n                if (modelTopology == null) {\n                    reject(new Error(`modelTopology field is missing from file ${jsonFile.name}`));\n                    return;\n                }\n                if (weightFiles.length === 0) {\n                    resolve({ modelTopology });\n                }\n                const weightsManifest = modelJSON.weightsManifest;\n                if (weightsManifest == null) {\n                    reject(new Error(`weightManifest field is missing from file ${jsonFile.name}`));\n                    return;\n                }\n                let pathToFile;\n                try {\n                    pathToFile =\n                        this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\n                }\n                catch (err) {\n                    reject(err);\n                    return;\n                }\n                const weightSpecs = [];\n                const paths = [];\n                const perFileBuffers = [];\n                weightsManifest.forEach(weightsGroup => {\n                    weightsGroup.paths.forEach(path => {\n                        paths.push(path);\n                        perFileBuffers.push(null);\n                    });\n                    weightSpecs.push(...weightsGroup.weights);\n                });\n                weightsManifest.forEach(weightsGroup => {\n                    weightsGroup.paths.forEach(path => {\n                        const weightFileReader = new FileReader();\n                        weightFileReader.onload = (event) => {\n                            // tslint:disable-next-line:no-any\n                            const weightData = event.target.result;\n                            const index = paths.indexOf(path);\n                            perFileBuffers[index] = weightData;\n                            if (perFileBuffers.indexOf(null) === -1) {\n                                const result = {\n                                    modelTopology,\n                                    weightSpecs,\n                                    weightData: concatenateArrayBuffers(perFileBuffers),\n                                    format: modelJSON.format,\n                                    generatedBy: modelJSON.generatedBy,\n                                    convertedBy: modelJSON.convertedBy\n                                };\n                                if (modelJSON.signature != null) {\n                                    result.signature = modelJSON.signature;\n                                }\n                                if (modelJSON.userDefinedMetadata != null) {\n                                    result.userDefinedMetadata = modelJSON.userDefinedMetadata;\n                                }\n                                if (modelJSON.modelInitializer != null) {\n                                    result.modelInitializer = modelJSON.modelInitializer;\n                                }\n                                resolve(result);\n                            }\n                        };\n                        weightFileReader.onerror = error => reject(`Failed to weights data from file of path '${path}'.`);\n                        weightFileReader.readAsArrayBuffer(pathToFile[path]);\n                    });\n                });\n            };\n            jsonReader.onerror = error => reject(`Failed to read model topology and weights manifest JSON ` +\n                `from file '${jsonFile.name}'. BrowserFiles supports loading ` +\n                `Keras-style tf.Model artifacts only.`);\n            jsonReader.readAsText(jsonFile);\n        });\n    }\n    /**\n     * Check the compatibility between weights manifest and weight files.\n     */\n    checkManifestAndWeightFiles(manifest, files) {\n        const basenames = [];\n        const fileNames = files.map(file => basename(file.name));\n        const pathToFile = {};\n        for (const group of manifest) {\n            group.paths.forEach(path => {\n                const pathBasename = basename(path);\n                if (basenames.indexOf(pathBasename) !== -1) {\n                    throw new Error(`Duplicate file basename found in weights manifest: ` +\n                        `'${pathBasename}'`);\n                }\n                basenames.push(pathBasename);\n                if (fileNames.indexOf(pathBasename) === -1) {\n                    throw new Error(`Weight file with basename '${pathBasename}' is not provided.`);\n                }\n                else {\n                    pathToFile[path] = files[fileNames.indexOf(pathBasename)];\n                }\n            });\n        }\n        if (basenames.length !== files.length) {\n            throw new Error(`Mismatch in the number of files in weights manifest ` +\n                `(${basenames.length}) and the number of weight files provided ` +\n                `(${files.length}).`);\n        }\n        return pathToFile;\n    }\n}\nexport const browserDownloadsRouter = (url) => {\n    if (!env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n            return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserDownloads(fileNamePrefix = 'model') {\n    return new BrowserDownloads(fileNamePrefix);\n}\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserFiles(files) {\n    return new BrowserFiles(files);\n}\n//# sourceMappingURL=browser_files.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../util';\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nexport function monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n    checkPromises(promises);\n    startFraction = startFraction == null ? 0 : startFraction;\n    endFraction = endFraction == null ? 1 : endFraction;\n    checkFraction(startFraction, endFraction);\n    let resolvedPromise = 0;\n    const registerMonitor = (promise) => {\n        promise.then(value => {\n            const fraction = startFraction +\n                ++resolvedPromise / promises.length * (endFraction - startFraction);\n            // pass fraction as parameter to callback function.\n            onProgress(fraction);\n            return value;\n        });\n        return promise;\n    };\n    function checkPromises(promises) {\n        assert(promises != null && Array.isArray(promises) && promises.length > 0, () => 'promises must be a none empty array');\n    }\n    function checkFraction(startFraction, endFraction) {\n        assert(startFraction >= 0 && startFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n        assert(endFraction >= 0 && endFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n        assert(endFraction >= startFraction, () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n    }\n    return Promise.all(promises.map(registerMonitor));\n}\n//# sourceMappingURL=progress.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment';\nimport * as util from '../util';\nimport { decodeWeights } from './io_utils';\nimport { monitorPromisesProgress } from './progress';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nexport async function loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {\n    if (loadOptions == null) {\n        loadOptions = {};\n    }\n    const fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch :\n        loadOptions.fetchFunc;\n    // Create the requests for all of the weights in parallel.\n    const requests = fetchURLs.map(fetchURL => fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true }));\n    const fetchStartFraction = 0;\n    const fetchEndFraction = 0.5;\n    const responses = loadOptions.onProgress == null ?\n        await Promise.all(requests) :\n        await monitorPromisesProgress(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);\n    const bufferPromises = responses.map(response => response.arrayBuffer());\n    const bufferStartFraction = 0.5;\n    const bufferEndFraction = 1;\n    const buffers = loadOptions.onProgress == null ?\n        await Promise.all(bufferPromises) :\n        await monitorPromisesProgress(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);\n    return buffers;\n}\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nexport async function loadWeights(manifest, filePathPrefix = '', weightNames, requestInit) {\n    // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n    // single weight from a group, the whole group will be fetched. At a future\n    // date, we should support fetching only the individual shards within a\n    // group that are needed to reconstruct the requested weight.\n    // TODO(cais): Use `decodeWeights` for implementation.\n    const fetchWeights = (fetchUrls) => loadWeightsAsArrayBuffer(fetchUrls, { requestInit });\n    const loadWeights = weightsLoaderFactory(fetchWeights);\n    return loadWeights(manifest, filePathPrefix, weightNames);\n}\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nexport function weightsLoaderFactory(fetchWeightsFunction) {\n    return async (manifest, filePathPrefix = '', weightNames) => {\n        // Collect all the groups, weights, and their relative offsets to be\n        // fetched.\n        const groupIndicesToFetchMap = manifest.map(() => false);\n        const groupWeightsToFetch = {};\n        const weightsFound = weightNames != null ? weightNames.map(() => false) : [];\n        const allManifestWeightNames = [];\n        manifest.forEach((manifestGroupConfig, groupIndex) => {\n            let groupOffset = 0;\n            manifestGroupConfig.weights.forEach(weightsEntry => {\n                const rawDtype = ('quantization' in weightsEntry) ?\n                    weightsEntry.quantization.dtype :\n                    weightsEntry.dtype;\n                const weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] *\n                    util.sizeFromShape(weightsEntry.shape);\n                const enqueueWeightsForFetchingFn = () => {\n                    groupIndicesToFetchMap[groupIndex] = true;\n                    if (groupWeightsToFetch[groupIndex] == null) {\n                        groupWeightsToFetch[groupIndex] = [];\n                    }\n                    groupWeightsToFetch[groupIndex].push({\n                        manifestEntry: weightsEntry,\n                        groupOffset,\n                        sizeBytes: weightsBytes\n                    });\n                };\n                if (weightNames != null) {\n                    weightNames.forEach((weightName, weightIndex) => {\n                        if (weightName === weightsEntry.name) {\n                            enqueueWeightsForFetchingFn();\n                            weightsFound[weightIndex] = true;\n                        }\n                    });\n                }\n                else {\n                    enqueueWeightsForFetchingFn();\n                }\n                allManifestWeightNames.push(weightsEntry.name);\n                groupOffset += weightsBytes;\n            });\n        });\n        if (!weightsFound.every(found => found)) {\n            const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n            throw new Error(`Could not find weights in manifest with names: ` +\n                `${weightsNotFound.join(', ')}. \\n` +\n                `Manifest JSON has weights with names: ` +\n                `${allManifestWeightNames.join(', ')}.`);\n        }\n        // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n        // IDs.\n        const groupIndicesToFetch = groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n            if (shouldFetch) {\n                accumulator.push(i);\n            }\n            return accumulator;\n        }, []);\n        const fetchUrls = [];\n        groupIndicesToFetch.forEach(i => {\n            manifest[i].paths.forEach(filepath => {\n                const fetchUrl = filePathPrefix +\n                    (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                fetchUrls.push(fetchUrl);\n            });\n        });\n        const buffers = await fetchWeightsFunction(fetchUrls);\n        const weightsTensorMap = {};\n        let bufferIndexOffset = 0;\n        groupIndicesToFetch.forEach(i => {\n            const numBuffers = manifest[i].paths.length;\n            let groupBytes = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                groupBytes += buffers[bufferIndexOffset + i].byteLength;\n            }\n            // Create a buffer for the whole group.\n            const groupBuffer = new ArrayBuffer(groupBytes);\n            const groupByteBuffer = new Uint8Array(groupBuffer);\n            let groupBufferOffset = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n                groupByteBuffer.set(buffer, groupBufferOffset);\n                groupBufferOffset += buffer.byteLength;\n            }\n            const weightsEntries = groupWeightsToFetch[i];\n            weightsEntries.forEach(weightsEntry => {\n                const byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                const nameToTensorMap = decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n                for (const name in nameToTensorMap) {\n                    weightsTensorMap[name] = nameToTensorMap[name];\n                }\n            });\n            bufferIndexOffset += numBuffers;\n        });\n        return weightsTensorMap;\n    };\n}\n//# sourceMappingURL=weights_loader.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\nimport { env } from '../environment';\nimport { assert } from '../util';\nimport { concatenateArrayBuffers, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nimport { loadWeightsAsArrayBuffer } from './weights_loader';\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nexport class HTTPRequest {\n    constructor(path, loadOptions) {\n        this.DEFAULT_METHOD = 'POST';\n        if (loadOptions == null) {\n            loadOptions = {};\n        }\n        this.weightPathPrefix = loadOptions.weightPathPrefix;\n        this.onProgress = loadOptions.onProgress;\n        this.weightUrlConverter = loadOptions.weightUrlConverter;\n        if (loadOptions.fetchFunc != null) {\n            assert(typeof loadOptions.fetchFunc === 'function', () => 'Must pass a function that matches the signature of ' +\n                '`fetch` (see ' +\n                'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n            this.fetch = loadOptions.fetchFunc;\n        }\n        else {\n            this.fetch = env().platform.fetch;\n        }\n        assert(path != null && path.length > 0, () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n        if (Array.isArray(path)) {\n            assert(path.length === 2, () => 'URL paths for http must have a length of 2, ' +\n                `(actual length is ${path.length}).`);\n        }\n        this.path = path;\n        if (loadOptions.requestInit != null &&\n            loadOptions.requestInit.body != null) {\n            throw new Error('requestInit is expected to have no pre-existing body, but has one.');\n        }\n        this.requestInit = loadOptions.requestInit || {};\n    }\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        const init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);\n        init.body = new FormData();\n        const weightsManifest = [{\n                paths: ['./model.weights.bin'],\n                weights: modelArtifacts.weightSpecs,\n            }];\n        const modelTopologyAndWeightManifest = {\n            modelTopology: modelArtifacts.modelTopology,\n            format: modelArtifacts.format,\n            generatedBy: modelArtifacts.generatedBy,\n            convertedBy: modelArtifacts.convertedBy,\n            weightsManifest\n        };\n        if (modelArtifacts.signature != null) {\n            modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n        }\n        if (modelArtifacts.userDefinedMetadata != null) {\n            modelTopologyAndWeightManifest.userDefinedMetadata =\n                modelArtifacts.userDefinedMetadata;\n        }\n        if (modelArtifacts.modelInitializer != null) {\n            modelTopologyAndWeightManifest.modelInitializer =\n                modelArtifacts.modelInitializer;\n        }\n        init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: JSON_TYPE }), 'model.json');\n        if (modelArtifacts.weightData != null) {\n            init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], { type: OCTET_STREAM_MIME_TYPE }), 'model.weights.bin');\n        }\n        const response = await this.fetch(this.path, init);\n        if (response.ok) {\n            return {\n                modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\n                responses: [response],\n            };\n        }\n        else {\n            throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ` +\n                `${response.status}.`);\n        }\n    }\n    /**\n     * Load model artifacts via HTTP request(s).\n     *\n     * See the documentation to `tf.io.http` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model artifacts (if loading succeeds).\n     */\n    async load() {\n        const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n        if (!modelConfigRequest.ok) {\n            throw new Error(`Request to ${this.path} failed with status code ` +\n                `${modelConfigRequest.status}. Please verify this URL points to ` +\n                `the model JSON of the model to load.`);\n        }\n        let modelConfig;\n        try {\n            modelConfig = await modelConfigRequest.json();\n        }\n        catch (e) {\n            let message = `Failed to parse model JSON of response from ${this.path}.`;\n            // TODO(nsthorat): Remove this after some time when we're comfortable that\n            // .pb files are mostly gone.\n            if (this.path.endsWith('.pb')) {\n                message += ' Your path contains a .pb file extension. ' +\n                    'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n                    'in favor of .json models. You can re-convert your Python ' +\n                    'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n                    'or you can convert your.pb models with the \\'pb2json\\'' +\n                    'NPM script in the tensorflow/tfjs-converter repository.';\n            }\n            else {\n                message += ' Please make sure the server is serving valid ' +\n                    'JSON for this request.';\n            }\n            throw new Error(message);\n        }\n        const modelTopology = modelConfig.modelTopology;\n        const weightsManifest = modelConfig.weightsManifest;\n        const generatedBy = modelConfig.generatedBy;\n        const convertedBy = modelConfig.convertedBy;\n        const format = modelConfig.format;\n        const signature = modelConfig.signature;\n        const userDefinedMetadata = modelConfig.userDefinedMetadata;\n        // We do not allow both modelTopology and weightsManifest to be missing.\n        if (modelTopology == null && weightsManifest == null) {\n            throw new Error(`The JSON from HTTP path ${this.path} contains neither model ` +\n                `topology or manifest for weights.`);\n        }\n        let weightSpecs;\n        let weightData;\n        if (weightsManifest != null) {\n            const results = await this.loadWeights(weightsManifest);\n            [weightSpecs, weightData] = results;\n        }\n        const artifacts = {\n            modelTopology,\n            weightSpecs,\n            weightData,\n            generatedBy,\n            convertedBy,\n            format\n        };\n        if (signature != null) {\n            artifacts.signature = signature;\n        }\n        if (userDefinedMetadata != null) {\n            artifacts.userDefinedMetadata = userDefinedMetadata;\n        }\n        const initializer = modelConfig.modelInitializer;\n        if (initializer) {\n            artifacts.modelInitializer = initializer;\n        }\n        return artifacts;\n    }\n    async loadWeights(weightsManifest) {\n        const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n        const [prefix, suffix] = parseUrl(weightPath);\n        const pathPrefix = this.weightPathPrefix || prefix;\n        const weightSpecs = [];\n        for (const entry of weightsManifest) {\n            weightSpecs.push(...entry.weights);\n        }\n        const fetchURLs = [];\n        const urlPromises = [];\n        for (const weightsGroup of weightsManifest) {\n            for (const path of weightsGroup.paths) {\n                if (this.weightUrlConverter != null) {\n                    urlPromises.push(this.weightUrlConverter(path));\n                }\n                else {\n                    fetchURLs.push(pathPrefix + path + suffix);\n                }\n            }\n        }\n        if (this.weightUrlConverter) {\n            fetchURLs.push(...await Promise.all(urlPromises));\n        }\n        const buffers = await loadWeightsAsArrayBuffer(fetchURLs, {\n            requestInit: this.requestInit,\n            fetchFunc: this.fetch,\n            onProgress: this.onProgress\n        });\n        return [weightSpecs, concatenateArrayBuffers(buffers)];\n    }\n}\nHTTPRequest.URL_SCHEME_REGEX = /^https?:\\/\\//;\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nexport function parseUrl(url) {\n    const lastSlash = url.lastIndexOf('/');\n    const lastSearchParam = url.lastIndexOf('?');\n    const prefix = url.substring(0, lastSlash);\n    const suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n    return [prefix + '/', suffix];\n}\nexport function isHTTPScheme(url) {\n    return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\nexport const httpRouter = (url, loadOptions) => {\n    if (typeof fetch === 'undefined' &&\n        (loadOptions == null || loadOptions.fetchFunc == null)) {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n    }\n    else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n            isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        }\n        else {\n            isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n            return http(url, loadOptions);\n        }\n    }\n    return null;\n};\nIORouterRegistry.registerSaveRouter(httpRouter);\nIORouterRegistry.registerLoadRouter(httpRouter);\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function http(path, loadOptions) {\n    return new HTTPRequest(path, loadOptions);\n}\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nexport function browserHTTPRequest(path, loadOptions) {\n    return http(path, loadOptions);\n}\n//# sourceMappingURL=http.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass PassthroughLoader {\n    constructor(modelArtifacts) {\n        this.modelArtifacts = modelArtifacts;\n    }\n    async load() {\n        return this.modelArtifacts;\n    }\n}\nclass PassthroughSaver {\n    constructor(saveHandler) {\n        this.saveHandler = saveHandler;\n    }\n    async save(modelArtifacts) {\n        return this.saveHandler(modelArtifacts);\n    }\n}\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nexport function fromMemory(modelArtifacts, weightSpecs, weightData, trainingConfig) {\n    if (arguments.length === 1) {\n        const isModelArtifacts = modelArtifacts.modelTopology != null ||\n            modelArtifacts.weightSpecs != null;\n        if (isModelArtifacts) {\n            return new PassthroughLoader(modelArtifacts);\n        }\n        else {\n            // Legacy support: with only modelTopology.\n            // TODO(cais): Remove this deprecated API.\n            console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n                'The argument should be of type ModelArtifacts. ' +\n                'The multi-argument signature of tf.io.fromMemory() has been ' +\n                'deprecated and will be removed in a future release.');\n            return new PassthroughLoader({ modelTopology: modelArtifacts });\n        }\n    }\n    else {\n        // Legacy support.\n        // TODO(cais): Remove this deprecated API.\n        console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n            'The argument should be of type ModelArtifacts. ' +\n            'The multi-argument signature of tf.io.fromMemory() has been ' +\n            'deprecated and will be removed in a future release.');\n        return new PassthroughLoader({\n            modelTopology: modelArtifacts,\n            weightSpecs,\n            weightData,\n            trainingConfig\n        });\n    }\n}\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nexport function withSaveHandler(saveHandler) {\n    return new PassthroughSaver(saveHandler);\n}\n//# sourceMappingURL=passthrough.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { BatchMatMul } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_(a, b, transposeA = false, transposeB = false) {\n    let $a = convertToTensor(a, 'a', 'matMul');\n    let $b = convertToTensor(b, 'b', 'matMul');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    const attrs = { transposeA, transposeB };\n    return ENGINE.runKernel(BatchMatMul, inputs, attrs);\n}\nexport const matMul = op({ matMul_ });\n//# sourceMappingURL=mat_mul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { OneHot } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction oneHot_(indices, depth, onValue = 1, offValue = 0) {\n    if (depth < 2) {\n        throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n    }\n    const $indices = convertToTensor(indices, 'indices', 'oneHot', 'int32');\n    const inputs = { indices: $indices };\n    const attrs = { depth, onValue, offValue };\n    return ENGINE.runKernel(OneHot, inputs, attrs);\n}\nexport const oneHot = op({ oneHot_ });\n//# sourceMappingURL=one_hot.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Transpose } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_(x, perm) {\n    const $x = convertToTensor(x, 'x', 'transpose');\n    if (perm == null) {\n        perm = $x.shape.map((s, i) => i).reverse();\n    }\n    util.assert($x.rank === perm.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of perm ${perm}.`);\n    perm.forEach(axis => {\n        util.assert(axis >= 0 && axis < $x.rank, () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n    });\n    if ($x.rank <= 1) {\n        return $x.clone();\n    }\n    const inputs = { x: $x };\n    const attrs = { perm };\n    return ENGINE.runKernel(Transpose, inputs, attrs);\n}\nexport const transpose = op({ transpose_ });\n//# sourceMappingURL=transpose.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { matMul } from './mat_mul';\nimport { oneHot } from './one_hot';\nimport { op } from './operation';\nimport { transpose } from './transpose';\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nexport function confusionMatrix_(labels, predictions, numClasses) {\n    const $labels = convertToTensor(labels, 'labels', 'confusionMatrix');\n    const $predictions = convertToTensor(predictions, 'predictions', 'confusionMatrix');\n    util.assert(numClasses == null || numClasses > 0 && Number.isInteger(numClasses), () => `If provided, numClasses must be a positive integer, ` +\n        `but got ${numClasses}`);\n    util.assert($labels.rank === 1, () => `Expected the rank of labels to be 1, but got ${$labels.rank}`);\n    util.assert($predictions.rank === 1, () => `Expected the rank of predictions to be 1, ` +\n        `but got ${$predictions.rank}`);\n    util.assert($labels.shape[0] === $predictions.shape[0], () => `Mismatch in the number of examples: ` +\n        `${$labels.shape[0]} vs. ${$predictions.shape[0]}. ` +\n        `Labels and predictions should have the same number of elements.`);\n    util.assert(numClasses > 0 && Number.isInteger(numClasses), () => `numClasses is required to be a positive integer, but got ` +\n        `${numClasses}`);\n    // TODO(cais): In the future, if oneHot supports tensors inputs for\n    //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n    const oneHotLabels = oneHot(cast($labels, 'int32'), numClasses);\n    const oneHotPredictions = oneHot(cast($predictions, 'int32'), numClasses);\n    const oneHotLabelsT = transpose(oneHotLabels);\n    const product = matMul(oneHotLabelsT, oneHotPredictions);\n    return cast(product, 'int32');\n}\nexport const confusionMatrix = op({ confusionMatrix_ });\n//# sourceMappingURL=confusion_matrix.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor3d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 3) {\n        throw new Error('tensor3d() requires shape to have three numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n        throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor3d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor3d.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FromPixels } from '../kernel_names';\nimport { getKernel } from '../kernel_registry';\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\nimport { tensor3d } from './tensor3d';\nlet fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nfunction fromPixels_(pixels, numChannels = 3) {\n    // Sanity checks.\n    if (numChannels > 4) {\n        throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n    }\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    let isPixelData = false;\n    let isImageData = false;\n    let isVideo = false;\n    let isImage = false;\n    let isCanvasLike = false;\n    let isImageBitmap = false;\n    if (pixels.data instanceof Uint8Array) {\n        isPixelData = true;\n    }\n    else if (typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n        isImageData = true;\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement) {\n        isVideo = true;\n    }\n    else if (typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement) {\n        isImage = true;\n        // tslint:disable-next-line: no-any\n    }\n    else if (pixels.getContext != null) {\n        isCanvasLike = true;\n    }\n    else if (typeof (ImageBitmap) !== 'undefined' &&\n        pixels instanceof ImageBitmap) {\n        isImageBitmap = true;\n    }\n    else {\n        throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' +\n            `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n            `in browser, or OffscreenCanvas, ImageData in webworker` +\n            ` or {data: Uint32Array, width: number, height: number}, ` +\n            `but was ${pixels.constructor.name}`);\n    }\n    if (isVideo) {\n        const HAVE_CURRENT_DATA_READY_STATE = 2;\n        if (isVideo &&\n            pixels.readyState <\n                HAVE_CURRENT_DATA_READY_STATE) {\n            throw new Error('The video element has not loaded data yet. Please wait for ' +\n                '`loadeddata` event on the <video> element.');\n        }\n    }\n    // If the current backend has 'FromPixels' registered, it has a more\n    // efficient way of handling pixel uploads, so we call that.\n    const kernel = getKernel(FromPixels, ENGINE.backendName);\n    if (kernel != null) {\n        const inputs = { pixels };\n        const attrs = { numChannels };\n        return ENGINE.runKernel(FromPixels, inputs, attrs);\n    }\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    let vals;\n    if (isCanvasLike) {\n        vals =\n            // tslint:disable-next-line:no-any\n            pixels.getContext('2d').getImageData(0, 0, width, height).data;\n    }\n    else if (isImageData || isPixelData) {\n        vals = pixels.data;\n    }\n    else if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n    }\n    let values;\n    if (numChannels === 4) {\n        values = new Int32Array(vals);\n    }\n    else {\n        const numPixels = width * height;\n        values = new Int32Array(numPixels * numChannels);\n        for (let i = 0; i < numPixels; i++) {\n            for (let channel = 0; channel < numChannels; ++channel) {\n                values[i * numChannels + channel] = vals[i * 4 + channel];\n            }\n        }\n    }\n    const outShape = [height, width, numChannels];\n    return tensor3d(values, outShape, 'int32');\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 or rank-3 tensor. If rank-2, draws grayscale. If\n *     rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\nexport async function toPixels(img, canvas) {\n    let $img = convertToTensor(img, 'img', 'toPixels');\n    if (!(img instanceof Tensor)) {\n        // Assume int32 if user passed a native array.\n        const originalImgTensor = $img;\n        $img = cast(originalImgTensor, 'int32');\n        originalImgTensor.dispose();\n    }\n    if ($img.rank !== 2 && $img.rank !== 3) {\n        throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n    }\n    const [height, width] = $img.shape.slice(0, 2);\n    const depth = $img.rank === 2 ? 1 : $img.shape[2];\n    if (depth > 4 || depth === 2) {\n        throw new Error(`toPixels only supports depth of size ` +\n            `1, 3 or 4 but got ${depth}`);\n    }\n    if ($img.dtype !== 'float32' && $img.dtype !== 'int32') {\n        throw new Error(`Unsupported type for toPixels: ${$img.dtype}.` +\n            ` Please use float32 or int32 tensors.`);\n    }\n    const data = await $img.data();\n    const multiplier = $img.dtype === 'float32' ? 255 : 1;\n    const bytes = new Uint8ClampedArray(width * height * 4);\n    for (let i = 0; i < height * width; ++i) {\n        const rgba = [0, 0, 0, 255];\n        for (let d = 0; d < depth; d++) {\n            const value = data[i * depth + d];\n            if ($img.dtype === 'float32') {\n                if (value < 0 || value > 1) {\n                    throw new Error(`Tensor values for a float32 Tensor must be in the ` +\n                        `range [0 - 1] but encountered ${value}.`);\n                }\n            }\n            else if ($img.dtype === 'int32') {\n                if (value < 0 || value > 255) {\n                    throw new Error(`Tensor values for a int32 Tensor must be in the ` +\n                        `range [0 - 255] but encountered ${value}.`);\n                }\n            }\n            if (depth === 1) {\n                rgba[0] = value * multiplier;\n                rgba[1] = value * multiplier;\n                rgba[2] = value * multiplier;\n            }\n            else {\n                rgba[d] = value * multiplier;\n            }\n        }\n        const j = i * 4;\n        bytes[j + 0] = Math.round(rgba[0]);\n        bytes[j + 1] = Math.round(rgba[1]);\n        bytes[j + 2] = Math.round(rgba[2]);\n        bytes[j + 3] = Math.round(rgba[3]);\n    }\n    if (canvas != null) {\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        const imageData = new ImageData(bytes, width, height);\n        ctx.putImageData(imageData, 0, 0);\n    }\n    if ($img !== img) {\n        $img.dispose();\n    }\n    return bytes;\n}\nexport const fromPixels = op({ fromPixels_ });\n//# sourceMappingURL=browser.js.map","import { computeStrides, sizeFromShape } from '../util';\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nexport function prepareAndValidate(tensor, indices) {\n    const tensorRank = tensor.shape.length;\n    const indicesRank = indices.shape.length;\n    if (tensorRank < 1) {\n        throw new Error('tf.gatherND() expects the input to be rank 1 or higher,' +\n            ` but the rank was ${tensorRank}.`);\n    }\n    if (indicesRank < 1) {\n        throw new Error('tf.gatherND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indicesRank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error('tf.gatherND() expects the indices to be int32 type,' +\n            ` but the dtype was ${indices.dtype}.`);\n    }\n    if (indices.shape[indicesRank - 1] > tensorRank) {\n        throw new Error('index innermost dimension length must be <= tensor rank; saw: ' +\n            `${indices.shape[indicesRank - 1]} vs. ${tensorRank}`);\n    }\n    if (sizeFromShape(tensor.shape) === 0) {\n        throw new Error('Requested more than 0 entries, but input is empty.' +\n            ` Input shape: ${tensor.shape}.`);\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    // The result shape is\n    //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n    let nResult = 1;\n    for (let i = 0; i < indicesShape.length - 1; ++i) {\n        nResult *= indicesShape[i];\n    }\n    const inputShape = tensor.shape;\n    const resultShape = indicesShape.slice();\n    resultShape.pop();\n    let sliceSize = 1;\n    for (let i = sliceRank; i < tensorRank; ++i) {\n        sliceSize *= inputShape[i];\n        resultShape.push(inputShape[i]);\n    }\n    const strides = [...computeStrides(tensor.shape).map(stride => stride / sliceSize),\n        1].slice(0, sliceRank);\n    return [resultShape, nResult, sliceSize, strides];\n}\n//# sourceMappingURL=gather_nd_util.js.map","import { computeStrides, sizeFromShape } from '../util';\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nexport function validateUpdateShape(shape, indices, updates) {\n    const sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n    const batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n    const shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n        `shape[sliceDim:], got updates.shape: ${updates.shape}` +\n        `, indices.shape: ${indices.shape}, shape: ${shape}` +\n        `, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;\n    if (updates.rank < batchDim) {\n        throw new Error(shapeError + ` update.rank < ${batchDim}. `);\n    }\n    if (shape.length < sliceDim + (updates.rank - batchDim)) {\n        throw new Error(shapeError +\n            ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);\n    }\n    if (updates.rank !== batchDim + shape.length - sliceDim) {\n        throw new Error(shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);\n    }\n    for (let d = 0; d < batchDim; ++d) {\n        if (updates.shape[d] !== indices.shape[d]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${indices.shape[d]}).`);\n        }\n    }\n    for (let d = 0; d < updates.rank - batchDim; ++d) {\n        if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d + batchDim}] (${updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${shape[d + batchDim]})`);\n        }\n    }\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nexport function validateInput(updates, indices, shape) {\n    if (indices.rank < 1) {\n        throw new Error('tf.scatterND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indices.rank}.`);\n    }\n    if (updates.rank < 1) {\n        throw new Error('tf.scatterND() expects the updates to be rank 1 or higher,' +\n            ` but the rank was ${updates.rank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${indices.dtype}`);\n    }\n    if (shape.length < 1) {\n        throw new Error(`Output rank must be greater or equal to 1, but got shape: ${shape}`);\n    }\n    if (shape.length === 0) {\n        if (indices.size === 0) {\n            throw new Error(`Indices specified for empty output. indices shape: ${indices.shape}`);\n        }\n        if (updates.size === 0) {\n            throw new Error(`Updates specified for empty output. updates shape: ${updates.shape}`);\n        }\n    }\n    validateUpdateShape(shape, indices, updates);\n}\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nexport function calculateShapes(updates, indices, shape) {\n    // Calculate the number of dimensions in indices\n    const indicesRank = indices.shape.length;\n    const sliceRank = (indicesRank > 1) ? indices.shape[indicesRank - 1] : 1;\n    // Calculate the number of elements that make up each slice of our updated\n    // tensor. This allows us to work with flattened tensors and copy over whole\n    // slices at a time.\n    const totalNd = shape.length;\n    let sliceSize = 1;\n    for (let i = sliceRank; i < totalNd; ++i) {\n        sliceSize *= shape[i];\n    }\n    const safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n    const numUpdates = sizeFromShape(indices.shape) / safeSliceDim;\n    const strides = [...computeStrides(shape.slice(0, sliceRank)), 1];\n    const outputSize = sizeFromShape(shape);\n    return { sliceRank, numUpdates, sliceSize, strides, outputSize };\n}\n//# sourceMappingURL=scatter_nd_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nexport function assertParamsValid(input, begin, size) {\n    const inputRank = input.shape.length;\n    util.assert(inputRank === begin.length, () => `Error in slice${inputRank}D: Length of begin ${begin} must ` +\n        `match the rank of the array (${inputRank}).`);\n    util.assert(inputRank === size.length, () => `Error in slice${inputRank}D: Length of size ${size} must ` +\n        `match the rank of the array (${inputRank}).`);\n    for (let i = 0; i < inputRank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], () => `Error in slice${inputRank}D: begin[${i}] + size[${i}] ` +\n            `(${begin[i] + size[i]}) would overflow input.shape[${i}] (${input.shape[i]})`);\n    }\n}\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\nexport function maskToAxes(mask) {\n    const axes = [];\n    let axis = 0;\n    while (mask > 0) {\n        if (mask & 1) {\n            axes.push(axis);\n        }\n        mask /= 2;\n        axis++;\n    }\n    return axes;\n}\n/** Computes the output shape given the strided slice params. */\nexport function computeOutShape(begin, end, strides) {\n    const size = [];\n    for (let axis = 0; axis < begin.length; axis++) {\n        size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n    }\n    return size;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stride value. Otherwise, insert.\nexport function stridesWithElidedDims(strides, ellipsisInsertionIndex, numElidedAxes, inputShape) {\n    const newStrides = [...strides];\n    for (let i = newStrides.length; i < inputShape.length; i++) {\n        newStrides.push(1);\n    }\n    for (let i = 0; i < numElidedAxes; i++) {\n        if (i === 0) {\n            newStrides[ellipsisInsertionIndex] = 1;\n        }\n        else {\n            newStrides.splice(ellipsisInsertionIndex, 0 /* num elements to delete */, 1 /* element to add */);\n            newStrides.pop();\n        }\n    }\n    return newStrides;\n}\nfunction unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, normalizedAxis) {\n    if (normalizedAxis <= ellipsisInsertionIndex) {\n        return normalizedAxis;\n    }\n    return normalizedAxis - (numElidedAxes - 1);\n}\nfunction getElidedAxes(numElidedAxes, ellipsisInsertionIndex) {\n    const elidedAxes = [];\n    for (let i = 0; i < numElidedAxes; i++) {\n        elidedAxes.push(ellipsisInsertionIndex + i);\n    }\n    return elidedAxes;\n}\n// Normalize the start, end and strides.\nexport function getNormalizedAxes(inputShape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask) {\n    const inputRank = inputShape.length;\n    let normalizedBegin = new Array(inputRank), normalizedEnd = new Array(inputRank), normalizedStrides = new Array(inputRank);\n    if (ellipsisAxes.length && numInterpolatedAxes > 0) {\n        const fullIndex = ellipsisAxes[0];\n        // The ellipsis applies to the masked index as well as any dimensions\n        // that are interpolated.\n        const numElidedAxes = numInterpolatedAxes + 1;\n        normalizedBegin = startIndicesWithElidedDims(beginMask, fullIndex, numElidedAxes, begin, inputShape);\n        normalizedEnd = stopIndicesWithElidedDims(endMask, fullIndex, numElidedAxes, end, inputShape);\n        normalizedStrides =\n            stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);\n    }\n    else {\n        for (let axis = 0; axis < inputRank; axis++) {\n            normalizedBegin[axis] = startForAxis(beginMask, begin, strides, inputShape, axis, ellipsisMask);\n            normalizedEnd[axis] =\n                stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);\n            normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);\n        }\n    }\n    return {\n        begin: normalizedBegin,\n        end: normalizedEnd,\n        strides: normalizedStrides\n    };\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current start value. Otherwise, insert.\nexport function startIndicesWithElidedDims(beginMask, ellipsisInsertionIndex, numElidedAxes, originalBegin, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = 0;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalBegin[originalAxis];\n            if (beginMask & 1 << originalAxis) {\n                originalValue = 0;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    return newIndices;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stop value. Otherwise, insert.\nexport function stopIndicesWithElidedDims(endMask, ellipsisInsertionIndex, numElidedAxes, originalEnd, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalEnd[originalAxis];\n            if (endMask & 1 << originalAxis) {\n                originalValue = Number.MAX_SAFE_INTEGER;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    for (let i = 0; i < newIndices.length; i++) {\n        // Handle negative indices\n        const axisSize = inputShape[i];\n        if (newIndices[i] < 0) {\n            newIndices[i] += axisSize;\n        }\n        newIndices[i] = util.clamp(0, newIndices[i], inputShape[i]);\n    }\n    return newIndices;\n}\nexport function stridesForAxis(strides, axis, ellipsisMask) {\n    let stride = strides[axis];\n    if (ellipsisMask & (1 << axis) || stride == null) {\n        stride = 1;\n    }\n    return stride;\n}\nexport function startForAxis(beginMask, startIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let start = startIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or the begin index is not set\n    // for the axis.\n    if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {\n        if (stride > 0) {\n            // Forward iteration - use the first element. These values will get\n            // clamped below (Note: We could have set them to 0 and axis_size-1, but\n            // use lowest() and max() to maintain symmetry with StopForAxis())\n            start = Number.MIN_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the last element.\n            start = Number.MAX_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (start < 0) {\n        start += axisSize;\n    }\n    // Clamping\n    start = util.clamp(0, start, axisSize - 1);\n    return start;\n}\nexport function stopForAxis(endMask, stopIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let stop = stopIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or if the stop index is not\n    // set for this axis.\n    if (endMask & (1 << axis) || ellipsisMask & (1 << axis) || stop == null) {\n        if (stride > 0) {\n            // Forward iteration - use the last element. These values will get\n            // clamped below\n            stop = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the first element.\n            stop = Number.MIN_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (stop < 0) {\n        stop += axisSize;\n    }\n    // Clamping\n    // Because the end index points one past the last element, we need slightly\n    // different clamping ranges depending on the direction.\n    if (stride > 0) {\n        // Forward iteration\n        stop = util.clamp(0, stop, axisSize);\n    }\n    else {\n        // Backward iteration\n        stop = util.clamp(-1, stop, axisSize - 1);\n    }\n    return stop;\n}\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nexport function isSliceContinous(shape, begin, size) {\n    // Index of the first axis that has size > 1.\n    let firstNonOneAxis = size.length;\n    for (let i = 0; i < size.length; i++) {\n        if (size[i] > 1) {\n            firstNonOneAxis = i;\n            break;\n        }\n    }\n    for (let i = firstNonOneAxis + 1; i < size.length; i++) {\n        if (begin[i] > 0 || size[i] !== shape[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function computeFlatOffset(begin, strides) {\n    let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n    for (let i = 0; i < begin.length - 1; i++) {\n        flatOffset += begin[i] * strides[i];\n    }\n    return flatOffset;\n}\nexport function parseSliceParams(x, begin, size) {\n    // The following logic allows for more ergonomic calls.\n    let begin_;\n    const xRank = x.shape.length;\n    if (typeof begin === 'number') {\n        begin_ = [begin, ...new Array(xRank - 1).fill(0)];\n    }\n    else if (begin.length < xRank) {\n        begin_ = begin.concat(new Array(xRank - begin.length).fill(0));\n    }\n    else {\n        begin_ = begin.slice();\n    }\n    begin_.forEach(d => {\n        util.assert(d !== -1, () => 'slice() does not support negative begin indexing.');\n    });\n    let size_;\n    if (size == null) {\n        size_ = new Array(xRank).fill(-1);\n    }\n    else if (typeof size === 'number') {\n        size_ = [size, ...new Array(xRank - 1).fill(-1)];\n    }\n    else if (size.length < xRank) {\n        size_ = size.concat(new Array(xRank - size.length).fill(-1));\n    }\n    else {\n        size_ = size;\n    }\n    size_ = size_.map((d, i) => {\n        if (d >= 0) {\n            return d;\n        }\n        else {\n            util.assert(d === -1, () => `Negative size values should be exactly -1 but got ` +\n                `${d} for the slice() size at index ${i}.`);\n            return x.shape[i] - begin_[i];\n        }\n    });\n    return [begin_, size_];\n}\nexport function sliceInfo(xShape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    // make a copy because it may be modified further down.\n    let $begin = begin.slice();\n    let $end = end.slice();\n    let $strides = strides;\n    if (strides == null) {\n        $strides = new Array($begin.length);\n    }\n    const ellipsisAxes = maskToAxes(ellipsisMask);\n    if (ellipsisAxes.length > 1) {\n        throw new Error('Multiple ellipses in slice is not allowed.');\n    }\n    if (ellipsisMask !== 0 && newAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and newAxisMask is not yet supported.');\n    }\n    if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n    }\n    const numInterpolatedAxes = xShape.length - $begin.length;\n    // Expand the dims of x based on the newAxisMask.\n    const expandAxes = maskToAxes(newAxisMask);\n    const newShape = xShape.slice();\n    expandAxes.forEach(axis => {\n        $begin[axis] = 0;\n        $end[axis] = 1;\n        newShape.splice(axis, 0, 1);\n    });\n    const { begin: normalizedBegin, end: normalizedEnd, strides: normalizedStrides } = getNormalizedAxes(newShape, ellipsisAxes, numInterpolatedAxes, $begin, $end, $strides, beginMask, endMask, ellipsisMask);\n    $begin = normalizedBegin;\n    $end = normalizedEnd;\n    $strides = normalizedStrides;\n    const shrinkAxes = maskToAxes(shrinkAxisMask);\n    // Adjust the ends based on the shrink mask.\n    shrinkAxes.forEach(axis => {\n        $end[axis] = $begin[axis] + 1;\n        $strides[axis] = 1;\n    });\n    // Figure out the output shape.\n    const size = computeOutShape($begin, $end, $strides);\n    // Remove the axes based on shrinkMask.\n    const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n    const nonStrided = $strides.every(v => v === 1);\n    return { nonStrided, $begin, $end, $strides, size, newShape, outShape };\n}\n//# sourceMappingURL=slice_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from './util';\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport class Serializable {\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    getClassName() {\n        return this.constructor\n            .className;\n    }\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config);\n    }\n}\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n    constructor() {\n        this.classNameMap = {};\n    }\n    /**\n     * Returns the singleton instance of the map.\n     */\n    static getMap() {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    }\n    /**\n     * Registers the class as serializable.\n     */\n    static register(cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    }\n}\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nexport function registerClass(cls) {\n    assert(cls.className != null, () => `Class being registered does not have the static className ` +\n        `property defined.`);\n    assert(typeof cls.className === 'string', () => `className is required to be a string, but got type ` +\n        typeof cls.className);\n    assert(cls.className.length > 0, () => `Class being registered has an empty-string as its className, ` +\n        `which is disallowed.`);\n    SerializationMap.register(cls);\n}\n//# sourceMappingURL=serialization.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { inferShape } from './tensor_util_env';\nimport { arraysEqual, encodeString, flatten, isString, isTypedArray } from './util';\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\nexport function expectArraysClose(actual, expected, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, epsilon));\n}\nexport function testEpsilon() {\n    return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n        TEST_EPSILON_FLOAT16;\n}\nfunction expectArraysPredicate(actual, expected, predicate) {\n    let checkClassType = true;\n    if (isTypedArray(actual) || isTypedArray(expected)) {\n        checkClassType = false;\n    }\n    if (isTypedArray(actual) && isTypedArray(expected)) {\n        checkClassType = true;\n    }\n    if (checkClassType) {\n        const aType = actual.constructor.name;\n        const bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(`Arrays are of different type. Actual: ${aType}. ` +\n                `Expected: ${bType}`);\n        }\n    }\n    if (Array.isArray(actual) && Array.isArray(expected)) {\n        const actualShape = inferShape(actual);\n        const expectedShape = inferShape(expected);\n        if (!arraysEqual(actualShape, expectedShape)) {\n            throw new Error(`Arrays have different shapes. ` +\n                `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n        }\n    }\n    const actualFlat = isTypedArray(actual) ? actual : flatten(actual);\n    const expectedFlat = isTypedArray(expected) ?\n        expected :\n        flatten(expected);\n    if (actualFlat.length !== expectedFlat.length) {\n        throw new Error(`Arrays have different lengths actual: ${actualFlat.length} vs ` +\n            `expected: ${expectedFlat.length}.\\n` +\n            `Actual:   ${actualFlat}.\\n` +\n            `Expected: ${expectedFlat}.`);\n    }\n    for (let i = 0; i < expectedFlat.length; ++i) {\n        const a = actualFlat[i];\n        const e = expectedFlat[i];\n        if (!predicate(a, e)) {\n            throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n                `Actual:   ${actualFlat}.\\n` +\n                `Expected: ${expectedFlat}.`);\n        }\n    }\n}\nexport function expectPromiseToFail(fn, done) {\n    fn().then(() => done.fail(), () => done());\n}\nexport function expectArraysEqual(actual, expected) {\n    const exp = typeof expected === 'string' || typeof expected === 'number' ||\n        typeof expected === 'boolean' ?\n        [expected] :\n        expected;\n    if (isString(actual) || isString(actual[0]) ||\n        isString(expected) || isString(expected[0])) {\n        // tslint:disable-next-line: triple-equals\n        return expectArraysPredicate(actual, exp, (a, b) => a == b);\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, 0));\n}\nexport function expectNumbersClose(a, e, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n    }\n}\nfunction areClose(a, e, epsilon) {\n    if (!isFinite(a) && !isFinite(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nexport function expectValuesInRange(actual, low, high) {\n    for (let i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(`Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n        }\n    }\n}\nexport function expectArrayBuffersEqual(actual, expected) {\n    // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n    // a Float32Array solves this issue.\n    expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n/** Encodes strings into utf-8 bytes. */\nexport function encodeStrings(a) {\n    for (let i = 0; i < a.length; i++) {\n        const val = a[i];\n        if (Array.isArray(val)) {\n            encodeStrings(val);\n        }\n        else {\n            a[i] = encodeString(val);\n        }\n    }\n    return a;\n}\n//# sourceMappingURL=test_util.js.map","/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.0.0-rc.1';\nexport { version };\n//# sourceMappingURL=version.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { setDeprecationWarningFn } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableProdMode() {\n    env().set('PROD', true);\n}\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableDebugMode() {\n    env().set('DEBUG', true);\n}\n/** Globally disables deprecation warnings */\nexport function disableDeprecationWarnings() {\n    env().set('DEPRECATION_WARNINGS_ENABLED', false);\n    console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n/** Warn users about deprecated functionality. */\nexport function deprecationWarn(msg) {\n    if (env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n        console.warn(msg + ' You can disable deprecation warnings with ' +\n            'tf.disableDeprecationWarnings().');\n    }\n}\nsetDeprecationWarningFn(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nexport function disposeVariables() {\n    ENGINE.disposeVariables();\n}\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nexport function engine() {\n    return ENGINE;\n}\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function memory() {\n    return ENGINE.memory();\n}\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nexport function profile(f) {\n    return ENGINE.profile(f);\n}\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function tidy(nameOrFn, fn) {\n    return ENGINE.tidy(nameOrFn, fn);\n}\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function dispose(container) {\n    const tensors = getTensorsInContainer(container);\n    tensors.forEach(tensor => tensor.dispose());\n}\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function keep(result) {\n    return ENGINE.keep(result);\n}\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nexport function time(f) {\n    return ENGINE.time(f);\n}\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nexport function setBackend(backendName) {\n    return ENGINE.setBackend(backendName);\n}\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nexport function ready() {\n    return ENGINE.ready();\n}\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nexport function getBackend() {\n    return ENGINE.backendName;\n}\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nexport function removeBackend(name) {\n    ENGINE.removeBackend(name);\n}\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nexport function findBackend(name) {\n    return ENGINE.findBackend(name);\n}\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nexport function findBackendFactory(name) {\n    return ENGINE.findBackendFactory(name);\n}\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nexport function registerBackend(name, factory, priority = 1) {\n    return ENGINE.registerBackend(name, factory, priority);\n}\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nexport function backend() {\n    return ENGINE.backend;\n}\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nexport function setPlatform(platformName, platform) {\n    env().setPlatform(platformName, platform);\n}\n//# sourceMappingURL=globals.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Add } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_(a, b) {\n    let $a = convertToTensor(a, 'a', 'add');\n    let $b = convertToTensor(b, 'b', 'add');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Add, inputs);\n}\nexport const add = op({ add_ });\n//# sourceMappingURL=add.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FloorDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_(a, b) {\n    let $a = convertToTensor(a, 'a', 'floorDiv');\n    let $b = convertToTensor(b, 'b', 'floorDiv');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(FloorDiv, inputs);\n}\nexport const floorDiv = op({ floorDiv_ });\n//# sourceMappingURL=floorDiv.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RealDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { floorDiv } from './floorDiv';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_(a, b) {\n    let $a = convertToTensor(a, 'a', 'div');\n    let $b = convertToTensor(b, 'b', 'div');\n    [$a, $b] = makeTypesMatch($a, $b);\n    if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n        return floorDiv($a, $b);\n    }\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(RealDiv, inputs, attrs);\n}\nexport const div = op({ div_ });\n//# sourceMappingURL=div.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Multiply } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_(a, b) {\n    let $a = convertToTensor(a, 'a', 'mul');\n    let $b = convertToTensor(b, 'b', 'mul');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Multiply, inputs);\n}\nexport const mul = op({ mul_ });\n//# sourceMappingURL=mul.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs, ComplexAbs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_(x) {\n    const $x = convertToTensor(x, 'x', 'abs');\n    if ($x.dtype === 'complex64') {\n        const inputs = { x: $x };\n        return ENGINE.runKernel(ComplexAbs, inputs);\n    }\n    else {\n        const inputs = { x: $x };\n        return ENGINE.runKernel(Abs, inputs);\n    }\n}\nexport const abs = op({ abs_ });\n//# sourceMappingURL=abs.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Acos } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acos_(x) {\n    const $x = convertToTensor(x, 'x', 'acos');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Acos, inputs);\n}\nexport const acos = op({ acos_ });\n//# sourceMappingURL=acos.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Acosh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acosh_(x) {\n    const $x = convertToTensor(x, 'x', 'acosh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Acosh, inputs);\n}\nexport const acosh = op({ acosh_ });\n//# sourceMappingURL=acosh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AddN } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction addN_(tensors) {\n    util.assert(Array.isArray(tensors), () => 'The argument passed to tf.addN() must be a list of tensors');\n    util.assert(tensors.length >= 1, () => `Must pass at least one tensor to tf.addN(), but got ` +\n        `${tensors.length}`);\n    const $tensors = tensors.map((t, i) => convertToTensor(t, `tensors${i}`, 'addN'));\n    const firstTensor = $tensors[0];\n    $tensors.forEach(t => {\n        if (t.dtype !== firstTensor.dtype) {\n            throw new Error('All tensors passed to tf.addN() must have the same dtype');\n        }\n    });\n    $tensors.forEach(t => {\n        if (!util.arraysEqual(t.shape, firstTensor.shape)) {\n            throw new Error('All tensors passed to tf.addN() must have the same shape');\n        }\n    });\n    const inputs = $tensors;\n    return ENGINE.runKernel(AddN, inputs);\n}\nexport const addN = op({ addN_ });\n//# sourceMappingURL=add_n.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { All } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction all_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'all', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(All, inputs, attrs);\n}\nexport const all = op({ all_ });\n//# sourceMappingURL=all.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Any } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction any_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'any', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(Any, inputs, attrs);\n}\n// tslint:disable-next-line:variable-name\nexport const any = op({ any_ });\n//# sourceMappingURL=any.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ArgMax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMax_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'argMax');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return ENGINE.runKernel(ArgMax, inputs, attrs);\n}\nexport const argMax = op({ argMax_ });\n//# sourceMappingURL=arg_max.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ArgMin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMin_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'argMin');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return ENGINE.runKernel(ArgMin, inputs, attrs);\n}\nexport const argMin = op({ argMin_ });\n//# sourceMappingURL=arg_min.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Asin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asin_(x) {\n    const $x = convertToTensor(x, 'x', 'asin');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Asin, inputs);\n}\nexport const asin = op({ asin_ });\n//# sourceMappingURL=asin.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Asinh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asinh_(x) {\n    const $x = convertToTensor(x, 'x', 'asinh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Asinh, inputs);\n}\nexport const asinh = op({ asinh_ });\n//# sourceMappingURL=asinh.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan_(x) {\n    const $x = convertToTensor(x, 'x', 'atan');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Atan, inputs);\n}\nexport const atan = op({ atan_ });\n//# sourceMappingURL=atan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atan2 } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan2_(a, b) {\n    let $a = convertToTensor(a, 'a', 'atan2');\n    let $b = convertToTensor(b, 'b', 'atan2');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Atan2, inputs);\n}\nexport const atan2 = op({ atan2_ });\n//# sourceMappingURL=atan2.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Atanh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atanh_(x) {\n    const $x = convertToTensor(x, 'x', 'atanh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Atanh, inputs);\n}\nexport const atanh = op({ atanh_ });\n//# sourceMappingURL=atanh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nexport function computeDilation2DInfo(inputShape, filterShape, strides, pad, dataFormat = 'NHWC', dilations) {\n    // `computerConv2DInfo` require filterShape to be in the dimension of:\n    // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n    // outDepth, it should have the same depth as the input.\n    // Input shape: [batch, height, width, inChannels]\n    const inputChannels = inputShape[3];\n    const $filterShape = [...filterShape, inputChannels];\n    const $dataFormat = convertConv2DDataFormat(dataFormat);\n    return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\nexport function computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'channelsLast') {\n    const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n    let filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nexport function computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'NDHWC') {\n    const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n    let filterShape;\n    let $dataFormat;\n    if (dataFormat === 'NDHWC') {\n        $dataFormat = 'channelsLast';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n    }\n    else if (dataFormat === 'NCDHW') {\n        $dataFormat = 'channelsFirst';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nexport function computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise = false, dataFormat = 'channelsLast') {\n    let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideHeight, strideWidth] = parseTupleParam(strides);\n    const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outHeight, outWidth } = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inHeight,\n        inWidth,\n        inChannels,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideHeight,\n        strideWidth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nexport function computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise = false, dataFormat = 'channelsLast', roundingMode) {\n    let [batchSize, inDepth, inHeight, inWidth, inChannels] = [-1, -1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterDepth, filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n    const [dilationDepth, dilationHeight, dilationWidth] = parse3TupleParam(dilations);\n    const effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outDepth, outHeight, outWidth } = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inDepth,\n        inHeight,\n        inWidth,\n        inChannels,\n        outDepth,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideDepth,\n        strideHeight,\n        strideWidth,\n        filterDepth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterDepth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationDepth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputRows = inShape[0];\n    const inputCols = inShape[1];\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputRows, outputCols];\n}\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputDepth = inShape[0];\n    const inputRows = inShape[1];\n    const inputCols = inShape[2];\n    const outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputDepths, outputRows, outputCols, outChannels];\n}\nexport function computeDefaultPad(inputShape, fieldSize, stride, dilation = 1) {\n    const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction parse3TupleParam(param) {\n    return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {\n    let padInfo;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        const outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n        const padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else if (typeof pad === 'object') {\n        const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n        const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n        const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n        const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n        const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n            'VALID' :\n            'EXPLICIT';\n        padInfo = { top, bottom, left, right, type: padType };\n        outHeight = round((inHeight - filterHeight + top + bottom) / strideHeight + 1, roundingMode);\n        outWidth = round((inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outHeight, outWidth };\n}\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n    let padInfo;\n    let outDepth;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = {\n            top: pad,\n            bottom: pad,\n            left: pad,\n            right: pad,\n            front: pad,\n            back: pad,\n            type: padType\n        };\n        const outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n        outDepth = outShape[0];\n        outHeight = outShape[1];\n        outWidth = outShape[2];\n    }\n    else if (pad === 'same') {\n        outDepth = Math.ceil(inDepth / strideDepth);\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n        const padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        const front = Math.floor(padAlongDepth / 2);\n        const back = padAlongDepth - front;\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, front, back, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            front: 0,\n            back: 0,\n            type: 'VALID'\n        };\n        outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outDepth, outHeight, outWidth };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value, roundingMode) {\n    if (!roundingMode) {\n        return Math.trunc(value);\n    }\n    switch (roundingMode) {\n        case 'round':\n            // used for Caffe Conv\n            return Math.round(value);\n        case 'ceil':\n            // used for Caffe Pool\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(`Unknown roundingMode ${roundingMode}`);\n    }\n}\nexport function tupleValuesAreOne(param) {\n    const [dimA, dimB, dimC] = parseTupleParam(param);\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nexport function eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nexport function convertConv2DDataFormat(dataFormat) {\n    if (dataFormat === 'NHWC') {\n        return 'channelsLast';\n    }\n    else if (dataFormat === 'NCHW') {\n        return 'channelsFirst';\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n}\n//# sourceMappingURL=conv_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reshape } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_(x, shape) {\n    const $x = convertToTensor(x, 'x', 'reshape', 'string_or_numeric');\n    const inputs = { x: $x };\n    const attrs = { shape };\n    return ENGINE.runKernel(Reshape, inputs, attrs);\n}\nexport const reshape = op({ reshape_ });\n//# sourceMappingURL=reshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n    const dilations = 1;\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in avgPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = ENGINE.runKernel(AvgPool, inputs, attrs);\n    res = cast(res, $x.dtype);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const avgPool = op({ avgPool_ });\n//# sourceMappingURL=avg_pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction avgPool3d_(x, filterSize, strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = convertToTensor(x, 'x', 'avgPool3d', 'float32');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    util.assert(x5D.rank === 5, () => `Error in avgPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    util.assert(dataFormat === 'NDHWC', () => `Error in avgPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in avgPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = ENGINE.runKernel(AvgPool3D, inputs, attrs);\n    res = cast(res, x5D.dtype);\n    if (reshapedTo5D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nexport const avgPool3d = op({ avgPool3d_ });\n//# sourceMappingURL=avg_pool_3d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Concat } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport { assert } from '../util';\nimport { clone } from './clone';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_(tensors, axis = 0) {\n    assert(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n    const $tensors = convertToTensorArray(tensors, 'tensors', 'concat', 'string_or_numeric');\n    if ($tensors[0].dtype === 'complex64') {\n        $tensors.forEach(tensor => {\n            if (tensor.dtype !== 'complex64') {\n                throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n            }\n        });\n    }\n    if ($tensors.length === 1) {\n        return clone($tensors[0]);\n    }\n    const inputs = $tensors;\n    const attr = { axis };\n    return ENGINE.runKernel(Concat, inputs, attr);\n}\nexport const concat = op({ concat_ });\n//# sourceMappingURL=concat.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sigmoid } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_(x) {\n    const $x = convertToTensor(x, 'x', 'sigmoid');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sigmoid, inputs);\n}\nexport const sigmoid = op({ sigmoid_ });\n//# sourceMappingURL=sigmoid.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Slice } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice', 'string_or_numeric');\n    if ($x.rank === 0) {\n        throw new Error('Slicing scalar is not possible');\n    }\n    const inputs = { x: $x };\n    const attrs = { begin, size };\n    return ENGINE.runKernel(Slice, inputs, attrs);\n}\nexport const slice = op({ slice_ });\n//# sourceMappingURL=slice.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tanh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tanh_(x) {\n    const $x = convertToTensor(x, 'x', 'tanh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Tanh, inputs);\n}\nexport const tanh = op({ tanh_ });\n//# sourceMappingURL=tanh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { add } from './add';\nimport { concat } from './concat';\nimport { matMul } from './mat_mul';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { sigmoid } from './sigmoid';\nimport { slice } from './slice';\nimport { tanh } from './tanh';\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction basicLSTMCell_(forgetBias, lstmKernel, lstmBias, data, c, h) {\n    const $forgetBias = convertToTensor(forgetBias, 'forgetBias', 'basicLSTMCell');\n    const $lstmKernel = convertToTensor(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n    const $lstmBias = convertToTensor(lstmBias, 'lstmBias', 'basicLSTMCell');\n    const $data = convertToTensor(data, 'data', 'basicLSTMCell');\n    const $c = convertToTensor(c, 'c', 'basicLSTMCell');\n    const $h = convertToTensor(h, 'h', 'basicLSTMCell');\n    const combined = concat([$data, $h], 1);\n    const weighted = matMul(combined, $lstmKernel);\n    const res = add(weighted, $lstmBias);\n    // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n    const batchSize = res.shape[0];\n    const sliceCols = res.shape[1] / 4;\n    const sliceSize = [batchSize, sliceCols];\n    const i = slice(res, [0, 0], sliceSize);\n    const j = slice(res, [0, sliceCols], sliceSize);\n    const f = slice(res, [0, sliceCols * 2], sliceSize);\n    const o = slice(res, [0, sliceCols * 3], sliceSize);\n    const newC = add(mul(sigmoid(i), tanh(j)), mul($c, sigmoid(add($forgetBias, f))));\n    const newH = mul(tanh(newC), sigmoid(o));\n    return [newC, newH];\n}\nexport const basicLSTMCell = op({ basicLSTMCell_ });\n//# sourceMappingURL=basic_lstm_cell.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { BatchToSpaceND } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_(x, blockShape, crops) {\n    const $x = convertToTensor(x, 'x', 'batchToSpaceND');\n    const prod = blockShape.reduce((a, b) => a * b);\n    util.assert($x.rank >= 1 + blockShape.length, () => `input rank is ${$x.rank} but should be > than blockShape.length ${blockShape.length}`);\n    util.assert(crops.length === blockShape.length, () => `crops.length is ${crops.length} but should be equal to blockShape.length  ${blockShape.length}`);\n    util.assert($x.shape[0] % prod === 0, () => `input tensor batch is ${$x.shape[0]} but is not divisible by the product of ` +\n        `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, crops };\n    return ENGINE.runKernel(BatchToSpaceND, inputs, attrs);\n}\nexport const batchToSpaceND = op({ batchToSpaceND_ });\n//# sourceMappingURL=batch_to_space_nd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FusedBatchNorm } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { xAs4D } from './batchnorm_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const $x = convertToTensor(x, 'x', 'batchNorm');\n    const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n    const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($mean.rank === $variance.rank, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    util.assert($offset == null || $mean.rank === $offset.rank, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    util.assert($scale == null || $mean.rank === $scale.rank, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    const x4D = xAs4D($x);\n    const inputs = {\n        x: x4D,\n        scale: $scale,\n        offset: $offset,\n        mean: $mean,\n        variance: $variance\n    };\n    const attrs = { varianceEpsilon };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(FusedBatchNorm, inputs, attrs);\n    return reshape(res, $x.shape);\n}\nexport const batchNorm = op({ batchNorm_ });\n//# sourceMappingURL=batchnorm.js.map","import { reshape } from './reshape';\nexport function xAs4D(x) {\n    let x4D;\n    if (x.rank === 0 || x.rank === 1) {\n        x4D = reshape(x, [1, 1, 1, x.size]);\n    }\n    else if (x.rank === 2) {\n        x4D = reshape(x, [1, 1, x.shape[0], x.shape[1]]);\n    }\n    else if (x.rank === 3) {\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    else {\n        x4D = x;\n    }\n    return x4D;\n}\n//# sourceMappingURL=batchnorm_util.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = convertToTensor(x, 'x', 'batchNorm');\n    const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n    const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 2, () => `Error in batchNorm2D: x must be rank 2 but got rank ` +\n        `${$x.rank}.`);\n    util.assert($mean.rank === 2 || $mean.rank === 1, () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    util.assert($variance.rank === 2 || $variance.rank === 1, () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        util.assert($scale.rank === 2 || $scale.rank === 1, () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 2 || $offset.rank === 1, () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nexport const batchNorm2d = op({ batchNorm2d_ });\n//# sourceMappingURL=batchnorm2d.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = convertToTensor(x, 'x', 'batchNorm');\n    const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n    const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 3, () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n        `${$x.rank}.`);\n    util.assert($mean.rank === 3 || $mean.rank === 1, () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    util.assert($variance.rank === 3 || $variance.rank === 1, () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        util.assert($scale.rank === 3 || $scale.rank === 1, () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 3 || $offset.rank === 1, () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nexport const batchNorm3d = op({ batchNorm3d_ });\n//# sourceMappingURL=batchnorm3d.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { batchNorm } from './batchnorm';\nimport { op } from './operation';\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = convertToTensor(x, 'x', 'batchNorm');\n    const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n    const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($x.rank === 4, () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n        `${$x.rank}.`);\n    util.assert($mean.rank === 4 || $mean.rank === 1, () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    util.assert($variance.rank === 4 || $variance.rank === 1, () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        util.assert($scale.rank === 4 || $scale.rank === 1, () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        util.assert($offset.rank === 4 || $offset.rank === 1, () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return batchNorm($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nexport const batchNorm4d = op({ batchNorm4d_ });\n//# sourceMappingURL=batchnorm4d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Bincount } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_(x, weights, size) {\n    const $x = convertToTensor(x, 'x', 'bincount');\n    const $weights = convertToTensor(weights, 'weights', 'bincount');\n    util.assert($x.dtype === 'int32', () => `Error in bincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    util.assert($weights.size === $x.size || $weights.size === 0, () => `Error in bincount: weights must have the same size as input or` +\n        `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size };\n    return ENGINE.runKernel(Bincount, inputs, attrs);\n}\nexport const bincount = op({ bincount_ });\n//# sourceMappingURL=bincount.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { clone } from './clone';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_(x, shape) {\n    let input = convertToTensor(x, 'broadcastTo', 'x');\n    const xShape = input.shape;\n    if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n        throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n    }\n    if (shape.length < input.rank) {\n        throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${input.rank}.`);\n    }\n    if (shape.length > input.rank) {\n        const newShape = input.shape.slice();\n        while (newShape.length < shape.length) {\n            newShape.unshift(1);\n        }\n        input = reshape(input, newShape);\n    }\n    const inputShape = input.shape;\n    const reps = Array.from(shape);\n    for (let i = shape.length - 1; i >= 0; i--) {\n        if (inputShape[i] === shape[i]) {\n            reps[i] = 1;\n        }\n        else if (input.shape[i] !== 1) {\n            throw new Error(`broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n        }\n    }\n    const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n    if (axes.length === 0) {\n        return clone(input);\n    }\n    // TODO call broadcastTo kernel directly once backends implement broadcstTo\n    const inputs = { x: input };\n    const attrs = { reps };\n    return ENGINE.runKernel(Tile, inputs, attrs);\n}\nexport const broadcastTo = op({ broadcastTo_ });\n//# sourceMappingURL=broadcast_to.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Ceil } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction ceil_(x) {\n    const $x = convertToTensor(x, 'x', 'ceil');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Ceil, inputs);\n}\nexport const ceil = op({ ceil_ });\n//# sourceMappingURL=ceil.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ClipByValue } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n    const $x = convertToTensor(x, 'x', 'clipByValue');\n    util.assert((clipValueMin <= clipValueMax), () => `Error in clip: min (${clipValueMin}) must be ` +\n        `less than or equal to max (${clipValueMax}).`);\n    const inputs = { x: $x };\n    const attrs = { clipValueMin, clipValueMax };\n    return ENGINE.runKernel(ClipByValue, inputs, attrs);\n}\nexport const clipByValue = op({ clipByValue_ });\n//# sourceMappingURL=clip_by_value.js.map","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n    return concat(tensors, 0 /* axis */);\n}\nexport const concat1d = op({ concat1d_ });\n//# sourceMappingURL=concat_1d.js.map","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(tensors, axis) {\n    return concat(tensors, axis);\n}\nexport const concat2d = op({ concat2d_ });\n//# sourceMappingURL=concat_2d.js.map","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(tensors, axis) {\n    return concat(tensors, axis);\n}\nexport const concat3d = op({ concat3d_ });\n//# sourceMappingURL=concat_3d.js.map","import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(tensors, axis) {\n    return concat(tensors, axis);\n}\nexport const concat4d = op({ concat4d_ });\n//# sourceMappingURL=concat_4d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'conv2d');\n    const $filter = convertToTensor(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    util.assert(inDepth === $filter.shape[2], () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Conv2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const conv2d = op({ conv2d_ });\n//# sourceMappingURL=conv2d.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { conv2d } from './conv2d';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv1d_(x, filter, stride, pad, dataFormat = 'NWC', dilation = 1, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'conv1d');\n    const $filter = convertToTensor(filter, 'filter', 'conv1d');\n    let x3D = $x;\n    let reshapedTo3D = false;\n    if ($x.rank === 2) {\n        reshapedTo3D = true;\n        x3D = reshape($x, [1, $x.shape[0], $x.shape[1]]);\n    }\n    util.assert(x3D.rank === 3, () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n    util.assert($filter.rank === 3, () => `Error in conv1d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in conv1d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    util.assert(x3D.shape[2] === $filter.shape[1], () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n        `input depth for filter ${$filter.shape[1]}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(stride, dilation), () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n        `Got stride ${stride} and dilation '${dilation}'`);\n    util.assert(dataFormat === 'NWC', () => `Error in conv1d: got dataFormat of ${dataFormat} but only NWC is currently supported.`);\n    const filter4D = reshape($filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n    const input4D = reshape(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n    const strides = [1, stride];\n    const dilations = [1, dilation];\n    const conv2dDataFormat = 'NHWC';\n    const res = conv2d(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n    if (reshapedTo3D) {\n        return reshape(res, [res.shape[2], res.shape[3]]);\n    }\n    return reshape(res, [res.shape[0], res.shape[2], res.shape[3]]);\n}\nexport const conv1d = op({ conv1d_ });\n//# sourceMappingURL=conv1d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2DBackpropInput } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropInput_(xShape, dy, filter, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    util.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape4D = xShape;\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n        xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n    }\n    util.assert(xShape4D.length === 4, () => `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n        `${xShape4D.length}.`);\n    util.assert(dy4D.rank === 4, () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n        `rank ${dy4D.rank}`);\n    util.assert(filter.rank === 4, () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n        `rank ${filter.rank}`);\n    const inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    util.assert(inDepth === filter.shape[2], () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[2]}.`);\n    util.assert(outDepth === filter.shape[3], () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[3]}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in conv2dDerInput: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, inputShape: xShape4D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Conv2DBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const conv2DBackpropInput = op({ conv2DBackpropInput_ });\n//# sourceMappingURL=conv2d_backprop_input.js.map","import { convertToTensor } from '../tensor_util_env';\nimport { conv2DBackpropInput } from './conv2d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n    const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n    return conv2DBackpropInput(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\nexport const conv2dTranspose = op({ conv2dTranspose_ });\n//# sourceMappingURL=conv2d_transpose.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { eitherStridesOrDilationsAreOne } from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3d_(x, filter, strides, pad, dataFormat = 'NDHWC', dilations = [1, 1, 1]) {\n    const $x = convertToTensor(x, 'x', 'conv3d');\n    const $filter = convertToTensor(filter, 'filter', 'conv3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    util.assert(x5D.rank === 5, () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n    util.assert($filter.rank === 5, () => `Error in conv3d: filter must be rank 5, but got rank ` +\n        `${$filter.rank}.`);\n    util.assert(x5D.shape[4] === $filter.shape[3], () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n        `input depth for filter ${$filter.shape[3]}.`);\n    util.assert(eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    util.assert(dataFormat === 'NDHWC', () => `Error in conv3d: got dataFormat of ${dataFormat} but only NDHWC is currently supported.`);\n    const inputs = { x: x5D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Conv3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nexport const conv3d = op({ conv3d_ });\n//# sourceMappingURL=conv3d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv3DBackpropInputV2 } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3DBackpropInput_(xShape, dy, filter, strides, pad) {\n    util.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape5D = xShape;\n    let dy5D = dy;\n    let reshapedTo5D = false;\n    if (dy.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n        xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n    }\n    const inDepth = xShape5D[4];\n    const outDepth = dy5D.shape[4];\n    util.assert(xShape5D.length === 5, () => `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n        `${xShape5D.length}.`);\n    util.assert(dy5D.rank === 5, () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n        `rank ${dy5D.rank}`);\n    util.assert(filter.rank === 5, () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n        `rank ${filter.rank}`);\n    util.assert(inDepth === filter.shape[3], () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[3]}.`);\n    util.assert(outDepth === filter.shape[4], () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[4]}.`);\n    const inputs = { dy: dy5D, filter };\n    const attrs = { pad, strides, inputShape: xShape5D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Conv3DBackpropInputV2, inputs, attrs);\n    if (reshapedTo5D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nexport const conv3DBackpropInput = op({ conv3DBackpropInput_ });\n//# sourceMappingURL=conv3d_backprop_input.js.map","import { convertToTensor } from '../tensor_util_env';\nimport { conv3DBackpropInput } from './conv3d_backprop_input';\nimport { op } from './operation';\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n    const $x = convertToTensor(x, 'x', 'conv3dTranspose');\n    const $filter = convertToTensor(filter, 'filter', 'conv3dTranspose');\n    return conv3DBackpropInput(outputShape, $x, $filter, strides, pad);\n}\nexport const conv3dTranspose = op({ conv3dTranspose_ });\n//# sourceMappingURL=conv3d_transpose.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cos } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cos_(x) {\n    const $x = convertToTensor(x, 'x', 'cos');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Cos, inputs);\n}\nexport const cos = op({ cos_ });\n//# sourceMappingURL=cos.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cosh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cosh_(x) {\n    const $x = convertToTensor(x, 'x', 'cosh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Cosh, inputs);\n}\nexport const cosh = op({ cosh_ });\n//# sourceMappingURL=cosh.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cumsum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Scan'}\n */\nfunction cumsum_(x, axis = 0, exclusive = false, reverse = false) {\n    const $x = convertToTensor(x, 'x', 'cumsum');\n    const inputs = { x: $x };\n    const attrs = { axis, exclusive, reverse };\n    return ENGINE.runKernel(Cumsum, inputs, attrs);\n}\nexport const cumsum = op({ cumsum_ });\n//# sourceMappingURL=cumsum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DenseBincount } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1 or rank 2.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n * @param binaryOutput Optional. Whether the kernel should count the appearance\n *     or number of occurrences. Defaults to False.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction denseBincount_(x, weights, size, binaryOutput = false) {\n    const $x = convertToTensor(x, 'x', 'denseBincount');\n    const $weights = convertToTensor(weights, 'weights', 'denseBincount');\n    util.assert($x.dtype === 'int32', () => `Error in denseBincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    util.assert($x.rank <= 2, () => `Error in denseBincount: input must be at most rank 2, but got ` +\n        `rank ${$x.rank}.`);\n    util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    util.assert($weights.size === $x.size || $weights.size === 0, () => `Error in denseBincount: weights must have the same shape as x or ` +\n        `0-length, but got x shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size, binaryOutput };\n    return ENGINE.runKernel(DenseBincount, inputs, attrs);\n}\nexport const denseBincount = op({ denseBincount_ });\n//# sourceMappingURL=dense_bincount.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthToSpace } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction depthToSpace_(x, blockSize, dataFormat = 'NHWC') {\n    const $x = convertToTensor(x, 'x', 'depthToSpace');\n    const inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n    util.assert(inputHeight * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputHeight} and ${blockSize}  for depthToSpace with input shape\n    ${$x.shape}`);\n    util.assert(inputWidth * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputWidth} and ${blockSize} for depthToSpace with input shape\n        ${$x.shape}`);\n    util.assert((inputDepth % (blockSize * blockSize) === 0), () => `Dimension size must be evenly divisible by ${blockSize * blockSize} but is ${inputDepth} for depthToSpace with input shape ${$x.shape}`);\n    const inputs = { x: $x };\n    const attrs = { blockSize, dataFormat };\n    return ENGINE.runKernel(DepthToSpace, inputs, attrs);\n}\nexport const depthToSpace = op({ depthToSpace_ });\n//# sourceMappingURL=depth_to_space.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNative } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n    const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    util.assert(x4D.shape[3] === $filter.shape[2], () => `Error in depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in depthwiseConv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(DepthwiseConv2dNative, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const depthwiseConv2d = op({ depthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Diag } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n */\nfunction diag_(x) {\n    const $x = convertToTensor(x, 'x', 'diag');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Diag, inputs);\n}\nexport const diag = op({ diag_ });\n//# sourceMappingURL=diag.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Dilation2D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the grayscale dilation over the input `x`.\n *\n * @param x The input tensor, rank 3 or rank 4 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter tensor, rank 3, of shape\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat Specify the data format of the input and output data.\n *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the\n *      default format \"NHWC\", the data is stored in the order of: [batch,\n *      height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`\n *     is a single number, then `dilationHeight == dilationWidth`. If it is\n *     greater than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction dilation2d_(x, filter, strides, pad, dilations = [1, 1], dataFormat = 'NHWC') {\n    const $x = convertToTensor(x, 'x', 'dilation2d');\n    const $filter = convertToTensor(filter, 'filter', 'dilation2d');\n    util.assert($x.rank === 3 || $x.rank === 4, () => `Error in dilation2d: input must be rank 3 or 4, but got rank ` +\n        `${$x.rank}.`);\n    util.assert($filter.rank === 3, () => `Error in dilation2d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    util.assert(dataFormat === 'NHWC', () => `Error in dilation2d: Only NHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n        reshapedTo4D = true;\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Dilation2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const dilation2d = op({ dilation2d_ });\n//# sourceMappingURL=dilation2d.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(inShape, outShape) {\n    const inRank = inShape.length;\n    const dims = [];\n    for (let i = 0; i < inRank; i++) {\n        const dim = inRank - 1 - i;\n        const a = inShape[dim] || 1;\n        const b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nexport function getReductionAxes(inShape, outShape) {\n    const result = [];\n    for (let i = 0; i < outShape.length; i++) {\n        const inDim = inShape[inShape.length - i - 1];\n        const outAxis = outShape.length - i - 1;\n        const outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nexport function assertAndGetBroadcastShape(shapeA, shapeB) {\n    const result = [];\n    const l = Math.max(shapeA.length, shapeB.length);\n    for (let i = 0; i < l; i++) {\n        let a = shapeA[shapeA.length - i - 1];\n        if (a == null) {\n            a = 1;\n        }\n        let b = shapeB[shapeB.length - i - 1];\n        if (b == null) {\n            b = 1;\n        }\n        if (a === 1) {\n            result.unshift(b);\n        }\n        else if (b === 1) {\n            result.unshift(a);\n        }\n        else if (a !== b) {\n            const errMsg = `Operands could not be broadcast together with shapes ` +\n                `${shapeA} and ${shapeB}.`;\n            throw Error(errMsg);\n        }\n        else {\n            result.unshift(a);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=broadcast_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Equal } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction equal_(a, b) {\n    let $a = convertToTensor(a, 'a', 'equal');\n    let $b = convertToTensor(b, 'b', 'equal');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Equal, inputs);\n}\nexport const equal = op({ equal_ });\n//# sourceMappingURL=equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Select } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert, assertShapesMatch } from '../util';\nimport { broadcastTo } from './broadcast_to';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_(condition, a, b) {\n    const $a = convertToTensor(a, 'a', 'where');\n    const $b = convertToTensor(b, 'b', 'where');\n    const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n    // TODO: move this logic to forward function when the broadcastTo op is\n    // implemented in WASM.\n    // Find the broadcastable shape for $a and $b.\n    const broadcastShape = assertAndGetBroadcastShape($a.shape, $b.shape);\n    const $broadcastedA = broadcastTo($a, broadcastShape);\n    const $broadcastedB = broadcastTo($b, broadcastShape);\n    if ($condition.rank === 1) {\n        // If condition rank is 1, then the first dimension must match the size of\n        // condition.\n        assert($condition.shape[0] === $a.shape[0], () => 'The first dimension of `a` must match the size of `condition`.');\n    }\n    if ($condition.rank !== 1) {\n        // A must have the same shape as condition.\n        assertShapesMatch($condition.shape, $broadcastedB.shape, 'Error in where: ');\n    }\n    const inputs = {\n        condition: $condition,\n        t: $broadcastedA,\n        e: $broadcastedB\n    };\n    return ENGINE.runKernel(Select, inputs);\n}\nexport const where = op({ where_ });\n//# sourceMappingURL=where.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ZerosLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_(x) {\n    const $x = convertToTensor(x, 'x', 'zerosLike');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(ZerosLike, inputs);\n}\nexport const zerosLike = op({ zerosLike_ });\n//# sourceMappingURL=zeros_like.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { div } from './div';\nimport { equal } from './equal';\nimport { op } from './operation';\nimport { where } from './where';\nimport { zerosLike } from './zeros_like';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction divNoNan_(a, b) {\n    // TODO: Make this into its own kernel.\n    let $a = convertToTensor(a, 'a', 'div');\n    let $b = convertToTensor(b, 'b', 'div');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const divResult = div($a, $b);\n    const zeros = zerosLike(divResult);\n    const bEqualsZero = equal($b, zeros);\n    return where(bEqualsZero, zeros, divResult);\n}\nexport const divNoNan = op({ divNoNan_ });\n//# sourceMappingURL=div_no_nan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { matMul } from './mat_mul';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction dot_(t1, t2) {\n    const $t1 = convertToTensor(t1, 't1', 'dot');\n    const $t2 = convertToTensor(t2, 't2', 'dot');\n    util.assert(($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2), () => `Error in dot: inputs must all be rank 1 or 2, but got ranks ` +\n        `${$t1.rank} and ${$t2.rank}.`);\n    const t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n    const t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n    util.assert(t1Inner === t2Inner, () => `Error in dot: inner dimensions of inputs must match, but got ` +\n        `${t1Inner} and ${t2Inner}.`);\n    if ($t1.rank === 1 && $t2.rank === 1) {\n        const t12D = reshape($t1, [1, -1]);\n        const t22D = reshape($t2, [-1, 1]);\n        const t1t2 = matMul(t12D, t22D);\n        return reshape(t1t2, []);\n    }\n    else if ($t1.rank === 1 && $t2.rank === 2) {\n        const t12D = reshape($t1, [1, -1]);\n        const t22D = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = matMul(t12D, t22D);\n        return reshape(t1t2, [t1t2.size]);\n    }\n    else if ($t1.rank === 2 && $t2.rank === 1) {\n        const t22D = reshape($t2, [-1, 1]);\n        const t1t2 = matMul($t1, t22D);\n        return reshape(t1t2, [t1t2.size]);\n    }\n    else {\n        const t22D = reshape($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = matMul($t1, t22D);\n        return t1t2;\n    }\n}\nexport const dot = op({ dot_ });\n//# sourceMappingURL=dot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Elu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction elu_(x) {\n    const $x = convertToTensor(x, 'x', 'elu');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Elu, inputs);\n}\nexport const elu = op({ elu_ });\n//# sourceMappingURL=elu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Erf } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction erf_(x) {\n    let $x = convertToTensor(x, 'x', 'erf');\n    util.assert($x.dtype === 'int32' || $x.dtype === 'float32', () => 'Input dtype must be `int32` or `float32`.');\n    if ($x.dtype === 'int32') {\n        $x = cast($x, 'float32');\n    }\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Erf, inputs);\n}\nexport const erf = op({ erf_ });\n//# sourceMappingURL=erf.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Exp } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_(x) {\n    const $x = convertToTensor(x, 'x', 'exp');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Exp, inputs);\n}\nexport const exp = op({ exp_ });\n//# sourceMappingURL=exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ExpandDims } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n    util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n    const inputs = { input: $x };\n    const attrs = { dim: axis };\n    return ENGINE.runKernel(ExpandDims, inputs, attrs);\n}\nexport const expandDims = op({ expandDims_ });\n//# sourceMappingURL=expand_dims.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Expm1 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction expm1_(x) {\n    const $x = convertToTensor(x, 'x', 'expm1');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Expm1, inputs);\n}\nexport const expm1 = op({ expm1_ });\n//# sourceMappingURL=expm1.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_(x, reps) {\n    const $x = convertToTensor(x, 'x', 'tile', 'string_or_numeric');\n    util.assert($x.rank === reps.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of reps ${reps}.`);\n    const inputs = { x: $x };\n    const attrs = { reps };\n    return ENGINE.runKernel(Tile, inputs, attrs);\n}\nexport const tile = op({ tile_ });\n//# sourceMappingURL=tile.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { expandDims } from './expand_dims';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { tile } from './tile';\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction eye_(numRows, numColumns, batchShape, dtype = 'float32') {\n    if (numColumns == null) {\n        numColumns = numRows;\n    }\n    const buff = buffer([numRows, numColumns], dtype);\n    const n = numRows <= numColumns ? numRows : numColumns;\n    for (let i = 0; i < n; ++i) {\n        buff.set(1, i, i);\n    }\n    const out = reshape(buff.toTensor(), [numRows, numColumns]);\n    if (batchShape == null) {\n        return out;\n    }\n    else {\n        if (batchShape.length === 1) {\n            return tile(expandDims(out, 0), [batchShape[0], 1, 1]);\n        }\n        else if (batchShape.length === 2) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return tile(expandDims(expandDims(out, 0), 0), [batchShape[0], batchShape[1], 1, 1]);\n        }\n        else if (batchShape.length === 3) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return tile(expandDims(expandDims(expandDims(out, 0), 0), 0), [\n                batchShape[0], batchShape[1], batchShape[2], 1, 1\n            ]);\n        }\n        else {\n            throw new Error(`eye() currently supports only 1D and 2D ` +\n                // tslint:disable-next-line:no-any\n                `batchShapes, but received ${batchShape.length}D.`);\n        }\n    }\n}\nexport const eye = op({ eye_ });\n//# sourceMappingURL=eye.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Fill } from '../kernel_names';\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill(shape, value, dtype) {\n    const attrs = { shape, value, dtype };\n    return ENGINE.runKernel(Fill, {}, attrs);\n}\nexport { fill };\n//# sourceMappingURL=fill.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Floor } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction floor_(x) {\n    const $x = convertToTensor(x, 'x', 'floor');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Floor, inputs);\n}\nexport const floor = op({ floor_ });\n//# sourceMappingURL=floor.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GatherV2 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction gather_(x, indices, axis = 0, batchDims = 0) {\n    const $x = convertToTensor(x, 'x', 'gather');\n    const $indices = convertToTensor(indices, 'indices', 'gather', 'int32');\n    const inputs = { x: $x, indices: $indices };\n    const attrs = { axis, batchDims };\n    return ENGINE.runKernel(GatherV2, inputs, attrs);\n}\nexport const gather = op({ gather_ });\n//# sourceMappingURL=gather.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Greater } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_(a, b) {\n    let $a = convertToTensor(a, 'a', 'greater');\n    let $b = convertToTensor(b, 'b', 'greater');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Greater, inputs);\n}\nexport const greater = op({ greater_ });\n//# sourceMappingURL=greater.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GreaterEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greaterEqual_(a, b) {\n    let $a = convertToTensor(a, 'a', 'greaterEqual');\n    let $b = convertToTensor(b, 'b', 'greaterEqual');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(GreaterEqual, inputs);\n}\nexport const greaterEqual = op({ greaterEqual_ });\n//# sourceMappingURL=greater_equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Imag } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction imag_(input) {\n    const $input = convertToTensor(input, 'input', 'imag');\n    const inputs = { input: $input };\n    return ENGINE.runKernel(Imag, inputs);\n}\nexport const imag = op({ imag_ });\n//# sourceMappingURL=imag.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsFinite } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isFinite_(x) {\n    const $x = convertToTensor(x, 'x', 'isFinite');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(IsFinite, inputs);\n}\nexport const isFinite = op({ isFinite_ });\n//# sourceMappingURL=is_finite.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsInf } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isInf_(x) {\n    const $x = convertToTensor(x, 'x', 'isInf');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(IsInf, inputs);\n}\nexport const isInf = op({ isInf_ });\n//# sourceMappingURL=is_inf.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { IsNan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isNaN_(x) {\n    const $x = convertToTensor(x, 'x', 'isNaN');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(IsNan, inputs);\n}\nexport const isNaN = op({ isNaN_ });\n//# sourceMappingURL=is_nan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LeakyRelu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction leakyRelu_(x, alpha = 0.2) {\n    const $x = convertToTensor(x, 'x', 'leakyRelu');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return ENGINE.runKernel(LeakyRelu, inputs, attrs);\n}\nexport const leakyRelu = op({ leakyRelu_ });\n//# sourceMappingURL=leaky_relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Less } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction less_(a, b) {\n    let $a = convertToTensor(a, 'a', 'less');\n    let $b = convertToTensor(b, 'b', 'less');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Less, inputs);\n}\nexport const less = op({ less_ });\n//# sourceMappingURL=less.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LessEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_(a, b) {\n    let $a = convertToTensor(a, 'a', 'lessEqual');\n    let $b = convertToTensor(b, 'b', 'lessEqual');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(LessEqual, inputs);\n}\nexport const lessEqual = op({ lessEqual_ });\n//# sourceMappingURL=less_equal.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LinSpace } from '../kernel_names';\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function linspace(start, stop, num) {\n    if (num <= 0) {\n        throw new Error('The number of values should be positive.');\n    }\n    const attrs = { start, stop, num };\n    return ENGINE.runKernel(LinSpace, {}, attrs);\n}\n//# sourceMappingURL=linspace.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRN } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction localResponseNormalization_(x, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\n    const $x = convertToTensor(x, 'x', 'localResponseNormalization');\n    util.assert($x.rank === 4 || $x.rank === 3, () => `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${$x.rank}.`);\n    util.assert(util.isInt(depthRadius), () => `Error in localResponseNormalization: depthRadius must be an ` +\n        `integer but got depthRadius ${depthRadius}.`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    const inputs = { x: x4D };\n    const attrs = { depthRadius, bias, alpha, beta };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(LRN, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    else {\n        return res;\n    }\n}\nexport const localResponseNormalization = op({ localResponseNormalization_ });\n//# sourceMappingURL=local_response_normalization.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Log } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log_(x) {\n    const $x = convertToTensor(x, 'x', 'log');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Log, inputs);\n}\nexport const log = op({ log_ });\n//# sourceMappingURL=log.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Log1p } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log1p_(x) {\n    const $x = convertToTensor(x, 'x', 'log1p');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Log1p, inputs);\n}\nexport const log1p = op({ log1p_ });\n//# sourceMappingURL=log1p.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { Tensor, Variable } from './tensor';\nimport { convertToTensor, convertToTensorArray } from './tensor_util_env';\nimport * as util from './util';\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grad(f) {\n    util.assert(util.isFunction(f), () => 'The f passed in grad(f) must be a function');\n    return (x, dy) => {\n        // x can be of any dtype, thus null as the last argument.\n        const $x = convertToTensor(x, 'x', 'tf.grad', 'string_or_numeric');\n        const $dy = (dy != null) ? convertToTensor(dy, 'dy', 'tf.grad') : null;\n        return ENGINE.tidy(() => {\n            const { value, grads } = ENGINE.gradients(() => f($x), [$x], $dy);\n            if ($dy != null) {\n                util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            checkGrads(grads);\n            return grads[0];\n        });\n    };\n}\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grads(f) {\n    util.assert(util.isFunction(f), () => 'The f passed in grads(f) must be a function');\n    return (args, dy) => {\n        util.assert(Array.isArray(args), () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n        // args can be of any dtype, thus null as the last argument.\n        const $args = convertToTensorArray(args, 'args', 'tf.grads', 'string_or_numeric');\n        const $dy = (dy != null) ? convertToTensor(dy, 'dy', 'tf.grads') : null;\n        return ENGINE.tidy(() => {\n            const { value, grads } = ENGINE.gradients(() => f(...$args), $args, $dy);\n            if ($dy != null) {\n                util.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(grads);\n            return grads;\n        });\n    };\n}\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrad(f) {\n    util.assert(util.isFunction(f), () => 'The f passed in valueAndGrad(f) must be a function');\n    return (x, dy) => {\n        util.assert(x instanceof Tensor, () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n        util.assert(dy == null || dy instanceof Tensor, () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n        const { grads, value } = ENGINE.gradients(() => f(x), [x], dy);\n        checkGrads(grads);\n        return { grad: grads[0], value };\n    };\n}\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrads(f) {\n    util.assert(util.isFunction(f), () => 'The f passed in valueAndGrads(f) must be a function');\n    return (args, dy) => {\n        util.assert(Array.isArray(args) && args.every(arg => arg instanceof Tensor), () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n        util.assert(dy == null || dy instanceof Tensor, () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n        const res = ENGINE.gradients(() => f(...args), args, dy);\n        if (dy != null) {\n            util.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n        }\n        checkGrads(res.grads);\n        return res;\n    };\n}\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction variableGrads(f, varList) {\n    util.assert(util.isFunction(f), () => 'The f passed in variableGrads(f) must be a function');\n    util.assert(varList == null ||\n        Array.isArray(varList) && varList.every(v => v instanceof Variable), () => 'The varList passed in variableGrads(f, varList) must be an array ' +\n        'of variables');\n    const specifiedVarList = varList != null;\n    if (!specifiedVarList) {\n        // Get all of the trainable variables.\n        varList = [];\n        for (const varName in ENGINE.registeredVariables) {\n            varList.push(ENGINE.registeredVariables[varName]);\n        }\n    }\n    const specifiedNonTrainable = specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n    // Prune non-trainable variables.\n    const originalVarCount = varList.length;\n    varList = varList.filter(variable => variable.trainable);\n    util.assert(varList.length > 0, () => `variableGrads() expects at least one of the input variables to ` +\n        `be trainable, but none of the ${originalVarCount} variables is ` +\n        `trainable.`);\n    const allowNoGradients = true;\n    const { value, grads } = ENGINE.gradients(f, varList, null, allowNoGradients);\n    util.assert(grads.some(g => g != null), () => 'Cannot find a connection between any variable and the result of ' +\n        'the loss function y=f(x). Please make sure the operations that ' +\n        'use variables are inside the function f passed to minimize().');\n    util.assert(value.rank === 0, () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n        `returned a rank-${value.rank} tensor`);\n    const namedGrads = {};\n    varList.forEach((v, i) => {\n        if (grads[i] != null) {\n            namedGrads[v.name] = grads[i];\n        }\n    });\n    if (specifiedNonTrainable != null) {\n        // If varList is explicitly provided and contains non-trainable values,\n        // add them to the returned gradients with `null` values.\n        specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n    }\n    return { value, grads: namedGrads };\n}\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction customGrad(f) {\n    return ENGINE.customGrad(f);\n}\nfunction checkGrads(grads) {\n    const numNullGradients = grads.filter(g => g == null).length;\n    if (numNullGradients > 0) {\n        throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n    }\n}\nexport { customGrad, variableGrads, valueAndGrad, valueAndGrads, grad, grads, };\n//# sourceMappingURL=gradients.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Neg } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_(x) {\n    const $x = convertToTensor(x, 'x', 'neg');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Neg, inputs);\n}\nexport const neg = op({ neg_ });\n//# sourceMappingURL=neg.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Softplus } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction softplus_(x) {\n    const $x = convertToTensor(x, 'x', 'softplus');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Softplus, inputs);\n}\nexport const softplus = op({ softplus_ });\n//# sourceMappingURL=softplus.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../gradients';\nimport { convertToTensor } from '../tensor_util_env';\nimport { mul } from './mul';\nimport { neg } from './neg';\nimport { op } from './operation';\nimport { sigmoid } from './sigmoid';\nimport { softplus } from './softplus';\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction logSigmoid_(x) {\n    const $x = convertToTensor(x, 'x', 'logSigmoid');\n    // Use a custom gradient to maintain previous implementation.\n    // There is no LogSigmoid kernel in TF so we can't use engine.runKernel\n    // directly\n    const customOp = customGrad((x) => {\n        // TODO(yassogba) we can remove the chained softplus call here only\n        // after backends have modualrized softplus at which point we can call\n        // engine runKernel(..., Sotfplus, ...) directly.\n        const value = neg(softplus(neg(x)));\n        const gradFunc = (dy) => {\n            const derX = mul(dy, sigmoid(neg(x)));\n            return derX;\n        };\n        return { value, gradFunc };\n    });\n    return customOp($x);\n}\nexport const logSigmoid = op({ logSigmoid_ });\n//# sourceMappingURL=log_sigmoid.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Max } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'max');\n    const inputs = { x: $x };\n    const attrs = { reductionIndices: axis, keepDims };\n    return ENGINE.runKernel(Max, inputs, attrs);\n}\nexport const max = op({ max_ });\n//# sourceMappingURL=max.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sub } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_(a, b) {\n    let $a = convertToTensor(a, 'a', 'sub');\n    let $b = convertToTensor(b, 'b', 'sub');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Sub, inputs);\n}\nexport const sub = op({ sub_ });\n//# sourceMappingURL=sub.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_(x, axis = null, keepDims = false) {\n    let $x = convertToTensor(x, 'x', 'sum');\n    if ($x.dtype === 'bool') {\n        $x = cast($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(Sum, inputs, attrs);\n}\nexport const sum = op({ sum_ });\n//# sourceMappingURL=sum.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../gradients';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { exp } from './exp';\nimport { log } from './log';\nimport { max } from './max';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { sub } from './sub';\nimport { sum } from './sum';\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction logSoftmax_(logits, axis = -1) {\n    const $logits = convertToTensor(logits, 'logits', 'logSoftmax');\n    if (axis === -1) {\n        axis = $logits.rank - 1;\n    }\n    if (axis !== $logits.rank - 1) {\n        throw Error('Log Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and axis was ${axis}`);\n    }\n    // const forward: ForwardFunc<Tensor> = (backend, save) => {\n    //   const keepDims = true;\n    //   const xMax = max(logits, axis, true);\n    //   const shifted = sub(logits, xMax);\n    //   const value =\n    //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n    //       keepDims)));\n    //   save([value]);\n    //   return value;\n    // };\n    // Use a custom gradient for numerical stability.\n    const customOp = customGrad((logits, save) => {\n        const keepDims = true;\n        const xMax = max(logits, axis, true);\n        const shifted = sub(logits, xMax);\n        const value = sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis, keepDims)));\n        save([value]);\n        const gradFunc = (dy, saved) => {\n            const [value] = saved;\n            const keepDims = true;\n            const softmax = exp(value);\n            return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n        };\n        return { value, gradFunc };\n    });\n    return customOp($logits);\n    // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n    // const inputs: LogSoftmaxInputs = {logits: $logits};\n    // const attrs: LogSoftmaxAttrs = {axis};\n    // return ENGINE.runKernel(\n    //            LogSoftmax, inputs as {} as NamedTensorMap,\n    //            attrs as {} as NamedAttrMap);\n}\nexport const logSoftmax = op({ logSoftmax_ });\n//# sourceMappingURL=log_softmax.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nexport function axesAreInnerMostDims(axes, rank) {\n    for (let i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function combineLocations(outputLoc, reduceLoc, axes) {\n    const rank = outputLoc.length + reduceLoc.length;\n    const loc = [];\n    let outIdx = 0;\n    let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nexport function computeOutAndReduceShapes(aShape, axes) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    const reduceShape = axes.map(dim => aShape[dim]);\n    return [outShape, reduceShape];\n}\nexport function expandShapeToKeepDim(shape, axes) {\n    const reduceSubShape = axes.map(x => 1);\n    return combineLocations(shape, reduceSubShape, axes);\n}\nexport function assertAxesAreInnerMostDims(msg, axes, rank) {\n    util.assert(axesAreInnerMostDims(axes, rank), () => `${msg} supports only inner-most axes for now. ` +\n        `Got axes ${axes} and rank-${rank} input.`);\n}\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nexport function getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    const result = [];\n    for (let i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(axis => result.push(axis));\n    return result;\n}\n/** Returns the axes permutation that undoes the original permutation. */\nexport function getUndoAxesPermutation(axes) {\n    return axes.map((axis, i) => [i, axis])\n        .sort((a, b) => a[1] - b[1])\n        .map(x => x[0]);\n}\nexport function getInnerMostAxes(numAxes, rank) {\n    const res = [];\n    for (let i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\n//# sourceMappingURL=axis_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { add } from './add';\nimport { expandShapeToKeepDim } from './axis_util';\nimport { exp } from './exp';\nimport { log } from './log';\nimport { max } from './max';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { sub } from './sub';\nimport { sum } from './sum';\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction logSumExp_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'logSumExp');\n    const axes = parseAxisParam(axis, $x.shape);\n    const xMax = max($x, axes, true /* keepDims */);\n    const a = sub($x, xMax);\n    const b = exp(a);\n    const c = sum(b, axes);\n    const d = log(c);\n    const res = add(reshape(xMax, d.shape), d);\n    if (keepDims) {\n        const newShape = expandShapeToKeepDim(res.shape, axes);\n        return reshape(res, newShape);\n    }\n    return res;\n}\nexport const logSumExp = op({ logSumExp_ });\n//# sourceMappingURL=log_sum_exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalAnd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalAnd_(a, b) {\n    const $a = convertToTensor(a, 'a', 'logicalAnd', 'bool');\n    const $b = convertToTensor(b, 'b', 'logicalAnd', 'bool');\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(LogicalAnd, inputs);\n}\nexport const logicalAnd = op({ logicalAnd_ });\n//# sourceMappingURL=logical_and.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalNot } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalNot_(x) {\n    const $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(LogicalNot, inputs);\n}\nexport const logicalNot = op({ logicalNot_ });\n//# sourceMappingURL=logical_not.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LogicalOr } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalOr_(a, b) {\n    const $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n    const $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(LogicalOr, inputs);\n}\nexport const logicalOr = op({ logicalOr_ });\n//# sourceMappingURL=logical_or.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { logicalAnd } from './logical_and';\nimport { logicalNot } from './logical_not';\nimport { logicalOr } from './logical_or';\nimport { op } from './operation';\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_(a, b) {\n    const $a = convertToTensor(a, 'a', 'logicalXor', 'bool');\n    const $b = convertToTensor(b, 'b', 'logicalXor', 'bool');\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    // x ^ y = (x | y) & ~(x & y)\n    return logicalAnd(logicalOr(a, b), logicalNot(logicalAnd(a, b)));\n}\nexport const logicalXor = op({ logicalXor_ });\n//# sourceMappingURL=logical_xor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'maxPool');\n    const dilations = 1;\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in maxPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(MaxPool, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const maxPool = op({ maxPool_ });\n//# sourceMappingURL=max_pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool3D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPool3d_(x, filterSize = [1, 1, 1], strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = convertToTensor(x, 'x', 'maxPool3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    util.assert(x5D.rank === 5, () => `Error in maxPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    util.assert(dataFormat === 'NDHWC', () => `Error in maxPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in maxPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(MaxPool3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nexport const maxPool3d = op({ maxPool3d_ });\n//# sourceMappingURL=max_pool_3d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPoolWithArgmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the 2D max pooling of an image with Argmax index.\n * The indices in argmax are flattened, so that a maximum value at position `[b,\n * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if\n * include_batch_in_index is False; `((b * height + y) * width + x) * channels\n * +c` if include_batch_in_index is True.\n *\n * The indices returned are always in `[0, height) x [0, width)` before\n * flattening.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param includeBatchIndex Defaults to False. Whether to include batch\n *    dimension in flattened index of argmax.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPoolWithArgmax_(x, filterSize, strides, pad, includeBatchInIndex = false) {\n    const $x = convertToTensor(x, 'x', 'maxPoolWithArgmax');\n    const inputs = { x: $x };\n    const attrs = { filterSize, strides, pad, includeBatchInIndex };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = ENGINE.runKernel(MaxPoolWithArgmax, inputs, attrs);\n    return { result: result[0], indexes: result[1] };\n}\nexport const maxPoolWithArgmax = op({ maxPoolWithArgmax_ });\n//# sourceMappingURL=max_pool_with_argmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Maximum } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction maximum_(a, b) {\n    let $a = convertToTensor(a, 'a', 'maximum');\n    let $b = convertToTensor(b, 'b', 'maximum');\n    [$a, $b] = makeTypesMatch($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = cast($a, 'int32');\n        $b = cast($b, 'int32');\n    }\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Maximum, inputs);\n}\nexport const maximum = op({ maximum_ });\n//# sourceMappingURL=maximum.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Mean } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction mean_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'mean');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(Mean, inputs, attrs);\n}\nexport const mean = op({ mean_ });\n//# sourceMappingURL=mean.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Min } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction min_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'min');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(Min, inputs, attrs);\n}\nexport const min = op({ min_ });\n//# sourceMappingURL=min.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Minimum } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction minimum_(a, b) {\n    let $a = convertToTensor(a, 'a', 'minimum');\n    let $b = convertToTensor(b, 'b', 'minimum');\n    [$a, $b] = makeTypesMatch($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = cast($a, 'int32');\n        $b = cast($b, 'int32');\n    }\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Minimum, inputs);\n}\nexport const minimum = op({ minimum_ });\n//# sourceMappingURL=minimum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MirrorPad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Pads a `tf.Tensor` using mirror padding.\n *\n * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.\n *\n * ```js\n * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);\n * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * In \"reflect\" mode, the padded regions do not include the borders,\n * while in \"symmetric\" mode the padded regions do include the borders.\n * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,\n * then the output is `[1, 2, 3, 2, 1]` in \"reflect\" mode, and\n * `[1, 2, 3, 3, 2]` in \"symmetric\" mode.\n * If `mode` is \"reflect\" then both `paddings[D, 0]` and `paddings[D, 1]`\n * must be no greater than `x.shape[D] - 1`. If mode is \"symmetric\"\n * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than\n * `x.shape[D]`\n * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction mirrorPad_(x, paddings, mode) {\n    util.assert(mode === 'reflect' || mode === 'symmetric', () => `Invalid mode. Mode must be either reflect or symmetric. ` +\n        `Got ${mode}.`);\n    const $x = convertToTensor(x, 'x', 'mirrorPad');\n    if ($x.rank === 0) {\n        throw new Error('mirrorPad(scalar) is not defined. ' +\n            'Pass non-scalar to mirrorPad');\n    }\n    util.assert(paddings.length === $x.rank, () => `Padding doesn't match input. Must be ${$x.rank}. ` +\n        `Got ${paddings.length}.`);\n    const shapeOffset = mode === 'reflect' ? 1 : 0;\n    for (let i = 0; i < $x.rank; i++) {\n        util.assert(paddings[i].length === 2, () => `Invalid number of paddings. Must be length of 2 each.`);\n        util.assert(paddings[i][0] >= 0 && paddings[i][0] <= $x.shape[i] - shapeOffset &&\n            paddings[i][1] >= 0 && paddings[i][1] <= $x.shape[i] - shapeOffset, () => `Padding in dimension ${i} cannot be greater than or equal ` +\n            `to ${$x.shape[i] - shapeOffset} or less than 0 for input of ` +\n            `shape ${$x.shape}`);\n    }\n    const attrs = { paddings, mode };\n    const inputs = { x: $x };\n    return ENGINE.runKernel(MirrorPad, inputs, attrs);\n}\nexport const mirrorPad = op({ mirrorPad_ });\n//# sourceMappingURL=mirror_pad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Mod } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mod_(a, b) {\n    let $a = convertToTensor(a, 'a', 'mod');\n    let $b = convertToTensor(b, 'b', 'mod');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Mod, inputs);\n}\nexport const mod = op({ mod_ });\n//# sourceMappingURL=mod.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction square_(x) {\n    const $x = convertToTensor(x, 'x', 'square');\n    const attrs = {};\n    return ENGINE.runKernel('Square', { x: $x }, attrs);\n}\nexport const square = op({ square_ });\n//# sourceMappingURL=square.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { expandShapeToKeepDim } from './axis_util';\nimport { cast } from './cast';\nimport { mean } from './mean';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { square } from './square';\nimport { sub } from './sub';\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction moments_(x, axis = null, keepDims = false) {\n    x = convertToTensor(x, 'x', 'moments');\n    const axes = parseAxisParam(axis, x.shape);\n    const xMean = mean(x, axes, keepDims);\n    let keepDimsShape = xMean.shape;\n    if (!keepDims) {\n        keepDimsShape = expandShapeToKeepDim(xMean.shape, axes);\n    }\n    const devSquared = square(sub(cast(x, 'float32'), reshape(xMean, keepDimsShape)));\n    const variance = mean(devSquared, axes, keepDims);\n    return { mean: xMean, variance };\n}\nexport const moments = op({ moments_ });\n//# sourceMappingURL=moments.js.map","import { convertToTensor, convertToTensorArray } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction multiRNNCell_(lstmCells, data, c, h) {\n    const $data = convertToTensor(data, 'data', 'multiRNNCell');\n    const $c = convertToTensorArray(c, 'c', 'multiRNNCell');\n    const $h = convertToTensorArray(h, 'h', 'multiRNNCell');\n    let input = $data;\n    const newStates = [];\n    for (let i = 0; i < lstmCells.length; i++) {\n        const output = lstmCells[i](input, $c[i], $h[i]);\n        newStates.push(output[0]);\n        newStates.push(output[1]);\n        input = output[1];\n    }\n    const newC = [];\n    const newH = [];\n    for (let i = 0; i < newStates.length; i += 2) {\n        newC.push(newStates[i]);\n        newH.push(newStates[i + 1]);\n    }\n    return [newC, newH];\n}\nexport const multiRNNCell = op({ multiRNNCell_ });\n//# sourceMappingURL=multi_rnn_cell.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Multinomial } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction multinomial_(logits, numSamples, seed, normalized = false) {\n    const $logits = convertToTensor(logits, 'logits', 'multinomial');\n    const numOutcomes = $logits.size;\n    const origRank = $logits.rank;\n    if (numOutcomes < 2) {\n        throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ` +\n            `${numOutcomes}.`);\n    }\n    if (origRank > 2) {\n        throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n    }\n    // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n    // setting see to 0.\n    seed = seed || Math.random();\n    // The kernel only accepts (and returns) rank 2 tensors.\n    const logits2D = origRank === 1 ? reshape($logits, [1, -1]) : $logits;\n    const inputs = { logits: logits2D };\n    const attrs = { numSamples, seed, normalized };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Multinomial, inputs, attrs);\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    return origRank === 1 ? reshape(res, [res.size]) : res;\n}\nexport const multinomial = op({ multinomial_ });\n//# sourceMappingURL=multinomial.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { NotEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction notEqual_(a, b) {\n    let $a = convertToTensor(a, 'a', 'notEqual');\n    let $b = convertToTensor(b, 'b', 'notEqual');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(NotEqual, inputs);\n}\nexport const notEqual = op({ notEqual_ });\n//# sourceMappingURL=not_equal.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { makeZerosTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function zeros(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(shape, 'float32');\n        const imag = zeros(shape, 'float32');\n        return complex(real, imag);\n    }\n    const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n    return ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=zeros.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { makeOnesTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\nimport { zeros } from './zeros';\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function ones(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = ones(shape, 'float32');\n        const imag = zeros(shape, 'float32');\n        return complex(real, imag);\n    }\n    const values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n    return ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=ones.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { OnesLike } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction onesLike_(x) {\n    const $x = convertToTensor(x, 'x', 'onesLike');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(OnesLike, inputs);\n}\nexport const onesLike = op({ onesLike_ });\n//# sourceMappingURL=ones_like.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { matMul } from './mat_mul';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction outerProduct_(v1, v2) {\n    const $v1 = convertToTensor(v1, 'v1', 'outerProduct');\n    const $v2 = convertToTensor(v2, 'v2', 'outerProduct');\n    util.assert($v1.rank === 1 && $v2.rank === 1, () => `Error in outerProduct: inputs must be rank 1, but got ranks ` +\n        `${$v1.rank} and ${$v2.rank}.`);\n    const v12D = reshape($v1, [-1, 1]);\n    const v22D = reshape($v2, [1, -1]);\n    return matMul(v12D, v22D);\n}\nexport const outerProduct = op({ outerProduct_ });\n//# sourceMappingURL=outer_product.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { PadV2 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_(x, paddings, constantValue = 0) {\n    const $x = convertToTensor(x, 'x', 'pad');\n    if ($x.rank === 0) {\n        throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n    }\n    const attrs = { paddings, constantValue };\n    const inputs = { x: $x };\n    return ENGINE.runKernel(PadV2, inputs, attrs);\n}\nexport const pad = op({ pad_ });\n//# sourceMappingURL=pad.js.map","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(x, paddings, constantValue = 0) {\n    assert(paddings.length === 2, () => 'Invalid number of paddings. Must be length of 2.');\n    return pad(x, [paddings], constantValue);\n}\nexport const pad1d = op({ pad1d_ });\n//# sourceMappingURL=pad1d.js.map","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(x, paddings, constantValue = 0) {\n    assert(paddings.length === 2 && paddings[0].length === 2 &&\n        paddings[1].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return pad(x, paddings, constantValue);\n}\nexport const pad2d = op({ pad2d_ });\n//# sourceMappingURL=pad2d.js.map","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(x, paddings, constantValue = 0) {\n    assert(paddings.length === 3 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return pad(x, paddings, constantValue);\n}\nexport const pad3d = op({ pad3d_ });\n//# sourceMappingURL=pad3d.js.map","import { assert } from '../util';\nimport { op } from './operation';\nimport { pad } from './pad';\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(x, paddings, constantValue = 0) {\n    assert(paddings.length === 4 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2 &&\n        paddings[3].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return pad(x, paddings, constantValue);\n}\nexport const pad4d = op({ pad4d_ });\n//# sourceMappingURL=pad4d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SpaceToBatchND } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction spaceToBatchND_(x, blockShape, paddings) {\n    const $x = convertToTensor(x, 'x', 'spaceToBatchND');\n    util.assert($x.rank >= 1 + blockShape.length, () => `input rank ${$x.rank} should be > than [blockShape] ${blockShape.length}`);\n    util.assert(paddings.length === blockShape.length, () => `paddings.shape[0] ${paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n    util.assert($x.shape.reduce((a, b, i) => {\n        if (i > 0 && i <= blockShape.length) {\n            return a &&\n                ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                    blockShape[i - 1] ===\n                    0);\n        }\n        return a;\n    }, true), () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${paddings.toString()} must be divisible by blockShapes ${blockShape.toString()}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, paddings };\n    return ENGINE.runKernel(SpaceToBatchND, inputs, attrs);\n}\nexport const spaceToBatchND = op({ spaceToBatchND_ });\n//# sourceMappingURL=space_to_batch_nd.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { avgPool } from './avg_pool';\nimport { batchToSpaceND } from './batch_to_space_nd';\nimport * as conv_util from './conv_util';\nimport { maxPool } from './max_pool';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nimport { spaceToBatchND } from './space_to_batch_nd';\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction pool_(input, windowShape, poolingType, pad, dilations, strides) {\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    if (strides == null) {\n        strides = 1;\n    }\n    if (pad === 0) {\n        pad = 'valid';\n    }\n    const $x = convertToTensor(input, 'x', 'maxPool');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in pool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = conv_util.computePool2DInfo(x4D.shape, windowShape, strides, dilations, pad);\n    const dilation = [convInfo.dilationHeight, convInfo.dilationWidth];\n    // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n    // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n    let basePadding;\n    if (pad === 'same') {\n        basePadding = withSpaceToBatchBasePaddings([convInfo.filterHeight, convInfo.filterWidth], dilation);\n    }\n    else {\n        basePadding = [[0, 0], [0, 0]];\n    }\n    const isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n    const [adjustedPadding, adjustedCrops] = requiredSpaceToBatchPaddings([convInfo.inHeight, convInfo.inWidth], dilation, basePadding);\n    const convertedPad = isDilationOne ? pad : 'valid';\n    const convertedX = isDilationOne ? x4D : spaceToBatchND(x4D, dilation, adjustedPadding);\n    const forwardOp = poolingType === 'avg' ?\n        () => avgPool(convertedX, windowShape, strides, convertedPad) :\n        () => maxPool(convertedX, windowShape, strides, convertedPad);\n    const y = forwardOp();\n    const res = isDilationOne ? y : batchToSpaceND(y, dilation, adjustedCrops);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(inputShape, blockShape, basePadding) {\n    const padStart = basePadding.map(b => b[0]);\n    const origPadEnd = basePadding.map(b => b[1]);\n    const fullInputShape = inputShape.concat(padStart, origPadEnd);\n    const padEndExtra = blockShape.map((b, i) => (b - fullInputShape[i] % b) % b);\n    const padEnd = origPadEnd.map((s, i) => s + padEndExtra[i]);\n    const paddings = blockShape.map((_, i) => [padStart[i], padEnd[i]]);\n    const crops = blockShape.map((_, i) => [0, padEndExtra[i]]);\n    return [paddings, crops];\n}\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(filterShape, dilation) {\n    // Spatial dimensions of the filters and the upsampled filters in which we\n    // introduce (rate - 1) zeros between consecutive filter values.\n    const dilatedFilterShape = filterShape.map((s, i) => {\n        return s + (s - 1) * (dilation[i] - 1);\n    });\n    const padExtraShape = dilatedFilterShape.map(s => s - 1);\n    // When padding is odd, we pad more at end, following the same\n    // convention as conv2d.\n    const padExtraStart = padExtraShape.map(s => Math.floor(s / 2));\n    const padExtraEnd = padExtraShape.map((s, i) => s - padExtraStart[i]);\n    return padExtraShape.map((_, i) => {\n        return [padExtraStart[i], padExtraEnd[i]];\n    });\n}\nexport const pool = op({ pool_ });\n//# sourceMappingURL=pool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Pow } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction pow_(base, exp) {\n    let $base = convertToTensor(base, 'base', 'pow');\n    let $exp = convertToTensor(exp, 'exp', 'pow');\n    [$base, $exp] = makeTypesMatch($base, $exp);\n    const inputs = { a: $base, b: $exp };\n    return ENGINE.runKernel(Pow, inputs);\n}\nexport const pow = op({ pow_ });\n//# sourceMappingURL=pow.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Prelu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction prelu_(x, alpha) {\n    const $x = convertToTensor(x, 'x', 'prelu');\n    const $alpha = convertToTensor(alpha, 'alpha', 'prelu');\n    const inputs = { x: $x, alpha: $alpha };\n    return ENGINE.runKernel(Prelu, inputs);\n}\nexport const prelu = op({ prelu_ });\n//# sourceMappingURL=prelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Prod } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction prod_(x, axis = null, keepDims = false) {\n    let $x = convertToTensor(x, 'x', 'prod');\n    if ($x.dtype === 'bool') {\n        // bool is not an allowed type for the underlying kernel.\n        $x = cast($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(Prod, inputs, attrs);\n}\nexport const prod = op({ prod_ });\n//# sourceMappingURL=prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { sizeFromShape } from '../util';\nimport { op } from './operation';\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\nfunction rand_(shape, randFunction, dtype) {\n    const size = sizeFromShape(shape);\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    for (let i = 0; i < size; i++) {\n        values[i] = randFunction();\n    }\n    return ENGINE.makeTensor(values, shape, dtype);\n}\nexport const rand = op({ rand_ });\n//# sourceMappingURL=rand.js.map","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as seedrandom from 'seedrandom';\nimport { expectNumbersClose, testEpsilon } from '../test_util';\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nexport class MPRandGauss {\n    constructor(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        const seedValue = seed ? seed : Math.random();\n        this.random = seedrandom.alea(seedValue.toString());\n    }\n    /** Returns next sample from a Gaussian distribution. */\n    nextValue() {\n        if (!isNaN(this.nextVal)) {\n            const value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        let resultX, resultY;\n        let isValid = false;\n        while (!isValid) {\n            let v1, v2, s;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n    /** Returns true if less than 2-standard-deviations from the mean. */\n    isValidTruncated(value) {\n        return value <= this.upper && value >= this.lower;\n    }\n}\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nexport class RandGamma {\n    constructor(alpha, beta, dtype, seed) {\n        this.alpha = alpha;\n        this.beta = 1 / beta; // convert rate to scale parameter\n        this.dtype = dtype;\n        const seedValue = seed ? seed : Math.random();\n        this.randu = seedrandom.alea(seedValue.toString());\n        this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n        if (alpha < 1) {\n            this.d = alpha + (2 / 3);\n        }\n        else {\n            this.d = alpha - (1 / 3);\n        }\n        this.c = 1 / Math.sqrt(9 * this.d);\n    }\n    /** Returns next sample from a gamma distribution. */\n    nextValue() {\n        let x2, v0, v1, x, u, v;\n        while (true) {\n            do {\n                x = this.randn.nextValue();\n                v = 1 + (this.c * x);\n            } while (v <= 0);\n            v *= v * v;\n            x2 = x * x;\n            v0 = 1 - (0.331 * x2 * x2);\n            v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n            u = this.randu();\n            if (u < v0 || Math.log(u) < v1) {\n                break;\n            }\n        }\n        v = (1 / this.beta) * this.d * v;\n        if (this.alpha < 1) {\n            v *= Math.pow(this.randu(), 1 / this.alpha);\n        }\n        return this.convertValue(v);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n}\nexport class UniformRandom {\n    constructor(min = 0, max = 1, dtype, seed) {\n        /** Handles proper rounding for non floating point numbers. */\n        this.canReturnFloat = () => (this.dtype == null || this.dtype === 'float32');\n        this.min = min;\n        this.range = max - min;\n        this.dtype = dtype;\n        if (seed == null) {\n            seed = Math.random();\n        }\n        if (typeof seed === 'number') {\n            seed = seed.toString();\n        }\n        if (!this.canReturnFloat() && this.range <= 1) {\n            throw new Error(`The difference between ${min} - ${max} <= 1 and dtype is not float`);\n        }\n        this.random = seedrandom.alea(seed);\n    }\n    convertValue(value) {\n        if (this.canReturnFloat()) {\n            return value;\n        }\n        return Math.round(value);\n    }\n    nextValue() {\n        return this.convertValue(this.min + this.range * this.random());\n    }\n}\nexport function jarqueBeraNormalityTest(values) {\n    // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n    const n = values.length;\n    const s = skewness(values);\n    const k = kurtosis(values);\n    const jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n    // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n    // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n    const CHI_SQUARE_2DEG = 5.991;\n    if (jb > CHI_SQUARE_2DEG) {\n        throw new Error(`Invalid p-value for JB: ${jb}`);\n    }\n}\nexport function expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    const actualMean = mean(actual);\n    expectNumbersClose(actualMean, expectedMean, epsilon);\n    expectNumbersClose(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\nfunction mean(values) {\n    let sum = 0;\n    for (let i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n}\nfunction standardDeviation(values, mean) {\n    let squareDiffSum = 0;\n    for (let i = 0; i < values.length; i++) {\n        const diff = values[i] - mean;\n        squareDiffSum += diff * diff;\n    }\n    return Math.sqrt(squareDiffSum / values.length);\n}\nfunction kurtosis(values) {\n    // https://en.wikipedia.org/wiki/Kurtosis\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum4 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum4 += Math.pow(v, 4);\n    }\n    return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\nfunction skewness(values) {\n    // https://en.wikipedia.org/wiki/Skewness\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum3 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum3 += Math.pow(v, 3);\n    }\n    return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\n//# sourceMappingURL=rand_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { RandGamma } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomGamma_(shape, alpha, beta = 1, dtype = 'float32', seed) {\n    if (beta == null) {\n        beta = 1;\n    }\n    if (dtype == null) {\n        dtype = 'float32';\n    }\n    if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const rgamma = new RandGamma(alpha, beta, dtype, seed);\n    const res = buffer(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = rgamma.nextValue();\n    }\n    return res.toTensor();\n}\nexport const randomGamma = op({ randomGamma_ });\n//# sourceMappingURL=random_gamma.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { MPRandGauss } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const randGauss = new MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n    const res = buffer(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nexport const randomNormal = op({ randomNormal_ });\n//# sourceMappingURL=random_normal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { UniformRandom } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomUniform_(shape, minval = 0, maxval = 1, dtype = 'float32', seed) {\n    const res = buffer(shape, dtype);\n    const random = new UniformRandom(minval, maxval, null, seed);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = random.nextValue();\n    }\n    return res.toTensor();\n}\nexport const randomUniform = op({ randomUniform_ });\n//# sourceMappingURL=random_uniform.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Range } from '../kernel_names';\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function range(start, stop, step = 1, dtype = 'float32') {\n    if (step === 0) {\n        throw new Error('Cannot have a step of zero');\n    }\n    const attrs = { start, stop, step, dtype };\n    return ENGINE.runKernel(Range, {} /* inputs */, attrs);\n}\n//# sourceMappingURL=range.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Real } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction real_(input) {\n    const $input = convertToTensor(input, 'input', 'real');\n    const inputs = { input: $input };\n    return ENGINE.runKernel(Real, inputs);\n}\nexport const real = op({ real_ });\n//# sourceMappingURL=real.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reciprocal } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction reciprocal_(x) {\n    const $x = convertToTensor(x, 'x', 'reciprocal');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Reciprocal, inputs);\n}\nexport const reciprocal = op({ reciprocal_ });\n//# sourceMappingURL=reciprocal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Relu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_(x) {\n    const $x = convertToTensor(x, 'x', 'relu');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Relu, inputs);\n}\nexport const relu = op({ relu_ });\n//# sourceMappingURL=relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Relu6 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu6_(x) {\n    const $x = convertToTensor(x, 'x', 'relu6');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Relu6, inputs);\n}\nexport const relu6 = op({ relu6_ });\n//# sourceMappingURL=relu6.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reverse } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction reverse_(x, axis) {\n    const $x = convertToTensor(x, 'x', 'reverse');\n    const inputs = { x: $x };\n    const attrs = { dims: axis };\n    return ENGINE.runKernel(Reverse, inputs, attrs);\n}\nexport const reverse = op({ reverse_ });\n//# sourceMappingURL=reverse.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x) {\n    const $x = convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 1, () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\n    return reverse($x, 0);\n}\nexport const reverse1d = op({ reverse1d_ });\n//# sourceMappingURL=reverse_1d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x, axis) {\n    const $x = convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 2, () => `Error in reverse2D: x must be rank 2 but got rank ${$x.rank}.`);\n    return reverse($x, axis);\n}\nexport const reverse2d = op({ reverse2d_ });\n//# sourceMappingURL=reverse_2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x, axis) {\n    const $x = convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 3, () => `Error in reverse3D: x must be rank 3 but got rank ${$x.rank}.`);\n    return reverse($x, axis);\n}\nexport const reverse3d = op({ reverse3d_ });\n//# sourceMappingURL=reverse_3d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reverse } from './reverse';\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x, axis) {\n    const $x = convertToTensor(x, 'x', 'reverse');\n    util.assert($x.rank === 4, () => `Error in reverse4D: x must be rank 4 but got rank ${$x.rank}.`);\n    return reverse($x, axis);\n}\nexport const reverse4d = op({ reverse4d_ });\n//# sourceMappingURL=reverse_4d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Round } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_(x) {\n    const $x = convertToTensor(x, 'x', 'round');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Round, inputs);\n}\nexport const round = op({ round_ });\n//# sourceMappingURL=round.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Rsqrt } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction rsqrt_(x) {\n    const $x = convertToTensor(x, 'x', 'rsqrt');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Rsqrt, inputs);\n}\nexport const rsqrt = op({ rsqrt_ });\n//# sourceMappingURL=rsqrt.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isTypedArray } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function scalar(value, dtype) {\n    if (((isTypedArray(value) && dtype !== 'string') || Array.isArray(value)) &&\n        dtype !== 'complex64') {\n        throw new Error('Error creating a new Scalar: value must be a primitive ' +\n            '(number|boolean|string)');\n    }\n    if (dtype === 'string' && isTypedArray(value) &&\n        !(value instanceof Uint8Array)) {\n        throw new Error('When making a scalar from encoded string, ' +\n            'the value must be `Uint8Array`.');\n    }\n    const shape = [];\n    const inferredShape = [];\n    return makeTensor(value, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=scalar.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Selu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_(x) {\n    const $x = convertToTensor(x, 'x', 'selu');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Selu, inputs);\n}\nexport const selu = op({ selu_ });\n//# sourceMappingURL=selu.js.map","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { conv2d } from './conv2d';\nimport { depthwiseConv2d } from './depthwise_conv2d';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad, dilation = [1, 1], dataFormat = 'NHWC') {\n    const $x = convertToTensor(x, 'x', 'separableConv2d');\n    const $depthwiseFilter = convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n    const $pointwiseFilter = convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    if (dataFormat === 'NCHW') {\n        throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n            'NHWC is supported');\n    }\n    util.assert(x4D.rank === 4, () => `Error in separableConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    util.assert($depthwiseFilter.rank === 4, () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    util.assert($pointwiseFilter.rank === 4, () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    util.assert($pointwiseFilter.shape[0] === 1, () => `Error in separableConv2d: the first dimension of pointwise filter ` +\n        ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n    util.assert($pointwiseFilter.shape[1] === 1, () => `Error in separableConv2d: the second dimension of pointwise ` +\n        `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n    const inChannels = $depthwiseFilter.shape[2];\n    const channelMultiplier = $depthwiseFilter.shape[3];\n    util.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, () => `Error in separableConv2d: the third dimension of pointwise filter ` +\n        `must be ${inChannels * channelMultiplier}, ` +\n        `but got ${$pointwiseFilter.shape[2]}.`);\n    const depthwise = depthwiseConv2d(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n    const pointwiseStride = 1;\n    const res = conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const separableConv2d = op({ separableConv2d_ });\n//# sourceMappingURL=separable_conv2d.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nasync function setdiff1dAsync_(x, y) {\n    const $x = convertToTensor(x, 'x', 'setdiff1d');\n    const $y = convertToTensor(y, 'y', 'setdiff1d');\n    util.assert($x.dtype === $y.dtype, () => `x and y should have the same dtype, but got x (${$x.dtype}) and y (${$y.dtype}).`);\n    util.assert($x.rank === 1, () => `x should be 1D tensor, but got x (${$x.shape}).`);\n    util.assert($y.rank === 1, () => `y should be 1D tensor, but got y (${$y.shape}).`);\n    const xVals = await $x.data();\n    const yVals = await $y.data();\n    const ySet = new Set(yVals);\n    let outputSize = 0;\n    for (let i = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            outputSize++;\n        }\n    }\n    const buffer = new TensorBuffer([outputSize], $x.dtype);\n    const indices = new TensorBuffer([outputSize], 'int32');\n    for (let i = 0, p = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            buffer.values[p] = xVals[i];\n            indices.values[p] = i;\n            p++;\n        }\n    }\n    return [buffer.toTensor(), indices.toTensor()];\n}\nexport const setdiff1dAsync = setdiff1dAsync_;\n//# sourceMappingURL=setdiff1d_async.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sign } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sign_(x) {\n    const $x = convertToTensor(x, 'x', 'sign');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sign, inputs);\n}\nexport const sign = op({ sign_ });\n//# sourceMappingURL=sign.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sin } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sin_(x) {\n    const $x = convertToTensor(x, 'x', 'sin');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sin, inputs);\n}\nexport const sin = op({ sin_ });\n//# sourceMappingURL=sin.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sinh } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sinh_(x) {\n    const $x = convertToTensor(x, 'x', 'sinh');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sinh, inputs);\n}\nexport const sinh = op({ sinh_ });\n//# sourceMappingURL=sinh.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice1d');\n    util.assert($x.rank === 1, () => `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n    return slice($x, [begin], [size]);\n}\nexport const slice1d = op({ slice1d_ });\n//# sourceMappingURL=slice1d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice2d');\n    util.assert($x.rank === 2, () => `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n    return slice($x, begin, size);\n}\nexport const slice2d = op({ slice2d_ });\n//# sourceMappingURL=slice2d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice3d');\n    util.assert($x.rank === 3, () => `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n    return slice($x, begin, size);\n}\nexport const slice3d = op({ slice3d_ });\n//# sourceMappingURL=slice3d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice4d');\n    util.assert($x.rank === 4, () => `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n    return slice($x, begin, size);\n}\nexport const slice4d = op({ slice4d_ });\n//# sourceMappingURL=slice4d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Softmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_(logits, dim = -1) {\n    const $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n    if (dim === -1) {\n        dim = $logits.rank - 1;\n    }\n    if (dim !== $logits.rank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and dim was ${dim}`);\n    }\n    const inputs = { logits: $logits };\n    const attrs = { dim };\n    return ENGINE.runKernel(Softmax, inputs, attrs);\n}\nexport const softmax = op({ softmax_ });\n//# sourceMappingURL=softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { FFT } from '../../kernel_names';\nimport { assert } from '../../util';\nimport { op } from '../operation';\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input) {\n    assert(input.dtype === 'complex64', () => `The dtype for tf.spectral.fft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return ENGINE.runKernel(FFT, inputs);\n}\nexport const fft = op({ fft_ });\n//# sourceMappingURL=fft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { IFFT } from '../../kernel_names';\nimport { assert } from '../../util';\nimport { op } from '../operation';\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input) {\n    assert(input.dtype === 'complex64', () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return ENGINE.runKernel(IFFT, inputs);\n}\nexport const ifft = op({ ifft_ });\n//# sourceMappingURL=ifft.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { complex } from '../complex';\nimport { concat } from '../concat';\nimport { imag } from '../imag';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { real } from '../real';\nimport { reshape } from '../reshape';\nimport { reverse } from '../reverse';\nimport { scalar } from '../scalar';\nimport { slice } from '../slice';\nimport { ifft } from './ifft';\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input) {\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let ret;\n    if (innerDimensionSize <= 2) {\n        const complexInput = reshape(input, [batch, innerDimensionSize]);\n        ret = ifft(complexInput);\n    }\n    else {\n        // The length of unique components of the DFT of a real-valued signal\n        // is 2 * (input_len - 1)\n        const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n        const realInput = reshape(real(input), [batch, innerDimensionSize]);\n        const imagInput = reshape(imag(input), [batch, innerDimensionSize]);\n        const realConjugate = reverse(slice(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n        const imagConjugate = mul(reverse(slice(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1), scalar(-1));\n        const r = concat([realInput, realConjugate], 1);\n        const i = concat([imagInput, imagConjugate], 1);\n        const complexInput = reshape(complex(r, i), [outputShape[0], outputShape[1]]);\n        ret = ifft(complexInput);\n    }\n    ret = real(ret);\n    // reshape the result if the input is 3D tensor.\n    if (input.rank === 3 && input.shape[0] !== 0) {\n        const temp = ret;\n        const batch = input.shape[0];\n        ret = reshape(ret, [batch, ret.shape[0] / batch, ret.shape[1]]);\n        temp.dispose();\n    }\n    return ret;\n}\nexport const irfft = op({ irfft_ });\n//# sourceMappingURL=irfft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SplitV } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_(x, numOrSizeSplits, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'split');\n    const inputs = { x: $x };\n    const attr = { numOrSizeSplits, axis };\n    return ENGINE.runKernel(SplitV, inputs, attr);\n}\nexport const split = op({ split_ });\n//# sourceMappingURL=split.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../../util';\nimport { complex } from '../complex';\nimport { concat } from '../concat';\nimport { imag } from '../imag';\nimport { op } from '../operation';\nimport { real } from '../real';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { split } from '../split';\nimport { zeros } from '../zeros';\nimport { zerosLike } from '../zeros_like';\nimport { fft } from './fft';\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input, fftLength) {\n    assert(input.dtype === 'float32', () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n    let innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let adjustedInput;\n    if (fftLength != null && fftLength < innerDimensionSize) {\n        // Need to crop\n        const begin = input.shape.map(v => 0);\n        const size = input.shape.map(v => v);\n        size[input.shape.length - 1] = fftLength;\n        adjustedInput = slice(input, begin, size);\n        innerDimensionSize = fftLength;\n    }\n    else if (fftLength != null && fftLength > innerDimensionSize) {\n        // Need to pad with zeros\n        const zerosShape = input.shape.map(v => v);\n        zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n        adjustedInput = concat([input, zeros(zerosShape)], input.shape.length - 1);\n        innerDimensionSize = fftLength;\n    }\n    else {\n        adjustedInput = input;\n    }\n    // Complement the input with zero imaginary numbers.\n    const zerosInput = zerosLike(adjustedInput);\n    const complexInput = reshape(complex(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n    const ret = fft(complexInput);\n    // Exclude complex conjugations. These conjugations are put symmetrically.\n    const half = Math.floor(innerDimensionSize / 2) + 1;\n    const realValues = real(ret);\n    const imagValues = imag(ret);\n    const realComplexConjugate = split(realValues, [half, innerDimensionSize - half], realValues.shape.length - 1);\n    const imagComplexConjugate = split(imagValues, [half, innerDimensionSize - half], imagValues.shape.length - 1);\n    const outputShape = adjustedInput.shape.slice();\n    outputShape[adjustedInput.shape.length - 1] = half;\n    return reshape(complex(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\nexport const rfft = op({ rfft_ });\n//# sourceMappingURL=rfft.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sqrt } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sqrt_(x) {\n    const $x = convertToTensor(x, 'x', 'sqrt');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sqrt, inputs);\n}\nexport const sqrt = op({ sqrt_ });\n//# sourceMappingURL=sqrt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SquaredDifference } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction squaredDifference_(a, b) {\n    let $a = convertToTensor(a, 'a', 'squaredDifference');\n    let $b = convertToTensor(b, 'b', 'squaredDifference');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    return ENGINE.runKernel(SquaredDifference, inputs, attrs);\n}\nexport const squaredDifference = op({ squaredDifference_ });\n//# sourceMappingURL=squared_difference.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { squeezeShape } from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction squeeze_(x, axis) {\n    const $x = convertToTensor(x, 'x', 'squeeze');\n    return reshape($x, squeezeShape($x.shape, axis).newShape);\n}\nexport const squeeze = op({ squeeze_ });\n//# sourceMappingURL=squeeze.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Pack } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_(tensors, axis = 0) {\n    const $tensors = convertToTensorArray(tensors, 'tensors', 'stack', 'string_or_numeric');\n    util.assert($tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n    if ($tensors.length > 0) {\n        util.assert(axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n    }\n    const inputs = $tensors;\n    const attrs = { axis };\n    return ENGINE.runKernel(Pack, inputs, attrs);\n}\nexport const stack = op({ stack_ });\n//# sourceMappingURL=stack.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Step } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction step_(x, alpha = 0.0) {\n    const $x = convertToTensor(x, 'x', 'step');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return ENGINE.runKernel(Step, inputs, attrs);\n}\nexport const step = op({ step_ });\n//# sourceMappingURL=step.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { StridedSlice } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction stridedSlice_(x, begin, end, strides, beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0, shrinkAxisMask = 0) {\n    const $x = convertToTensor(x, 'x', 'stridedSlice');\n    const inputs = { x: $x };\n    const attrs = {\n        begin,\n        end,\n        strides,\n        beginMask,\n        endMask,\n        ellipsisMask,\n        newAxisMask,\n        shrinkAxisMask\n    };\n    return ENGINE.runKernel(StridedSlice, inputs, attrs);\n}\nexport const stridedSlice = op({ stridedSlice_ });\n//# sourceMappingURL=strided_slice.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tan } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tan_(x) {\n    const $x = convertToTensor(x, 'x', 'tan');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Tan, inputs);\n}\nexport const tan = op({ tan_ });\n//# sourceMappingURL=tan.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor1d(values, dtype) {\n    assertNonNull(values);\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 1) {\n        throw new Error('tensor1d() requires values to be a flat/TypedArray');\n    }\n    const shape = null;\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor1d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor2d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 2) {\n        throw new Error('tensor2d() requires shape to have two numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n        throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor2d() requires shape to be provided when `values` ' +\n            'are a flat/TypedArray');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor2d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor4d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 4) {\n        throw new Error('tensor4d() requires shape to have four numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n        throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor4d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor4d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor5d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 5) {\n        throw new Error('tensor5d() requires shape to have five numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n        throw new Error('tensor5d() requires values to be ' +\n            'number[][][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor5d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor5d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor6d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 6) {\n        throw new Error('tensor6d() requires shape to have six numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n        throw new Error('tensor6d() requires values to be number[][][][][][] or ' +\n            'flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor6d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    shape = shape ||\n        inferredShape;\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor6d.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { TopK } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction topk_(x, k = 1, sorted = true) {\n    const $x = convertToTensor(x, 'x', 'topk');\n    if ($x.rank === 0) {\n        throw new Error('topk() expects the input to be of rank 1 or higher');\n    }\n    const lastDim = $x.shape[$x.shape.length - 1];\n    if (k > lastDim) {\n        throw new Error(`'k' passed to topk() must be <= the last dimension (${lastDim}) ` +\n            `but got ${k}`);\n    }\n    const inputs = { x: $x };\n    const attrs = { k, sorted };\n    const [values, indices] = ENGINE.runKernel(TopK, inputs, attrs);\n    return { values, indices };\n}\nexport const topk = op({ topk_ });\n//# sourceMappingURL=topk.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from './buffer';\nimport { op } from './operation';\nimport { MPRandGauss } from './rand_util';\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction truncatedNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type $ { dtype }`);\n    }\n    const randGauss = new MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n    const res = buffer(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nexport const truncatedNormal = op({ truncatedNormal_ });\n//# sourceMappingURL=truncated_normal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unique } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert } from '../util';\nimport { op } from './operation';\n/**\n * Finds unique elements along an axis of a tensor.\n *\n * It returns a tensor `values` containing all of the unique elements along the\n * `axis` of the given tensor `x` in the same order that they occur along the\n * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor\n * `indices` the same size as the number of the elements in `x` along the `axis`\n * dimension. It contains the index in the unique output `values`.\n *\n * ```js\n * // A 1-D tensor\n * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);\n * const {values, indices} = tf.unique(a);\n * values.print();   // [1, 2, 4, 7, 8,]\n * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=0\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 0)\n * values.print();   // [[1, 0, 0],\n *                   //  [2, 0, 0]]\n * indices.print();  // [0, 0, 1]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=1\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 1)\n * values.print();   // [[1, 0],\n *                   //  [1, 0],\n *                   //  [2, 0]]\n * indices.print();  // [0, 1, 1]\n * ```\n * @param x A tensor (int32, string, bool).\n * @param axis The axis of the tensor to find the unique elements.\n * @returns [uniqueElements, indices] (see above for details)\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction unique_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'unique', 'string_or_numeric');\n    assert($x.rank > 0, () => 'The input tensor must be at least 1D');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    const [values, indices] = ENGINE.runKernel(Unique, inputs, attrs);\n    return { values, indices };\n}\nexport const unique = op({ unique_ });\n//# sourceMappingURL=unique.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { UnsortedSegmentSum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert, isInt } from '../util';\nimport { op } from './operation';\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n *\n * @doc {heading: 'Operations', subheading: 'Segment'}\n */\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n    const $x = convertToTensor(x, 'x', 'unsortedSegmentSum');\n    const $segmentIds = convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n    assert(isInt(numSegments), () => 'numSegments must be of dtype int');\n    const inputs = { x: $x, segmentIds: $segmentIds };\n    const attrs = { numSegments };\n    return ENGINE.runKernel(UnsortedSegmentSum, inputs, attrs);\n}\nexport const unsortedSegmentSum = op({ unsortedSegmentSum_ });\n//# sourceMappingURL=unsorted_segment_sum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unpack } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n    util.assert(axis >= -$x.shape.length && axis < $x.shape.length, () => `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n    const inputs = { value: $x };\n    const attrs = { axis };\n    return ENGINE.runKernel(Unpack, inputs, attrs);\n}\nexport const unstack = op({ unstack_ });\n//# sourceMappingURL=unstack.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function variable(initialValue, trainable = true, name, dtype) {\n    return ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}\n//# sourceMappingURL=variable.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the Where kernel shared between cpu and webgl */\nimport { buffer } from '../ops/buffer';\nexport function whereImpl(condShape, condVals) {\n    const indices = [];\n    for (let i = 0; i < condVals.length; i++) {\n        if (condVals[i]) {\n            indices.push(i);\n        }\n    }\n    const inBuffer = buffer(condShape, 'int32');\n    const out = buffer([indices.length, condShape.length], 'int32');\n    for (let i = 0; i < indices.length; i++) {\n        const loc = inBuffer.indexToLoc(indices[i]);\n        const offset = i * condShape.length;\n        out.values.set(loc, offset);\n    }\n    return out.toTensor();\n}\n//# sourceMappingURL=where_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { whereImpl } from '../backends/where_impl';\nimport { convertToTensor } from '../tensor_util_env';\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nasync function whereAsync_(condition) {\n    const $condition = convertToTensor(condition, 'condition', 'whereAsync', 'bool');\n    const vals = await $condition.data();\n    const res = whereImpl($condition.shape, vals);\n    if (condition !== $condition) {\n        $condition.dispose();\n    }\n    return res;\n}\nexport const whereAsync = whereAsync_;\n//# sourceMappingURL=where_async.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { gather } from './gather';\nimport { reshape } from './reshape';\nimport { squeeze } from './squeeze';\nimport { whereAsync } from './where_async';\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(tensor, mask, axis) {\n    const $tensor = convertToTensor(tensor, 'tensor', 'boolMask');\n    const $mask = convertToTensor(mask, 'mask', 'boolMask', 'bool');\n    const axisFrom = axis == null ? 0 : axis;\n    const maskDim = $mask.rank;\n    const tensorShape = $tensor.shape;\n    util.assert(maskDim > 0, () => 'mask cannot be scalar');\n    util.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, `mask's shape must match the first K dimensions of tensor's shape,`);\n    let leadingSize = 1;\n    for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n        leadingSize *= tensorShape[i];\n    }\n    const targetTensorShape = tensorShape.slice(0, axisFrom)\n        .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n    const reshapedTensor = reshape($tensor, targetTensorShape);\n    const reshapedMask = reshape($mask, [-1]);\n    const positivePositions = await whereAsync(reshapedMask);\n    const indices = squeeze(positivePositions, [1]);\n    const res = gather(reshapedTensor, indices, axisFrom);\n    // Ensure no memory leak.\n    if (tensor !== $tensor) {\n        $tensor.dispose();\n    }\n    if (mask !== $mask) {\n        $mask.dispose();\n    }\n    indices.dispose();\n    reshapedTensor.dispose();\n    reshapedMask.dispose();\n    positivePositions.dispose();\n    return res;\n}\nexport const booleanMaskAsync = booleanMaskAsync_;\n//# sourceMappingURL=boolean_mask.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { parseAxisParam } from '../util';\nimport { abs } from './abs';\nimport * as axis_util from './axis_util';\nimport { max } from './max';\nimport { min } from './min';\nimport { op } from './operation';\nimport { pow } from './pow';\nimport { reshape } from './reshape';\nimport { scalar } from './scalar';\nimport { sqrt } from './sqrt';\nimport { square } from './square';\nimport { sum } from './sum';\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction norm_(x, ord = 'euclidean', axis = null, keepDims = false) {\n    x = convertToTensor(x, 'x', 'norm');\n    const norm = normImpl(x, ord, axis);\n    let keepDimsShape = norm.shape;\n    if (keepDims) {\n        const axes = parseAxisParam(axis, x.shape);\n        keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n    }\n    return reshape(norm, keepDimsShape);\n}\nfunction normImpl(x, p, axis = null) {\n    if (x.rank === 0) {\n        return abs(x);\n    }\n    // consider vector when no axis is specified\n    if (x.rank !== 1 && axis === null) {\n        return normImpl(reshape(x, [-1]), p, axis);\n    }\n    // vector\n    if (x.rank === 1 || typeof axis === 'number' ||\n        Array.isArray(axis) && axis.length === 1) {\n        if (p === 1) {\n            return sum(abs(x), axis);\n        }\n        if (p === Infinity) {\n            return max(abs(x), axis);\n        }\n        if (p === -Infinity) {\n            return min(abs(x), axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n            return sqrt(sum(pow(abs(x), scalar(2, 'int32')), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    // matrix (assumption axis[0] < axis[1])\n    if (Array.isArray(axis) && axis.length === 2) {\n        if (p === 1) {\n            return max(sum(abs(x), axis[0]), axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return max(sum(abs(x), axis[1]), axis[0]);\n        }\n        if (p === -Infinity) {\n            return min(sum(abs(x), axis[1]), axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            // norm(x) = sqrt(sum(pow(x, 2)))\n            return sqrt(sum(square(x), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\nexport const norm = op({ norm_ });\n//# sourceMappingURL=norm.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assertTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { add } from './add';\nimport { div } from './div';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { pow } from './pow';\nimport { scalar } from './scalar';\nimport { sub } from './sub';\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n *\n * @doc {heading: 'Operations', subheading: 'Moving Average'}\n */\nfunction movingAverage_(v, x, decay, step, zeroDebias = true) {\n    const $v = convertToTensor(v, 'v', 'movingAverage');\n    const $x = convertToTensor(x, 'x', 'movingAverage');\n    const $decay = convertToTensor(decay, 'decay', 'movingAverage');\n    assertTypesMatch($v, $x);\n    util.assert(util.arraysEqual($v.shape, $x.shape), () => 'Shape mismatch in v and x');\n    const one = scalar(1);\n    const oneMinusDecay = sub(one, $decay);\n    let update = mul(sub($x, $v), oneMinusDecay);\n    if (zeroDebias) {\n        util.assert(step != null, () => 'When using zeroDebias: true, step is required.');\n        const $step = convertToTensor(step, 'step', 'movingAverage');\n        update = div(update, sub(one, pow($decay, $step)));\n    }\n    return add($v, update);\n}\nexport const movingAverage = op({ movingAverage_ });\n//# sourceMappingURL=moving_average.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ScatterNd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nimport * as scatter_nd_util from './scatter_nd_util';\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction scatterND_(indices, updates, shape) {\n    const $indices = convertToTensor(indices, 'indices', 'scatterND', 'int32');\n    const $updates = convertToTensor(updates, 'updates', 'scatterND');\n    scatter_nd_util.validateInput($updates, $indices, shape);\n    const inputs = { indices: $indices, updates: $updates };\n    const attrs = { shape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(ScatterNd, inputs, attrs);\n}\nexport const scatterND = op({ scatterND_ });\n//# sourceMappingURL=scatter_nd.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SparseToDense } from '../kernel_names';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue = 0) {\n    const $sparseIndices = convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n    const $sparseValues = convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n    const $defaultValue = convertToTensor(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n    sparse_to_dense.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n    const inputs = {\n        sparseIndices: $sparseIndices,\n        sparseValues: $sparseValues,\n        defaultValue: $defaultValue\n    };\n    const attrs = { outputShape };\n    return ENGINE.runKernel(SparseToDense, inputs, attrs);\n}\nexport const sparseToDense = op({ sparseToDense_ });\n//# sourceMappingURL=sparse_to_dense.js.map","/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nexport function validateInput(sparseIndices, sparseValues, outputShape, defaultValues) {\n    if (sparseIndices.dtype !== 'int32') {\n        throw new Error('tf.sparseToDense() expects the indices to be int32 type,' +\n            ` but the dtype was ${sparseIndices.dtype}.`);\n    }\n    if (sparseIndices.rank > 2) {\n        throw new Error('sparseIndices should be a scalar, vector, or matrix,' +\n            ` but got shape ${sparseIndices.shape}.`);\n    }\n    const numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n    const numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n    if (outputShape.length !== numDims) {\n        throw new Error('outputShape has incorrect number of elements:,' +\n            ` ${outputShape.length}, should be: ${numDims}.`);\n    }\n    const numValues = sparseValues.size;\n    if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n        throw new Error('sparseValues has incorrect shape ' +\n            `${sparseValues.shape}, should be [] or [${numElems}]`);\n    }\n    if (sparseValues.dtype !== defaultValues.dtype) {\n        throw new Error('sparseValues.dtype must match defaultValues.dtype');\n    }\n}\n//# sourceMappingURL=sparse_to_dense_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { GatherNd } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x, indices) {\n    const $indices = convertToTensor(indices, 'indices', 'gatherND', 'int32');\n    const $x = convertToTensor(x, 'x', 'gatherND');\n    const inputs = { params: $x, indices: $indices };\n    return ENGINE.runKernel(GatherNd, inputs);\n}\nexport const gatherND = op({ gatherND_ });\n//# sourceMappingURL=gather_nd.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { add } from './add';\nimport { div } from './div';\nimport { getNoiseShape } from './dropout_util';\nimport { floor } from './floor';\nimport { mul } from './mul';\nimport { op } from './operation';\nimport { randomUniform } from './random_uniform';\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\nfunction dropout_(x, rate, noiseShape, seed) {\n    const $x = convertToTensor(x, 'x', 'dropout');\n    util.assert($x.dtype === 'float32', () => `x has to be a floating point tensor since it's going to be ` +\n        `scaled, but got a ${$x.dtype} tensor instead.`);\n    util.assert(rate >= 0 && rate < 1, () => `rate must be a float in the range [0, 1), but got ${rate}.`);\n    if (rate === 0) {\n        return x instanceof Tensor ? $x.clone() : $x;\n    }\n    const $noiseShape = getNoiseShape($x, noiseShape);\n    const keepProb = 1 - rate;\n    const multiplier = div(floor(add(randomUniform($noiseShape, 0, 1, 'float32', seed), keepProb)), keepProb);\n    return mul($x, multiplier);\n}\nexport const dropout = op({ dropout_ });\n//# sourceMappingURL=dropout.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nexport function getNoiseShape(x, noiseShape) {\n    if (noiseShape == null) {\n        return x.shape.slice();\n    }\n    if (util.arraysEqual(x.shape, noiseShape)) {\n        return noiseShape;\n    }\n    if (x.shape.length === noiseShape.length) {\n        const newDimension = [];\n        for (let i = 0; i < x.shape.length; i++) {\n            if (noiseShape[i] == null && x.shape[i] != null) {\n                newDimension.push(x.shape[i]);\n            }\n            else {\n                newDimension.push(noiseShape[i]);\n            }\n        }\n        return newDimension;\n    }\n    return noiseShape;\n}\n//# sourceMappingURL=dropout_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensor1d } from './tensor1d';\nexport function enclosingPowerOfTwo(value) {\n    // Return 2**N for integer N such that 2**N >= value.\n    return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nexport function cosineWindow(windowLength, a, b) {\n    const even = 1 - windowLength % 2;\n    const newValues = new Float32Array(windowLength);\n    for (let i = 0; i < windowLength; ++i) {\n        const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n        newValues[i] = a - b * Math.cos(cosArg);\n    }\n    return tensor1d(newValues, 'float32');\n}\n//# sourceMappingURL=signal_ops_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport { assert, assertShapesMatch, getTypedArrayFromDType } from '../util';\nimport { tensor } from './tensor';\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nasync function inTopKAsync_(predictions, targets, k = 1) {\n    const $predictions = convertToTensor(predictions, 'predictions', 'inTopK');\n    const $targets = convertToTensor(targets, 'targets', 'inTopK');\n    assert($predictions.rank > 1, () => 'inTopK() expects the predictions to be of rank 2 or higher, ' +\n        `but got ${$predictions.rank}`);\n    assert($predictions.rank - 1 === $targets.rank, () => `predictions rank should be 1 larger than ` +\n        `targets rank, but got predictions rank ` +\n        `${$predictions.rank} and targets rank ${$targets.rank}`);\n    assertShapesMatch($predictions.shape.slice(0, $predictions.shape.length - 1), $targets.shape, `predictions's shape should be align with the targets' shape, ` +\n        'except the last dimension.');\n    const lastDim = $predictions.shape[$predictions.shape.length - 1];\n    assert(k > 0 && k <= lastDim, () => `'k' passed to inTopK() must be > 0 && <= the predictions last ` +\n        `dimension (${lastDim}), but got ${k}`);\n    const predictionsVals = await $predictions.data();\n    const targetsVals = await $targets.data();\n    // Reshape predictionsVals into a 2d tensor [batch, lastDim]\n    // and look up topK along lastDim.\n    const [batch, size] = [predictionsVals.length / lastDim, lastDim];\n    const precision = getTypedArrayFromDType('bool', batch);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = predictionsVals.subarray(offset, offset + size);\n        const valAndInd = [];\n        for (let i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort((a, b) => b.value - a.value);\n        precision[b] = 0;\n        for (let i = 0; i < k; i++) {\n            if (valAndInd[i].index === targetsVals[b]) {\n                precision[b] = 1;\n                break;\n            }\n        }\n    }\n    if (predictions !== $predictions) {\n        $predictions.dispose();\n    }\n    if (targets !== $targets) {\n        $targets.dispose();\n    }\n    // Output precision has the same shape as targets.\n    return tensor(precision, $targets.shape, 'bool');\n}\nexport const inTopKAsync = inTopKAsync_;\n//# sourceMappingURL=in_top_k.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2DBackpropFilter } from '../kernel_names';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropFilter_(x, dy, filterShape, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n        `${x4D.shape}.`);\n    util.assert(dy4D.rank === 4, () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n        `${dy4D.shape}.`);\n    util.assert(filterShape.length === 4, () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n        `${filterShape}.`);\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    util.assert(inDepth === filterShape[2], () => `Error in conv2dDerFilter: depth of input ${inDepth}) must ` +\n        `match input depth in filter (${filterShape[2]}.`);\n    util.assert(outDepth === filterShape[3], () => `Error in conv2dDerFilter: depth of dy (${outDepth}) must ` +\n        `match output depth for filter (${filterShape[3]}).`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in conv2dDerFilter: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(Conv2DBackpropFilter, inputs, attrs);\n}\nexport const conv2DBackpropFilter = op({ conv2DBackpropFilter_ });\n//# sourceMappingURL=conv2d_backprop_filter.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as broadcast_util from './broadcast_util';\nimport { elu } from './elu';\nimport { leakyRelu } from './leaky_relu';\nimport { mul } from './mul';\nimport { prelu } from './prelu';\nimport { relu } from './relu';\nimport { relu6 } from './relu6';\nimport { reshape } from './reshape';\nimport { step } from './step';\nimport { sum } from './sum';\n// Returns gradient for fused activation.\nexport function getFusedDyActivation(dy, y, activation) {\n    if (activation == null || activation === 'linear') {\n        return dy;\n    }\n    if (activation === 'relu') {\n        return mul(dy, step(y));\n    }\n    throw new Error(`Cannot compute gradient for fused activation ${activation}.`);\n}\n// Returns gradient for fused bias.\nexport function getFusedBiasGradient(bias, dyActivation) {\n    let res = dyActivation;\n    const reduceAxes = broadcast_util.getReductionAxes(bias.shape, dyActivation.shape);\n    if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n    }\n    return reshape(res, bias.shape);\n}\nexport function applyActivation(x, activation, preluActivationWeights, leakyreluAlpha) {\n    if (activation === 'linear') {\n        return x;\n    }\n    else if (activation === 'relu') {\n        return relu(x);\n    }\n    else if (activation === 'elu') {\n        return elu(x);\n    }\n    else if (activation === 'relu6') {\n        return relu6(x);\n    }\n    else if (activation === 'prelu') {\n        return prelu(x, preluActivationWeights);\n    }\n    else if (activation === 'leakyrelu') {\n        return leakyRelu(x, leakyreluAlpha);\n    }\n    throw new Error(`Unknown fused activation ${activation}.`);\n}\n// Whether we should call fused ops.\nexport const shouldFuse = (gradientDepth, activation) => {\n    const gradientMode = gradientDepth > 0;\n    return !gradientMode || activation === 'linear';\n};\n//# sourceMappingURL=fused_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { FusedConv2D } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport { conv2d as unfusedConv2d } from '../conv2d';\nimport { conv2DBackpropFilter } from '../conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../conv2d_backprop_input';\nimport * as conv_util from '../conv_util';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    activation = activation || 'linear';\n    if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n        let result = unfusedConv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = convertToTensor(x, 'x', 'conv2d');\n    const $filter = convertToTensor(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in fused conv2d: input must be rank 4, but got rank ` +\n        `${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in fused conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in fused conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    util.assert(x4D.shape[3] === $filter.shape[2], () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    util.assert(dataFormat === 'NHWC', () => `Error in conv2d: got dataFormat of ${dataFormat} but only NHWC is currently supported.`);\n    const convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n    let $bias;\n    if (bias != null) {\n        $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n        [$bias] = makeTypesMatch($bias, $x);\n        broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused conv2d');\n    }\n    const grad = (dy, saved) => {\n        const [$filter, x4D, y, $bias] = saved;\n        const dyActivation = getFusedDyActivation(dy, y, activation);\n        util.assert(conv_util.tupleValuesAreOne(dilations), () => 'Error in gradient of fused conv2D: ' +\n            `dilation rates greater than 1 ` +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n        const xDer = conv2DBackpropInput(x4D.shape, dyActivation, $filter, strides, pad);\n        const filterDer = conv2DBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad);\n        const der = [xDer, filterDer];\n        if ($bias != null) {\n            const biasDer = getFusedBiasGradient($bias, dyActivation);\n            der.push(biasDer);\n        }\n        return der;\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = customGrad((x4D, filter, save) => {\n            let res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            ENGINE.runKernel(FusedConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = customGrad((x4D, filter, bias, save) => {\n            let res = ENGINE.runKernel(FusedConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nexport const conv2d = op({ fusedConv2d_ });\n//# sourceMappingURL=conv2d.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dimRoundingMode, dilations, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\nexport const depthwiseConv2dNativeBackpropFilter = op({ depthwiseConv2dNativeBackpropFilter_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_filter.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropInput } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dimRoundingMode, dilations, inputShape: xShape };\n    const res = \n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const depthwiseConv2dNativeBackpropInput = op({ depthwiseConv2dNativeBackpropInput_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_input.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { FusedDepthwiseConv2D } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport * as conv_util from '../conv_util';\nimport { depthwiseConv2d as unfusedDepthwiseConv2d } from '../depthwise_conv2d';\nimport { depthwiseConv2dNativeBackpropFilter } from '../depthwise_conv2d_native_backprop_filter';\nimport { depthwiseConv2dNativeBackpropInput } from '../depthwise_conv2d_native_backprop_input';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedDepthwiseConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n        let result = unfusedDepthwiseConv2d(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n    const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in fused depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in fused depthwiseConv2d: filter must be rank 4, ` +\n        `but got rank ${$filter.rank}.`);\n    util.assert(x4D.shape[3] === $filter.shape[2], () => `Error in fused depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n        `be 1. Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        util.assert(util.isInt(pad), () => `Error in fused depthwiseConv2d: pad must be an integer when ` +\n            `using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const convInfo = conv_util.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    let $bias;\n    if (bias != null) {\n        $bias = convertToTensor(bias, 'bias', 'fused conv2d');\n        [$bias] = makeTypesMatch($bias, $x);\n        broadcast_util.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n    }\n    const grad = (dy, saved) => {\n        util.assert(conv_util.tupleValuesAreOne(dilations), () => 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n        const [$filter, x4D, y, bias] = saved;\n        const dyActivation = getFusedDyActivation(dy, y, activation);\n        const xDer = depthwiseConv2dNativeBackpropInput(x4D.shape, dyActivation, $filter, strides, pad, dilations, dimRoundingMode);\n        const filterDer = depthwiseConv2dNativeBackpropFilter(x4D, dyActivation, $filter.shape, strides, pad, dilations, dimRoundingMode);\n        if (bias != null) {\n            const biasDer = getFusedBiasGradient($bias, dyActivation);\n            return [xDer, filterDer, biasDer];\n        }\n        return [xDer, filterDer];\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = customGrad((x4D, filter, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = ENGINE.runKernel(FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = customGrad((x4D, filter, bias, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = ENGINE.runKernel(FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nexport const depthwiseConv2d = op({ fusedDepthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { customGrad } from '../../gradients';\nimport { _FusedMatMul } from '../../kernel_names';\nimport { makeTypesMatch } from '../../tensor_util';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { add } from '../add';\nimport * as broadcast_util from '../broadcast_util';\nimport { applyActivation, getFusedBiasGradient, getFusedDyActivation, shouldFuse } from '../fused_util';\nimport { matMul as unfusedMatMul } from '../mat_mul';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\nfunction fusedMatMul_({ a, b, transposeA = false, transposeB = false, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha, }) {\n    if (shouldFuse(ENGINE.state.gradientDepth, activation) === false) {\n        let result = unfusedMatMul(a, b, transposeA, transposeB);\n        if (bias != null) {\n            result = add(result, bias);\n        }\n        return applyActivation(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    let $a = convertToTensor(a, 'a', 'fused matMul');\n    let $b = convertToTensor(b, 'b', 'fused matMul');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    const innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n    const outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    const outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n    const outerDimsA = $a.shape.slice(0, -2);\n    const outerDimsB = $b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n    util.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, () => `Error in fused matMul: inputs must have the same rank of at ` +\n        `least 2, got ranks ${$a.rank} and ${$b.rank}.`);\n    util.assert(util.arraysEqual(outerDimsA, outerDimsB), () => `Error in fused matMul: outer dimensions (${outerDimsA}) and (` +\n        `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} must match.`);\n    util.assert(innerShapeA === innerShapeB, () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n    const a3D = transposeA ?\n        reshape($a, [batchDimA, innerShapeA, outerShapeA]) :\n        reshape($a, [batchDimA, outerShapeA, innerShapeA]);\n    const b3D = transposeB ?\n        reshape($b, [batchDimB, outerShapeB, innerShapeB]) :\n        reshape($b, [batchDimB, innerShapeB, outerShapeB]);\n    let $bias;\n    if (bias != null) {\n        $bias = convertToTensor(bias, 'bias', 'fused matMul');\n        [$bias] = makeTypesMatch($bias, $a);\n        broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = convertToTensor(preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n    const grad = (dy, saved) => {\n        const [a3D, b3D, y, $bias] = saved;\n        // we reshape dy because the result of the forward is not\n        // necessarily going to be a 3d tensor due to a reshape done at the end of\n        // the customOp.\n        const dyActivation = getFusedDyActivation(reshape(dy, y.shape), y, activation);\n        let aDer;\n        let bDer;\n        if (!transposeA && !transposeB) {\n            aDer = unfusedMatMul(dyActivation, b3D, false, true);\n            bDer = unfusedMatMul(a3D, dyActivation, true, false);\n        }\n        else if (!transposeA && transposeB) {\n            aDer = unfusedMatMul(dyActivation, b3D, false, false);\n            bDer = unfusedMatMul(dyActivation, a3D, true, false);\n        }\n        else if (transposeA && !transposeB) {\n            aDer = unfusedMatMul(b3D, dyActivation, false, true);\n            bDer = unfusedMatMul(a3D, dyActivation, false, false);\n        }\n        else {\n            aDer = unfusedMatMul(b3D, dyActivation, true, true);\n            bDer = unfusedMatMul(dyActivation, a3D, true, true);\n        }\n        if (bias != null) {\n            const biasDer = getFusedBiasGradient($bias, dyActivation);\n            return [aDer, bDer, biasDer];\n        }\n        else {\n            return [aDer, bDer];\n        }\n    };\n    const inputs = {\n        a: a3D,\n        b: b3D,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = { transposeA, transposeB, activation, leakyreluAlpha };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = customGrad((a3D, b3D, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            ENGINE.runKernel(_FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res]);\n            return { value: reshape(res, outShape), gradFunc: grad };\n        });\n        return customOp(a3D, b3D);\n    }\n    else {\n        const customOpWithBias = customGrad((a3D, b3D, $bias, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            ENGINE.runKernel(_FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res, $bias]);\n            return { value: reshape(res, outShape), gradFunc: grad };\n        });\n        return customOpWithBias(a3D, b3D, $bias);\n    }\n}\nexport const matMul = op({ fusedMatMul_ });\n//# sourceMappingURL=mat_mul.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { op } from '../operation';\nimport { cosineWindow } from '../signal_ops_util';\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength) {\n    return cosineWindow(windowLength, 0.54, 0.46);\n}\nexport const hammingWindow = op({ hammingWindow_ });\n//# sourceMappingURL=hamming_window.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { op } from '../operation';\nimport { cosineWindow } from '../signal_ops_util';\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength) {\n    return cosineWindow(windowLength, 0.5, 0.5);\n}\nexport const hannWindow = op({ hannWindow_ });\n//# sourceMappingURL=hann_window.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../concat';\nimport { fill } from '../fill';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { tensor2d } from '../tensor2d';\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(signal, frameLength, frameStep, padEnd = false, padValue = 0) {\n    let start = 0;\n    const output = [];\n    while (start + frameLength <= signal.size) {\n        output.push(slice(signal, start, frameLength));\n        start += frameStep;\n    }\n    if (padEnd) {\n        while (start < signal.size) {\n            const padLen = (start + frameLength) - signal.size;\n            const pad = concat([\n                slice(signal, start, frameLength - padLen), fill([padLen], padValue)\n            ]);\n            output.push(pad);\n            start += frameStep;\n        }\n    }\n    if (output.length === 0) {\n        return tensor2d([], [0, frameLength]);\n    }\n    return reshape(concat(output), [output.length, frameLength]);\n}\nexport const frame = op({ frame_ });\n//# sourceMappingURL=frame.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat } from '../concat';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { enclosingPowerOfTwo } from '../signal_ops_util';\nimport { slice } from '../slice';\nimport { rfft } from '../spectral/rfft';\nimport { frame } from './frame';\nimport { hannWindow } from './hann_window';\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(signal, frameLength, frameStep, fftLength, windowFn = hannWindow) {\n    if (fftLength == null) {\n        fftLength = enclosingPowerOfTwo(frameLength);\n    }\n    const framedSignal = frame(signal, frameLength, frameStep);\n    const windowedSignal = mul(framedSignal, windowFn(frameLength));\n    const output = [];\n    for (let i = 0; i < framedSignal.shape[0]; i++) {\n        output.push(rfft(slice(windowedSignal, [i, 0], [1, frameLength]), fftLength));\n    }\n    return concat(output);\n}\nexport const stft = op({ stft_ });\n//# sourceMappingURL=stft.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { CropAndResize } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(image, boxes, boxInd, cropSize, method = 'bilinear', extrapolationValue = 0) {\n    const $image = convertToTensor(image, 'image', 'cropAndResize');\n    const $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n    const $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n    const numBoxes = $boxes.shape[0];\n    util.assert($image.rank === 4, () => 'Error in cropAndResize: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    util.assert($boxes.rank === 2 && $boxes.shape[1] === 4, () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n        `but had shape ${$boxes.shape}.`);\n    util.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n        `but had shape ${$boxes.shape}.`);\n    util.assert(cropSize.length === 2, () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n        `length ${cropSize.length}.`);\n    util.assert(cropSize[0] >= 1 && cropSize[1] >= 1, () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n    util.assert(method === 'bilinear' || method === 'nearest', () => `method must be bilinear or nearest, but was ${method}`);\n    const inputs = { image: $image, boxes: $boxes, boxInd: $boxInd };\n    const attrs = { method, extrapolationValue, cropSize };\n    const res = ENGINE.runKernel(CropAndResize, inputs, attrs);\n    return res;\n}\nexport const cropAndResize = op({ cropAndResize_ });\n//# sourceMappingURL=crop_and_resize.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { FlipLeftRight } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image) {\n    const $image = convertToTensor(image, 'image', 'flipLeftRight', 'float32');\n    util.assert($image.rank === 4, () => 'Error in flipLeftRight: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const res = ENGINE.runKernel(FlipLeftRight, inputs, {});\n    return res;\n}\nexport const flipLeftRight = op({ flipLeftRight_ });\n//# sourceMappingURL=flip_left_right.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { RotateWithOffset } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(image, radians, fillValue = 0, center = 0.5) {\n    const $image = convertToTensor(image, 'image', 'rotateWithOffset', 'float32');\n    util.assert($image.rank === 4, () => 'Error in rotateWithOffset: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const attrs = { radians, fillValue, center };\n    const res = ENGINE.runKernel(RotateWithOffset, inputs, attrs);\n    return res;\n}\nexport const rotateWithOffset = op({ rotateWithOffset_ });\n//# sourceMappingURL=rotate_with_offset.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    if (iouThreshold == null) {\n        iouThreshold = 0.5;\n    }\n    if (scoreThreshold == null) {\n        scoreThreshold = Number.NEGATIVE_INFINITY;\n    }\n    if (softNmsSigma == null) {\n        softNmsSigma = 0.0;\n    }\n    const numBoxes = boxes.shape[0];\n    maxOutputSize = Math.min(maxOutputSize, numBoxes);\n    util.assert(0 <= iouThreshold && iouThreshold <= 1, () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n    util.assert(boxes.rank === 2, () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n    util.assert(boxes.shape[1] === 4, () => `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n    util.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n    util.assert(scores.shape[0] === numBoxes, () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n        `but was ${scores.shape[0]}`);\n    util.assert(0 <= softNmsSigma && softNmsSigma <= 1, () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n    return { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n}\nexport { nonMaxSuppSanityCheck };\n//# sourceMappingURL=nonmax_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold };\n    return ENGINE.runKernel(NonMaxSuppressionV3, { boxes: $boxes, scores: $scores }, attrs);\n}\nexport const nonMaxSuppression = op({ nonMaxSuppression_ });\n//# sourceMappingURL=non_max_suppression.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert(arr, element, comparator) {\n    const index = binarySearch(arr, element, comparator);\n    const insertionPoint = index < 0 ? -(index + 1) : index;\n    arr.splice(insertionPoint, 0, element);\n}\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nexport function binarySearch(arr, target, comparator) {\n    return binarySearch_(arr, target, comparator || defaultComparator);\n}\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction binarySearch_(arr, target, comparator) {\n    let left = 0;\n    let right = arr.length;\n    let middle = 0;\n    let found = false;\n    while (left < right) {\n        middle = left + ((right - left) >>> 1);\n        const compareResult = comparator(target, arr[middle]);\n        if (compareResult > 0) {\n            left = middle + 1;\n        }\n        else {\n            right = middle;\n            // If compareResult is 0, the value is found. We record it is found,\n            // and then keep looking because there may be duplicate.\n            found = !compareResult;\n        }\n    }\n    return found ? left : -left - 1;\n}\n//# sourceMappingURL=non_max_suppression_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { binaryInsert } from './non_max_suppression_util';\nexport function nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */);\n}\nexport function nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */, false /* returnScoresTensor */, padToMaxOutputSize /* padToMaxOutputSize */, true\n    /* returnValidOutputs */ );\n}\nexport function nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true /* returnScoresTensor */);\n}\nfunction nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, returnScoresTensor = false, padToMaxOutputSize = false, returnValidOutputs = false) {\n    // The list is sorted in ascending order, so that we can always pop the\n    // candidate with the largest score in O(1) time.\n    const candidates = [];\n    for (let i = 0; i < scores.length; i++) {\n        if (scores[i] > scoreThreshold) {\n            candidates.push({ score: scores[i], boxIndex: i, suppressBeginIndex: 0 });\n        }\n    }\n    candidates.sort(ascendingComparator);\n    // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n    // before.\n    const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n    const selectedIndices = [];\n    const selectedScores = [];\n    while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n        const candidate = candidates.pop();\n        const { score: originalScore, boxIndex, suppressBeginIndex } = candidate;\n        if (originalScore < scoreThreshold) {\n            break;\n        }\n        // Overlapping boxes are likely to have similar scores, therefore we\n        // iterate through the previously selected boxes backwards in order to\n        // see if candidate's score should be suppressed. We use\n        // suppressBeginIndex to track and ensure a candidate can be suppressed\n        // by a selected box no more than once. Also, if the overlap exceeds\n        // iouThreshold, we simply ignore the candidate.\n        let ignoreCandidate = false;\n        for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n            const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n            if (iou >= iouThreshold) {\n                ignoreCandidate = true;\n                break;\n            }\n            candidate.score =\n                candidate.score * suppressWeight(iouThreshold, scale, iou);\n            if (candidate.score <= scoreThreshold) {\n                break;\n            }\n        }\n        // At this point, if `candidate.score` has not dropped below\n        // `scoreThreshold`, then we know that we went through all of the\n        // previous selections and can safely update `suppressBeginIndex` to the\n        // end of the selected array. Then we can re-insert the candidate with\n        // the updated score and suppressBeginIndex back in the candidate list.\n        // If on the other hand, `candidate.score` has dropped below the score\n        // threshold, we will not add it back to the candidates list.\n        candidate.suppressBeginIndex = selectedIndices.length;\n        if (!ignoreCandidate) {\n            // Candidate has passed all the tests, and is not suppressed, so\n            // select the candidate.\n            if (candidate.score === originalScore) {\n                selectedIndices.push(boxIndex);\n                selectedScores.push(candidate.score);\n            }\n            else if (candidate.score > scoreThreshold) {\n                // Candidate's score is suppressed but is still high enough to be\n                // considered, so add back to the candidates list.\n                binaryInsert(candidates, candidate, ascendingComparator);\n            }\n        }\n    }\n    // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n    const validOutputs = selectedIndices.length;\n    const elemsToPad = maxOutputSize - validOutputs;\n    if (padToMaxOutputSize && elemsToPad > 0) {\n        selectedIndices.push(...new Array(elemsToPad).fill(0));\n        selectedScores.push(...new Array(elemsToPad).fill(0.0));\n    }\n    const result = { selectedIndices };\n    if (returnScoresTensor) {\n        result['selectedScores'] = selectedScores;\n    }\n    if (returnValidOutputs) {\n        result['validOutputs'] = validOutputs;\n    }\n    return result;\n}\nfunction intersectionOverUnion(boxes, i, j) {\n    const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n    const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n    const yminI = Math.min(iCoord[0], iCoord[2]);\n    const xminI = Math.min(iCoord[1], iCoord[3]);\n    const ymaxI = Math.max(iCoord[0], iCoord[2]);\n    const xmaxI = Math.max(iCoord[1], iCoord[3]);\n    const yminJ = Math.min(jCoord[0], jCoord[2]);\n    const xminJ = Math.min(jCoord[1], jCoord[3]);\n    const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n    const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n    const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n    const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n    if (areaI <= 0 || areaJ <= 0) {\n        return 0.0;\n    }\n    const intersectionYmin = Math.max(yminI, yminJ);\n    const intersectionXmin = Math.max(xminI, xminJ);\n    const intersectionYmax = Math.min(ymaxI, ymaxJ);\n    const intersectionXmax = Math.min(xmaxI, xmaxJ);\n    const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\n    return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold, scale, iou) {\n    const weight = Math.exp(scale * iou * iou);\n    return iou <= iouThreshold ? weight : 0.0;\n}\nfunction ascendingComparator(c1, c2) {\n    // For objects with same scores, we make the object with the larger index go\n    // first. In an array that pops from the end, this means that the object with\n    // the smaller index will be popped first. This ensures the same output as\n    // the TensorFlow python version.\n    return (c1.score - c2.score) ||\n        ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n//# sourceMappingURL=non_max_suppression_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV3Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return tensor1d(selectedIndices, 'int32');\n}\nexport const nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n//# sourceMappingURL=non_max_suppression_async.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV5 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = ENGINE.runKernel(NonMaxSuppressionV5, inputs, attrs);\n    return { selectedIndices: result[0], selectedScores: result[1] };\n}\nexport const nonMaxSuppressionWithScore = op({ nonMaxSuppressionWithScore_ });\n//# sourceMappingURL=non_max_suppression_with_score.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV5Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: tensor1d(selectedIndices, 'int32'),\n        selectedScores: tensor1d(selectedScores)\n    };\n}\nexport const nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n//# sourceMappingURL=non_max_suppression_with_score_async.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV4 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = {\n        maxOutputSize: $maxOutputSize,\n        iouThreshold: $iouThreshold,\n        scoreThreshold: $scoreThreshold,\n        padToMaxOutputSize\n    };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = ENGINE.runKernel(NonMaxSuppressionV4, inputs, attrs);\n    return { selectedIndices: result[0], validOutputs: result[1] };\n}\nexport const nonMaxSuppressionPadded = op({ nonMaxSuppressionPadded_ });\n//# sourceMappingURL=non_max_suppression_padded.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV4Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { scalar } from '../scalar';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const [boxesVals, scoresVals] = await Promise.all([$boxes.data(), $scores.data()]);\n    // We call a cpu based impl directly with the typedarray data here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold, padToMaxOutputSize);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: tensor1d(selectedIndices, 'int32'),\n        validOutputs: scalar(validOutputs, 'int32')\n    };\n}\nexport const nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n//# sourceMappingURL=non_max_suppression_padded_async.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeBilinear } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = convertToTensor(images, 'images', 'resizeBilinear');\n    util.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    util.assert(size.length === 2, () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n        `${size}.`);\n    util.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(ResizeBilinear, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const resizeBilinear = op({ resizeBilinear_ });\n//# sourceMappingURL=resize_bilinear.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeNearestNeighbor } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n    util.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    util.assert(size.length === 2, () => `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n        `${size}.`);\n    util.assert($images.dtype === 'float32' || $images.dtype === 'int32', () => '`images` must have `int32` or `float32` as dtype');\n    util.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(ResizeNearestNeighbor, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const resizeNearestNeighbor = op({ resizeNearestNeighbor_ });\n//# sourceMappingURL=resize_nearest_neighbor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assert } from '../../util';\nimport { greaterEqual } from '../greater_equal';\nimport { lessEqual } from '../less_equal';\nimport { logicalAnd } from '../logical_and';\nimport { op } from '../operation';\nimport { range } from '../range';\nimport { reshape } from '../reshape';\nimport { scalar } from '../scalar';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { unstack } from '../unstack';\nimport { where } from '../where';\nimport { zeros } from '../zeros';\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction bandPart_(a, numLower, numUpper) {\n    assert(numLower % 1 === 0, () => `bandPart(): numLower must be an integer, got ${numLower}.`);\n    assert(numUpper % 1 === 0, () => `bandPart(): numUpper must be an integer, got ${numUpper}.`);\n    const $a = convertToTensor(a, 'a', 'bandPart');\n    assert($a.rank >= 2, () => `bandPart(): Rank must be at least 2, got ${$a.rank}.`);\n    const shape = $a.shape;\n    const [M, N] = $a.shape.slice(-2);\n    if (!(numLower <= M)) {\n        throw new Error(`bandPart(): numLower (${numLower})` +\n            ` must not be greater than the number of rows (${M}).`);\n    }\n    if (!(numUpper <= N)) {\n        throw new Error(`bandPart(): numUpper (${numUpper})` +\n            ` must not be greater than the number of columns (${N}).`);\n    }\n    if (numLower < 0) {\n        numLower = M;\n    }\n    if (numUpper < 0) {\n        numUpper = N;\n    }\n    const i = reshape(range(0, M, 1, 'int32'), [-1, 1]);\n    const j = range(0, N, 1, 'int32');\n    const ij = sub(i, j);\n    const inBand = logicalAnd(lessEqual(ij, scalar(+numLower, 'int32')), greaterEqual(ij, scalar(-numUpper, 'int32')));\n    const zero = zeros([M, N], $a.dtype);\n    return reshape(stack(unstack(reshape($a, [-1, M, N]))\n        .map(mat => where(inBand, mat, zero))), shape);\n}\nexport const bandPart = op({ bandPart_ });\n//# sourceMappingURL=band_part.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { assert } from '../../util';\nimport { div } from '../div';\nimport { mul } from '../mul';\nimport { norm } from '../norm';\nimport { op } from '../operation';\nimport { split } from '../split';\nimport { squeeze } from '../squeeze';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction gramSchmidt_(xs) {\n    let inputIsTensor2D;\n    if (Array.isArray(xs)) {\n        inputIsTensor2D = false;\n        assert(xs != null && xs.length > 0, () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n        const dim = xs[0].shape[0];\n        for (let i = 1; i < xs.length; ++i) {\n            assert(xs[i].shape[0] === dim, () => 'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n                `(${xs[i].shape[0]} vs. ${dim})`);\n        }\n    }\n    else {\n        inputIsTensor2D = true;\n        xs = split(xs, xs.shape[0], 0).map(x => squeeze(x, [0]));\n    }\n    assert(xs.length <= xs[0].shape[0], () => `Gram-Schmidt: Number of vectors (${xs.length}) exceeds ` +\n        `number of dimensions (${xs[0].shape[0]}).`);\n    const ys = [];\n    const xs1d = xs;\n    for (let i = 0; i < xs.length; ++i) {\n        ys.push(ENGINE.tidy(() => {\n            let x = xs1d[i];\n            if (i > 0) {\n                for (let j = 0; j < i; ++j) {\n                    const proj = mul(sum(mul(ys[j], x)), ys[j]);\n                    x = sub(x, proj);\n                }\n            }\n            return div(x, norm(x, 'euclidean'));\n        }));\n    }\n    if (inputIsTensor2D) {\n        return stack(ys, 0);\n    }\n    else {\n        return ys;\n    }\n}\nexport const gramSchmidt = op({ gramSchmidt_ });\n//# sourceMappingURL=gram_schmidt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { dispose } from '../../globals';\nimport { assert } from '../../util';\nimport { clone } from '../clone';\nimport { concat } from '../concat';\nimport { div } from '../div';\nimport { eye } from '../eye';\nimport { greater } from '../greater';\nimport { matMul } from '../mat_mul';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { norm } from '../norm';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { slice } from '../slice';\nimport { stack } from '../stack';\nimport { sub } from '../sub';\nimport { tensor2d } from '../tensor2d';\nimport { transpose } from '../transpose';\nimport { unstack } from '../unstack';\nimport { where } from '../where';\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x, fullMatrices = false) {\n    assert(x.rank >= 2, () => `qr() requires input tensor to have a rank >= 2, but got rank ${x.rank}`);\n    if (x.rank === 2) {\n        return qr2d(x, fullMatrices);\n    }\n    else {\n        // Rank > 2.\n        // TODO(cais): Below we split the input into individual 2D tensors,\n        //   perform QR decomposition on them and then stack the results back\n        //   together. We should explore whether this can be parallelized.\n        const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n            .reduce((value, prev) => value * prev);\n        const x2ds = unstack(reshape(x, [\n            outerDimsProd, x.shape[x.shape.length - 2],\n            x.shape[x.shape.length - 1]\n        ]), 0);\n        const q2ds = [];\n        const r2ds = [];\n        x2ds.forEach(x2d => {\n            const [q2d, r2d] = qr2d(x2d, fullMatrices);\n            q2ds.push(q2d);\n            r2ds.push(r2d);\n        });\n        const q = reshape(stack(q2ds, 0), x.shape);\n        const r = reshape(stack(r2ds, 0), x.shape);\n        return [q, r];\n    }\n}\nfunction qr2d(x, fullMatrices = false) {\n    return ENGINE.tidy(() => {\n        assert(x.shape.length === 2, () => `qr2d() requires a 2D Tensor, but got a ${x.shape.length}D Tensor.`);\n        const m = x.shape[0];\n        const n = x.shape[1];\n        let q = eye(m); // Orthogonal transform so far.\n        let r = clone(x); // Transformed matrix so far.\n        const one2D = tensor2d([[1]], [1, 1]);\n        let w = clone(one2D);\n        const iters = m >= n ? n : m;\n        for (let j = 0; j < iters; ++j) {\n            // This tidy within the for-loop ensures we clean up temporary\n            // tensors as soon as they are no longer needed.\n            const rTemp = r;\n            const wTemp = w;\n            const qTemp = q;\n            [w, r, q] = ENGINE.tidy(() => {\n                // Find H = I - tau * w * w', to put zeros below R(j, j).\n                const rjEnd1 = slice(r, [j, j], [m - j, 1]);\n                const normX = norm(rjEnd1);\n                const rjj = slice(r, [j, j], [1, 1]);\n                // The sign() function returns 0 on 0, which causes division by zero.\n                const s = where(greater(rjj, 0), tensor2d([[-1]]), tensor2d([[1]]));\n                const u1 = sub(rjj, mul(s, normX));\n                const wPre = div(rjEnd1, u1);\n                if (wPre.shape[0] === 1) {\n                    w = clone(one2D);\n                }\n                else {\n                    w = concat([\n                        one2D,\n                        slice(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]])\n                    ], 0);\n                }\n                const tau = neg(div(matMul(s, u1), normX));\n                // -- R := HR, Q := QH.\n                const rjEndAll = slice(r, [j, 0], [m - j, n]);\n                const tauTimesW = mul(tau, w);\n                const wT = transpose(w);\n                if (j === 0) {\n                    r = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n                }\n                else {\n                    const rTimesTau = sub(rjEndAll, matMul(tauTimesW, matMul(wT, rjEndAll)));\n                    r = concat([slice(r, [0, 0], [j, n]), rTimesTau], 0);\n                }\n                const tawTimesWT = transpose(tauTimesW);\n                const qAllJEnd = slice(q, [0, j], [m, q.shape[1] - j]);\n                if (j === 0) {\n                    q = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n                }\n                else {\n                    const qTimesTau = sub(qAllJEnd, matMul(matMul(qAllJEnd, w), tawTimesWT));\n                    q = concat([slice(q, [0, 0], [m, j]), qTimesTau], 1);\n                }\n                return [w, r, q];\n            });\n            dispose([rTemp, wTemp, qTemp]);\n        }\n        if (!fullMatrices && m > n) {\n            q = slice(q, [0, 0], [m, n]);\n            r = slice(r, [0, 0], [n, n]);\n        }\n        return [q, r];\n    });\n}\nexport const qr = op({ qr_ });\n//# sourceMappingURL=qr.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=loss_ops_utils.js.map","import { convertToTensor } from '../../tensor_util_env';\nimport { cast } from '../cast';\nimport { div } from '../div';\nimport { Reduction } from '../loss_ops_utils';\nimport { mean } from '../mean';\nimport { mul } from '../mul';\nimport { notEqual } from '../not_equal';\nimport { ones } from '../ones';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sum } from '../sum';\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction computeWeightedLoss_(losses, weights, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $losses = convertToTensor(losses, 'losses', 'computeWeightedLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'computeWeightedLoss');\n    }\n    const weightedLoss = ($weights == null) ? $losses : mul($losses, $weights);\n    if (reduction === Reduction.NONE) {\n        return weightedLoss;\n    }\n    if (reduction === Reduction.SUM) {\n        return sum(weightedLoss);\n    }\n    if (reduction === Reduction.MEAN) {\n        if ($weights == null) {\n            return mean(weightedLoss);\n        }\n        else {\n            const broadcastFactor = $losses.size / $weights.size;\n            const result = div(sum(weightedLoss), sum($weights));\n            return broadcastFactor > 1 ? div(result, scalar(broadcastFactor)) :\n                result;\n        }\n    }\n    if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n        if ($weights == null) {\n            return div(sum(weightedLoss), scalar($losses.size));\n        }\n        else {\n            const broadcastedWeights = mul($weights, ones($losses.shape));\n            const numNonZeros = cast(sum(notEqual(broadcastedWeights, scalar(0))), 'float32');\n            return div(sum(weightedLoss), numNonZeros);\n        }\n    }\n    throw Error(`Unknown reduction: ${reduction}`);\n}\nexport const computeWeightedLoss = op({ computeWeightedLoss_ });\n//# sourceMappingURL=compute_weighted_loss.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { Reduction } from '../loss_ops_utils';\nimport { op } from '../operation';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction absoluteDifference_(labels, predictions, weights, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = convertToTensor(labels, 'labels', 'absoluteDifference');\n    const $predictions = convertToTensor(predictions, 'predictions', 'absoluteDifference');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'absoluteDifference');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n    const losses = abs(sub($labels, $predictions));\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const absoluteDifference = op({ absoluteDifference_ });\n//# sourceMappingURL=absolute_difference.js.map","import { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction cosineDistance_(labels, predictions, axis, weights, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = convertToTensor(labels, 'labels', 'cosineDistance');\n    const $predictions = convertToTensor(predictions, 'predictions', 'cosineDistance');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'cosineDistance');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n    const one = scalar(1);\n    const losses = sub(one, sum(mul($labels, $predictions), axis, true));\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const cosineDistance = op({ cosineDistance_ });\n//# sourceMappingURL=cosine_distance.js.map","import { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { relu } from '../relu';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction hingeLoss_(labels, predictions, weights, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $labels = convertToTensor(labels, 'labels', 'hingeLoss');\n    const $predictions = convertToTensor(predictions, 'predictions', 'hingeLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'hingeLoss');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n    const one = scalar(1);\n    // Convert binary labels to (-1, 1)\n    $labels = sub(mul(scalar(2), $labels), one);\n    const losses = relu(sub(one, mul($labels, $predictions)));\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const hingeLoss = op({ hingeLoss_ });\n//# sourceMappingURL=hinge_loss.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { add } from '../add';\nimport { Reduction } from '../loss_ops_utils';\nimport { minimum } from '../minimum';\nimport { mul } from '../mul';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { square } from '../square';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction huberLoss_(labels, predictions, weights, delta = 1.0, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = convertToTensor(labels, 'labels', 'huberLoss');\n    const $predictions = convertToTensor(predictions, 'predictions', 'huberLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'huberLoss');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n    const deltaScalar = scalar(delta);\n    const error = abs(sub($predictions, $labels));\n    const quadratic = minimum(error, deltaScalar);\n    const linear = sub(error, quadratic);\n    const losses = add(mul(scalar(0.5), square(quadratic)), mul(deltaScalar, linear));\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const huberLoss = op({ huberLoss_ });\n//# sourceMappingURL=huber_loss.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { add } from '../add';\nimport { log } from '../log';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction logLoss_(labels, predictions, weights, epsilon = 1e-7, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = convertToTensor(labels, 'labels', 'logLoss');\n    const $predictions = convertToTensor(predictions, 'predictions', 'logLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'logLoss');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n    const one = scalar(1);\n    const epsilonScalar = scalar(epsilon);\n    const l1 = neg(mul($labels, log(add($predictions, epsilonScalar))));\n    const l2 = mul(sub(one, $labels), log(add(sub(one, $predictions), epsilonScalar)));\n    const losses = sub(l1, l2);\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const logLoss = op({ logLoss_ });\n//# sourceMappingURL=log_loss.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { Reduction } from '../loss_ops_utils';\nimport { op } from '../operation';\nimport { squaredDifference } from '../squared_difference';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction meanSquaredError_(labels, predictions, weights, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = convertToTensor(labels, 'labels', 'meanSquaredError');\n    const $predictions = convertToTensor(predictions, 'predictions', 'meanSquaredError');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'meanSquaredError');\n    }\n    assertShapesMatch($labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n    const losses = squaredDifference($labels, $predictions);\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const meanSquaredError = op({ meanSquaredError_ });\n//# sourceMappingURL=mean_squared_error.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { abs } from '../abs';\nimport { add } from '../add';\nimport { exp } from '../exp';\nimport { log1p } from '../log1p';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { relu } from '../relu';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { computeWeightedLoss } from './compute_weighted_loss';\nfunction sigmoidCrossEntropyWithLogits_(labels, logits) {\n    const $labels = convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n    const $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n    assertShapesMatch($labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n    /**\n     * Implementation Details:\n     *\n     * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n     *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n     *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n     *   = (1 - z) * x + log(1 + exp(-x))\n     *   = x - x * z + log(1 + exp(-x))\n     *\n     *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n     *     x - x * z + log(1 + exp(-x))\n     *   = log(exp(x)) - x * z + log(1 + exp(-x))\n     *   = - x * z + log(1 + exp(x))\n     *\n     * Hence, to ensure stability and avoid overflow, the implementation uses\n     * this equivalent formulation:\n     *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n     */\n    const maxOutput = relu($logits);\n    const outputXTarget = mul($logits, $labels);\n    const sigmoidOutput = log1p(exp(neg(abs($logits))));\n    return add(sub(maxOutput, outputXTarget), sigmoidOutput);\n}\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction sigmoidCrossEntropy_(multiClassLabels, logits, weights, labelSmoothing = 0, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $multiClassLabels = convertToTensor(multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n    const $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n    }\n    assertShapesMatch($multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = scalar(labelSmoothing);\n        const one = scalar(1);\n        const half = scalar(0.5);\n        $multiClassLabels =\n            add(mul($multiClassLabels, sub(one, labelSmoothingScalar)), mul(half, labelSmoothingScalar));\n    }\n    const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const sigmoidCrossEntropy = op({ sigmoidCrossEntropy_ });\n//# sourceMappingURL=sigmoid_cross_entropy.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { customGrad } from '../../gradients';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { assertShapesMatch } from '../../util';\nimport { add } from '../add';\nimport { expandShapeToKeepDim } from '../axis_util';\nimport { cast } from '../cast';\nimport { div } from '../div';\nimport { exp } from '../exp';\nimport { logSumExp } from '../log_sum_exp';\nimport { Reduction } from '../loss_ops_utils';\nimport { mul } from '../mul';\nimport { neg } from '../neg';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\nimport { scalar } from '../scalar';\nimport { sub } from '../sub';\nimport { sum } from '../sum';\nimport { computeWeightedLoss } from './compute_weighted_loss';\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_(labels, logits, dim = -1) {\n    if (dim === -1) {\n        dim = logits.rank - 1;\n    }\n    if (dim !== logits.rank - 1) {\n        throw Error(`Softmax cross entropy along a non-last dimension is not yet ` +\n            `supported. Labels / logits was rank ${logits.rank} ` +\n            `and dim was ${dim}`);\n    }\n    // Use a custom gradient for numerical stability.\n    const customOp = customGrad((labels, logits, save) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = logSumExp(logits, [dim], keepDims);\n        const logResult = sub(cast(logits, 'float32'), lse);\n        save([labels, logResult]);\n        const costVector = neg(mul(logResult, labels));\n        const value = sum(costVector, [dim]);\n        const gradFunc = (dy, saved) => {\n            const [labels, logResult] = saved;\n            const dyShape = expandShapeToKeepDim(dy.shape, [dim]);\n            return [\n                mul(reshape(dy, dyShape), sub(cast(labels, 'float32'), exp(logResult))),\n                mul(reshape(dy, dyShape), sub(exp(logResult), cast(labels, 'float32'))),\n            ];\n        };\n        return { value, gradFunc };\n    });\n    return customOp(labels, logits);\n}\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction softmaxCrossEntropy_(onehotLabels, logits, weights, labelSmoothing = 0, reduction = Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $onehotLabels = convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n    const $logits = convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n    }\n    assertShapesMatch($onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = scalar(labelSmoothing);\n        const one = scalar(1);\n        const numClasses = scalar($onehotLabels.shape[1]);\n        $onehotLabels =\n            add(mul($onehotLabels, sub(one, labelSmoothingScalar)), div(labelSmoothingScalar, numClasses));\n    }\n    const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n    return computeWeightedLoss(losses, $weights, reduction);\n}\nexport const softmaxCrossEntropy = op({ softmaxCrossEntropy_ });\n//# sourceMappingURL=softmax_cross_entropy.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n    fft,\n    ifft,\n    rfft,\n    irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n    hammingWindow,\n    hannWindow,\n    frame,\n    stft,\n};\n// Image Ops namespace\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nconst image = {\n    flipLeftRight,\n    resizeNearestNeighbor,\n    resizeBilinear,\n    rotateWithOffset,\n    cropAndResize,\n    nonMaxSuppression,\n    nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync\n};\n// linalg namespace\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n    bandPart,\n    gramSchmidt,\n    qr\n};\n// losses namespace;\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n    absoluteDifference,\n    computeWeightedLoss,\n    cosineDistance,\n    hingeLoss,\n    huberLoss,\n    logLoss,\n    meanSquaredError,\n    sigmoidCrossEntropy,\n    softmaxCrossEntropy\n};\n// Second level exports.\nexport { image, linalg, losses, spectral, fused, signal };\n//# sourceMappingURL=ops.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dispose } from '../globals';\nimport { variableGrads } from '../gradients';\nimport { scalar } from '../ops/ops';\nimport { Serializable } from '../serialization';\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nexport class Optimizer extends Serializable {\n    /**\n     * Executes `f()` and minimizes the scalar output of `f()` by computing\n     * gradients of y with respect to the list of trainable variables provided by\n     * `varList`. If no list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to minimize.\n     * @param returnCost Whether to return the scalar cost value produced by\n     * executing `f()`.\n     * @param varList An optional list of variables to update. If specified, only\n     * the trainable variables in varList will be updated by minimize. Defaults to\n     * all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    minimize(f, returnCost = false, varList) {\n        const { value, grads } = this.computeGradients(f, varList);\n        if (varList != null) {\n            const gradArray = varList.map(v => ({ name: v.name, tensor: grads[v.name] }));\n            this.applyGradients(gradArray);\n        }\n        else {\n            this.applyGradients(grads);\n        }\n        // Dispose gradients.\n        dispose(grads);\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    }\n    /**\n     * The number of iterations that this optimizer instance has been invoked for.\n     */\n    get iterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return this.iterations_;\n    }\n    incrementIterations() {\n        this.iterations_ = this.iterations + 1;\n    }\n    /**\n     * Executes f() and computes the gradient of the scalar output of f() with\n     * respect to the list of trainable variables provided by `varList`. If no\n     * list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to use for computing\n     * gradients with respect to variables.\n     * @param varList An optional list of variables to compute gradients with\n     * respect to. If specified, only the trainable variables in varList will have\n     * gradients computed with respect to. Defaults to all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    computeGradients(f, varList) {\n        return variableGrads(f, varList);\n    }\n    /**\n     * Dispose the variables (if any) owned by this optimizer instance.\n     */\n    dispose() {\n        if (this.iterations_ != null) {\n            dispose(this.iterations_);\n        }\n    }\n    async saveIterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return {\n            name: 'iter',\n            // TODO(cais): Use 'int64' type when available.\n            tensor: scalar(this.iterations_, 'int32')\n        };\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for this optimizer yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error(`setWeights() is not implemented for this optimizer class ` +\n            `${this.getClassName()}`);\n    }\n    /**\n     * Extract the first element of the weight values and set it\n     * as the iterations counter variable of this instance of optimizer.\n     *\n     * @param weightValues\n     * @returns Weight values with the first element consumed and excluded.\n     */\n    async extractIterations(weightValues) {\n        this.iterations_ = (await weightValues[0].tensor.data())[0];\n        return weightValues.slice(1);\n    }\n}\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance.minimize != null && instance.computeGradients != null &&\n            instance.applyGradients != null;\n    }\n});\n//# sourceMappingURL=optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/ops';\nimport { square } from '../ops/square';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\nexport class AdadeltaOptimizer extends Optimizer {\n    constructor(learningRate, rho, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.rho = rho;\n        this.epsilon = epsilon;\n        this.accumulatedGrads = [];\n        this.accumulatedUpdates = [];\n        if (epsilon == null) {\n            this.epsilon = ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedGrads[i] == null) {\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accum_grad`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedUpdates[i] == null) {\n                this.accumulatedUpdates[i] = {\n                    originalName: `${name}/accum_var`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n            tidy(() => {\n                const newAccumulatedGrad = add(mul(accumulatedGrad, this.rho), mul(square(gradient), 1 - this.rho));\n                const updates = mul(div(sqrt(add(accumulatedUpdate, this.epsilon)), sqrt(add(accumulatedGrad, this.epsilon))), gradient);\n                const newAccumulatedUpdate = add(mul(accumulatedUpdate, this.rho), mul(square(updates), 1 - this.rho));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                accumulatedUpdate.assign(newAccumulatedUpdate);\n                const newValue = add(mul(updates, -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedUpdates != null) {\n            dispose(this.accumulatedGrads.map(v => v.variable));\n            dispose(this.accumulatedUpdates.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedGrads, ...this.accumulatedUpdates];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedGrads =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedUpdates =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'rho': this.rho,\n            'epsilon': this.epsilon\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['rho'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdadeltaOptimizer.className = 'Adadelta'; // Name matters for Python compatibility.\nregisterClass(AdadeltaOptimizer);\n//# sourceMappingURL=adadelta_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { fill } from '../ops/fill';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\nexport class AdagradOptimizer extends Optimizer {\n    constructor(learningRate, initialAccumulatorValue = 0.1) {\n        super();\n        this.learningRate = learningRate;\n        this.initialAccumulatorValue = initialAccumulatorValue;\n        this.accumulatedGrads = [];\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = ENGINE.registeredVariables[name];\n            if (this.accumulatedGrads[i] == null) {\n                const trainable = false;\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accumulator`,\n                    variable: tidy(() => fill(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            tidy(() => {\n                const newAccumulatedGrad = add(accumulatedGrad, square(gradient));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                const newValue = add(mul(div(gradient, sqrt(add(newAccumulatedGrad, ENGINE.backend.epsilon()))), -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedGrads != null) {\n            dispose(this.accumulatedGrads.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulatedGrads.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulatedGrads = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'initialAccumulatorValue': this.initialAccumulatorValue,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['initialAccumulatorValue']);\n    }\n}\n/** @nocollapse */\nAdagradOptimizer.className = 'Adagrad'; // Note: Name matters for Python compatibility.\nregisterClass(AdagradOptimizer);\n//# sourceMappingURL=adagrad_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { pow } from '../ops/pow';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\nexport class AdamOptimizer extends Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedSecondMoment = [];\n        tidy(() => {\n            // accB* will be updated by batch.\n            this.accBeta1 = scalar(beta1).variable();\n            this.accBeta2 = scalar(beta2).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        tidy(() => {\n            const oneMinusAccBeta1 = sub(1, this.accBeta1);\n            const oneMinusAccBeta2 = sub(1, this.accBeta2);\n            varNames.forEach((name, i) => {\n                const value = ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: tidy(() => zerosLike(value).variable(trainable))\n                    };\n                }\n                if (this.accumulatedSecondMoment[i] == null) {\n                    this.accumulatedSecondMoment[i] = {\n                        originalName: `${name}/v`,\n                        variable: tidy(() => zerosLike(value).variable(trainable))\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const secondMoment = this.accumulatedSecondMoment[i].variable;\n                const newFirstMoment = add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n                const newSecondMoment = add(mul(secondMoment, this.beta2), mul(square(gradient), 1 - this.beta2));\n                const biasCorrectedFirstMoment = div(newFirstMoment, oneMinusAccBeta1);\n                const biasCorrectedSecondMoment = div(newSecondMoment, oneMinusAccBeta2);\n                firstMoment.assign(newFirstMoment);\n                secondMoment.assign(newSecondMoment);\n                const newValue = add(mul(div(biasCorrectedFirstMoment, add(sqrt(biasCorrectedSecondMoment), this.epsilon)), -this.learningRate), value);\n                value.assign(newValue);\n            });\n            this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n            this.accBeta2.assign(mul(this.accBeta2, this.beta2));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            dispose(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedSecondMoment != null) {\n            dispose(this.accumulatedSecondMoment.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        tidy(() => {\n            this.accBeta1.assign(pow(this.beta1, this.iterations_ + 1));\n            this.accBeta2.assign(pow(this.beta2, this.iterations_ + 1));\n        });\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedFirstMoment =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedSecondMoment =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdamOptimizer.className = 'Adam'; // Note: Name matters for Python compatibility.\nregisterClass(AdamOptimizer);\n//# sourceMappingURL=adam_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { abs } from '../ops/abs';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { maximum } from '../ops/maximum';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\nexport class AdamaxOptimizer extends Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null, decay = 0.0) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.decay = decay;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedWeightedInfNorm = [];\n        tidy(() => {\n            this.iteration = scalar(0).variable();\n            this.accBeta1 = scalar(beta1).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        tidy(() => {\n            const oneMinusAccBeta1 = sub(1, this.accBeta1);\n            const lr = div(-this.learningRate, add(mul(this.iteration, this.decay), 1));\n            variableNames.forEach((name, i) => {\n                const value = ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: zerosLike(value).variable(trainable)\n                    };\n                }\n                if (this.accumulatedWeightedInfNorm[i] == null) {\n                    this.accumulatedWeightedInfNorm[i] = {\n                        originalName: `${name}/v`,\n                        variable: zerosLike(value).variable(trainable)\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n                const newFirstMoment = add(mul(firstMoment, this.beta1), mul(gradient, 1 - this.beta1));\n                const ut0 = mul(weightedInfNorm, this.beta2);\n                const ut1 = abs(gradient);\n                const newWeightedInfNorm = maximum(ut0, ut1);\n                firstMoment.assign(newFirstMoment);\n                weightedInfNorm.assign(newWeightedInfNorm);\n                const newValue = add(mul(div(lr, oneMinusAccBeta1), div(newFirstMoment, add(newWeightedInfNorm, this.epsilon))), value);\n                value.assign(newValue);\n            });\n            this.iteration.assign(add(this.iteration, 1));\n            this.accBeta1.assign(mul(this.accBeta1, this.beta1));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.iteration.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            dispose(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            dispose(this.accumulatedWeightedInfNorm.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for Adamax yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error('setWeights() is not implemented for Adamax yet.');\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n            'decay': this.decay\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon'], config['decay']);\n    }\n}\n/** @nocollapse */\nAdamaxOptimizer.className = 'Adamax'; // Note: Name matters for Python compatbility.\nregisterClass(AdamaxOptimizer);\n//# sourceMappingURL=adamax_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { keep, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\nexport class SGDOptimizer extends Optimizer {\n    constructor(learningRate) {\n        super();\n        this.learningRate = learningRate;\n        this.setLearningRate(learningRate);\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        varNames.forEach((name, i) => {\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const value = ENGINE.registeredVariables[name];\n            tidy(() => {\n                const newValue = add(mul(this.c, gradient), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    /**\n     * Sets the learning rate of the optimizer.\n     */\n    setLearningRate(learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = keep(scalar(-learningRate));\n    }\n    dispose() {\n        this.c.dispose();\n    }\n    async getWeights() {\n        return [await this.saveIterations()];\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        if (weightValues.length !== 0) {\n            throw new Error('SGD optimizer does not have settable weights.');\n        }\n    }\n    getConfig() {\n        return { 'learningRate': this.learningRate };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate']);\n    }\n}\n/** @nocollapse */\nSGDOptimizer.className = 'SGD'; // Note: Name matters for Python compatibility.\nregisterClass(SGDOptimizer);\n//# sourceMappingURL=sgd_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { SGDOptimizer } from './sgd_optimizer';\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n    constructor(learningRate, momentum, useNesterov = false) {\n        super(learningRate);\n        this.learningRate = learningRate;\n        this.momentum = momentum;\n        this.useNesterov = useNesterov;\n        this.accumulations = [];\n        this.m = scalar(this.momentum);\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = ENGINE.registeredVariables[name];\n            if (this.accumulations[i] == null) {\n                const trainable = false;\n                this.accumulations[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            const accumulation = this.accumulations[i].variable;\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            tidy(() => {\n                let newValue;\n                const newAccumulation = add(mul(this.m, accumulation), gradient);\n                if (this.useNesterov) {\n                    newValue = add(mul(this.c, add(gradient, mul(newAccumulation, this.m))), value);\n                }\n                else {\n                    newValue = add(mul(this.c, newAccumulation), value);\n                }\n                accumulation.assign(newAccumulation);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.m.dispose();\n        if (this.accumulations != null) {\n            dispose(this.accumulations.map(v => v.variable));\n        }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n    setMomentum(momentum) {\n        this.momentum = momentum;\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulations.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulations = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'momentum': this.momentum,\n            'useNesterov': this.useNesterov\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n}\n/** @nocollapse */\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\nregisterClass(MomentumOptimizer);\n//# sourceMappingURL=momentum_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { dispose, tidy } from '../globals';\nimport { add } from '../ops/add';\nimport { div } from '../ops/div';\nimport { mul } from '../ops/mul';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nimport { zerosLike } from '../ops/zeros_like';\nimport { registerClass } from '../serialization';\nimport { Optimizer } from './optimizer';\n/** @doclink Optimizer */\nexport class RMSPropOptimizer extends Optimizer {\n    constructor(learningRate, decay = 0.9, momentum = 0.0, epsilon = null, centered = false) {\n        super();\n        this.learningRate = learningRate;\n        this.decay = decay;\n        this.momentum = momentum;\n        this.epsilon = epsilon;\n        this.accumulatedMeanSquares = [];\n        this.accumulatedMoments = [];\n        this.accumulatedMeanGrads = [];\n        this.centered = centered;\n        if (epsilon == null) {\n            this.epsilon = ENGINE.backend.epsilon();\n        }\n        if (learningRate == null) {\n            throw new Error(`learningRate for RMSPropOptimizer must be defined.`);\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedMeanSquares[i] == null) {\n                this.accumulatedMeanSquares[i] = {\n                    originalName: `${name}/rms`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMoments[i] == null) {\n                this.accumulatedMoments[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMeanGrads[i] == null && this.centered) {\n                this.accumulatedMeanGrads[i] = {\n                    originalName: `${name}/mg`,\n                    variable: tidy(() => zerosLike(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n            const accumulatedMoments = this.accumulatedMoments[i].variable;\n            tidy(() => {\n                const newAccumulatedMeanSquare = add(mul(accumulatedMeanSquare, this.decay), mul(square(gradient), 1 - this.decay));\n                if (this.centered) {\n                    const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n                    // Centered gradient\n                    const newAccumulatedMeanGrad = add(mul(accumulatedMeanGrad, this.decay), mul(gradient, 1 - this.decay));\n                    const gradContribution = div(mul(gradient, this.learningRate), sqrt(sub(newAccumulatedMeanSquare, add(square(newAccumulatedMeanGrad), this.epsilon))));\n                    const newAccumulatedMoments = add(mul(accumulatedMoments, this.momentum), gradContribution);\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = sub(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    // Plain gradient\n                    const newAccumulatedMeanSquare = add(mul(accumulatedMeanSquare, this.decay), mul(square(gradient), 1 - this.decay));\n                    const newAccumulatedMoments = add(mul(accumulatedMoments, this.momentum), div(mul(gradient, this.learningRate), sqrt(add(newAccumulatedMeanSquare, this.epsilon))));\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = sub(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedMeanSquares != null) {\n            dispose(this.accumulatedMeanSquares.map(v => v.variable));\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            dispose(this.accumulatedMeanGrads.map(v => v.variable));\n        }\n        if (this.accumulatedMoments != null) {\n            dispose(this.accumulatedMoments.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n        if (this.centered) {\n            variables.push(...this.accumulatedMeanGrads);\n        }\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = this.centered ? weightValues.length / 3 : weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedMeanSquares =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedMoments =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        if (this.centered) {\n            this.accumulatedMeanGrads =\n                weightValues.slice(variableCount * 2, variableCount * 3)\n                    .map(v => ({\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                }));\n        }\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'decay': this.decay,\n            'momentum': this.momentum,\n            'epsilon': this.epsilon,\n            'centered': this.centered\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['decay'], config['momentum'], config['epsilon'], config['centered']);\n    }\n}\n/** @nocollapse */\nRMSPropOptimizer.className = 'RMSProp'; // Note: Name matters for Python compatibility.\nregisterClass(RMSPropOptimizer);\n//# sourceMappingURL=rmsprop_optimizer.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AdadeltaOptimizer } from './adadelta_optimizer';\nimport { AdagradOptimizer } from './adagrad_optimizer';\nimport { AdamOptimizer } from './adam_optimizer';\nimport { AdamaxOptimizer } from './adamax_optimizer';\nimport { MomentumOptimizer } from './momentum_optimizer';\nimport { RMSPropOptimizer } from './rmsprop_optimizer';\nimport { SGDOptimizer } from './sgd_optimizer';\nexport class OptimizerConstructors {\n    /**\n     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n     *\n     * ```js\n     * // Fit a quadratic function by learning the coefficients a, b, c.\n     * const xs = tf.tensor1d([0, 1, 2, 3]);\n     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n     *\n     * const a = tf.scalar(Math.random()).variable();\n     * const b = tf.scalar(Math.random()).variable();\n     * const c = tf.scalar(Math.random()).variable();\n     *\n     * // y = a * x^2 + b * x + c.\n     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n     * const loss = (pred, label) => pred.sub(label).square().mean();\n     *\n     * const learningRate = 0.01;\n     * const optimizer = tf.train.sgd(learningRate);\n     *\n     * // Train the model.\n     * for (let i = 0; i < 10; i++) {\n     *   optimizer.minimize(() => loss(f(xs), ys));\n     * }\n     *\n     * // Make predictions.\n     * console.log(\n     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n     * const preds = f(xs).dataSync();\n     * preds.forEach((pred, i) => {\n     *   console.log(`x: ${i}, pred: ${pred}`);\n     * });\n     * ```\n     *\n     * @param learningRate The learning rate to use for the SGD algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static sgd(learningRate) {\n        return new SGDOptimizer(learningRate);\n    }\n    /**\n     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n     * descent.\n     *\n     * See\n     * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n     * http://proceedings.mlr.press/v28/sutskever13.pdf)\n     *\n     * @param learningRate The learning rate to use for the Momentum gradient\n     * descent algorithm.\n     * @param momentum The momentum to use for the momentum gradient descent\n     * algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static momentum(learningRate, momentum, useNesterov = false) {\n        return new MomentumOptimizer(learningRate, momentum, useNesterov);\n    }\n    /**\n     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n     * descent. This implementation uses plain momentum and is not centered\n     * version of RMSProp.\n     *\n     * See\n     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n     *\n     * @param learningRate The learning rate to use for the RMSProp gradient\n     * descent algorithm.\n     * @param decay The discounting factor for the history/coming gradient.\n     * @param momentum The momentum to use for the RMSProp gradient descent\n     * algorithm.\n     * @param epsilon Small value to avoid zero denominator.\n     * @param centered If true, gradients are normalized by the estimated\n     * variance of the gradient.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static rmsprop(learningRate, decay = .9, momentum = 0.0, epsilon = null, centered = false) {\n        return new RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    }\n    /**\n     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adam gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adam(learningRate = 0.001, beta1 = 0.9, beta2 = 0.999, epsilon = null) {\n        return new AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n     *\n     * @param learningRate The learning rate to use for the Adadelta gradient\n     * descent algorithm.\n     * @param rho The learning rate decay over each update.\n     * @param epsilon A constant epsilon used to better condition the grad\n     * update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adadelta(learningRate = .001, rho = .95, epsilon = null) {\n        return new AdadeltaOptimizer(learningRate, rho, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adamax gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     * @param decay The learning rate decay over each update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adamax(learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon = null, decay = 0.0) {\n        return new AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    }\n    /**\n     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n     * See\n     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n     * or\n     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n     *\n     * @param learningRate The learning rate to use for the Adagrad gradient\n     * descent algorithm.\n     * @param initialAccumulatorValue Starting value for the accumulators, must be\n     * positive.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adagrad(learningRate, initialAccumulatorValue = 0.1) {\n        return new AdagradOptimizer(learningRate, initialAccumulatorValue);\n    }\n}\n//# sourceMappingURL=optimizer_constructors.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// So typings can propagate.\nimport { AdadeltaOptimizer } from './optimizers/adadelta_optimizer';\nimport { AdagradOptimizer } from './optimizers/adagrad_optimizer';\nimport { AdamOptimizer } from './optimizers/adam_optimizer';\nimport { AdamaxOptimizer } from './optimizers/adamax_optimizer';\nimport { MomentumOptimizer } from './optimizers/momentum_optimizer';\nimport { OptimizerConstructors } from './optimizers/optimizer_constructors';\nimport { RMSPropOptimizer } from './optimizers/rmsprop_optimizer';\nimport { SGDOptimizer } from './optimizers/sgd_optimizer';\n// tslint:disable-next-line:no-unused-expression\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer,\n    RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\nexport const train = {\n    sgd: OptimizerConstructors.sgd,\n    momentum: OptimizerConstructors.momentum,\n    adadelta: OptimizerConstructors.adadelta,\n    adagrad: OptimizerConstructors.adagrad,\n    rmsprop: OptimizerConstructors.rmsprop,\n    adamax: OptimizerConstructors.adamax,\n    adam: OptimizerConstructors.adam\n};\n//# sourceMappingURL=train.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst delayCallback = (() => {\n    if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame;\n    }\n    else if (typeof setImmediate !== 'undefined') {\n        return setImmediate;\n    }\n    return (f) => f(); // no delays\n})();\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction nextFrame() {\n    return new Promise(resolve => delayCallback(() => resolve()));\n}\nexport { nextFrame };\n//# sourceMappingURL=browser_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nexport function assertParamsConsistent(shapes, axis) {\n    const rank = shapes[0].length;\n    shapes.forEach((shape, i) => {\n        util.assert(shape.length === rank, () => `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n    });\n    util.assert(axis >= 0 && axis < rank, () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n    const firstShape = shapes[0];\n    shapes.forEach((shape, i) => {\n        for (let r = 0; r < rank; r++) {\n            util.assert((r === axis) || (shape[r] === firstShape[r]), () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n                `does not match the shape of the rest (${firstShape}) ` +\n                `along the non-concatenated axis ${i}.`);\n        }\n    });\n}\nexport function computeOutShape(shapes, axis) {\n    const outputShape = shapes[0].slice();\n    for (let i = 1; i < shapes.length; i++) {\n        outputShape[axis] += shapes[i][axis];\n    }\n    return outputShape;\n}\n//# sourceMappingURL=concat_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nimport { nearestDivisor } from '../util';\nexport const PARALLELIZE_THRESHOLD = 30;\nexport function computeOptimalWindowSize(inSize) {\n    if (inSize <= PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\n//# sourceMappingURL=reduce_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Returns the image center in pixels.\nexport function getImageCenter(center, imageHeight, imageWidth) {\n    const centerX = imageWidth * (typeof center === 'number' ? center : center[0]);\n    const centerY = imageHeight * (typeof center === 'number' ? center : center[1]);\n    return [centerX, centerY];\n}\n//# sourceMappingURL=rotate_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshaped(inputShape, blockShape, prod, batchToSpace = true) {\n    let reshaped = [];\n    if (batchToSpace) {\n        reshaped = reshaped.concat(blockShape.slice(0));\n        reshaped.push(inputShape[0] / prod);\n        reshaped = reshaped.concat(inputShape.slice(1));\n    }\n    else {\n        reshaped = reshaped.concat(inputShape[0]);\n        const spatialLength = blockShape.length;\n        for (let i = 0; i < spatialLength; ++i) {\n            reshaped =\n                reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n        }\n        reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n    }\n    return reshaped;\n}\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getPermuted(reshapedRank, blockShapeRank, batchToSpace = true) {\n    const permuted = [];\n    if (batchToSpace) {\n        permuted.push(blockShapeRank);\n        for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {\n            if (i <= 2 * blockShapeRank) {\n                permuted.push(i);\n                permuted.push(i - (blockShapeRank + 1));\n            }\n            else {\n                permuted.push(i);\n            }\n        }\n    }\n    else {\n        const permutedBeforeBatch = [];\n        const permutedAfterBatch = [];\n        for (let i = 1; i < reshapedRank; ++i) {\n            if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n                permutedAfterBatch.push(i);\n            }\n            else {\n                permutedBeforeBatch.push(i);\n            }\n        }\n        permuted.push(...permutedBeforeBatch);\n        permuted.push(0);\n        permuted.push(...permutedAfterBatch);\n    }\n    return permuted;\n}\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshapedPermuted(inputShape, blockShape, prod, batchToSpace = true) {\n    const reshapedPermuted = [];\n    if (batchToSpace) {\n        reshapedPermuted.push(inputShape[0] / prod);\n    }\n    else {\n        reshapedPermuted.push(inputShape[0] * prod);\n    }\n    for (let i = 1; i < inputShape.length; ++i) {\n        if (i <= blockShape.length) {\n            if (batchToSpace) {\n                reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n            }\n            else {\n                reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n            }\n        }\n        else {\n            reshapedPermuted.push(inputShape[i]);\n        }\n    }\n    return reshapedPermuted;\n}\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nexport function getSliceBeginCoords(crops, blockShape) {\n    const sliceBeginCoords = [0];\n    for (let i = 0; i < blockShape; ++i) {\n        sliceBeginCoords.push(crops[i][0]);\n    }\n    return sliceBeginCoords;\n}\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getSliceSize(uncroppedShape, crops, blockShape) {\n    const sliceSize = uncroppedShape.slice(0, 1);\n    for (let i = 0; i < blockShape; ++i) {\n        sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n    }\n    return sliceSize;\n}\n//# sourceMappingURL=array_ops_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexport const SELU_SCALE = 1.0507009873554804934193349852946;\n//# sourceMappingURL=selu_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const ERF_P = 0.3275911;\nexport const ERF_A1 = 0.254829592;\nexport const ERF_A2 = -0.284496736;\nexport const ERF_A3 = 1.421413741;\nexport const ERF_A4 = -1.453152027;\nexport const ERF_A5 = 1.061405429;\n//# sourceMappingURL=erf_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nexport function warn(...msg) {\n    if (!env().getBool('IS_TEST')) {\n        console.warn(...msg);\n    }\n}\nexport function log(...msg) {\n    if (!env().getBool('IS_TEST')) {\n        console.log(...msg);\n    }\n}\n//# sourceMappingURL=log.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nexport function mergeRealAndImagArrays(real, imag) {\n    if (real.length !== imag.length) {\n        throw new Error(`Cannot merge real and imag arrays of different lengths. real:` +\n            `${real.length}, imag: ${imag.length}.`);\n    }\n    const result = new Float32Array(real.length * 2);\n    for (let i = 0; i < result.length; i += 2) {\n        result[i] = real[i / 2];\n        result[i + 1] = imag[i / 2];\n    }\n    return result;\n}\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nexport function splitRealAndImagArrays(complex) {\n    const real = new Float32Array(complex.length / 2);\n    const imag = new Float32Array(complex.length / 2);\n    for (let i = 0; i < complex.length; i += 2) {\n        real[i / 2] = complex[i];\n        imag[i / 2] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithEvenIndex(complex) {\n    const len = Math.ceil(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 0; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithOddIndex(complex) {\n    const len = Math.floor(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 2; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nexport function getComplexWithIndex(complex, index) {\n    const real = complex[index * 2];\n    const imag = complex[index * 2 + 1];\n    return { real, imag };\n}\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nexport function assignToTypedArray(data, real, imag, index) {\n    data[index * 2] = real;\n    data[index * 2 + 1] = imag;\n}\n/**\n * Make the list of exponent terms used by FFT.\n */\nexport function exponents(n, inverse) {\n    const real = new Float32Array(n / 2);\n    const imag = new Float32Array(n / 2);\n    for (let i = 0; i < Math.ceil(n / 2); i++) {\n        const x = (inverse ? 2 : -2) * Math.PI * (i / n);\n        real[i] = Math.cos(x);\n        imag[i] = Math.sin(x);\n    }\n    return { real, imag };\n}\n/**\n * Make the exponent term used by FFT.\n */\nexport function exponent(k, n, inverse) {\n    const x = (inverse ? 2 : -2) * Math.PI * (k / n);\n    const real = Math.cos(x);\n    const imag = Math.sin(x);\n    return { real, imag };\n}\n//# sourceMappingURL=complex_util.js.map","import { assert } from '../util';\n/**\n * Prepare the split size array. When the input is a number, the axis is evenly\n * divided among the split size. When the input contains the negative value, the\n * rest of the axis is allocated toward that.\n */\nexport function prepareSplitSize(x, numOrSizeSplits, axis = 0) {\n    let splitSizes = [];\n    if (typeof (numOrSizeSplits) === 'number') {\n        assert(x.shape[axis] % numOrSizeSplits === 0, () => 'Number of splits must evenly divide the axis.');\n        splitSizes =\n            new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n    }\n    else {\n        const numOfNegs = numOrSizeSplits.reduce((count, value) => {\n            if (value === -1) {\n                count += 1;\n            }\n            return count;\n        }, 0);\n        assert(numOfNegs <= 1, () => 'There should be only one negative value in split array.');\n        const negIndex = numOrSizeSplits.indexOf(-1);\n        // Allow the number of split array to be -1, which indicates the rest\n        // of dimension is allocated to that split.\n        if (negIndex !== -1) {\n            const total = numOrSizeSplits.reduce((a, b) => b > 0 ? a + b : a);\n            numOrSizeSplits[negIndex] = x.shape[axis] - total;\n        }\n        assert(x.shape[axis] === numOrSizeSplits.reduce((a, b) => a + b), () => 'The sum of sizes must match the size of the axis dimension.');\n        splitSizes = numOrSizeSplits;\n    }\n    return splitSizes;\n}\n//# sourceMappingURL=split_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nearestDivisor } from '../util';\nimport { PARALLELIZE_THRESHOLD } from './reduce_util';\nexport function segOpComputeOptimalWindowSize(inSize, numSegments) {\n    let done = false;\n    let res;\n    if (inSize <= PARALLELIZE_THRESHOLD) {\n        res = inSize;\n        done = true;\n    }\n    else {\n        res = nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n    }\n    while (!done) {\n        if (res > numSegments || res === inSize) {\n            done = true;\n        }\n        else {\n            res = nearestDivisor(inSize, res + 1);\n        }\n    }\n    return res;\n}\nexport function computeOutShape(aShape, axis, numSegments) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (dim !== axis) {\n            outShape.push(aShape[dim]);\n        }\n        else {\n            outShape.push(numSegments);\n        }\n    }\n    return outShape;\n}\nexport function collectGatherOpShapeInfo(x, indices, axis, batchDims) {\n    const indicesRank = indices.shape.length;\n    const xRank = x.shape.length;\n    if (batchDims !== 0) {\n        if (batchDims < -indicesRank || batchDims > indicesRank) {\n            throw new Error(`Expect batchDims in the range of [-${indicesRank}, ${indicesRank}], but got ${batchDims}`);\n        }\n    }\n    if (batchDims < 0) {\n        batchDims += indicesRank;\n    }\n    if (batchDims > xRank) {\n        throw new Error(`batchDims (${batchDims}) must be less than rank(x) (\n    ${xRank}).`);\n    }\n    if (axis < batchDims) {\n        throw new Error(`batchDims (${batchDims}) must be less than or equal to axis (${axis}).`);\n    }\n    for (let i = 0; i < batchDims; ++i) {\n        if (x.shape[i] !== indices.shape[i]) {\n            throw new Error(`x.shape[${i}]: ${x.shape[i]} should be equal to indices.shape[${i}]: ${indices.shape[i]}.`);\n        }\n    }\n    const dimSize = x.shape[axis];\n    const outputShape = [];\n    let batchSize = 1;\n    let outerSize = 1;\n    let sliceSize = 1;\n    for (let i = 0; i < batchDims; ++i) {\n        outputShape.push(x.shape[i]);\n        batchSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < axis; i++) {\n        outputShape.push(x.shape[i]);\n        outerSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < indicesRank; i++) {\n        outputShape.push(indices.shape[i]);\n    }\n    for (let i = axis + 1; i < xRank; i++) {\n        outputShape.push(x.shape[i]);\n        sliceSize *= x.shape[i];\n    }\n    return { batchSize, sliceSize, outerSize, dimSize, outputShape };\n}\n//# sourceMappingURL=segment_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { decodeString, encodeString } from '../util';\n// Utilities needed by backend consumers of tf-core.\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/reduce_util';\nimport * as slice_util from '../ops/slice_util';\nexport { slice_util };\nexport { upcastType } from '../types';\nexport * from '../ops/rotate_util';\nexport * from '../ops/array_ops_util';\nexport * from '../ops/gather_nd_util';\nexport * from '../ops/scatter_nd_util';\nexport * from '../ops/selu_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/erf_util';\nexport * from '../log';\nexport * from '../backends/complex_util';\nexport * from '../ops/split_util';\nimport * as segment_util from '../ops/segment_util';\nexport { segment_util };\nexport function fromUint8ToStringArray(vals) {\n    try {\n        // Decode the bytes into string.\n        return vals.map(val => decodeString(val));\n    }\n    catch (err) {\n        throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);\n    }\n}\nexport function fromStringArrayToUint8(strings) {\n    return strings.map(s => encodeString(s));\n}\n//# sourceMappingURL=backend_util.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport { nonMaxSuppressionV3Impl, nonMaxSuppressionV4Impl, nonMaxSuppressionV5Impl } from './non_max_suppression_impl';\nexport { whereImpl } from './where_impl';\n//# sourceMappingURL=kernel_impls.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code.\nimport './base_side_effects';\n// All exports from this package should be in base.\nexport * from './base';\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst contexts = {};\nconst WEBGL_ATTRIBUTES = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: true\n};\nexport function clearWebGLContext(webGLVersion) {\n    delete contexts[webGLVersion];\n}\nexport function setWebGLContext(webGLVersion, gl) {\n    contexts[webGLVersion] = gl;\n}\nexport function getWebGLContext(webGLVersion) {\n    if (!(webGLVersion in contexts)) {\n        const newCtx = getWebGLRenderingContext(webGLVersion);\n        if (newCtx !== null) {\n            contexts[webGLVersion] = newCtx;\n        }\n        else {\n            console.log('Could not get context for WebGL version', webGLVersion);\n            return null;\n        }\n    }\n    const gl = contexts[webGLVersion];\n    if (gl.isContextLost()) {\n        delete contexts[webGLVersion];\n        return getWebGLContext(webGLVersion);\n    }\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.DITHER);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SAMPLE_COVERAGE);\n    gl.enable(gl.SCISSOR_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    return contexts[webGLVersion];\n}\nfunction createCanvas(webGLVersion) {\n    if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n        return new OffscreenCanvas(300, 150);\n    }\n    else if (typeof document !== 'undefined') {\n        return document.createElement('canvas');\n    }\n    else {\n        throw new Error('Cannot create a canvas in this context');\n    }\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion !== 1 && webGLVersion !== 2) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    const canvas = createCanvas(webGLVersion);\n    canvas.addEventListener('webglcontextlost', (ev) => {\n        ev.preventDefault();\n        delete contexts[webGLVersion];\n    }, false);\n    if (webGLVersion === 1) {\n        return (canvas.getContext('webgl', WEBGL_ATTRIBUTES) ||\n            canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES));\n    }\n    return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}\n//# sourceMappingURL=canvas_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nexport var PackingScheme;\n(function (PackingScheme) {\n    /**\n     * All values in a single texel are densely packed without any constraints.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 4]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   010|011   020|021\n     * -------   -------   -------\n     * 002|003   012|013   022|023\n     *\n     * 100|101   110|111   120|121\n     * -------   -------   -------\n     * 102|103   112|113   122|123\n     *\n     */\n    PackingScheme[PackingScheme[\"DENSE\"] = 0] = \"DENSE\";\n    /**\n     * Single texels contain only values from the same batch, and from adjacent\n     * rows and columns.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 5]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   002|003   004|xxx   020|021   022|023   024|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     * 100|101   102|103   104|xxx   120|121   122|123   124|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     */\n    PackingScheme[PackingScheme[\"SHARED_BATCH\"] = 1] = \"SHARED_BATCH\";\n})(PackingScheme || (PackingScheme = {}));\nexport var TextureUsage;\n(function (TextureUsage) {\n    TextureUsage[TextureUsage[\"RENDER\"] = 0] = \"RENDER\";\n    TextureUsage[TextureUsage[\"UPLOAD\"] = 1] = \"UPLOAD\";\n    TextureUsage[TextureUsage[\"PIXELS\"] = 2] = \"PIXELS\";\n    TextureUsage[TextureUsage[\"DOWNLOAD\"] = 3] = \"DOWNLOAD\";\n})(TextureUsage || (TextureUsage = {}));\nexport var PhysicalTextureType;\n(function (PhysicalTextureType) {\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT16\"] = 0] = \"UNPACKED_FLOAT16\";\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT32\"] = 1] = \"UNPACKED_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_4X1_UNSIGNED_BYTE\"] = 2] = \"PACKED_4X1_UNSIGNED_BYTE\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT32\"] = 3] = \"PACKED_2X2_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT16\"] = 4] = \"PACKED_2X2_FLOAT16\";\n})(PhysicalTextureType || (PhysicalTextureType = {}));\nexport function getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nexport function getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nexport function getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\n/**\n * Get shape for densely packed RGBA texture.\n */\nexport function getDenseTexShape(shape) {\n    const size = util.sizeFromShape(shape);\n    const texelsNeeded = Math.ceil(size / 4);\n    return util.sizeToSquarishShape(texelsNeeded);\n}\nexport function getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(`unpackedSize (${unpackedSize}) must be a multiple of ` +\n            `${channelsPerTexture}`);\n    }\n    return unpackedSize / channelsPerTexture;\n}\nexport function decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    const requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(`matrix length (${matrix.length}) must be >= ${requiredSize}`);\n    }\n    let dst = 0;\n    for (let src = 0; src < unpackedArray.length; src += 4) {\n        for (let c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nexport function getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [\n        Math.max(1, Math.ceil(columns / 2)), Math.max(1, Math.ceil(rows / 2))\n    ];\n}\nexport function getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    const [w, h] = getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return w * h * 4;\n}\nexport function getTextureConfig(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    // tslint:disable-next-line:no-any\n    const glany = gl;\n    let internalFormatFloat;\n    let internalFormatHalfFloat;\n    let internalFormatPackedHalfFloat;\n    let internalFormatPackedFloat;\n    let textureFormatFloat;\n    let downloadTextureFormat;\n    let downloadUnpackNumChannels;\n    let defaultNumChannels;\n    let textureTypeHalfFloat;\n    let textureTypeFloat;\n    if (env().getNumber('WEBGL_VERSION') === 2) {\n        internalFormatFloat = glany.R32F;\n        internalFormatHalfFloat = glany.R16F;\n        internalFormatPackedHalfFloat = glany.RGBA16F;\n        internalFormatPackedFloat = glany.RGBA32F;\n        textureFormatFloat = glany.RED;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 1;\n        textureTypeHalfFloat = glany.HALF_FLOAT;\n        textureTypeFloat = glany.FLOAT;\n    }\n    else {\n        internalFormatFloat = gl.RGBA;\n        internalFormatHalfFloat = gl.RGBA;\n        internalFormatPackedHalfFloat = gl.RGBA;\n        internalFormatPackedFloat = glany.RGBA;\n        textureFormatFloat = gl.RGBA;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 4;\n        textureTypeHalfFloat = textureHalfFloatExtension != null ?\n            textureHalfFloatExtension.HALF_FLOAT_OES :\n            null;\n        textureTypeFloat = gl.FLOAT;\n    }\n    downloadTextureFormat = gl.RGBA;\n    return {\n        internalFormatFloat,\n        internalFormatHalfFloat,\n        internalFormatPackedHalfFloat,\n        internalFormatPackedFloat,\n        textureFormatFloat,\n        downloadTextureFormat,\n        downloadUnpackNumChannels,\n        defaultNumChannels,\n        textureTypeHalfFloat,\n        textureTypeFloat\n    };\n}\n//# sourceMappingURL=tex_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext } from './canvas_util';\nimport { getTextureConfig } from './tex_util';\nexport function callAndCheck(gl, func) {\n    const returnValue = func();\n    if (env().getBool('DEBUG')) {\n        checkWebGLError(gl);\n    }\n    return returnValue;\n}\nfunction checkWebGLError(gl) {\n    const error = gl.getError();\n    if (error !== gl.NO_ERROR) {\n        throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n    }\n}\n// https://en.wikipedia.org/wiki/Half-precision_floating-point_format\nconst MIN_FLOAT16 = 5.96e-8;\nconst MAX_FLOAT16 = 65504;\nexport function canBeRepresented(num) {\n    if (env().getBool('WEBGL_RENDER_FLOAT32_ENABLED') || num === 0 ||\n        (MIN_FLOAT16 < Math.abs(num) && Math.abs(num) < MAX_FLOAT16)) {\n        return true;\n    }\n    return false;\n}\nexport function getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return `Unknown error code ${status}`;\n    }\n}\nexport function getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, () => gl.getExtension(extensionName), 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexport function createVertexShader(gl, vertexShaderSource) {\n    const vertexShader = throwIfNull(gl, () => gl.createShader(gl.VERTEX_SHADER), 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, () => gl.shaderSource(vertexShader, vertexShaderSource));\n    callAndCheck(gl, () => gl.compileShader(vertexShader));\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexport function createFragmentShader(gl, fragmentShaderSource) {\n    const fragmentShader = throwIfNull(gl, () => gl.createShader(gl.FRAGMENT_SHADER), 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, () => gl.shaderSource(fragmentShader, fragmentShaderSource));\n    callAndCheck(gl, () => gl.compileShader(fragmentShader));\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nconst lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    const lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(`Couldn't parse line number in error: ${shaderInfoLog}`);\n        console.log(shaderSource);\n        return;\n    }\n    const lineNumber = +lineNumberRegexResult[1];\n    const shaderLines = shaderSource.split('\\n');\n    const pad = shaderLines.length.toString().length + 2;\n    const linesWithLineNumbers = shaderLines.map((line, lineNumber) => util.rightPad((lineNumber + 1).toString(), pad) + line);\n    let maxLineLength = 0;\n    for (let i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    const beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    const errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    const afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(`%c ${util.rightPad(errorLine[0], maxLineLength)}`, 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nexport function createProgram(gl) {\n    return throwIfNull(gl, () => gl.createProgram(), 'Unable to create WebGLProgram.');\n}\nexport function linkProgram(gl, program) {\n    callAndCheck(gl, () => gl.linkProgram(program));\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexport function validateProgram(gl, program) {\n    callAndCheck(gl, () => gl.validateProgram(program));\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexport function createStaticVertexBuffer(gl, data) {\n    const buffer = throwIfNull(gl, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n    callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW));\n    return buffer;\n}\nexport function createStaticIndexBuffer(gl, data) {\n    const buffer = throwIfNull(gl, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n    callAndCheck(gl, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW));\n    return buffer;\n}\nexport function getNumChannels() {\n    if (env().getNumber('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexport function createTexture(gl) {\n    return throwIfNull(gl, () => gl.createTexture(), 'Unable to create WebGLTexture.');\n}\nexport function validateTextureSize(width, height) {\n    const maxTextureSize = env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if ((width <= 0) || (height <= 0)) {\n        const requested = `[${width}x${height}]`;\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        const requested = `[${width}x${height}]`;\n        const max = `[${maxTextureSize}x${maxTextureSize}]`;\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexport function createFramebuffer(gl) {\n    return throwIfNull(gl, () => gl.createFramebuffer(), 'Unable to create WebGLFramebuffer.');\n}\nexport function bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    const loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        // The GPU compiler decided to strip out this attribute because it's unused,\n        // thus no need to bind.\n        return false;\n    }\n    callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes));\n    callAndCheck(gl, () => gl.enableVertexAttribArray(loc));\n    return true;\n}\nexport function bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n    callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n}\nexport function unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n    callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nexport function getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, () => gl.getUniformLocation(program, uniformName), 'uniform \"' + uniformName + '\" not present in program.');\n}\nexport function getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexport function bindTextureToProgramUniformSampler(gl, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, () => bindTextureUnit(gl, texture, textureUnit));\n    callAndCheck(gl, () => gl.uniform1i(uniformSamplerLocation, textureUnit));\n}\nexport function bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n    callAndCheck(gl, () => gl.viewport(0, 0, gl.canvas.width, gl.canvas.height));\n    callAndCheck(gl, () => gl.scissor(0, 0, gl.canvas.width, gl.canvas.height));\n}\nexport function bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n    callAndCheck(gl, () => gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0));\n}\nexport function unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n    callAndCheck(gl, () => gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0));\n}\nexport function validateFramebuffer(gl) {\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexport function getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return `unknown error ${status}`;\n    }\n}\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    const tOrNull = callAndCheck(gl, () => returnTOrNull());\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    const maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    const glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        const textureUnitRange = `[gl.TEXTURE0, gl.TEXTURE${maxTextureUnit}]`;\n        throw new Error(`textureUnit must be in ${textureUnitRange}.`);\n    }\n}\nexport function getBatchDim(shape, dimsToSkip = 2) {\n    return util.sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\nexport function getRowsCols(shape) {\n    if (shape.length === 0) {\n        throw Error('Cannot get rows and columns of an empty shape array.');\n    }\n    return [\n        shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]\n    ];\n}\nexport function getShapeAs3D(shape) {\n    let shapeAs3D = [1, 1, 1];\n    const isScalar = shape.length === 0 || (shape.length === 1 && shape[0] === 1);\n    if (!isScalar) {\n        shapeAs3D =\n            [getBatchDim(shape), ...getRowsCols(shape)];\n    }\n    return shapeAs3D;\n}\nexport function getTextureShapeFromLogicalShape(logShape, isPacked = false) {\n    let maxTexSize = env().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if (isPacked) {\n        maxTexSize = maxTexSize * 2;\n        // This logic ensures we accurately count the number of packed texels needed\n        // to accommodate the tensor. We can only pack values in the same texel if\n        // they are from adjacent pairs of rows/cols within the same batch. So if a\n        // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n        // fact that the texels containing the third row are half empty.\n        logShape = logShape.map((d, i) => i >= logShape.length - 2 ?\n            util.nearestLargerEven(logShape[i]) :\n            logShape[i]);\n        // Packed texture height is at least 2 (the channel height of a single\n        // texel).\n        if (logShape.length === 1) {\n            logShape = [2, logShape[0]];\n        }\n    }\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n        const squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    let size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [1, size];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTexSize &&\n        logShape[2] <= maxTexSize) {\n        return [logShape[0] * logShape[1], logShape[2]];\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 &&\n        logShape[0] * logShape[1] * logShape[2] <= maxTexSize &&\n        logShape[3] <= maxTexSize) {\n        return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        if (isPacked) {\n            // For packed textures size equals the number of channels required to\n            // accommodate the texture data. However in order to squarify such that\n            // inner dimensions stay even, we rewrite size to equal the number of\n            // texels. Then in the return statement we rehydrate the squarified\n            // dimensions to channel units.\n            const batchDim = getBatchDim(logShape);\n            let rows = 2, cols = 2;\n            if (logShape.length) {\n                [rows, cols] = getRowsCols(logShape);\n            }\n            size = batchDim * (rows / 2) * (cols / 2);\n            return util.sizeToSquarishShape(size).map(d => d * 2);\n        }\n        return util.sizeToSquarishShape(size);\n    }\n}\nfunction isEven(n) {\n    return n % 2 === 0;\n}\n/**\n * This determines whether reshaping a packed texture requires rearranging\n * the data within the texture, assuming 2x2 packing.\n */\nexport function isReshapeFree(shape1, shape2) {\n    shape1 = shape1.slice(-2);\n    shape2 = shape2.slice(-2);\n    if (util.arraysEqual(shape1, shape2)) {\n        return true;\n    }\n    if (!shape1.length || !shape2.length) { // One of the shapes is a scalar.\n        return true;\n    }\n    if (shape1[0] === 0 || shape1[1] === 0 || shape2[0] === 0 ||\n        shape2[1] === 0) {\n        return true;\n    }\n    if (shape1.length !== shape2.length) { // One of the shapes is a vector.\n        const shape1Cols = shape1.slice(-1)[0];\n        const shape2Cols = shape2.slice(-1)[0];\n        if (shape1Cols === shape2Cols) {\n            return true;\n        }\n        if (isEven(shape1Cols) && isEven(shape2Cols) &&\n            (shape1[0] === 1 || shape2[0] === 1)) {\n            return true;\n        }\n    }\n    return shape1[1] === shape2[1] && isEven(shape1[0]) && isEven(shape2[0]);\n}\n// We cache webgl params because the environment gets reset between\n// unit tests and we don't want to constantly query the WebGLContext for\n// MAX_TEXTURE_SIZE.\nlet MAX_TEXTURE_SIZE;\nlet MAX_TEXTURES_IN_SHADER;\nexport function getWebGLMaxTextureSize(webGLVersion) {\n    if (MAX_TEXTURE_SIZE == null) {\n        const gl = getWebGLContext(webGLVersion);\n        MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    }\n    return MAX_TEXTURE_SIZE;\n}\nexport function resetMaxTextureSize() {\n    MAX_TEXTURE_SIZE = null;\n}\nexport function resetMaxTexturesInShader() {\n    MAX_TEXTURES_IN_SHADER = null;\n}\nexport function getMaxTexturesInShader(webGLVersion) {\n    if (MAX_TEXTURES_IN_SHADER == null) {\n        const gl = getWebGLContext(webGLVersion);\n        MAX_TEXTURES_IN_SHADER = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    }\n    // We cap at 16 to avoid spurious runtime \"memory exhausted\" error.\n    return Math.min(16, MAX_TEXTURES_IN_SHADER);\n}\nexport function getWebGLDisjointQueryTimerVersion(webGLVersion) {\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    let queryTimerVersion;\n    const gl = getWebGLContext(webGLVersion);\n    if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n        webGLVersion === 2) {\n        queryTimerVersion = 2;\n    }\n    else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n        queryTimerVersion = 1;\n    }\n    else {\n        queryTimerVersion = 0;\n    }\n    return queryTimerVersion;\n}\nexport function hasExtension(gl, extensionName) {\n    const ext = gl.getExtension(extensionName);\n    return ext != null;\n}\nexport function isWebGLVersionEnabled(webGLVersion) {\n    try {\n        const gl = getWebGLContext(webGLVersion);\n        if (gl != null) {\n            return true;\n        }\n    }\n    catch (e) {\n        console.log('Error when getting WebGL context: ', e);\n        return false;\n    }\n    return false;\n}\nexport function isCapableOfRenderingToFloatTexture(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    const gl = getWebGLContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n    }\n    else {\n        if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n            return false;\n        }\n    }\n    const isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\n/**\n * Check if we can download values from a float/half-float texture.\n *\n * Note that for performance reasons we use binding a texture to a framebuffer\n * as a proxy for ability to download float values later using readPixels. The\n * texture params of this texture will not match those in readPixels exactly\n * but if we are unable to bind some kind of float texture to the frameBuffer\n * then we definitely will not be able to read float values from it.\n */\nexport function isDownloadFloatTextureEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    const gl = getWebGLContext(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n        if (!hasExtension(gl, 'WEBGL_color_buffer_float')) {\n            return false;\n        }\n    }\n    else {\n        if (hasExtension(gl, 'EXT_color_buffer_float')) {\n            return createFloatTextureAndBindToFramebuffer(gl);\n        }\n        const COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if (hasExtension(gl, COLOR_BUFFER_HALF_FLOAT)) {\n            const textureHalfFloatExtension = gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            return createHalfFloatTextureAndBindToFramebuffer(gl, textureHalfFloatExtension);\n        }\n        return false;\n    }\n    const isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\nfunction createFloatTextureAndBindToFramebuffer(gl) {\n    const texConfig = getTextureConfig(gl);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const width = 1;\n    const height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeFloat, null);\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nfunction createHalfFloatTextureAndBindToFramebuffer(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    const texConfig = getTextureConfig(gl, textureHalfFloatExtension);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const width = 1;\n    const height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatHalfFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeHalfFloat, null);\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nexport function isWebGLFenceEnabled(webGLVersion) {\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    const gl = getWebGLContext(webGLVersion);\n    // tslint:disable-next-line:no-any\n    const isEnabled = gl.fenceSync != null;\n    return isEnabled;\n}\nexport function assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(t => {\n        if (t != null) {\n            util.assert(t.dtype !== 'complex64', () => `${opName} does not support complex64 tensors ` +\n                'in the WebGL backend.');\n        }\n    });\n}\n//# sourceMappingURL=webgl_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { device_util, env } from '@tensorflow/tfjs-core';\nimport { getMaxTexturesInShader, getWebGLDisjointQueryTimerVersion, getWebGLMaxTextureSize, isCapableOfRenderingToFloatTexture, isDownloadFloatTextureEnabled, isWebGLFenceEnabled, isWebGLVersionEnabled } from './webgl_util';\nconst ENV = env();\n/**\n * This file contains WebGL-specific flag registrations.\n */\n/**\n * True if WebGL is supported.\n */\nENV.registerFlag('HAS_WEBGL', () => ENV.getNumber('WEBGL_VERSION') > 0);\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\nENV.registerFlag('WEBGL_VERSION', () => {\n    if (isWebGLVersionEnabled(2)) {\n        return 2;\n    }\n    else if (isWebGLVersionEnabled(1)) {\n        return 1;\n    }\n    return 0;\n});\n/** Whether to check for numerical representation problems. */\nENV.registerFlag('WEBGL_CHECK_NUMERICAL_PROBLEMS', () => false);\nENV.registerFlag('WEBGL_BUFFER_SUPPORTED', () => ENV.get('WEBGL_VERSION') === 2);\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\nENV.registerFlag('WEBGL_CPU_FORWARD', () => true);\n/** Whether the WebGL backend will always use f16 textures for rendering. */\nENV.registerFlag('WEBGL_FORCE_F16_TEXTURES', () => false);\n/** Whether to turn all packing related flags on. */\nENV.registerFlag('WEBGL_PACK', () => ENV.getBool('HAS_WEBGL'));\n/** Whether we will pack the batchnormalization op. */\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack the clip op. */\nENV.registerFlag('WEBGL_PACK_CLIP', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack the depthwise conv op. */\n// TODO: https://github.com/tensorflow/tfjs/issues/1679\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', () => false);\n/** Whether we will pack binary ops. */\nENV.registerFlag('WEBGL_PACK_BINARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack unary ops. */\nENV.registerFlag('WEBGL_PACK_UNARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack array ops. */\nENV.registerFlag('WEBGL_PACK_ARRAY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack image ops. */\nENV.registerFlag('WEBGL_PACK_IMAGE_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack reduce ops. */\nENV.registerFlag('WEBGL_PACK_REDUCE', () => ENV.getBool('WEBGL_PACK'));\n/** Whether packed WebGL kernels lazily unpack their outputs. */\nENV.registerFlag('WEBGL_LAZILY_UNPACK', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will use the im2col algorithm to speed up convolutions. */\nENV.registerFlag('WEBGL_CONV_IM2COL', () => ENV.getBool('WEBGL_PACK'));\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURE_SIZE', () => getWebGLMaxTextureSize(ENV.getNumber('WEBGL_VERSION')));\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURES_IN_SHADER', () => getMaxTexturesInShader(ENV.getNumber('WEBGL_VERSION')));\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', () => {\n    const webGLVersion = ENV.getNumber('WEBGL_VERSION');\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    return getWebGLDisjointQueryTimerVersion(webGLVersion);\n});\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', () => ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n    !device_util.isMobile());\n/**\n * Whether the device is physically capable of rendering to float32 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_CAPABLE', () => isCapableOfRenderingToFloatTexture(ENV.getNumber('WEBGL_VERSION')));\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_ENABLED', () => {\n    return ENV.getBool('WEBGL_FORCE_F16_TEXTURES') ?\n        false :\n        ENV.getBool('WEBGL_RENDER_FLOAT32_CAPABLE');\n});\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\nENV.registerFlag('WEBGL_DOWNLOAD_FLOAT_ENABLED', () => isDownloadFloatTextureEnabled(ENV.getNumber('WEBGL_VERSION')));\n/** Whether the fence API is available. */\nENV.registerFlag('WEBGL_FENCE_API_ENABLED', () => isWebGLFenceEnabled(ENV.getNumber('WEBGL_VERSION')));\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', () => {\n    // Use uniform uploads only when 32bit floats are supported. In\n    // 16bit\n    // environments there are problems with comparing a 16bit texture value\n    // with a 32bit uniform value.\n    const useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n    return useUniforms ? 4 : 0;\n});\n/**\n * If the total number of bytes allocated on the GPU is greater than this\n * number, we will aggressively delete textures upon disposal with\n * gl.deleteMatrixTexture, rather than making them available for reuse.\n *\n * Default value -1 indicates that we will never aggressively delete textures.\n */\nENV.registerFlag('WEBGL_DELETE_TEXTURE_THRESHOLD', () => {\n    return -1;\n}, threshold => {\n    if (threshold < 0 && threshold !== -1) {\n        throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never ` +\n            `delete) or at least 0, but got ${threshold}.`);\n    }\n});\n//# sourceMappingURL=flags_webgl.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nexport function getGlslDifferences() {\n    let version;\n    let attribute;\n    let varyingVs;\n    let varyingFs;\n    let texture2D;\n    let output;\n    let defineOutput;\n    let defineSpecialNaN;\n    let defineSpecialInf;\n    let defineRound;\n    if (env().getNumber('WEBGL_VERSION') === 2) {\n        version = '#version 300 es';\n        attribute = 'in';\n        varyingVs = 'out';\n        varyingFs = 'in';\n        texture2D = 'texture';\n        output = 'outputColor';\n        defineOutput = 'out vec4 outputColor;';\n        // Use custom isnan definition to work across differences between\n        // implementations on various platforms. While this should happen in ANGLE\n        // we still see differences between android and windows (on chrome) when\n        // using isnan directly.\n        defineSpecialNaN = `\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    `;\n        // In webgl 2 we do not need to specify a custom isinf so there is no\n        // need for a special INFINITY constant.\n        defineSpecialInf = ``;\n        defineRound = `\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n    }\n    else {\n        version = '';\n        attribute = 'attribute';\n        varyingVs = 'varying';\n        varyingFs = 'varying';\n        texture2D = 'texture2D';\n        output = 'gl_FragColor';\n        defineOutput = '';\n        // WebGL1 has no built in isnan so we define one here.\n        defineSpecialNaN = `\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    `;\n        defineSpecialInf = `\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    `;\n        defineRound = `\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n    }\n    return {\n        version,\n        attribute,\n        varyingVs,\n        varyingFs,\n        texture2D,\n        output,\n        defineOutput,\n        defineSpecialNaN,\n        defineSpecialInf,\n        defineRound\n    };\n}\n//# sourceMappingURL=glsl_version.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Produces GLSL code that derives logical coordinates from a flat\n * index. The code performs integer division with each stride and decrements\n * the index until the index equals the final dimension coordinate.\n */\nexport function getLogicalCoordinatesFromFlatIndex(coords, shape, index = 'index') {\n    const strides = util.computeStrides(shape);\n    return strides\n        .map((stride, i) => {\n        const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n        const line2 = i === strides.length - 1 ?\n            `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n            `index -= ${coords[i]} * ${stride}`;\n        return `${line1}; ${line2};`;\n    })\n        .join('');\n}\nfunction buildVec(x) {\n    if (x.length === 1) {\n        return `${x[0]}`;\n    }\n    return `vec${x.length}(${x.join(',')})`;\n}\n/**\n * Produces GLSL code that computes the dot product of the input x and y\n * vectors. Handles splitting inputs into increments of vec4s when necessary.\n */\nexport function dotify(x, y) {\n    if (x.length !== y.length) {\n        throw new Error(`Vectors to be dotted must be of the same length -` +\n            `got ${x.length} and ${y.length}`);\n    }\n    const slices = [];\n    const nearestVec4 = Math.floor(x.length / 4);\n    const nearestVec4Remainder = x.length % 4;\n    for (let i = 0; i < nearestVec4; i++) {\n        const xSlice = x.slice(i * 4, i * 4 + 4);\n        const ySlice = y.slice(i * 4, i * 4 + 4);\n        slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n    }\n    if (nearestVec4Remainder !== 0) {\n        let xSlice = x.slice(nearestVec4 * 4);\n        let ySlice = y.slice(nearestVec4 * 4);\n        if (xSlice.length === 1) {\n            xSlice = xSlice.map(d => `float(${d})`);\n            ySlice = ySlice.map(d => `float(${d})`);\n        }\n        slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n    }\n    return slices.map((d, i) => `dot(${d})`).join('+');\n}\n/**\n * Produces GLSL that computes the flat index from 3D coordinates.\n */\nexport function getFlatIndexFrom3D(shape) {\n    const strides = util.computeStrides(shape).map(d => d.toString());\n    return `\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${strides[0]} + coords.y * ${strides[1]} + coords.z;\n  }\n`;\n}\nexport const ENCODE_FLOAT_SNIPPET = `\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n`;\n//# sourceMappingURL=shader_compiler_util.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nimport { getDenseTexShape, PackingScheme } from './tex_util';\nexport class DecodeMatrixProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        this.outPackingScheme = PackingScheme.DENSE;\n        const texShape = getDenseTexShape(outputShape);\n        const glsl = getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=decode_matrix_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nimport { getDenseTexShape, PackingScheme } from './tex_util';\nexport class DecodeMatrixPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outPackingScheme = PackingScheme.DENSE;\n        const texShape = getDenseTexShape(outputShape);\n        const glsl = getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=decode_matrix_packed_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport { ENCODE_FLOAT_SNIPPET } from './shader_compiler_util';\nimport { TextureUsage } from './tex_util';\nexport class EncodeFloatProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.outTexUsage = TextureUsage.DOWNLOAD;\n        const glsl = getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ${ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_float_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport { ENCODE_FLOAT_SNIPPET } from './shader_compiler_util';\nimport { TextureUsage } from './tex_util';\nexport class EncodeFloatPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outTexUsage = TextureUsage.DOWNLOAD;\n        const glsl = getGlslDifferences();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ${ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_float_packed_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nexport class EncodeMatrixProgram {\n    constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n        this.variableNames = ['A'];\n        const glsl = getGlslDifferences();\n        const [height, width] = texShape;\n        this.outputShape = outputShape;\n        let output = `result`;\n        if (inputIsUnsignedByte) {\n            output = `floor(result * 255. + 0.5)`;\n        }\n        this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${width};\n        int c = imod(flatIndex, ${width});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n        vec4 values = ${glsl.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${glsl.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_matrix_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\n/*\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\n(indices are [batch, row, col]).\n\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\n-------   -------   -------   -------   -------   -------\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\n-------   -------   -------   -------   -------   -------\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\nSingle texels contain only values from the same batch, and from adjacent rows\nand columns.\n */\nexport class EncodeMatrixPackedProgram {\n    constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        const glsl = getGlslDifferences();\n        const [height, width] = texShape;\n        this.outputShape = outputShape;\n        let mainLoop = '';\n        let output = 'result';\n        if (inputIsUnsignedByte) {\n            output = 'floor(result * 255. + 0.5)';\n        }\n        for (let row = 0; row <= 1; row++) {\n            for (let col = 0; col <= 1; col++) {\n                const channel = row * 2 + col;\n                mainLoop += `\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${outputShape[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${row} < ${outputShape[1]}) {\n              localCoords[1] += ${row};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${width};\n              c = imod(flatIndex, ${width});\n              uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n              values = ${glsl.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${channel}] = values[0];\n              } else if(offset == 1) {\n                result[${channel}] = values[1];\n              } else if(offset == 2) {\n                result[${channel}] = values[2];\n              } else {\n                result[${channel}] = values[3];\n              }\n            }\n          }\n        `;\n            }\n        }\n        this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${mainLoop}\n\n        ${glsl.output} = ${output};\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_matrix_packed_gpu.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nimport * as tex_util from './tex_util';\nimport * as webgl_util from './webgl_util';\nexport function createVertexShader(gl) {\n    const glsl = getGlslDifferences();\n    const vertexShaderSource = `${glsl.version}\n    precision highp float;\n    ${glsl.attribute} vec3 clipSpacePos;\n    ${glsl.attribute} vec2 uv;\n    ${glsl.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;\n    return webgl_util.createVertexShader(gl, vertexShaderSource);\n}\nexport function createVertexBuffer(gl) {\n    // [x y z u v] * [upper-left, lower-left, upper-right, lower-right]\n    const vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return webgl_util.createStaticVertexBuffer(gl, vertexArray);\n}\nexport function createIndexBuffer(gl) {\n    // OpenGL (and WebGL) have \"CCW == front\" winding\n    const triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return webgl_util.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nfunction createAndConfigureTexture(gl, width, height, internalFormat, textureFormat, textureType) {\n    webgl_util.validateTextureSize(width, height);\n    const texture = webgl_util.createTexture(gl);\n    const tex2d = gl.TEXTURE_2D;\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(tex2d, texture));\n    webgl_util.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE));\n    webgl_util.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE));\n    webgl_util.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST));\n    webgl_util.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST));\n    webgl_util.callAndCheck(gl, () => gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, textureFormat, textureType, null));\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n    return texture;\n}\nexport function getInternalFormatForFloat32MatrixTexture(textureConfig) {\n    return textureConfig.internalFormatFloat;\n}\nexport function createFloat32MatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat32MatrixTexture(textureConfig), textureConfig.textureFormatFloat, gl.FLOAT);\n}\nexport function getInternalFormatForFloat16MatrixTexture(textureConfig) {\n    return textureConfig.internalFormatHalfFloat;\n}\nexport function createFloat16MatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16MatrixTexture(textureConfig), textureConfig.textureFormatFloat, textureConfig.textureTypeHalfFloat);\n}\nexport function getInternalFormatForUnsignedBytesMatrixTexture(textureConfig) {\n    return textureConfig.downloadTextureFormat;\n}\nexport function createUnsignedBytesMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForUnsignedBytesMatrixTexture(textureConfig), gl.RGBA, gl.UNSIGNED_BYTE);\n}\nexport function getInternalFormatForPackedMatrixTexture(textureConfig) {\n    return textureConfig.internalFormatPackedFloat;\n}\nexport function createPackedMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForPackedMatrixTexture(textureConfig), gl.RGBA, gl.FLOAT);\n}\nexport function getInternalFormatForFloat16PackedMatrixTexture(textureConfig) {\n    return textureConfig.internalFormatPackedHalfFloat;\n}\nexport function createFloat16PackedMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16PackedMatrixTexture(textureConfig), gl.RGBA, textureConfig.textureTypeHalfFloat);\n}\nexport function bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\n    const posOffset = 0; // x is the first buffer element\n    const uvOffset = 3 * 4; // uv comes after [x y z]\n    const stride = (3 * 4) + (2 * 4); // xyz + uv, each entry is 4-byte float.\n    webgl_util.callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer));\n    const success = webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n    return success &&\n        webgl_util.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nexport function uploadDenseMatrixToTexture(gl, texture, width, height, data, textureConfig) {\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n    let dataForUpload, texelDataType, internalFormat;\n    if (data instanceof Uint8Array) {\n        dataForUpload = new Uint8Array(width * height * 4);\n        texelDataType = gl.UNSIGNED_BYTE;\n        internalFormat = gl.RGBA;\n    }\n    else {\n        dataForUpload = new Float32Array(width * height * 4);\n        texelDataType = gl.FLOAT;\n        internalFormat = textureConfig.internalFormatPackedFloat;\n    }\n    dataForUpload.set(data);\n    webgl_util.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, gl.RGBA, texelDataType, dataForUpload));\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nexport function uploadPixelDataToTexture(gl, texture, pixels) {\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n    if (pixels.data instanceof Uint8Array) {\n        webgl_util.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pixels.width, pixels.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels.data));\n    }\n    else {\n        webgl_util.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels));\n    }\n    webgl_util.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nexport function createBufferFromOutputTexture(gl2, rows, columns, textureConfig) {\n    // Create and bind the buffer.\n    const buffer = gl2.createBuffer();\n    webgl_util.callAndCheck(gl2, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer));\n    // Initialize the buffer to the size of the texture in bytes.\n    const bytesPerFloat = 4;\n    const valuesPerTexel = 4;\n    const bufferSizeBytes = bytesPerFloat * valuesPerTexel * rows * columns;\n    webgl_util.callAndCheck(gl2, () => gl2.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl2.STREAM_READ));\n    // Enqueue a command on the GPU command queue to copy of texture into the\n    // buffer.\n    webgl_util.callAndCheck(gl2, () => gl2.readPixels(0, 0, columns, rows, gl2.RGBA, gl2.FLOAT, 0));\n    webgl_util.callAndCheck(gl2, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null));\n    return buffer;\n}\nexport function downloadFloat32MatrixFromBuffer(gl, buffer, size) {\n    const gl2 = gl;\n    const downloadTarget = new Float32Array(size);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nexport function downloadByteEncodedFloatMatrixFromOutputTexture(gl, rows, columns, textureConfig) {\n    const [w, h] = tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    const numChannels = 4;\n    const downloadTarget = new Uint8Array(tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, numChannels));\n    webgl_util.callAndCheck(gl, () => gl.readPixels(0, 0, w, h, textureConfig.downloadTextureFormat, gl.UNSIGNED_BYTE, downloadTarget));\n    // By wrapping the buffer in a Float32Array, we use native browser IEEE 754\n    // decoding of the 4 bytes that back each 32 bit float.\n    return new Float32Array(downloadTarget.buffer);\n}\nexport function downloadPackedMatrixFromBuffer(gl, buffer, batch, rows, cols, physicalRows, physicalCols, textureConfig) {\n    const gl2 = gl;\n    const downloadTarget = new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(physicalRows, physicalCols));\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nexport function downloadMatrixFromPackedOutputTexture(gl, physicalRows, physicalCols) {\n    const packedRGBA = new Float32Array(physicalRows * physicalCols * 4);\n    webgl_util.callAndCheck(gl, () => gl.readPixels(0, 0, physicalCols, physicalRows, gl.RGBA, gl.FLOAT, packedRGBA));\n    return packedRGBA;\n}\n//# sourceMappingURL=gpgpu_util.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext, setWebGLContext } from './canvas_util';\nimport * as gpgpu_util from './gpgpu_util';\nimport * as tex_util from './tex_util';\nimport * as webgl_util from './webgl_util';\nexport class GPGPUContext {\n    constructor(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.vertexAttrsAreBound = false;\n        this.itemsToPoll = [];\n        const glVersion = env().getNumber('WEBGL_VERSION');\n        if (gl != null) {\n            this.gl = gl;\n            setWebGLContext(glVersion, gl);\n        }\n        else {\n            this.gl = getWebGLContext(glVersion);\n        }\n        // WebGL 2.0 enables texture floats without an extension.\n        let COLOR_BUFFER_FLOAT = 'WEBGL_color_buffer_float';\n        const COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if (env().getNumber('WEBGL_VERSION') === 1) {\n            const TEXTURE_FLOAT = 'OES_texture_float';\n            const TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n            this.textureFloatExtension =\n                webgl_util.getExtensionOrThrow(this.gl, TEXTURE_FLOAT);\n            if (webgl_util.hasExtension(this.gl, TEXTURE_HALF_FLOAT)) {\n                this.textureHalfFloatExtension =\n                    webgl_util.getExtensionOrThrow(this.gl, TEXTURE_HALF_FLOAT);\n            }\n            else if (env().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support half float textures, yet the ' +\n                    'environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n            this.colorBufferFloatExtension = this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension =\n                    webgl_util.getExtensionOrThrow(this.gl, COLOR_BUFFER_HALF_FLOAT);\n            }\n            else if (env().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support color renderable half floats, yet ' +\n                    'the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n        }\n        else {\n            COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n            if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_FLOAT)) {\n                this.colorBufferFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            }\n            else if (webgl_util.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            }\n            else {\n                throw new Error('GL context does not support color renderable floats');\n            }\n        }\n        this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl);\n        this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl);\n        this.framebuffer = webgl_util.createFramebuffer(this.gl);\n        this.textureConfig =\n            tex_util.getTextureConfig(this.gl, this.textureHalfFloatExtension);\n    }\n    get debug() {\n        return env().getBool('DEBUG');\n    }\n    dispose() {\n        if (this.disposed) {\n            return;\n        }\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        const gl = this.gl;\n        webgl_util.callAndCheck(gl, () => gl.finish());\n        webgl_util.callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n        webgl_util.callAndCheck(gl, () => gl.deleteFramebuffer(this.framebuffer));\n        webgl_util.callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, null));\n        webgl_util.callAndCheck(gl, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null));\n        webgl_util.callAndCheck(gl, () => gl.deleteBuffer(this.indexBuffer));\n        this.disposed = true;\n    }\n    createFloat32MatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat32MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createFloat16MatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat16MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createUnsignedBytesMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createUnsignedBytesMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    uploadPixelDataToTexture(texture, pixels) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadPixelDataToTexture(this.gl, texture, pixels);\n    }\n    uploadDenseMatrixToTexture(texture, width, height, data) {\n        this.throwIfDisposed();\n        gpgpu_util.uploadDenseMatrixToTexture(this.gl, texture, width, height, data, this.textureConfig);\n    }\n    createFloat16PackedMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createFloat16PackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createPackedMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return gpgpu_util.createPackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    deleteMatrixTexture(texture) {\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        webgl_util.callAndCheck(this.gl, () => this.gl.deleteTexture(texture));\n    }\n    downloadByteEncodedFloatMatrixFromOutputTexture(texture, rows, columns) {\n        return this.downloadMatrixDriver(texture, () => gpgpu_util.downloadByteEncodedFloatMatrixFromOutputTexture(this.gl, rows, columns, this.textureConfig));\n    }\n    downloadPackedMatrixFromBuffer(buffer, batch, rows, columns, physicalRows, physicalCols) {\n        return gpgpu_util.downloadPackedMatrixFromBuffer(this.gl, buffer, batch, rows, columns, physicalRows, physicalCols, this.textureConfig);\n    }\n    downloadFloat32MatrixFromBuffer(buffer, size) {\n        return gpgpu_util.downloadFloat32MatrixFromBuffer(this.gl, buffer, size);\n    }\n    createBufferFromTexture(texture, rows, columns) {\n        this.bindTextureToFrameBuffer(texture);\n        const result = gpgpu_util.createBufferFromOutputTexture(this.gl, rows, columns, this.textureConfig);\n        this.unbindTextureToFrameBuffer();\n        return result;\n    }\n    createAndWaitForFence() {\n        const fenceContext = this.createFence(this.gl);\n        return this.pollFence(fenceContext);\n    }\n    createFence(gl) {\n        let query;\n        let isFencePassed;\n        if (env().getBool('WEBGL_FENCE_API_ENABLED')) {\n            const gl2 = gl;\n            const sync = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n            gl.flush();\n            isFencePassed = () => {\n                const status = gl2.clientWaitSync(sync, 0, 0);\n                return status === gl2.ALREADY_SIGNALED ||\n                    status === gl2.CONDITION_SATISFIED;\n            };\n            query = sync;\n        }\n        else if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            query = this.beginQuery();\n            this.endQuery();\n            isFencePassed = () => this.isQueryAvailable(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n        }\n        else {\n            // If we have no way to fence, return true immediately. This will fire in\n            // WebGL 1.0 when there is no disjoint query timer. In this case, because\n            // the fence passes immediately, we'll immediately ask for a download of\n            // the texture, which will cause the UI thread to hang.\n            isFencePassed = () => true;\n        }\n        return { query, isFencePassed };\n    }\n    downloadMatrixFromPackedTexture(texture, physicalRows, physicalCols) {\n        return this.downloadMatrixDriver(texture, () => gpgpu_util.downloadMatrixFromPackedOutputTexture(this.gl, physicalRows, physicalCols));\n    }\n    createProgram(fragmentShaderSource) {\n        this.throwIfDisposed();\n        const gl = this.gl;\n        const fragmentShader = webgl_util.createFragmentShader(gl, fragmentShaderSource);\n        const vertexShader = gpgpu_util.createVertexShader(gl);\n        const program = webgl_util.createProgram(gl);\n        webgl_util.callAndCheck(gl, () => gl.attachShader(program, vertexShader));\n        webgl_util.callAndCheck(gl, () => gl.attachShader(program, fragmentShader));\n        webgl_util.linkProgram(gl, program);\n        if (this.debug) {\n            webgl_util.validateProgram(gl, program);\n        }\n        if (!this.vertexAttrsAreBound) {\n            this.setProgram(program);\n            this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer);\n        }\n        return program;\n    }\n    deleteProgram(program) {\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            webgl_util.callAndCheck(this.gl, () => this.gl.deleteProgram(program));\n        }\n    }\n    setProgram(program) {\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.debug) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.callAndCheck(this.gl, () => this.gl.useProgram(program));\n    }\n    getUniformLocation(program, uniformName, shouldThrow = true) {\n        this.throwIfDisposed();\n        if (shouldThrow) {\n            return webgl_util.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n        }\n        else {\n            return webgl_util.getProgramUniformLocation(this.gl, program, uniformName);\n        }\n    }\n    getAttributeLocation(program, attribute) {\n        this.throwIfDisposed();\n        return webgl_util.callAndCheck(this.gl, () => this.gl.getAttribLocation(program, attribute));\n    }\n    getUniformLocationNoThrow(program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    }\n    setInputMatrixTexture(inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        webgl_util.bindTextureToProgramUniformSampler(this.gl, inputMatrixTexture, uniformLocation, textureUnit);\n    }\n    setOutputMatrixTexture(outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    }\n    setOutputPackedMatrixTexture(outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        const [width, height] = tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    }\n    setOutputMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    }\n    setOutputPackedMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    }\n    debugValidate() {\n        if (this.program != null) {\n            webgl_util.validateProgram(this.gl, this.program);\n        }\n        webgl_util.validateFramebuffer(this.gl);\n    }\n    executeProgram() {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        const gl = this.gl;\n        if (this.debug) {\n            this.debugValidate();\n        }\n        webgl_util.callAndCheck(gl, () => gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0));\n    }\n    blockUntilAllProgramsCompleted() {\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, () => this.gl.finish());\n    }\n    getQueryTimerExtension() {\n        if (this.disjointQueryTimerExtension == null) {\n            this.disjointQueryTimerExtension =\n                webgl_util.getExtensionOrThrow(this.gl, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ?\n                    'EXT_disjoint_timer_query_webgl2' :\n                    'EXT_disjoint_timer_query');\n        }\n        return this.disjointQueryTimerExtension;\n    }\n    getQueryTimerExtensionWebGL2() {\n        return this.getQueryTimerExtension();\n    }\n    getQueryTimerExtensionWebGL1() {\n        return this.getQueryTimerExtension();\n    }\n    beginQuery() {\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            const query = gl2.createQuery();\n            gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n            return query;\n        }\n        const ext = this.getQueryTimerExtensionWebGL1();\n        const query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        return query;\n    }\n    endQuery() {\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            gl2.endQuery(ext.TIME_ELAPSED_EXT);\n            return;\n        }\n        const ext = this.getQueryTimerExtensionWebGL1();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    }\n    async waitForQueryAndGetTime(query) {\n        await util.repeatedTry(() => this.disposed || // while testing contexts are created / disposed\n            // in rapid succession, so without this check we\n            // may poll for the query timer indefinitely\n            this.isQueryAvailable(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION')));\n        return this.getQueryTime(query, env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n    }\n    getQueryTime(query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return null;\n        }\n        if (queryTimerVersion === 2) {\n            const gl2 = this.gl;\n            const timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n        else {\n            const ext = this.getQueryTimerExtensionWebGL1();\n            const timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n    }\n    isQueryAvailable(query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return true;\n        }\n        if (queryTimerVersion === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            const available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n        else {\n            const ext = this.getQueryTimerExtensionWebGL1();\n            const available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n    }\n    pollFence(fenceContext) {\n        return new Promise(resolve => {\n            this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n        });\n    }\n    pollItems() {\n        // Find the last query that has finished.\n        const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n        for (let i = 0; i <= index; ++i) {\n            const { resolveFn } = this.itemsToPoll[i];\n            resolveFn();\n        }\n        this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n    }\n    addItemToPoll(isDoneFn, resolveFn) {\n        this.itemsToPoll.push({ isDoneFn, resolveFn });\n        if (this.itemsToPoll.length > 1) {\n            // We already have a running loop that polls.\n            return;\n        }\n        // Start a new loop that polls.\n        util.repeatedTry(() => {\n            this.pollItems();\n            // End the loop if no more items to poll.\n            return this.itemsToPoll.length === 0;\n        });\n    }\n    bindTextureToFrameBuffer(texture) {\n        this.throwIfDisposed();\n        webgl_util.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.debug) {\n            webgl_util.validateFramebuffer(this.gl);\n        }\n    }\n    unbindTextureToFrameBuffer() {\n        if (this.outputTexture != null) {\n            webgl_util.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.debug) {\n                webgl_util.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            webgl_util.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    }\n    downloadMatrixDriver(texture, downloadAndDecode) {\n        this.bindTextureToFrameBuffer(texture);\n        const result = downloadAndDecode();\n        this.unbindTextureToFrameBuffer();\n        return result;\n    }\n    setOutputMatrixTextureDriver(outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        const gl = this.gl;\n        webgl_util.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.debug) {\n            webgl_util.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        webgl_util.callAndCheck(gl, () => gl.viewport(0, 0, width, height));\n        webgl_util.callAndCheck(gl, () => gl.scissor(0, 0, width, height));\n    }\n    setOutputMatrixWriteRegionDriver(x, y, width, height) {\n        this.throwIfDisposed();\n        webgl_util.callAndCheck(this.gl, () => this.gl.scissor(x, y, width, height));\n    }\n    throwIfDisposed() {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    }\n    throwIfNoProgram() {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    }\n}\n/**\n * Finds the index of the last true element using linear search.\n * Note: We can't do binary search because Chrome expects us to explicitly\n * test all fences before download:\n * https://github.com/tensorflow/tfjs/issues/1145\n */\nexport function linearSearchLastTrue(arr) {\n    let i = 0;\n    for (; i < arr.length; ++i) {\n        const isDone = arr[i]();\n        if (!isDone) {\n            break;\n        }\n    }\n    return i - 1;\n}\n//# sourceMappingURL=gpgpu_context.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nconst { getBroadcastDims } = backend_util;\nimport { getGlslDifferences } from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\nexport function makeShader(inputsInfo, outputShape, userCode, usesPackedTextures) {\n    const prefixSnippets = [];\n    inputsInfo.forEach(x => {\n        const size = util.sizeFromShape(x.shapeInfo.logicalShape);\n        // Snippet when we decided to upload the values as uniform.\n        if (x.shapeInfo.isUniform) {\n            prefixSnippets.push(`uniform float ${x.name}${size > 1 ? `[${size}]` : ''};`);\n        }\n        else {\n            prefixSnippets.push(`uniform sampler2D ${x.name};`);\n            prefixSnippets.push(`uniform int offset${x.name};`);\n        }\n    });\n    const inputPrefixSnippet = prefixSnippets.join('\\n');\n    const inputSamplingSnippet = inputsInfo\n        .map(x => getInputSamplingSnippet(x, outputShape, usesPackedTextures))\n        .join('\\n');\n    const outTexShape = outputShape.texShape;\n    const glsl = getGlslDifferences();\n    const floatTextureSampleSnippet = getFloatTextureSampleSnippet(glsl);\n    let outputSamplingSnippet;\n    let floatTextureSetOutputSnippet;\n    let shaderPrefix = getShaderPrefix(glsl);\n    if (outputShape.isPacked) {\n        outputSamplingSnippet =\n            getPackedOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRGBASnippet(glsl);\n    }\n    else {\n        outputSamplingSnippet =\n            getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRSnippet(glsl);\n    }\n    if (usesPackedTextures) {\n        shaderPrefix += SHADER_PACKED_PREFIX;\n    }\n    const source = [\n        shaderPrefix, floatTextureSampleSnippet, floatTextureSetOutputSnippet,\n        inputPrefixSnippet, outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    const shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        case 5:\n            return getSampler5D(inInfo);\n        case 6:\n            return getSampler6D(inInfo);\n        default:\n            throw new Error(`${shape.length}-D input sampling` +\n                ` is not yet supported`);\n    }\n}\nfunction getPackedSamplerFromInInfo(inInfo) {\n    const shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getPackedSamplerScalar(inInfo);\n        case 1:\n            return getPackedSampler1D(inInfo);\n        case 2:\n            return getPackedSampler2D(inInfo);\n        case 3:\n            return getPackedSampler3D(inInfo);\n        default:\n            return getPackedSamplerND(inInfo);\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, usesPackedTextures = false) {\n    let res = '';\n    if (usesPackedTextures) {\n        res += getPackedSamplerFromInInfo(inInfo);\n    }\n    else {\n        res += getSamplerFromInInfo(inInfo);\n    }\n    const inShape = inInfo.shapeInfo.logicalShape;\n    const outShape = outShapeInfo.logicalShape;\n    if (inShape.length <= outShape.length) {\n        if (usesPackedTextures) {\n            res += getPackedSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n        else {\n            res += getSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n    }\n    return res;\n}\nfunction getPackedOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutputPacked1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutputPacked2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutputPacked3DCoords(outShape, outTexShape);\n        default:\n            return getOutputPackedNDCoords(outShape, outTexShape);\n    }\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        case 5:\n            return getOutput5DCoords(outShape, outTexShape);\n        case 6:\n            return getOutput6DCoords(outShape, outTexShape);\n        default:\n            throw new Error(`${outShape.length}-D output sampling is not yet supported`);\n    }\n}\nfunction getFloatTextureSampleSnippet(glsl) {\n    return `\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${glsl.texture2D}(textureSampler, uv).r;\n    }\n  `;\n}\nfunction getFloatTextureSetRSnippet(glsl) {\n    return `\n    void setOutput(float val) {\n      ${glsl.output} = vec4(val, 0, 0, 0);\n    }\n  `;\n}\nfunction getFloatTextureSetRGBASnippet(glsl) {\n    return `\n    void setOutput(vec4 val) {\n      ${glsl.output} = val;\n    }\n  `;\n}\nfunction getShaderPrefix(glsl) {\n    const SHADER_PREFIX = `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFs} vec2 resultUV;\n    ${glsl.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${glsl.defineSpecialNaN}\n    ${glsl.defineSpecialInf}\n    ${glsl.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${SAMPLE_1D_SNIPPET}\n    ${SAMPLE_2D_SNIPPET}\n    ${SAMPLE_3D_SNIPPET}\n  `;\n    return SHADER_PREFIX;\n}\nconst SAMPLE_1D_SNIPPET = `\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SAMPLE_2D_SNIPPET = `\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SAMPLE_3D_SNIPPET = `\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SHADER_PACKED_PREFIX = `\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n`;\nfunction getOutputScalarCoords() {\n    return `\n    int getOutputCoords() {\n      return 0;\n    }\n  `;\n}\nfunction getOutputPacked1DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (packedTexShape[0] === 1) {\n        return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${packedTexShape[1]}.0);\n      }\n    `;\n    }\n    if (packedTexShape[1] === 1) {\n        return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${packedTexShape[0]}.0);\n      }\n    `;\n    }\n    return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      return 2 * (resTexRC.x * ${packedTexShape[1]} + resTexRC.y);\n    }\n  `;\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return `\n      int getOutputCoords() {\n        return int(resultUV.x * ${texShape[1]}.0);\n      }\n    `;\n    }\n    if (texShape[1] === 1) {\n        return `\n      int getOutputCoords() {\n        return int(resultUV.y * ${texShape[0]}.0);\n      }\n    `;\n    }\n    return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      return resTexRC.x * ${texShape[1]} + resTexRC.y;\n    }\n  `;\n}\nfunction getOutputPacked3DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `;\n}\nfunction getOutput3DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}\nfunction getOutputPackedNDCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = ``;\n    let coords = 'b, r, c';\n    for (let b = 2; b < shape.length - 1; b++) {\n        texelsInBatchN *= shape[shape.length - b - 1];\n        batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n        coords = `b${b}, ` + coords;\n    }\n    return `\n    ivec${shape.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      ${batches}\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec${shape.length}(${coords});\n    }\n  `;\n}\nfunction getOutput4DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2'], shape);\n    return `\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec4(r, c, d, d2);\n    }\n  `;\n}\nfunction getOutput5DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3'], shape);\n    return `\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${texShape[0]},\n                             ${texShape[1]}));\n\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `;\n}\nfunction getOutput6DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3', 'd4'], shape);\n    return `\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `;\n}\nfunction getOutputPacked2DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (util.arraysEqual(shape, texShape)) {\n        return `\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      }\n    `;\n    }\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec2(r, c);\n    }\n  `;\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (util.arraysEqual(shape, texShape)) {\n        return `\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${texShape[0]}, ${texShape[1]}));\n      }\n    `;\n    }\n    if (shape[1] === 1) {\n        return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;\n    }\n    if (shape[0] === 1) {\n        return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;\n    }\n    return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      int r = index / ${shape[1]};\n      int c = index - r * ${shape[1]};\n      return ivec2(r, c);\n    }\n  `;\n}\nfunction getFlatOffsetUniformName(texName) {\n    return `offset${texName}`;\n}\nfunction getPackedSamplerScalar(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const glsl = getGlslDifferences();\n    return `\n    vec4 ${funcName}() {\n      return ${glsl.texture2D}(${texName}, halfCR);\n    }\n  `;\n}\nfunction getSamplerScalar(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        return `float ${funcName}() {return ${texName};}`;\n    }\n    const [texNumR, texNumC] = inputInfo.shapeInfo.texShape;\n    if (texNumR === 1 && texNumC === 1) {\n        return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n    }\n    const [tNumR, tNumC] = inputInfo.shapeInfo.texShape;\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}() {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getPackedSampler1D(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const glsl = getGlslDifferences();\n    return `\n    vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler1D(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int index) {\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texShape = inputInfo.shapeInfo.texShape;\n    const tNumR = texShape[0];\n    const tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return `\n      float ${funcName}(int index) {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    if (tNumC === 1) {\n        return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${offset}) + 0.5) / ${tNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (tNumR === 1) {\n        return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2((float(index + ${offset}) + 0.5) / ${tNumC}.0, 0.5);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    return `\n    float ${funcName}(int index) {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getPackedSampler2D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const glsl = getGlslDifferences();\n    if (texShape != null && util.arraysEqual(shape, texShape)) {\n        return `\n      vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n\n        return ${glsl.texture2D}(${texName}, uv);\n      }\n    `;\n    }\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    return `\n    vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${valuesPerRow}, ${packedTexShape[0]}, ${packedTexShape[1]}, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler2D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    if (texShape != null && util.arraysEqual(shape, texShape)) {\n        const texNumR = texShape[0];\n        const texNumC = texShape[1];\n        return `\n    float ${funcName}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    const { newShape, keptDims } = util.squeezeShape(shape);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['row', 'col'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${shape[1]}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const offset = getFlatOffsetUniformName(texName);\n    if (texNumC === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    if (texNumR === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    return `\n  float ${funcName}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${shape[1]} + col + ${offset};\n    vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n    return sampleTexture(${texName}, uv);\n  }\n`;\n}\nfunction getPackedSampler3D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (shape[0] === 1) {\n        const squeezedShape = shape.slice(1);\n        const keptDims = [1, 2];\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['b', 'row', 'col'];\n        return `\n        ${getPackedSamplerFromInInfo(newInputInfo)}\n        vec4 ${funcName}(int b, int row, int col) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n    const glsl = getGlslDifferences();\n    return `\n    vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumR}, ${texNumC}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler3D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n    const { newShape, keptDims } = util.squeezeShape(shape);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['row', 'col', 'depth'];\n        return `\n        ${getSamplerFromInInfo(newInputInfo)}\n        float ${funcName}(int row, int col, int depth) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${stride0}, ${stride1}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n        float ${funcName}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${stride1}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${texNumC}.0, ${texNumR}.0);\n          return sampleTexture(${texName}, uv);\n        }\n      `;\n    }\n    if (texNumC === stride1 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${shape[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n      float ${funcName}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${stride0} + col * ${stride1} + depth + ${offset};\n        vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n        return sampleTexture(${texName}, uv);\n      }\n  `;\n}\nfunction getPackedSamplerND(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const rank = shape.length;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = `int b, int row, int col`;\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n        params = `int b${b}, ` + params;\n        texelsInBatch *= shape[rank - b - 1];\n        index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const glsl = getGlslDifferences();\n    return `\n    vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler4D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    const { newShape, keptDims } = util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${stride0}, ${stride1}, ${stride2}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${stride1}, ${stride2}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride2 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${shape[1] * shape[2]}, ${shape[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} +\n          depth * ${stride2} + depth2;\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler5D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    const { newShape, keptDims } = util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          depth3;\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${stride1}, ${stride2}, ${stride3}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride3 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3]},\n               ${shape[2] * shape[3]}, ${shape[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler6D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const { newShape, keptDims } = util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${stride4}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${stride1}, ${stride2}, ${stride3}, ${stride4})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride4 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3] * shape[4]},\n               ${shape[2] * shape[3] * shape[4]},\n               ${shape[3] * shape[4]},\n               ${shape[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 * ${stride4} + depth4 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getUniformSampler(inputInfo) {\n    const texName = inputInfo.name;\n    const inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    if (inSize < 2) {\n        return `return ${texName};`;\n    }\n    return `\n    for (int i = 0; i < ${inSize}; i++) {\n      if (i == index) {\n        return ${texName}[i];\n      }\n    }\n  `;\n}\nfunction getPackedSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    const texName = inputInfo.name;\n    const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    const inRank = inputInfo.shapeInfo.logicalShape.length;\n    const outRank = outShapeInfo.logicalShape.length;\n    const broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet;\n    const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n                .join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map((s, i) => `coords.${fields[i + rankDiff]}`)\n            .join(', ');\n    }\n    let output = `return outputValue;`;\n    const inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    const isInputScalar = inSize === 1;\n    const outSize = util.sizeFromShape(outShapeInfo.logicalShape);\n    const isOutputScalar = outSize === 1;\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n        output = `\n      return vec4(outputValue.xy, outputValue.xy);\n    `;\n    }\n    else if (isInputScalar && !isOutputScalar) {\n        if (outRank === 1) {\n            output = `\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      `;\n        }\n        else {\n            output = `\n        return vec4(outputValue.x);\n      `;\n        }\n    }\n    else if (broadcastDims.length) {\n        const rows = inRank - 2;\n        const cols = inRank - 1;\n        if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n            output = `return vec4(outputValue.x);`;\n        }\n        else if (broadcastDims.indexOf(rows) > -1) {\n            output = `return vec4(outputValue.x, outputValue.y, ` +\n                `outputValue.x, outputValue.y);`;\n        }\n        else if (broadcastDims.indexOf(cols) > -1) {\n            output = `return vec4(outputValue.xx, outputValue.zz);`;\n        }\n    }\n    return `\n    vec4 ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      vec4 outputValue = get${texFuncSnippet}(${unpackedCoordsSnippet});\n      ${output}\n    }\n  `;\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    const texName = inputInfo.name;\n    const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    const outTexShape = outShapeInfo.texShape;\n    const inTexShape = inputInfo.shapeInfo.texShape;\n    const inRank = inputInfo.shapeInfo.logicalShape.length;\n    const outRank = outShapeInfo.logicalShape.length;\n    if (!inputInfo.shapeInfo.isUniform && inRank === outRank &&\n        inputInfo.shapeInfo.flatOffset == null &&\n        util.arraysEqual(inTexShape, outTexShape)) {\n        return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, resultUV);\n      }\n    `;\n    }\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet;\n    const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n                .join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map((s, i) => `coords.${fields[i + rankDiff]}`)\n            .join(', ');\n    }\n    return `\n    float ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      return get${texFuncSnippet}(${unpackedCoordsSnippet});\n    }\n  `;\n}\nexport function getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else if (rank === 5) {\n        return 'ivec5';\n    }\n    else if (rank === 6) {\n        return 'ivec6';\n    }\n    else {\n        throw Error(`GPU for rank ${rank} is not yet supported`);\n    }\n}\n/** Returns a new input info (a copy) that has a squeezed logical shape. */\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    // Deep copy.\n    const newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(d => params[d]).join(', ');\n}\n//# sourceMappingURL=shader_compiler.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport * as shader_compiler from './shader_compiler';\nexport function compileProgram(gpgpu, program, inputs, output) {\n    const userCode = program.userCode;\n    const inputInfos = inputs.map((input, i) => {\n        const shapeInfo = {\n            logicalShape: input.shape,\n            texShape: input.isUniform ? null : input.texData.texShape,\n            isUniform: input.isUniform,\n            isPacked: input.isUniform ? false : input.texData.isPacked,\n            flatOffset: null\n        };\n        if (input.texData != null && input.texData.slice != null &&\n            input.texData.slice.flatOffset > 0) {\n            shapeInfo.flatOffset = input.texData.slice.flatOffset;\n        }\n        return { name: program.variableNames[i], shapeInfo };\n    });\n    const inShapeInfos = inputInfos.map(x => x.shapeInfo);\n    const outShapeInfo = {\n        logicalShape: output.shape,\n        texShape: output.texData.texShape,\n        isUniform: false,\n        isPacked: output.texData.isPacked,\n        flatOffset: null\n    };\n    const source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.packedInputs);\n    const webGLProgram = gpgpu.createProgram(source);\n    // Add special uniforms (NAN, INFINITY)\n    let infLoc = null;\n    const nanLoc = gpgpu.getUniformLocation(webGLProgram, 'NAN', false);\n    if (env().getNumber('WEBGL_VERSION') === 1) {\n        infLoc = gpgpu.getUniformLocation(webGLProgram, 'INFINITY', false);\n    }\n    // Add user-defined uniforms\n    const uniformLocations = {};\n    for (let i = 0; i < program.variableNames.length; i++) {\n        const varName = program.variableNames[i];\n        const shouldThrow = false;\n        uniformLocations[varName] =\n            gpgpu.getUniformLocation(webGLProgram, varName, shouldThrow);\n        uniformLocations[`offset${varName}`] =\n            gpgpu.getUniformLocation(webGLProgram, `offset${varName}`, shouldThrow);\n    }\n    return {\n        program,\n        source,\n        webGLProgram,\n        uniformLocations,\n        inShapeInfos,\n        outShapeInfo,\n        infLoc,\n        nanLoc,\n    };\n}\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(`Binary was compiled with ${shapeInfos.length} inputs, but ` +\n            `was executed with ${inputs.length} inputs`);\n    }\n    shapeInfos.forEach((s, i) => {\n        const shapeA = s.logicalShape;\n        const input = inputs[i];\n        const shapeB = input.shape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(`Binary was compiled with different shapes than ` +\n                `the current args. Shapes ${shapeA} and ${shapeB} must match`);\n        }\n        // The input is uploaded as uniform.\n        if (s.isUniform && input.isUniform) {\n            return;\n        }\n        const texShapeA = s.texShape;\n        const texShapeB = input.isUniform ? null : input.texData.texShape;\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(`Binary was compiled with different texture shapes than the` +\n                ` current args. Shape ${texShapeA} and ${texShapeB} must match`);\n        }\n    });\n}\nexport function runProgram(gpgpu, binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    const outTex = output.texData.texture;\n    const outTexShape = output.texData.texShape;\n    if (output.texData.isPacked) {\n        gpgpu.setOutputPackedMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    else {\n        gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    gpgpu.setProgram(binary.webGLProgram);\n    // Set special uniforms (NAN, INFINITY)\n    if (env().getNumber('WEBGL_VERSION') === 1) {\n        if (binary.infLoc !== null) {\n            gpgpu.gl.uniform1f(binary.infLoc, Infinity);\n        }\n    }\n    if (binary.nanLoc !== null) {\n        gpgpu.gl.uniform1f(binary.nanLoc, NaN);\n    }\n    // Set user-defined inputs\n    inputs.forEach((input, i) => {\n        const varName = binary.program.variableNames[i];\n        const varLoc = binary.uniformLocations[varName];\n        const varOffsetLoc = binary.uniformLocations[`offset${varName}`];\n        if (varLoc == null) {\n            // The compiler inferred that this variable is not used in this shader.\n            return;\n        }\n        if (input.isUniform) {\n            // Upload the values of the tensor as uniform.\n            if (util.sizeFromShape(input.shape) < 2) {\n                gpgpu.gl.uniform1f(varLoc, input.uniformValues[0]);\n            }\n            else {\n                let vals = input.uniformValues;\n                if (!(vals instanceof Float32Array)) {\n                    vals = new Float32Array(vals);\n                }\n                gpgpu.gl.uniform1fv(varLoc, vals);\n            }\n            return;\n        }\n        // If the input was sliced, upload the flat offset index.\n        if (input.texData.slice != null && varOffsetLoc != null) {\n            gpgpu.gl.uniform1i(varOffsetLoc, input.texData.slice.flatOffset);\n        }\n        gpgpu.setInputMatrixTexture(input.texData.texture, varLoc, i);\n    });\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexport function makeShaderKey(program, inputs, output) {\n    let keyInputs = '';\n    inputs.concat(output).forEach(x => {\n        const hasOffset = x.texData != null && x.texData.slice != null &&\n            x.texData.slice.flatOffset > 0;\n        const texShape = x.isUniform ? 'uniform' : x.texData.texShape;\n        keyInputs += `${x.shape}_${texShape}_${hasOffset}`;\n    });\n    const keyUserCode = program.userCode;\n    let key = program.constructor.name;\n    // Fast string concat. See https://jsperf.com/string-concatenation/14.\n    key += '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\n//# sourceMappingURL=gpgpu_math.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\nexport function createSimpleBinaryKernelImpl(op) {\n    return (aShape, bShape, aVals, bVals, dtype) => {\n        const newShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultRank = newShape.length;\n        const resultStrides = util.computeStrides(newShape);\n        const resultSize = util.sizeFromShape(newShape);\n        const result = util.getTypedArrayFromDType(dtype, resultSize);\n        const aRank = aShape.length;\n        const bRank = bShape.length;\n        const aStrides = util.computeStrides(aShape);\n        const bStrides = util.computeStrides(bShape);\n        const aBroadcastDims = backend_util.getBroadcastDims(aShape, newShape);\n        const bBroadcastDims = backend_util.getBroadcastDims(bShape, newShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < result.length; ++i) {\n                result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n            }\n        }\n        else {\n            for (let i = 0; i < result.length; ++i) {\n                const loc = util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = util.locToIndex(bLoc, bRank, bStrides);\n                result[i] = op(aVals[aIndex], bVals[bIndex]);\n            }\n        }\n        return [result, newShape];\n    };\n}\n//# sourceMappingURL=binary_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const addImpl = createSimpleBinaryKernelImpl(((a, b) => a + b));\nexport const addComplexImpl = createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal + bReal, imag: aImag + bImag };\n}));\nexport const add = binaryKernelFunc(Add, addImpl, addComplexImpl);\nexport const addConfig = {\n    kernelName: Add,\n    backendName: 'cpu',\n    kernelFunc: add\n};\n//# sourceMappingURL=Add.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for unary op.\n */\nexport function createSimpleUnaryImpl(op) {\n    return (values, dtype, attrs) => {\n        const newValues = util.getTypedArrayFromDType(dtype, values.length);\n        for (let i = 0; i < values.length; ++i) {\n            newValues[i] = op(values[i], attrs);\n        }\n        return newValues;\n    };\n}\n//# sourceMappingURL=unary_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const ceilImpl = createSimpleUnaryImpl((xi) => Math.ceil(xi));\nexport const ceil = unaryKernelFuncFromImpl(Ceil, ceilImpl);\nexport const ceilConfig = {\n    kernelName: Ceil,\n    backendName: 'cpu',\n    kernelFunc: ceil,\n};\n//# sourceMappingURL=Ceil.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const expImpl = createSimpleUnaryImpl((xi) => Math.exp(xi));\nexport const exp = unaryKernelFuncFromImpl(Exp, expImpl);\nexport const expConfig = {\n    kernelName: Exp,\n    backendName: 'cpu',\n    kernelFunc: exp,\n};\n//# sourceMappingURL=Exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const expm1Impl = createSimpleUnaryImpl((xi) => Math.expm1(xi));\nexport const expm1 = unaryKernelFuncFromImpl(Expm1, expm1Impl);\nexport const expm1Config = {\n    kernelName: Expm1,\n    backendName: 'cpu',\n    kernelFunc: expm1,\n};\n//# sourceMappingURL=Expm1.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const floorImpl = createSimpleUnaryImpl((xi) => Math.floor(xi));\nexport const floor = unaryKernelFuncFromImpl(Floor, floorImpl);\nexport const floorConfig = {\n    kernelName: Floor,\n    backendName: 'cpu',\n    kernelFunc: floor,\n};\n//# sourceMappingURL=Floor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const greaterImpl = createSimpleBinaryKernelImpl((a, b) => (a > b) ? 1 : 0);\nexport const greater = binaryKernelFunc(Greater, greaterImpl, null /* complexImpl */, 'bool');\nexport const greaterConfig = {\n    kernelName: Greater,\n    backendName: 'cpu',\n    kernelFunc: greater\n};\n//# sourceMappingURL=Greater.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const lessImpl = createSimpleBinaryKernelImpl((a, b) => (a < b) ? 1 : 0);\nexport const less = binaryKernelFunc(Less, lessImpl, null /* complexImpl */, 'bool');\nexport const lessConfig = {\n    kernelName: Less,\n    backendName: 'cpu',\n    kernelFunc: less\n};\n//# sourceMappingURL=Less.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const logImpl = createSimpleUnaryImpl((xi) => Math.log(xi));\nexport const log = unaryKernelFuncFromImpl(Log, logImpl);\nexport const logConfig = {\n    kernelName: Log,\n    backendName: 'cpu',\n    kernelFunc: log,\n};\n//# sourceMappingURL=Log.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const maximumImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => Math.max(aValue, bValue)));\nexport const maximum = binaryKernelFunc(Maximum, maximumImpl);\nexport const maximumConfig = {\n    kernelName: Maximum,\n    backendName: 'cpu',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=Maximum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const minimumImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => Math.min(aValue, bValue)));\nexport const minimum = binaryKernelFunc(Minimum, minimumImpl);\nexport const minimumConfig = {\n    kernelName: Minimum,\n    backendName: 'cpu',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=Minimum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const multiplyImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => aValue * bValue));\nexport const multiplyComplexImpl = createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n    return {\n        real: aReal * bReal - aImag * bImag,\n        imag: aReal * bImag + aImag * bReal\n    };\n}));\nexport const multiply = binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);\nexport const multiplyConfig = {\n    kernelName: Multiply,\n    backendName: 'cpu',\n    kernelFunc: multiply\n};\n//# sourceMappingURL=Multiply.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const notEqualImpl = createSimpleBinaryKernelImpl(((a, b) => (a !== b) ? 1 : 0));\nexport const notEqual = binaryKernelFunc(NotEqual, notEqualImpl, null /* complexOp */, 'bool');\nexport const notEqualConfig = {\n    kernelName: NotEqual,\n    backendName: 'cpu',\n    kernelFunc: notEqual\n};\n//# sourceMappingURL=NotEqual.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const rsqrtImpl = createSimpleUnaryImpl((xi) => 1 / Math.sqrt(xi));\nexport const rsqrt = unaryKernelFuncFromImpl(Rsqrt, rsqrtImpl);\nexport const rsqrtConfig = {\n    kernelName: Rsqrt,\n    backendName: 'cpu',\n    kernelFunc: rsqrt,\n};\n//# sourceMappingURL=Rsqrt.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const squaredDifferenceImpl = createSimpleBinaryKernelImpl(((a, b) => {\n    const diff = a - b;\n    return diff * diff;\n}));\nexport const squaredDifference = binaryKernelFunc(SquaredDifference, squaredDifferenceImpl);\nexport const squaredDifferenceConfig = {\n    kernelName: SquaredDifference,\n    backendName: 'cpu',\n    kernelFunc: squaredDifference\n};\n//# sourceMappingURL=SquaredDifference.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const subImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => aValue - bValue));\nexport const subComplexImpl = createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal - bReal, imag: aImag - bImag };\n}));\nexport const sub = binaryKernelFunc(Sub, subImpl, subComplexImpl);\nexport const subConfig = {\n    kernelName: Sub,\n    backendName: 'cpu',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst { addImpl: addImplCPU, bincountImpl: bincountImplCPU, bincountReduceImpl: bincountReduceImplCPU, ceilImpl: ceilImplCPU, concatImpl: concatImplCPU, expImpl: expImplCPU, expm1Impl: expm1ImplCPU, floorImpl: floorImplCPU, gatherV2Impl: gatherV2ImplCPU, greaterImpl: greaterImplCPU, lessImpl: lessImplCPU, linSpaceImpl: linSpaceImplCPU, logImpl: logImplCPU, maxImpl: maxImplCPU, maximumImpl: maximumImplCPU, minimumImpl: minimumImplCPU, multiplyImpl: multiplyImplCPU, negImpl: negImplCPU, prodImpl: prodImplCPU, rangeImpl: rangeImplCPU, rsqrtImpl: rsqrtImplCPU, simpleAbsImpl: simpleAbsImplCPU, sliceImpl: sliceImplCPU, stridedSliceImpl: stridedSliceImplCPU, subImpl: subImplCPU, tileImpl: tileImplCPU, topKImpl: topKImplCPU, transposeImpl: transposeImplCPU, uniqueImpl: uniqueImplCPU, } = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherV2ImplCPU, greaterImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU, };\n//# sourceMappingURL=shared.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, util } from '@tensorflow/tfjs-core';\nexport function bincountImpl(xVals, weightsVals, weightsDtype, weightsShape, size) {\n    const weightsSize = util.sizeFromShape(weightsShape);\n    const outVals = util.makeZerosTypedArray(size, weightsDtype);\n    for (let i = 0; i < xVals.length; i++) {\n        const value = xVals[i];\n        if (value < 0) {\n            throw new Error('Input x must be non-negative!');\n        }\n        if (value >= size) {\n            continue;\n        }\n        if (weightsSize > 0) {\n            outVals[value] += weightsVals[i];\n        }\n        else {\n            outVals[value] += 1;\n        }\n    }\n    return outVals;\n}\nexport function bincountReduceImpl(xBuf, weightsBuf, size, binaryOutput = false) {\n    const numRows = xBuf.shape[0];\n    const numCols = xBuf.shape[1];\n    const outBuf = buffer([numRows, size], weightsBuf.dtype);\n    for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < numCols; j++) {\n            const value = xBuf.get(i, j);\n            if (value < 0) {\n                throw new Error('Input x must be non-negative!');\n            }\n            if (value >= size) {\n                continue;\n            }\n            if (binaryOutput) {\n                outBuf.set(1, i, value);\n            }\n            else {\n                if (weightsBuf.size > 0) {\n                    outBuf.set(outBuf.get(i, value) + weightsBuf.get(i, j), i, value);\n                }\n                else {\n                    outBuf.set(outBuf.get(i, value) + 1, i, value);\n                }\n            }\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=Bincount_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function gatherV2Impl(xBuf, indicesBuf, flattenOutputShape) {\n    const outBuf = buffer(flattenOutputShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const newLoc = outBuf.indexToLoc(i);\n        const originalLoc = newLoc.slice();\n        const batchIdx = originalLoc[0];\n        const indicesIdx = originalLoc[2];\n        const indicesIndex = indicesBuf.locToIndex([batchIdx, indicesIdx]);\n        originalLoc[2] = indicesBuf.values[indicesIndex];\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        outBuf.values[i] = xBuf.values[originalIndex];\n    }\n    return outBuf;\n}\n//# sourceMappingURL=GatherV2_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function linSpaceImpl(start, stop, num) {\n    const step = (stop - start) / (num - 1);\n    const values = util.makeZerosTypedArray(num, 'float32');\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=LinSpace_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function maxImpl(aVals, reduceSize, outShape, dtype) {\n    const vals = util.getTypedArrayFromDType(dtype, util.sizeFromShape(outShape));\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let max = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (value > max) {\n                max = value;\n            }\n        }\n        vals[i] = max;\n    }\n    return vals;\n}\n//# sourceMappingURL=Max_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n    const minusOne = util.createScalarValue(-1, xDtype);\n    return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'neg');\n    const xVals = backend.data.get(x.dataId).values;\n    const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n    return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport const negConfig = {\n    kernelName: Neg,\n    backendName: 'cpu',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, upcastType, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transpose } from './Transpose';\nexport function prodImpl(xShape, xDtype, xVals, reductionAxes) {\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(xShape, reductionAxes);\n    const outDtype = upcastType(xDtype, 'int32');\n    const outVals = util.makeZerosTypedArray(util.sizeFromShape(outShape), outDtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    for (let i = 0; i < outVals.length; ++i) {\n        const offset = i * reduceSize;\n        let prod = 1;\n        for (let j = 0; j < reduceSize; ++j) {\n            prod *= xVals[offset + j];\n        }\n        outVals[i] = prod;\n    }\n    return { outVals, outShape, outDtype };\n}\nexport function prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    assertNotComplex(x, 'prod');\n    const xRank = x.shape.length;\n    const axes = util.parseAxisParam(axis, x.shape);\n    const permutation = backend_util.getAxesPermutation(axes, xRank);\n    let reductionAxes = axes;\n    let permutedX = x;\n    const intermediateTensorInfos = [];\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n        intermediateTensorInfos.push(permutedX);\n        reductionAxes = backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n    }\n    const xVals = backend.data.get(permutedX.dataId).values;\n    const { outVals, outShape, outDtype } = prodImpl(permutedX.shape, permutedX.dtype, xVals, reductionAxes);\n    let resultShape = outShape;\n    if (keepDims) {\n        resultShape = backend_util.expandShapeToKeepDim(outShape, axes);\n    }\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return backend.makeTensorInfo(resultShape, outDtype, outVals);\n}\nexport const prodConfig = {\n    kernelName: Prod,\n    backendName: 'cpu',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function simpleAbsImpl(vals) {\n    const resultValues = new Float32Array(vals.length);\n    for (let i = 0; i < vals.length; ++i) {\n        resultValues[i] = Math.abs(vals[i]);\n    }\n    return resultValues;\n}\nexport const abs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    assertNotComplex(x, 'abs');\n    let resultValues = new Float32Array(util.sizeFromShape(x.shape));\n    const values = cpuBackend.data.get(x.dataId).values;\n    resultValues = simpleAbsImpl(values);\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport const absConfig = {\n    kernelName: Abs,\n    backendName: 'cpu',\n    kernelFunc: abs,\n};\n//# sourceMappingURL=Abs.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function stridedSliceImpl(outShape, xBuf, strides, begin) {\n    const outBuf = buffer(outShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; i++) {\n        const loc = outBuf.indexToLoc(i);\n        const newLoc = new Array(loc.length);\n        for (let j = 0; j < newLoc.length; j++) {\n            newLoc[j] = loc[j] * strides[j] + begin[j];\n        }\n        outBuf.set(xBuf.get(...newLoc), ...loc);\n    }\n    return outBuf;\n}\n//# sourceMappingURL=StridedSlice_impl.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\nexport function tileImpl(xBuf, reps) {\n    const newShape = new Array(xBuf.rank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = xBuf.shape[i] * reps[i];\n    }\n    const result = buffer(newShape, xBuf.dtype);\n    for (let i = 0; i < result.values.length; ++i) {\n        const newLoc = result.indexToLoc(i);\n        const originalLoc = new Array(xBuf.rank);\n        for (let j = 0; j < originalLoc.length; j++) {\n            originalLoc[j] = newLoc[j] % xBuf.shape[j];\n        }\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        result.values[i] = xBuf.values[originalIndex];\n    }\n    return result;\n}\n//# sourceMappingURL=Tile_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the TopK kernel shared between webgl and cpu. */\nimport { buffer, util } from '@tensorflow/tfjs-core';\nexport function topKImpl(x, xShape, xDtype, k, sorted) {\n    // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n    const lastDim = xShape[xShape.length - 1];\n    const [batch, size] = [x.length / lastDim, lastDim];\n    const allTopKVals = util.getTypedArrayFromDType(xDtype, batch * k);\n    const allTopKIndices = util.getTypedArrayFromDType('int32', batch * k);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = x.subarray(offset, offset + size);\n        const valAndInd = [];\n        for (let i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort((a, b) => b.value - a.value);\n        const outOffset = b * k;\n        const topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n        const topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n        for (let i = 0; i < k; i++) {\n            topKVals[i] = valAndInd[i].value;\n            topKIndices[i] = valAndInd[i].index;\n        }\n    }\n    // Reshape back to the original input shape, except that the last\n    // dimension is k.\n    const outputShape = xShape.slice();\n    outputShape[outputShape.length - 1] = k;\n    return [\n        buffer(outputShape, xDtype, allTopKVals),\n        buffer(outputShape, 'int32', allTopKIndices)\n    ];\n}\n//# sourceMappingURL=TopK_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function transposeImpl(xVals, xShape, dtype, perm, newShape) {\n    const xRank = xShape.length;\n    const xSize = util.sizeFromShape(xShape);\n    const xStrides = util.computeStrides(xShape);\n    const newStrides = util.computeStrides(newShape);\n    const result = util.getTypedArrayFromDType(dtype, util.sizeFromShape(newShape));\n    for (let i = 0; i < xSize; ++i) {\n        const loc = util.indexToLoc(i, xRank, xStrides);\n        // Permute location.\n        const newLoc = new Array(loc.length);\n        for (let i = 0; i < newLoc.length; i++) {\n            newLoc[i] = loc[perm[i]];\n        }\n        const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n        result[newIndex] = xVals[i];\n    }\n    return result;\n}\n//# sourceMappingURL=Transpose_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer, util } from '@tensorflow/tfjs-core';\nexport function uniqueImpl(values, axis, shape, dtype) {\n    // Normalize and validate axis.\n    const $axis = util.parseAxisParam(axis, shape)[0];\n    // Calculate the new shape that is suitable for extracting data along the\n    // given axis.\n    //\n    // The rank is 3.\n    // The size of the 1st dimension is the size of all the axes < the given axis.\n    // The size of the 2nd dimension is the same as the size of the given axis.\n    // The size of the 3rd dimension is the size of all the axes > the given axis.\n    //\n    // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n    // newShape would be: [2*3, 5, 4].\n    //\n    // Note that this is not the final output shape. This will be the shape for an\n    // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n    // values along the given axis. To demonstrate how it works, consider the\n    // following example:\n    //\n    // Input: a 3D tensor, with shape [1, 2, 3]\n    // [\n    //   [\n    //      [1,2,3],\n    //      [4,5,6]\n    //   ]\n    // ]\n    // Axis: 2 (the last axis).\n    // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n    //\n    // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n    // 1*2. The re-shaped data would look like:\n    //\n    // [\n    //   [\n    //     [1], [2], [3]\n    //   ],\n    //   [\n    //     [4], [5], [6]\n    //   ]\n    // ]\n    //\n    // Then, we can construct a 3-level nested loop by the following dimension\n    // order to extract the values along the axis (dimension1):\n    // i: dimension1       // 0,1,2 (newShape[1])\n    //   m: dimension0     // 0,1   (newShape[0])\n    //     n: dimension2   // 0     (newShape[2])\n    //\n    //                       m, i, n\n    //                      ---------\n    // Iteration 0: data at [0, 0, 0] => \"1\"\n    // Iteration 1: data at [1, 0, 0] => \"4\"\n    // We got [1,4].\n    // Iteration 2: data at [0, 1, 0] => \"2\"\n    // Iteration 3: data at [1, 1, 0] => \"5\"\n    // We got [2,5].\n    // Iteration 4: data at [0, 2, 0] => \"3\"\n    // Iteration 5: data at [1, 2, 0] => \"6\"\n    // We got [3,6].\n    const newShape = [1, shape[0], 1];\n    for (let i = 0; i < $axis; i++) {\n        newShape[0] *= shape[i];\n    }\n    newShape[1] = shape[$axis];\n    for (let i = $axis + 1; i < shape.length; i++) {\n        newShape[2] *= shape[i];\n    }\n    // A map from unique elements (their string representations) to their values\n    // in \"indices\" (below).\n    const uniqueElements = {};\n    // The indices of each unique element in the original tensor along the given\n    // axis. It is 1D and has the same size as the given axis.\n    const indices = new Int32Array(shape[$axis]);\n    // Create a buffer so we can easily extract value at a given location.\n    const inputBuffer = new TensorBuffer(newShape, dtype, values);\n    // The indices along the given axis that have unique elements. This is a\n    // de-duped version of \"indices\" above.\n    const uniqueIndices = [];\n    const is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n    for (let i = 0; i < shape[$axis]; i++) {\n        // Extract values along the axis.\n        let element;\n        if (is1DTensor) {\n            // Fast path for 1D tensor input.\n            element = values[i].toString();\n        }\n        else {\n            const axisValues = [];\n            for (let m = 0; m < newShape[0]; m++) {\n                for (let n = 0; n < newShape[2]; n++) {\n                    axisValues.push(inputBuffer.get(m, i, n));\n                }\n            }\n            element = axisValues.join(',');\n        }\n        // Dedup and update various indices.\n        if (uniqueElements[element] !== undefined) {\n            indices[i] = uniqueElements[element];\n        }\n        else {\n            const uniqueIndex = Object.keys(uniqueElements).length;\n            uniqueElements[element] = uniqueIndex;\n            indices[i] = uniqueIndex;\n            uniqueIndices.push(i);\n        }\n    }\n    // Now we know where each of the unique elements are located along the axis\n    // (uniqueIndices). Extract them from input buffer and store them in the\n    // output buffer.\n    const outputTmpShape = newShape.slice();\n    outputTmpShape[1] = Object.keys(uniqueElements).length;\n    const outputBuffer = new TensorBuffer(outputTmpShape, dtype);\n    uniqueIndices.forEach((uniqueElementIndex, i) => {\n        for (let m = 0; m < newShape[0]; m++) {\n            for (let n = 0; n < newShape[2]; n++) {\n                outputBuffer.set(inputBuffer.get(m, uniqueElementIndex, n), m, i, n);\n            }\n        }\n    });\n    // The output shape can be calculated from the input shape with the size of\n    // the given axis replaced by the number of unique elements along that axis.\n    const outputShape = shape.slice();\n    outputShape[$axis] = outputTmpShape[1];\n    return {\n        outputValues: outputBuffer.values,\n        outputShape,\n        indices,\n    };\n}\n//# sourceMappingURL=Unique_impl.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport function getVecChannels(name, rank) {\n    return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank).map(d => `${name}.${d}`);\n}\nexport function getChannels(name, rank) {\n    if (rank === 1) {\n        return [name];\n    }\n    return getVecChannels(name, rank);\n}\nexport function getSourceCoords(rank, dims) {\n    if (rank === 1) {\n        return 'rc';\n    }\n    let coords = '';\n    for (let i = 0; i < rank; i++) {\n        coords += dims[i];\n        if (i < rank - 1) {\n            coords += ',';\n        }\n    }\n    return coords;\n}\n//# sourceMappingURL=packing_util.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        // Only input / output 3D tensors.\n        this.outputShape = outputShape;\n        const rank = outputShape.length;\n        if (rank === 0) {\n            this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n        }\n        else {\n            const channels = getChannels('rc', rank);\n            const dtype = getCoordsDataType(rank);\n            const outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n            const setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n            const output = getOutput(outputShape, channels);\n            this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n        }\n    }\n}\nfunction getSourceCoordsArr(rank, dims) {\n    const coords = [];\n    for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n            let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n            for (let d = 2; d < rank; d++) {\n                coord = `${dims[dims.length - 1 - d]},` + coord;\n            }\n            coords.push(coord);\n        }\n    }\n    return coords;\n}\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n    if (rank === 1) {\n        return `rc > ${shape[0]}`;\n    }\n    let cond = '';\n    for (let i = rank - 2; i < rank; i++) {\n        cond += `${dims[i]} >= ${shape[i]}`;\n        if (i < rank - 1) {\n            cond += '||';\n        }\n    }\n    return cond;\n}\nfunction getSetup(rank, cols, rows, dims) {\n    if (rank === 1) {\n        return '';\n    }\n    const innerDims = dims.slice(-2);\n    return `\n    int r = ${innerDims[0]};\n    int c = ${innerDims[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${cols};\n    bool rEdge = rp1 >= ${rows};\n  `;\n}\nfunction getOutput(shape, dims) {\n    const rank = shape.length;\n    const sourceCoords = getSourceCoordsArr(rank, dims);\n    if (rank === 1) {\n        return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n    }\n    return `getA(${sourceCoords[0]}),\n          cEdge ? 0. : getA(${sourceCoords[1]}),\n          rEdge ? 0. : getA(${sourceCoords[2]}),\n          rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n}\n//# sourceMappingURL=pack_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as shader_util from './shader_compiler_util';\nexport class ReshapePackedProgram {\n    constructor(outputShape, inputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        let mainLoop = ``;\n        for (let i = 0; i < 4; i++) {\n            let thisRC = `thisRC = rc;`;\n            if (i % 2 === 1) {\n                thisRC += `thisRC.z += 1;`;\n            }\n            if (i > 1) {\n                thisRC += `thisRC.y += 1;`;\n            }\n            mainLoop += `\n        ${thisRC}\n        ${i > 0 ? `if(thisRC.y < rows && thisRC.z < cols){` : ''}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i > 0 ? '}' : ''}\n      `;\n        }\n        this.userCode = `\n      ${getReshapedInputCoords(inputShape)}\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${outputShape[1]};\n        int cols = ${outputShape[2]};\n\n        ${mainLoop}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\nfunction getReshapedInputCoords(shape) {\n    const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}\n//# sourceMappingURL=reshape_packed_gpu.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { getInternalFormatForFloat16MatrixTexture, getInternalFormatForFloat16PackedMatrixTexture, getInternalFormatForFloat32MatrixTexture, getInternalFormatForPackedMatrixTexture, getInternalFormatForUnsignedBytesMatrixTexture } from './gpgpu_util';\nimport { getPackedMatrixTextureShapeWidthHeight, getUnpackedMatrixTextureShapeWidthHeight, PhysicalTextureType, TextureUsage } from './tex_util';\nexport class TextureManager {\n    constructor(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this._numBytesAllocated = 0;\n        this._numBytesFree = 0; // How many bytes that have been allocated\n        // are available for reuse.\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.usedTextures = {};\n    }\n    acquireTexture(shapeRC, usage, isPacked) {\n        const physicalTexType = getPhysicalFromLogicalTextureType(usage, isPacked);\n        const shapeKey = getKeyFromTextureShape(shapeRC, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextures)) {\n            this.usedTextures[shapeKey] = [];\n        }\n        const texBytes = computeBytes(shapeRC, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this._numBytesFree -= texBytes;\n            this.log();\n            const newTexture = this.freeTextures[shapeKey].shift();\n            this.usedTextures[shapeKey].push(newTexture);\n            return newTexture;\n        }\n        let newTexture;\n        if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT32) {\n            newTexture = this.gpgpu.createPackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16PackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT32) {\n            newTexture =\n                this.gpgpu.createFloat32MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE) {\n            newTexture =\n                this.gpgpu.createUnsignedBytesMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        this.usedTextures[shapeKey].push(newTexture);\n        this.numUsedTextures++;\n        this._numBytesAllocated += texBytes;\n        this.log();\n        return newTexture;\n    }\n    releaseTexture(texture, shape, logicalTexType, isPacked) {\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        const physicalTexType = getPhysicalFromLogicalTextureType(logicalTexType, isPacked);\n        const shapeKey = getKeyFromTextureShape(shape, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        const texBytes = computeBytes(shape, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n        const deleteTexThreshold = env().get('WEBGL_DELETE_TEXTURE_THRESHOLD');\n        if (deleteTexThreshold !== -1 &&\n            this._numBytesAllocated > deleteTexThreshold) {\n            this.gpgpu.deleteMatrixTexture(texture);\n            this._numBytesAllocated -= texBytes;\n        }\n        else {\n            this.freeTextures[shapeKey].push(texture);\n            this.numFreeTextures++;\n            this._numBytesFree += texBytes;\n        }\n        this.numUsedTextures--;\n        const texList = this.usedTextures[shapeKey];\n        const texIndex = texList.indexOf(texture);\n        if (texIndex < 0) {\n            throw new Error('Cannot release a texture that was never provided by this ' +\n                'texture manager');\n        }\n        texList.splice(texIndex, 1);\n        this.log();\n    }\n    log() {\n        if (!this.logEnabled) {\n            return;\n        }\n        const total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', `${this.numFreeTextures} / ${this.numUsedTextures}`, `(${total})`);\n        const freeRatio = this._numBytesFree / this._numBytesAllocated;\n        console.log(`Bytes allocated: ${this._numBytesAllocated}`);\n        console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100 * freeRatio)}%)`);\n    }\n    get numBytesAllocated() {\n        return this._numBytesAllocated;\n    }\n    get numBytesFree() {\n        return this._numBytesFree;\n    }\n    getNumUsedTextures() {\n        return this.numUsedTextures;\n    }\n    getNumFreeTextures() {\n        return this.numFreeTextures;\n    }\n    dispose() {\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        for (const texShape in this.freeTextures) {\n            this.freeTextures[texShape].forEach(tex => {\n                this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        for (const texShape in this.usedTextures) {\n            this.usedTextures[texShape].forEach(tex => {\n                this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        this.freeTextures = null;\n        this.usedTextures = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this._numBytesAllocated = 0;\n        this._numBytesFree = 0;\n    }\n}\nfunction numBytesForInternalFormat(gl, internalFormat) {\n    // tslint:disable-next-line:no-any\n    const glany = gl;\n    if (internalFormat === glany.R32F) {\n        return 4;\n    }\n    else if (internalFormat === glany.R16F) {\n        return 2;\n    }\n    else if (internalFormat === glany.RGBA32F) {\n        return 16;\n    }\n    else if (internalFormat === gl.RGBA) {\n        return 16;\n    }\n    else if (internalFormat === glany.RGBA16F) {\n        return 8;\n    }\n    throw new Error(`Unknown internal format ${internalFormat}`);\n}\nexport function computeBytes(shape, physicalTexType, gl, textureConfig, isPacked) {\n    // It is not possible to infer packed status from the texture type because\n    // depending on the textureConfig, different  texture types may resolve to the\n    // same internal format (e.g. in WebGL1, the internal format for\n    // UNPACKED_FLOAT16 textures is gl.RGBA). Therefore we pass in `isPacked`\n    // explicitly.\n    const internalFormat = internalFormatForPhysicalTexType(physicalTexType, textureConfig);\n    let numElements;\n    if (isPacked) {\n        const [packedWidth, packedHeight] = getPackedMatrixTextureShapeWidthHeight(shape[0], shape[1]);\n        numElements = packedWidth * packedHeight;\n    }\n    else {\n        const [width, height] = getUnpackedMatrixTextureShapeWidthHeight(shape[0], shape[1]);\n        numElements = width * height;\n    }\n    const bytesPerElement = numBytesForInternalFormat(gl, internalFormat);\n    return numElements * bytesPerElement;\n}\nfunction internalFormatForPhysicalTexType(physicalTexType, textureConfig) {\n    switch (physicalTexType) {\n        case PhysicalTextureType.PACKED_2X2_FLOAT32:\n            return getInternalFormatForPackedMatrixTexture(textureConfig);\n        case PhysicalTextureType.PACKED_2X2_FLOAT16:\n            return getInternalFormatForFloat16PackedMatrixTexture(textureConfig);\n        case PhysicalTextureType.UNPACKED_FLOAT32:\n            return getInternalFormatForFloat32MatrixTexture(textureConfig);\n        case PhysicalTextureType.UNPACKED_FLOAT16:\n            return getInternalFormatForFloat16MatrixTexture(textureConfig);\n        case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:\n            return getInternalFormatForUnsignedBytesMatrixTexture(textureConfig);\n        default:\n            throw new Error(`Unknown physical texture type ${physicalTexType}`);\n    }\n}\nfunction getPhysicalTextureForRendering(isPacked) {\n    if (env().getBool('WEBGL_RENDER_FLOAT32_ENABLED')) {\n        if (isPacked) {\n            return PhysicalTextureType.PACKED_2X2_FLOAT32;\n        }\n        return PhysicalTextureType.UNPACKED_FLOAT32;\n    }\n    if (isPacked) {\n        return PhysicalTextureType.PACKED_2X2_FLOAT16;\n    }\n    return PhysicalTextureType.UNPACKED_FLOAT16;\n}\nfunction getPhysicalFromLogicalTextureType(logicalTexType, isPacked) {\n    if (logicalTexType === TextureUsage.UPLOAD) {\n        return PhysicalTextureType.PACKED_2X2_FLOAT32;\n    }\n    else if (logicalTexType === TextureUsage.RENDER || logicalTexType == null) {\n        return getPhysicalTextureForRendering(isPacked);\n    }\n    else if (logicalTexType === TextureUsage.DOWNLOAD ||\n        logicalTexType === TextureUsage.PIXELS) {\n        return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;\n    }\n    throw new Error(`Unknown logical texture type ${logicalTexType}`);\n}\nfunction getKeyFromTextureShape(shapeRowsCol, physicalTexType, isPacked) {\n    return `${shapeRowsCol[0]}_${shapeRowsCol[1]}_${physicalTexType}_${isPacked}`;\n}\n//# sourceMappingURL=texture_manager.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class UnaryOpProgram {\n    constructor(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      float unaryOperation(float x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n    }\n}\nexport const CHECK_NAN_SNIPPET = `if (isnan(x)) return x;`;\nexport const LINEAR = `return x;`;\nexport const ABS = `return abs(x);`;\nexport function STEP(alpha = 0.0) {\n    return CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${alpha});\n  `;\n}\nexport const ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nexport const RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nexport const RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nexport const CLONE = 'return x;';\n//# sourceMappingURL=unaryop_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const LINEAR = `return x;`;\nexport const ELU = `\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n`;\nexport const RELU = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const RELU6 = `\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport class UnaryOpPackedProgram {\n    constructor(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = `\n      vec4 unaryOperation(vec4 x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=unaryop_packed_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels, getSourceCoords } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class UnpackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outputShape = outputShape;\n        const rank = outputShape.length;\n        const channels = getChannels('rc', rank);\n        const dtype = getCoordsDataType(rank);\n        const sourceCoords = getSourceCoords(rank, channels);\n        const innerDims = channels.slice(-2);\n        const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n        this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=unpack_gpu.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import webgl flags.\nimport './flags_webgl';\nimport { backend_util, buffer, DataStorage, engine, env, kernel_impls, KernelBackend, scalar, tidy, util } from '@tensorflow/tfjs-core';\nimport { getWebGLContext } from './canvas_util';\nimport { DecodeMatrixProgram } from './decode_matrix_gpu';\nimport { DecodeMatrixPackedProgram } from './decode_matrix_packed_gpu';\nimport { EncodeFloatProgram } from './encode_float_gpu';\nimport { EncodeFloatPackedProgram } from './encode_float_packed_gpu';\nimport { EncodeMatrixProgram } from './encode_matrix_gpu';\nimport { EncodeMatrixPackedProgram } from './encode_matrix_packed_gpu';\nimport { GPGPUContext } from './gpgpu_context';\nimport * as gpgpu_math from './gpgpu_math';\nimport { simpleAbsImplCPU } from './kernel_utils/shared';\nimport { PackProgram } from './pack_gpu';\nimport { ReshapePackedProgram } from './reshape_packed_gpu';\nimport * as tex_util from './tex_util';\nimport { TextureUsage } from './tex_util';\nimport { TextureManager } from './texture_manager';\nimport * as unary_op from './unaryop_gpu';\nimport { UnaryOpProgram } from './unaryop_gpu';\nimport { UnaryOpPackedProgram } from './unaryop_packed_gpu';\nimport { UnpackProgram } from './unpack_gpu';\nimport * as webgl_util from './webgl_util';\nconst whereImpl = kernel_impls.whereImpl;\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\nconst binaryCaches = {};\nexport function getBinaryCache(webGLVersion) {\n    if (webGLVersion in binaryCaches) {\n        return binaryCaches[webGLVersion];\n    }\n    binaryCaches[webGLVersion] = {};\n    return binaryCaches[webGLVersion];\n}\n// Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\nconst CPU_HANDOFF_SIZE_THRESHOLD = 128;\n// Empirically determined constant used to decide the number of MB on GPU\n// before we warn about high memory use. The MB are this constant * screen area\n// * dpi / 1024 / 1024.\nconst BEFORE_PAGING_CONSTANT = 600;\nfunction numMBBeforeWarning() {\n    if (env().global.screen == null) {\n        return 1024; // 1 GB.\n    }\n    return (env().global.screen.height * env().global.screen.width *\n        window.devicePixelRatio) *\n        BEFORE_PAGING_CONSTANT / 1024 / 1024;\n}\nexport class MathBackendWebGL extends KernelBackend {\n    constructor(gpgpu) {\n        super();\n        // Maps data ids that have a pending read operation, to list of subscribers.\n        this.pendingRead = new WeakMap();\n        // List of data ids that are scheduled for disposal, but are waiting on a\n        // pending read operation.\n        this.pendingDisposal = new WeakSet();\n        // Used to count the number of 'shallow' sliced tensors that point to the\n        // same data id.\n        this.dataRefCount = new WeakMap();\n        this.numBytesInGPU = 0;\n        // Accumulated time spent (including blocking) in uploading data to webgl.\n        this.uploadWaitMs = 0;\n        // Accumulated time spent (including blocking in downloading data from webgl.\n        this.downloadWaitMs = 0;\n        this.warnedAboutMemory = false;\n        this.warnedAboutCPUBackend = false;\n        this.pendingDeletes = 0;\n        this.disposed = false;\n        if (!env().getBool('HAS_WEBGL')) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            const gl = getWebGLContext(env().getNumber('WEBGL_VERSION'));\n            this.binaryCache = getBinaryCache(env().getNumber('WEBGL_VERSION'));\n            this.gpgpu = new GPGPUContext(gl);\n            this.canvas = gl.canvas;\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpu = gpgpu;\n            this.binaryCache = {};\n            this.gpgpuCreatedLocally = false;\n            this.canvas = gpgpu.gl.canvas;\n        }\n        this.textureManager = new TextureManager(this.gpgpu);\n        this.numMBBeforeWarning = numMBBeforeWarning();\n        this.texData = new DataStorage(this, engine());\n    }\n    numDataIds() {\n        return this.texData.numDataIds() +\n            (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) -\n            this.pendingDeletes;\n    }\n    write(values, shape, dtype) {\n        if (env().getBool('WEBGL_CHECK_NUMERICAL_PROBLEMS') ||\n            env().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64' && values != null) {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        const dataId = {};\n        this.texData.set(dataId, {\n            shape,\n            dtype,\n            values,\n            usage: TextureUsage.UPLOAD,\n            refCount: 1,\n            complexParentRefCount: 0\n        });\n        return dataId;\n    }\n    /** Increase refCount of a `TextureData`. */\n    incRef(dataId) {\n        const texData = this.texData.get(dataId);\n        texData.refCount++;\n    }\n    /** Decrease refCount of a `TextureData`. */\n    decRef(dataId) {\n        if (this.texData.has(dataId)) {\n            const texData = this.texData.get(dataId);\n            texData.refCount--;\n        }\n    }\n    move(dataId, values, shape, dtype) {\n        if (env().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        this.texData.set(dataId, {\n            shape,\n            dtype,\n            values,\n            usage: TextureUsage.UPLOAD,\n            refCount: 1,\n            complexParentRefCount: 0\n        });\n    }\n    disposeIntermediateTensorInfo(tensorInfo) {\n        const dataId = tensorInfo.dataId;\n        if (this.texData.has(dataId)) {\n            const textureData = this.texData.get(dataId);\n            textureData.refCount--;\n            if (textureData.refCount < 1) {\n                this.disposeData(dataId);\n            }\n        }\n    }\n    readSync(dataId) {\n        const texData = this.texData.get(dataId);\n        const { values, dtype, complexTensorInfos, slice, shape, isPacked } = texData;\n        // The presence of `slice` indicates this tensor is a shallow slice of a\n        // different tensor, and is using that original tensor's texture. Run\n        // `clone` in order to copy that texture and read from it.\n        if (slice != null) {\n            let program;\n            if (isPacked) {\n                program = new UnaryOpPackedProgram(shape, unary_op.CLONE);\n            }\n            else {\n                program = new UnaryOpProgram(shape, unary_op.CLONE);\n            }\n            const res = this.runWebGLProgram(program, [{ dataId, shape, dtype }], dtype);\n            const data = this.readSync(res.dataId);\n            this.disposeIntermediateTensorInfo(res);\n            return data;\n        }\n        if (values != null) {\n            return this.convertAndCacheOnCPU(dataId);\n        }\n        if (dtype === 'string') {\n            return values;\n        }\n        const shouldTimeProgram = this.activeTimers != null;\n        let start;\n        if (shouldTimeProgram) {\n            start = util.now();\n        }\n        let result;\n        if (dtype === 'complex64') {\n            const realValues = this.readSync(complexTensorInfos.real.dataId);\n            const imagValues = this.readSync(complexTensorInfos.imag.dataId);\n            result = backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else {\n            result = this.getValuesFromTexture(dataId);\n        }\n        if (shouldTimeProgram) {\n            this.downloadWaitMs += util.now() - start;\n        }\n        return this.convertAndCacheOnCPU(dataId, result);\n    }\n    async read(dataId) {\n        if (this.pendingRead.has(dataId)) {\n            const subscribers = this.pendingRead.get(dataId);\n            return new Promise(resolve => subscribers.push(resolve));\n        }\n        const texData = this.texData.get(dataId);\n        const { values, shape, slice, dtype, complexTensorInfos, isPacked } = texData;\n        // The presence of `slice` indicates this tensor is a shallow slice of a\n        // different tensor, and is using that original tensor's texture. Run\n        // `clone` in order to copy that texture and read from it.\n        if (slice != null) {\n            let program;\n            if (isPacked) {\n                program = new UnaryOpPackedProgram(shape, unary_op.CLONE);\n            }\n            else {\n                program = new UnaryOpProgram(shape, unary_op.CLONE);\n            }\n            const res = this.runWebGLProgram(program, [{ dataId, shape, dtype }], dtype);\n            const data = this.read(res.dataId);\n            this.disposeIntermediateTensorInfo(res);\n            return data;\n        }\n        if (values != null) {\n            return this.convertAndCacheOnCPU(dataId);\n        }\n        if (!env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED') &&\n            env().getNumber('WEBGL_VERSION') === 2) {\n            throw new Error(`tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and ` +\n                `WEBGL_VERSION=2 not yet supported.`);\n        }\n        let buffer = null;\n        let tmpDownloadTarget;\n        if (dtype !== 'complex64' && env().get('WEBGL_BUFFER_SUPPORTED')) {\n            // Possibly copy the texture into a buffer before inserting a fence.\n            tmpDownloadTarget = this.decode(dataId);\n            const tmpData = this.texData.get(tmpDownloadTarget.dataId);\n            buffer = this.gpgpu.createBufferFromTexture(tmpData.texture, ...tex_util.getDenseTexShape(shape));\n        }\n        this.pendingRead.set(dataId, []);\n        if (dtype !== 'complex64') {\n            // Create a fence and wait for it to resolve.\n            await this.gpgpu.createAndWaitForFence();\n        }\n        // Download the values from the GPU.\n        let vals;\n        if (dtype === 'complex64') {\n            const ps = await Promise.all([\n                this.read(complexTensorInfos.real.dataId),\n                this.read(complexTensorInfos.imag.dataId)\n            ]);\n            const realValues = ps[0];\n            const imagValues = ps[1];\n            vals = backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else if (buffer == null) {\n            vals = this.getValuesFromTexture(dataId);\n        }\n        else {\n            const size = util.sizeFromShape(shape);\n            vals = this.gpgpu.downloadFloat32MatrixFromBuffer(buffer, size);\n        }\n        if (tmpDownloadTarget != null) {\n            this.disposeIntermediateTensorInfo(tmpDownloadTarget);\n        }\n        const dTypeVals = this.convertAndCacheOnCPU(dataId, vals);\n        const subscribers = this.pendingRead.get(dataId);\n        this.pendingRead.delete(dataId);\n        // Notify all pending reads.\n        subscribers.forEach(resolve => resolve(dTypeVals));\n        if (this.pendingDisposal.has(dataId)) {\n            this.pendingDisposal.delete(dataId);\n            this.disposeData(dataId);\n            this.pendingDeletes--;\n        }\n        return dTypeVals;\n    }\n    bufferSync(t) {\n        const data = this.readSync(t.dataId);\n        let decodedData = data;\n        if (t.dtype === 'string') {\n            try {\n                // Decode the bytes into string.\n                decodedData = data.map(d => util.decodeString(d));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode encoded string bytes into utf-8');\n            }\n        }\n        return buffer(t.shape, t.dtype, decodedData);\n    }\n    checkNumericalProblems(values) {\n        if (values == null) {\n            return;\n        }\n        for (let i = 0; i < values.length; i++) {\n            const num = values[i];\n            if (!webgl_util.canBeRepresented(num)) {\n                if (env().getBool('WEBGL_RENDER_FLOAT32_CAPABLE')) {\n                    throw Error(`The value ${num} cannot be represented with your ` +\n                        `current settings. Consider enabling float32 rendering: ` +\n                        `'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);\n                }\n                throw Error(`The value ${num} cannot be represented on this device.`);\n            }\n        }\n    }\n    getValuesFromTexture(dataId) {\n        const { shape, dtype, isPacked } = this.texData.get(dataId);\n        const size = util.sizeFromShape(shape);\n        if (env().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED')) {\n            const tmpTarget = this.decode(dataId);\n            const tmpData = this.texData.get(tmpTarget.dataId);\n            const vals = this.gpgpu\n                .downloadMatrixFromPackedTexture(tmpData.texture, ...tex_util.getDenseTexShape(shape))\n                .subarray(0, size);\n            this.disposeIntermediateTensorInfo(tmpTarget);\n            return vals;\n        }\n        const shouldUsePackedProgram = env().getBool('WEBGL_PACK') && isPacked === true;\n        const outputShape = shouldUsePackedProgram ? webgl_util.getShapeAs3D(shape) : shape;\n        const program = shouldUsePackedProgram ?\n            new EncodeFloatPackedProgram(outputShape) :\n            new EncodeFloatProgram(outputShape);\n        const output = this.runWebGLProgram(program, [{ shape: outputShape, dtype, dataId }], 'float32');\n        const tmpData = this.texData.get(output.dataId);\n        const vals = this.gpgpu\n            .downloadByteEncodedFloatMatrixFromOutputTexture(tmpData.texture, tmpData.texShape[0], tmpData.texShape[1])\n            .subarray(0, size);\n        this.disposeIntermediateTensorInfo(output);\n        return vals;\n    }\n    async time(f) {\n        const oldActiveTimers = this.activeTimers;\n        const newActiveTimers = [];\n        let outerMostTime = false;\n        if (this.programTimersStack == null) {\n            this.programTimersStack = newActiveTimers;\n            outerMostTime = true;\n        }\n        else {\n            this.activeTimers.push(newActiveTimers);\n        }\n        this.activeTimers = newActiveTimers;\n        f();\n        // needing to split these up because util.flatten only accepts certain types\n        const flattenedActiveTimerQueries = util.flatten(this.activeTimers.map((d) => d.query))\n            .filter(d => d != null);\n        const flattenedActiveTimerNames = util.flatten(this.activeTimers.map((d) => d.name))\n            .filter(d => d != null);\n        this.activeTimers = oldActiveTimers;\n        if (outerMostTime) {\n            this.programTimersStack = null;\n        }\n        const res = {\n            uploadWaitMs: this.uploadWaitMs,\n            downloadWaitMs: this.downloadWaitMs,\n            kernelMs: null,\n            wallMs: null // will be filled by the engine\n        };\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            const kernelMs = await Promise.all(flattenedActiveTimerQueries);\n            res['kernelMs'] = util.sum(kernelMs);\n            res['getExtraProfileInfo'] = () => kernelMs.map((d, i) => ({ name: flattenedActiveTimerNames[i], ms: d }))\n                .map(d => `${d.name}: ${d.ms}`)\n                .join(', ');\n        }\n        else {\n            res['kernelMs'] = {\n                error: 'WebGL query timers are not supported in this environment.'\n            };\n        }\n        this.uploadWaitMs = 0;\n        this.downloadWaitMs = 0;\n        return res;\n    }\n    memory() {\n        return {\n            unreliable: false,\n            numBytesInGPU: this.numBytesInGPU,\n            numBytesInGPUAllocated: this.textureManager.numBytesAllocated,\n            numBytesInGPUFree: this.textureManager.numBytesFree\n        };\n    }\n    startTimer() {\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            return this.gpgpu.beginQuery();\n        }\n        return { startMs: util.now(), endMs: null };\n    }\n    endTimer(query) {\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            this.gpgpu.endQuery();\n            return query;\n        }\n        query.endMs = util.now();\n        return query;\n    }\n    async getQueryTime(query) {\n        if (env().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            return this.gpgpu.waitForQueryAndGetTime(query);\n        }\n        const timerQuery = query;\n        return timerQuery.endMs - timerQuery.startMs;\n    }\n    disposeData(dataId) {\n        if (this.pendingDisposal.has(dataId)) {\n            return;\n        }\n        if (this.pendingRead.has(dataId)) {\n            this.pendingDisposal.add(dataId);\n            this.pendingDeletes++;\n            return;\n        }\n        // No-op if already disposed.\n        if (!this.texData.has(dataId)) {\n            return;\n        }\n        // Trying to dispose a textureData that has a 'kept' refCount, e.g. trying\n        // to dispose a tensor whose data bucket is shared with a complex tensor. In\n        // this case we are removing a reference to the textureData, but we\n        // shouldn't actually dispose the texture.\n        if (this.texData.get(dataId).complexParentRefCount > 0) {\n            this.texData.get(dataId).refCount--;\n            return;\n        }\n        this.releaseGPUData(dataId);\n        const { complexTensorInfos } = this.texData.get(dataId);\n        if (complexTensorInfos != null) {\n            this.texData.get(complexTensorInfos.real.dataId).complexParentRefCount--;\n            this.disposeIntermediateTensorInfo(complexTensorInfos.real);\n            this.texData.get(complexTensorInfos.imag.dataId).complexParentRefCount--;\n            this.disposeIntermediateTensorInfo(complexTensorInfos.imag);\n        }\n        this.texData.delete(dataId);\n    }\n    releaseGPUData(dataId) {\n        const { texture, dtype, texShape, usage, isPacked, slice } = this.texData.get(dataId);\n        const key = slice && slice.origDataId || dataId;\n        const refCount = this.dataRefCount.get(key);\n        if (refCount > 1) {\n            this.dataRefCount.set(key, refCount - 1);\n        }\n        else {\n            this.dataRefCount.delete(key);\n            if (texture != null) {\n                this.numBytesInGPU -= this.computeBytes(texShape, dtype);\n                this.textureManager.releaseTexture(texture, texShape, usage, isPacked);\n            }\n        }\n        const texData = this.texData.get(dataId);\n        texData.texture = null;\n        texData.texShape = null;\n        texData.isPacked = false;\n        texData.slice = null;\n    }\n    getTexture(dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId).texture;\n    }\n    /**\n     * Returns internal information for the specific data bucket. Used in unit\n     * tests.\n     */\n    getDataInfo(dataId) {\n        return this.texData.get(dataId);\n    }\n    getCPUBackend() {\n        if (!env().getBool('WEBGL_CPU_FORWARD')) {\n            return null;\n        }\n        if (this.cpuBackend == null) {\n            this.cpuBackend = engine().findBackend('cpu');\n        }\n        return this.cpuBackend;\n    }\n    /*\n    Tests whether all the inputs to an op are small and on the CPU. This heuristic\n    determines when it would be faster to execute a kernel on the CPU. WebGL\n    kernels opt into running this check and forwarding when appropriate.\n    TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more\n    sustainable strategy for optimizing backend execution of ops.\n     */\n    shouldExecuteOnCPU(inputs, sizeThreshold = CPU_HANDOFF_SIZE_THRESHOLD) {\n        const cpuBackend = this.getCPUBackend();\n        if (!env().getBool('IS_TEST') && !this.warnedAboutCPUBackend &&\n            cpuBackend == null) {\n            console.warn('Your application contains ops that are small enough to be ' +\n                'executed on the CPU backend, however the CPU backend cannot ' +\n                'be found. Consider importing the CPU backend ' +\n                '(@tensorflow/tfjs-backend-cpu) for better performance.');\n            this.warnedAboutCPUBackend = true;\n        }\n        return cpuBackend != null &&\n            inputs.every(input => this.texData.get(input.dataId).texture == null &&\n                util.sizeFromShape(input.shape) < sizeThreshold);\n    }\n    getGPGPUContext() {\n        return this.gpgpu;\n    }\n    where(condition) {\n        backend_util.warn('tf.where() in webgl locks the UI thread. ' +\n            'Call tf.whereAsync() instead');\n        const condVals = condition.dataSync();\n        return whereImpl(condition.shape, condVals);\n    }\n    packedUnaryOp(x, op, dtype) {\n        const program = new UnaryOpPackedProgram(x.shape, op);\n        return this.compileAndRun(program, [x], dtype);\n    }\n    // TODO(msoulanille) remove this once the backend has been modularized\n    // a copy is needed here to break a circular dependency.\n    // Also remove the op from unary_op.\n    abs(x) {\n        // TODO: handle cases when x is complex.\n        if (this.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n            const outValues = simpleAbsImplCPU(this.texData.get(x.dataId).values);\n            return this.makeOutput(x.shape, x.dtype, outValues);\n        }\n        if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, unary_op.ABS, x.dtype);\n        }\n        const program = new UnaryOpProgram(x.shape, unary_op.ABS);\n        return this.compileAndRun(program, [x]);\n    }\n    makeTensorInfo(shape, dtype, values) {\n        let dataId;\n        if (dtype === 'string' && values != null && values.length > 0 &&\n            util.isString(values[0])) {\n            const encodedValues = values.map(d => util.encodeString(d));\n            dataId = this.write(encodedValues, shape, dtype);\n        }\n        else {\n            dataId = this.write(values, shape, dtype);\n        }\n        this.texData.get(dataId).usage = null;\n        return { dataId, shape, dtype };\n    }\n    makeOutput(shape, dtype, values) {\n        const { dataId } = this.makeTensorInfo(shape, dtype, values);\n        return engine().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n    unpackTensor(input) {\n        const program = new UnpackProgram(input.shape);\n        return this.runWebGLProgram(program, [input], input.dtype);\n    }\n    packTensor(input) {\n        const program = new PackProgram(input.shape);\n        const preventEagerUnpackingOutput = true;\n        return this.runWebGLProgram(program, [input], input.dtype, null /* customSetup */, preventEagerUnpackingOutput);\n    }\n    packedReshape(input, afterShape) {\n        const input3DShape = [\n            webgl_util.getBatchDim(input.shape),\n            ...webgl_util.getRowsCols(input.shape)\n        ];\n        const input3D = {\n            dtype: input.dtype,\n            shape: input3DShape,\n            dataId: input.dataId\n        };\n        const afterShapeAs3D = [\n            webgl_util.getBatchDim(afterShape), ...webgl_util.getRowsCols(afterShape)\n        ];\n        const program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n        const preventEagerUnpackingOfOutput = true;\n        const output = this.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n    }\n    decode(dataId) {\n        const texData = this.texData.get(dataId);\n        const { isPacked, shape, dtype } = texData;\n        const shapeAs3D = webgl_util.getShapeAs3D(shape);\n        let program;\n        if (isPacked) {\n            program = new DecodeMatrixPackedProgram(shapeAs3D);\n        }\n        else {\n            program = new DecodeMatrixProgram(shapeAs3D);\n        }\n        const preventEagerUnpackingOfOutput = true;\n        const out = this.runWebGLProgram(program, [{ shape: shapeAs3D, dtype, dataId }], dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dtype, shape, dataId: out.dataId };\n    }\n    runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput = false) {\n        const output = this.makeTensorInfo(program.outputShape, outputDtype);\n        const outData = this.texData.get(output.dataId);\n        if (program.packedOutput) {\n            outData.isPacked = true;\n        }\n        if (program.outPackingScheme === tex_util.PackingScheme.DENSE) {\n            const texelShape = tex_util.getDenseTexShape(program.outputShape);\n            // For a densely packed output, we explicitly set texShape\n            // so it doesn't get assigned later according to our typical packing\n            // scheme wherein a single texel can only contain values from adjacent\n            // rows/cols.\n            outData.texShape = texelShape.map(d => d * 2);\n        }\n        if (program.outTexUsage != null) {\n            outData.usage = program.outTexUsage;\n        }\n        if (util.sizeFromShape(output.shape) === 0) {\n            // Short-circuit the computation since the result is empty (has 0 in its\n            // shape).\n            outData.values =\n                util.getTypedArrayFromDType(output.dtype, 0);\n            return output;\n        }\n        const dataToDispose = [];\n        const inputsData = inputs.map(input => {\n            if (input.dtype === 'complex64') {\n                throw new Error(`GPGPUProgram does not support complex64 input. For complex64 ` +\n                    `dtypes, please separate the program into real and imaginary ` +\n                    `parts.`);\n            }\n            let texData = this.texData.get(input.dataId);\n            if (texData.texture == null) {\n                if (!program.packedInputs &&\n                    util.sizeFromShape(input.shape) <=\n                        env().getNumber('WEBGL_SIZE_UPLOAD_UNIFORM')) {\n                    // Upload small tensors that live on the CPU as uniforms, not as\n                    // textures. Do this only when the environment supports 32bit floats\n                    // due to problems when comparing 16bit floats with 32bit floats.\n                    // TODO(https://github.com/tensorflow/tfjs/issues/821): Make it\n                    // possible for packed shaders to sample from uniforms.\n                    return {\n                        shape: input.shape,\n                        texData: null,\n                        isUniform: true,\n                        uniformValues: texData.values\n                    };\n                }\n                // This ensures that if a packed program's inputs have not yet been\n                // uploaded to the GPU, they get uploaded as packed right off the bat.\n                if (program.packedInputs) {\n                    texData.isPacked = true;\n                    texData.shape = input.shape;\n                }\n            }\n            else if (!!texData.isPacked !== !!program.packedInputs) {\n                input = texData.isPacked ? this.unpackTensor(input) :\n                    this.packTensor(input);\n                dataToDispose.push(input);\n                texData = this.texData.get(input.dataId);\n            }\n            else if (texData.isPacked &&\n                !webgl_util.isReshapeFree(texData.shape, input.shape)) {\n                // This is a special case where a texture exists for a tensor\n                // but the shapes are incompatible (due to packing constraints) because\n                // the tensor did not have a chance to go through the packed reshape\n                // shader. This only happens when we reshape the *same* tensor to form\n                // *distinct* inputs to an op, e.g. dotting a vector with itself. This\n                // case will disappear once packed uploading is the default.\n                const savedInput = input;\n                const targetShape = input.shape;\n                input.shape = texData.shape;\n                input = this.packedReshape(input, targetShape);\n                dataToDispose.push(input);\n                texData = this.texData.get(input.dataId);\n                savedInput.shape = targetShape;\n            }\n            this.uploadToGPU(input.dataId);\n            return { shape: input.shape, texData, isUniform: false };\n        });\n        this.uploadToGPU(output.dataId);\n        const outputData = { shape: output.shape, texData: outData, isUniform: false };\n        const key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n        const binary = this.getAndSaveBinary(key, () => {\n            return gpgpu_math.compileProgram(this.gpgpu, program, inputsData, outputData);\n        });\n        const shouldTimeProgram = this.activeTimers != null;\n        let query;\n        if (shouldTimeProgram) {\n            query = this.startTimer();\n        }\n        gpgpu_math.runProgram(this.gpgpu, binary, inputsData, outputData, customSetup);\n        dataToDispose.forEach(info => this.disposeIntermediateTensorInfo(info));\n        if (shouldTimeProgram) {\n            query = this.endTimer(query);\n            this.activeTimers.push({ name: program.constructor.name, query: this.getQueryTime(query) });\n        }\n        if (!env().getBool('WEBGL_LAZILY_UNPACK') && outData.isPacked &&\n            preventEagerUnpackingOfOutput === false) {\n            const unpacked = this.unpackTensor(output);\n            this.disposeIntermediateTensorInfo(output);\n            return unpacked;\n        }\n        return output;\n    }\n    compileAndRun(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput = false) {\n        outputDtype = outputDtype || inputs[0].dtype;\n        const outInfo = this.runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput);\n        return engine().makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    }\n    getAndSaveBinary(key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    }\n    getTextureManager() {\n        return this.textureManager;\n    }\n    dispose() {\n        if (this.disposed) {\n            return;\n        }\n        // Avoid disposing the compiled webgl programs during unit testing because\n        // it slows down test execution.\n        if (!env().getBool('IS_TEST')) {\n            const allKeys = Object.keys(this.binaryCache);\n            allKeys.forEach(key => {\n                this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n                delete this.binaryCache[key];\n            });\n        }\n        this.textureManager.dispose();\n        if (this.canvas != null &&\n            (typeof (HTMLCanvasElement) !== 'undefined' &&\n                this.canvas instanceof HTMLCanvasElement)) {\n            this.canvas.remove();\n        }\n        else {\n            this.canvas = null;\n        }\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.program = null;\n            this.gpgpu.dispose();\n        }\n        this.disposed = true;\n    }\n    floatPrecision() {\n        if (this.floatPrecisionValue == null) {\n            this.floatPrecisionValue = tidy(() => {\n                if (!env().get('WEBGL_RENDER_FLOAT32_ENABLED')) {\n                    // Momentarily switching DEBUG flag to false so we don't throw an\n                    // error trying to upload a small value.\n                    const debugFlag = env().getBool('DEBUG');\n                    env().set('DEBUG', false);\n                    const underflowCheckValue = this.abs(scalar(1e-8)).dataSync()[0];\n                    env().set('DEBUG', debugFlag);\n                    if (underflowCheckValue > 0) {\n                        return 32;\n                    }\n                }\n                return 16;\n            });\n        }\n        return this.floatPrecisionValue;\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    uploadToGPU(dataId) {\n        const texData = this.texData.get(dataId);\n        const { shape, dtype, values, texture, usage, isPacked } = texData;\n        if (texture != null) {\n            // Array is already on GPU. No-op.\n            return;\n        }\n        const shouldTimeProgram = this.activeTimers != null;\n        let start;\n        if (shouldTimeProgram) {\n            start = util.now();\n        }\n        let texShape = texData.texShape;\n        if (texShape == null) {\n            texShape = webgl_util.getTextureShapeFromLogicalShape(shape, isPacked);\n            texData.texShape = texShape;\n        }\n        if (values != null) {\n            const shapeAs3D = webgl_util.getShapeAs3D(shape);\n            let program;\n            let width = texShape[1], height = texShape[0];\n            const isByteArray = values instanceof Uint8Array;\n            if (isPacked) {\n                [width, height] = tex_util.getPackedMatrixTextureShapeWidthHeight(texShape[0], texShape[1]);\n                program = new EncodeMatrixPackedProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            else {\n                program =\n                    new EncodeMatrixProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            const tempDenseInputHandle = this.makeTensorInfo([height, width], dtype);\n            if (isByteArray) {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    TextureUsage.PIXELS;\n            }\n            else {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    TextureUsage.UPLOAD;\n            }\n            this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(tempDenseInputHandle.dataId), width, height, values);\n            // We want the output to remain packed regardless of the value of\n            // WEBGL_PACK.\n            const preventEagerUnpacking = true;\n            const encodedOutputTarget = this.runWebGLProgram(program, [tempDenseInputHandle], dtype, null, preventEagerUnpacking);\n            // Have the original texture assume the identity of the encoded output.\n            const outputTexData = this.texData.get(encodedOutputTarget.dataId);\n            texData.texture = outputTexData.texture;\n            texData.texShape = outputTexData.texShape;\n            texData.isPacked = outputTexData.isPacked;\n            texData.usage = outputTexData.usage;\n            this.disposeIntermediateTensorInfo(tempDenseInputHandle);\n            this.texData.delete(encodedOutputTarget.dataId);\n            // Once uploaded, don't store the values on cpu.\n            texData.values = null;\n            if (shouldTimeProgram) {\n                this.uploadWaitMs += util.now() - start;\n            }\n        }\n        else {\n            const newTexture = this.acquireTexture(texShape, usage, dtype, isPacked);\n            texData.texture = newTexture;\n        }\n    }\n    convertAndCacheOnCPU(dataId, float32Values) {\n        const texData = this.texData.get(dataId);\n        const { dtype } = texData;\n        this.releaseGPUData(dataId);\n        if (float32Values != null) {\n            texData.values = float32ToTypedArray(float32Values, dtype);\n        }\n        return texData.values;\n    }\n    acquireTexture(texShape, texType, dtype, isPacked) {\n        this.numBytesInGPU += this.computeBytes(texShape, dtype);\n        if (!this.warnedAboutMemory &&\n            this.numBytesInGPU > this.numMBBeforeWarning * 1024 * 1024) {\n            const mb = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n            this.warnedAboutMemory = true;\n            console.warn(`High memory usage in GPU: ${mb} MB, ` +\n                `most likely due to a memory leak`);\n        }\n        return this.textureManager.acquireTexture(texShape, texType, isPacked);\n    }\n    computeBytes(shape, dtype) {\n        return shape[0] * shape[1] * util.bytesPerElement(dtype);\n    }\n}\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32' || dtype === 'complex64') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        const result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (let i = 0; i < result.length; ++i) {\n            result[i] = Math.round(a[i]);\n        }\n        return result;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n//# sourceMappingURL=backend_webgl.js.map","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// base.ts is the webgl backend without auto kernel registration.\nimport { device_util, registerBackend } from '@tensorflow/tfjs-core';\nimport { MathBackendWebGL } from './backend_webgl';\nexport { version as version_webgl } from './version';\nif (device_util.isBrowser()) {\n    registerBackend('webgl', () => new MathBackendWebGL(), 2 /* priority */);\n}\n// Export webgl utilities\nexport * from './webgl';\n// Export forceHalfFlost under webgl namespace for the union bundle.\nimport { forceHalfFloat } from './webgl';\nexport const webgl = { forceHalfFloat };\n//# sourceMappingURL=base.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport const CHECK_NAN_SNIPPET = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\nexport const SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport class BinaryOpProgram {\n    constructor(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = `\n      float binaryOperation(float a, float b) {\n        ${op}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport const CHECK_NAN_SNIPPET = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\nexport class BinaryOpPackedProgram {\n    constructor(op, aShape, bShape, checkOutOfBounds = false) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const rank = this.outputShape.length;\n        let checkOutOfBoundsString = '';\n        if (checkOutOfBounds) {\n            if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n                checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n            }\n            else {\n                const dtype = getCoordsDataType(rank);\n                checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n                if (rank === 1) {\n                    checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n                }\n                else {\n                    const channels = getChannels('coords', rank);\n                    checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n                }\n            }\n        }\n        this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };\n}\nexport const identityConfig = {\n    kernelName: Identity,\n    backendName: 'webgl',\n    kernelFunc: identity\n};\n//# sourceMappingURL=Identity.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors increment the `complexParentRefCount` properties of the underlying\n * data buckets to prevent them from being disposed, as the engine's disposal\n * logic does not account for data sharing by complex tensors.\n *\n * When a complex tensor is disposed, it will explicitly decrease the\n * `complexParentRefCount` properties of its underlying components.\n */\nexport function complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.texData.get(complexInfo.dataId);\n    const realTensorInfo = identity({ inputs: { x: real }, backend });\n    const realData = backend.texData.get(realTensorInfo.dataId);\n    realData.complexParentRefCount++;\n    const imagTensorInfo = identity({ inputs: { x: imag }, backend });\n    const imagData = backend.texData.get(imagTensorInfo.dataId);\n    imagData.complexParentRefCount++;\n    complex.complexTensorInfos = { real: realTensorInfo, imag: imagTensorInfo };\n    return complexInfo;\n}\nexport const complexConfig = {\n    kernelName: Complex,\n    backendName: 'webgl',\n    kernelFunc: complex\n};\n//# sourceMappingURL=Complex.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, LeakyRelu, util } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nexport const LEAKYRELU = `return (a < 0.) ? b * a : a;`;\nexport const LEAKYRELU_PACKED = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\nexport function leakyRelu(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { alpha } = attrs;\n    const $alpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(alpha, 'float32'));\n    const program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(LEAKYRELU_PACKED, x.shape, $alpha.shape) :\n        new BinaryOpProgram(LEAKYRELU, x.shape, $alpha.shape);\n    const result = backend.runWebGLProgram(program, [x, $alpha], x.dtype);\n    backend.disposeIntermediateTensorInfo($alpha);\n    return result;\n}\nexport const leakyReluConfig = {\n    kernelName: LeakyRelu,\n    backendName: 'webgl',\n    kernelFunc: leakyRelu\n};\n//# sourceMappingURL=LeakyRelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Prelu } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nexport const PRELU = `return (a < 0.) ? b * a : a;`;\nexport const PRELU_PACKED = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\nexport function prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(PRELU_PACKED, x.shape, alpha.shape) :\n        new BinaryOpProgram(PRELU, x.shape, alpha.shape);\n    return backend.runWebGLProgram(program, [x, alpha], x.dtype);\n}\nexport const preluConfig = {\n    kernelName: Prelu,\n    backendName: 'webgl',\n    kernelFunc: prelu\n};\n//# sourceMappingURL=Prelu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, upcastType } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nimport { complex } from '../kernels/Complex';\nimport { LEAKYRELU, LEAKYRELU_PACKED } from '../kernels/LeakyRelu';\nimport { PRELU, PRELU_PACKED } from '../kernels/Prelu';\nimport * as unary_op from '../unaryop_gpu';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport * as unary_packed_op from '../unaryop_packed_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nexport const CHECK_NAN_SNIPPET_UNARY = `if (isnan(x)) return x;`;\nexport const CHECK_NAN_SNIPPET_BINARY = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\nexport const CHECK_NAN_SNIPPET_BINARY_PACKED = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param opSnippet Op snippet to create `UnaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `UnaryOpPackedProgram`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nexport function unaryKernelFunc({ opSnippet, packedOpSnippet, cpuKernelImpl, dtype }) {\n    return ({ inputs, backend }) => {\n        const { x } = inputs;\n        const webglBackend = backend;\n        const $dtype = dtype || x.dtype;\n        if (webglBackend.shouldExecuteOnCPU([x]) && cpuKernelImpl != null) {\n            const xData = webglBackend.texData.get(x.dataId);\n            const outValues = cpuKernelImpl(xData.values, $dtype);\n            return webglBackend.makeTensorInfo(x.shape, $dtype, outValues);\n        }\n        const shouldUsePackedProgram = env().getBool('WEBGL_PACK_UNARY_OPERATIONS') && packedOpSnippet != null;\n        let program;\n        if (shouldUsePackedProgram) {\n            program = new UnaryOpPackedProgram(x.shape, packedOpSnippet);\n        }\n        else {\n            program = new UnaryOpProgram(x.shape, opSnippet);\n        }\n        return webglBackend.runWebGLProgram(program, [x], $dtype);\n    };\n}\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param opSnippet Op snippet to create `BinaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `BinaryOpPackedProgram`.\n * @param checkOutOfBoundsForPackedProgram Whether to set checkOutOfBounds=true\n *     when creating BinaryOpPackedProgram.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nexport function binaryKernelFunc({ opSnippet, packedOpSnippet, checkOutOfBounds = false, supportsComplex = false, cpuKernelImpl, dtype }) {\n    return ({ inputs, backend }) => {\n        const { a, b } = inputs;\n        const webglBackend = backend;\n        if (supportsComplex && a.dtype === 'complex64') {\n            const aData = webglBackend.texData.get(a.dataId);\n            const bData = webglBackend.texData.get(b.dataId);\n            const [real, imag] = [\n                [aData.complexTensorInfos.real, bData.complexTensorInfos.real],\n                [aData.complexTensorInfos.imag, bData.complexTensorInfos.imag]\n            ].map(complexParts => {\n                const [aPart, bPart] = complexParts;\n                const aHandle = {\n                    dataId: aPart.dataId,\n                    dtype: aPart.dtype,\n                    shape: a.shape\n                };\n                const bHandle = {\n                    dataId: bPart.dataId,\n                    dtype: bPart.dtype,\n                    shape: b.shape\n                };\n                const program = new BinaryOpProgram(opSnippet, a.shape, b.shape);\n                return webglBackend.runWebGLProgram(program, [aHandle, bHandle], upcastType(aPart.dtype, bPart.dtype));\n            });\n            const complexOutput = complex({ inputs: { real, imag }, backend: webglBackend });\n            webglBackend.disposeIntermediateTensorInfo(real);\n            webglBackend.disposeIntermediateTensorInfo(imag);\n            // TODO(annxingyuan): Implement CPU forwarding for complex inputs.\n            return complexOutput;\n        }\n        const $dtype = dtype || upcastType(a.dtype, b.dtype);\n        if (webglBackend.shouldExecuteOnCPU([a, b]) && cpuKernelImpl != null) {\n            const aData = webglBackend.texData.get(a.dataId);\n            const bData = webglBackend.texData.get(b.dataId);\n            const [outValues, outShape] = cpuKernelImpl(a.shape, b.shape, aData.values, bData.values, $dtype);\n            const out = webglBackend.makeTensorInfo(outShape, $dtype);\n            const outData = webglBackend.texData.get(out.dataId);\n            outData.values = outValues;\n            return out;\n        }\n        const shouldUsePackedProgram = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') &&\n            packedOpSnippet != null;\n        let program;\n        if (shouldUsePackedProgram) {\n            program = new BinaryOpPackedProgram(packedOpSnippet, a.shape, b.shape, checkOutOfBounds);\n        }\n        else {\n            program = new BinaryOpProgram(opSnippet, a.shape, b.shape);\n        }\n        return webglBackend.runWebGLProgram(program, [a, b], $dtype);\n    };\n}\nexport function mapActivationToShaderProgram(activation, packed = false) {\n    if (activation === 'linear') {\n        if (packed) {\n            return unary_packed_op.LINEAR;\n        }\n        return unary_op.LINEAR;\n    }\n    else if (activation === 'relu') {\n        if (packed) {\n            return unary_packed_op.RELU;\n        }\n        return unary_op.RELU;\n    }\n    else if (activation === 'elu') {\n        if (packed) {\n            return unary_packed_op.ELU;\n        }\n        return unary_op.ELU;\n    }\n    else if (activation === 'relu6') {\n        if (packed) {\n            return unary_packed_op.RELU6;\n        }\n        return unary_op.RELU6;\n    }\n    else if (activation === 'prelu') {\n        if (packed) {\n            return PRELU_PACKED;\n        }\n        return PRELU;\n    }\n    else if (activation === 'leakyrelu') {\n        if (packed) {\n            return LEAKYRELU_PACKED;\n        }\n        return LEAKYRELU;\n    }\n    throw new Error(`Activation ${activation} has not been implemented for the WebGL backend.`);\n}\n//# sourceMappingURL=kernel_funcs_utils.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class MatMulPackedProgram {\n    constructor(aShape, bShape, outputShape, transposeA = false, transposeB = false, addBias = false, activation = null, hasPreluActivation = false, hasLeakyreluActivation = false) {\n        this.variableNames = ['matrixA', 'matrixB'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        const sharedDim = transposeA ? aShape[1] : aShape[2];\n        const sharedDimensionPacked = Math.ceil(sharedDim / 2);\n        const aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n        const bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n        const aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n        const bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyreluActivation) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        let batchASnippet = 'rc.x';\n        let batchBSnippet = 'rc.x';\n        if (aShape[0] < bShape[0]) {\n            batchASnippet = `int(min(float(rc.x), ${aShape[0] - 1}.))`;\n        }\n        else if (bShape[0] < aShape[0]) {\n            batchBSnippet = `int(min(float(rc.x), ${bShape[0] - 1}.))`;\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const float sharedDimension = ${sharedDimensionPacked}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${sharedDimensionPacked}; i++) {\n          int batchA = ${batchASnippet};\n          int batchB = ${batchBSnippet};\n          vec4 a = getMatrixA(batchA, ${aSample});\n          vec4 b = getMatrixB(batchB, ${bSample});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${aSwizzle[0]} * ${bSwizzle[0]});\n          result += (${aSwizzle[1]} * ${bSwizzle[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${addBiasSnippet}\n\n        ${applyActivationSnippet}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mulmat_packed_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nexport const COMPLEX_MULTIPLY = {\n    REAL: 'return areal * breal - aimag * bimag;',\n    IMAG: 'return areal * bimag + aimag * breal;'\n};\nexport class BinaryOpComplexProgram {\n    constructor(op, aShape, bShape) {\n        this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_complex_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, Multiply } from '@tensorflow/tfjs-core';\nimport * as binaryop_complex_gpu from '../binaryop_complex_gpu';\nimport { BinaryOpComplexProgram } from '../binaryop_complex_gpu';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nimport { multiplyImplCPU as cpuMultiply } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nconst MUL = 'return a * b;';\nexport function multiply(args) {\n    const { inputs, backend } = args;\n    const { a, b } = inputs;\n    const dtype = backend_util.upcastType(a.dtype, b.dtype);\n    if (a.dtype === 'complex64') {\n        const aData = backend.texData.get(a.dataId);\n        const bData = backend.texData.get(b.dataId);\n        const realProgram = new BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.REAL, a.shape, b.shape);\n        const imagProgram = new BinaryOpComplexProgram(binaryop_complex_gpu.COMPLEX_MULTIPLY.IMAG, a.shape, b.shape);\n        const inputs = [\n            {\n                dataId: aData.complexTensorInfos.real.dataId,\n                dtype: aData.complexTensorInfos.real.dtype,\n                shape: a.shape\n            },\n            {\n                dataId: aData.complexTensorInfos.imag.dataId,\n                dtype: aData.complexTensorInfos.imag.dtype,\n                shape: a.shape\n            },\n            {\n                dataId: bData.complexTensorInfos.real.dataId,\n                dtype: bData.complexTensorInfos.real.dtype,\n                shape: b.shape\n            },\n            {\n                dataId: bData.complexTensorInfos.imag.dataId,\n                dtype: bData.complexTensorInfos.imag.dtype,\n                shape: b.shape\n            }\n        ];\n        const realPart = backend.runWebGLProgram(realProgram, inputs, 'float32');\n        const imagPart = backend.runWebGLProgram(imagProgram, inputs, 'float32');\n        const complexOutput = complex({ inputs: { real: realPart, imag: imagPart }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        // TODO(annxingyuan): CPU forwarding for complex inputs.\n        return complexOutput;\n    }\n    if (backend.shouldExecuteOnCPU([a, b])) {\n        const aData = backend.texData.get(a.dataId);\n        const bData = backend.texData.get(b.dataId);\n        const [outValues, outShape] = cpuMultiply(a.shape, b.shape, aData.values, bData.values, dtype);\n        const out = backend.makeTensorInfo(outShape, dtype);\n        const outData = backend.texData.get(out.dataId);\n        outData.values = outValues;\n        return out;\n    }\n    let program;\n    if (env().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n        program = new BinaryOpPackedProgram(MUL, a.shape, b.shape);\n    }\n    else {\n        program = new BinaryOpProgram(MUL, a.shape, b.shape);\n    }\n    return backend.runWebGLProgram(program, [a, b], dtype);\n}\nexport const multiplyConfig = {\n    kernelName: Multiply,\n    backendName: 'webgl',\n    kernelFunc: multiply\n};\n//# sourceMappingURL=Multiply.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nimport { packedReshape } from '../kernel_utils/reshape';\nimport { isReshapeFree } from '../webgl_util';\nexport function reshape(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const webglBackend = backend;\n    const xSize = util.sizeFromShape(x.shape);\n    const $shape = util.inferFromImplicitShape(shape, xSize);\n    const $xSize = util.sizeFromShape($shape);\n    util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n        `shape must have the same number of elements.`);\n    const xTexData = webglBackend.texData.get(x.dataId);\n    if (xTexData.isPacked && !isReshapeFree(x.shape, $shape) &&\n        !(xTexData.texture !== null && isReshapeFree(xTexData.shape, $shape))) {\n        return packedReshape(x, $shape, webglBackend);\n    }\n    webglBackend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nexport const reshapeConfig = {\n    kernelName: Reshape,\n    backendName: 'webgl',\n    kernelFunc: reshape\n};\n//# sourceMappingURL=Reshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ReshapePackedProgram } from '../reshape_packed_gpu';\nimport { getBatchDim, getRowsCols } from '../webgl_util';\nexport function packedReshape(input, afterShape, backend) {\n    const input3DShape = [getBatchDim(input.shape),\n        ...getRowsCols(input.shape)];\n    const input3D = {\n        dtype: input.dtype,\n        shape: input3DShape,\n        dataId: input.dataId\n    };\n    const afterShapeAs3D = [getBatchDim(afterShape),\n        ...getRowsCols(afterShape)];\n    const program = new ReshapePackedProgram(afterShapeAs3D, input3DShape);\n    const preventEagerUnpackingOfOutput = true;\n    const output = backend.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n    return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n}\n//# sourceMappingURL=reshape.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport class MeanProgram {\n    constructor(reduceInfo, divisor) {\n        this.variableNames = ['x'];\n        const { windowSize, batchSize, inSize, outSize } = reduceInfo;\n        this.outputShape = [batchSize, outSize];\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        let updateSnippet = `sumValue += dot(values, ones);`;\n        if (divisor != null) {\n            const denominator = 1 / divisor;\n            updateSnippet = `sumValue += dot(values * ${util.isInt(denominator) ? denominator.toPrecision(2) :\n                denominator}, ones);`;\n        }\n        let checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return 0.0;\n        }\n      `;\n        }\n        this.userCode = `\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${updateSnippet}\n        }\n        setOutput(sumValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mean_gpu.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ReduceProgram {\n    constructor(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        const { windowSize, batchSize, inSize, outSize } = reduceInfo;\n        this.outputShape = [batchSize, outSize];\n        let initializationValue = '0.0';\n        let compareOp = ``;\n        if (reduceType === 'prod') {\n            initializationValue = '1.0';\n        }\n        else if (reduceType === 'min') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '1.0 / 1e-20';\n            compareOp = `min`;\n        }\n        else if (reduceType === 'max') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n            compareOp = `max`;\n        }\n        let returnValue = `${reduceType}(${reduceType}(${reduceType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = `sumValue`;\n        }\n        else if (reduceType === 'prod') {\n            returnValue = `prodValue`;\n        }\n        else if (reduceType === 'all') {\n            returnValue = `allValue`;\n        }\n        else if (reduceType === 'any') {\n            returnValue = `anyValue`;\n        }\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        let updateSnippet = `\n      if (${reduceType === 'sum'}) {\n        sumValue += dot(values, ones);\n      } else if (${reduceType === 'prod'}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        let vecType = `vec4`;\n        if (reduceType === 'all') {\n            initializationValue = '1.0';\n            updateSnippet = `\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      `;\n            vecType = `bvec4`;\n        }\n        else if (reduceType === 'any') {\n            initializationValue = '0.0';\n            updateSnippet = `\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      `;\n            vecType = `bvec4`;\n        }\n        let checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n        }\n        this.userCode = `\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        vec4 minMaxValue = vec4(${initializationValue});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\n//# sourceMappingURL=reduce_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { MeanProgram } from '../mean_gpu';\nimport { ReduceProgram } from '../reduce_gpu';\n// Returns an array of configuration objects that describe each stage of the\n// reduction.\nfunction getReductionStages(inShape) {\n    const stages = [];\n    while (stages.length === 0 || stages[stages.length - 1].outSize !== 1) {\n        const outSize = stages.length ? stages[stages.length - 1].outSize : inShape[1];\n        const windowSize = backend_util.computeOptimalWindowSize(outSize);\n        stages.push({\n            inSize: outSize,\n            windowSize,\n            outSize: Math.ceil(outSize / windowSize)\n        });\n    }\n    return stages;\n}\nexport function reduce(x, dtype, reductionType, backend) {\n    const reductionStages = getReductionStages(x.shape);\n    let result = x;\n    for (let i = 0; i < reductionStages.length; i++) {\n        const { inSize, windowSize, outSize } = reductionStages[i];\n        let program;\n        let previousResult;\n        if (reductionType === 'mean') {\n            program = i === 0 ?\n                new MeanProgram({ windowSize, inSize, batchSize: x.shape[0], outSize }, inSize) :\n                new MeanProgram({ windowSize, inSize, batchSize: x.shape[0], outSize });\n        }\n        else {\n            program = new ReduceProgram({ windowSize, inSize, batchSize: x.shape[0], outSize }, reductionType);\n        }\n        previousResult = result;\n        result = backend.runWebGLProgram(program, [result], dtype);\n        if (previousResult.dataId !== x.dataId) {\n            backend.disposeIntermediateTensorInfo(previousResult);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=reduce.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposeProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const switched = getSwitchedCoords(newDim);\n        this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n    }\n}\nfunction getSwitchedCoords(newDim) {\n    const rank = newDim.length;\n    if (rank > 6) {\n        throw Error(`Transpose for rank ${rank} is not yet supported`);\n    }\n    const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n    const switchedCoords = new Array(rank);\n    for (let i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n//# sourceMappingURL=transpose_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposePackedProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        if (this.rank > 6) {\n            throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);\n        }\n        const dtype = getCoordsDataType(this.rank);\n        const outputOrder = getVecChannels('rc', this.rank);\n        const switchedOrder = new Array(this.rank);\n        for (let i = 0; i < newDim.length; i++) {\n            switchedOrder[newDim[i]] = outputOrder[i];\n        }\n        const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n        const nextColumn = `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n        const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n        this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n    }\n}\n//# sourceMappingURL=transpose_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { transposeImplCPU } from '../kernel_utils/shared';\nimport { TransposeProgram } from '../transpose_gpu';\nimport { TransposePackedProgram } from '../transpose_packed_gpu';\nexport function transposeImpl(x, perm, backend) {\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new TransposePackedProgram(x.shape, perm) :\n        new TransposeProgram(x.shape, perm);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport { transposeImplCPU };\n//# sourceMappingURL=Transpose_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '@tensorflow/tfjs-core';\nimport { sumImpl } from './Sum_impl';\nexport function sum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return sumImpl(x, axis, keepDims, backend);\n}\nexport const sumConfig = {\n    kernelName: Sum,\n    backendName: 'webgl',\n    kernelFunc: sum\n};\n//# sourceMappingURL=Sum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transposeImpl } from './Transpose_impl';\nexport function sumImpl(x, axis, keepDims, backend) {\n    const reductionIndices = axis;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    const sumInputIsTransposed = permutedAxes != null;\n    let sumInput = x;\n    if (sumInputIsTransposed) {\n        sumInput = transposeImpl(x, permutedAxes, backend);\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n    const [sumOutShape, reduceShape] = backend_util.computeOutAndReduceShapes(sumInput.shape, axes);\n    let outShape = sumOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        outShape = backend_util.expandShapeToKeepDim(sumOutShape, origAxes);\n    }\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape({ inputs: { x: sumInput }, attrs: { shape: [batchSize, inSize] }, backend });\n    const outType = sumOutType(x.dtype);\n    const reduced = reduce(reshapedInput, outType, 'sum', backend);\n    const out = reshape({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (sumInputIsTransposed) {\n        backend.disposeIntermediateTensorInfo(sumInput);\n    }\n    return out;\n}\n//# sourceMappingURL=Sum_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { transposeImpl } from './Transpose_impl';\nimport { transposeImplCPU as cpuTranspose } from './Transpose_impl';\nexport function transpose(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    const webglBackend = backend;\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    let out;\n    if (webglBackend.shouldExecuteOnCPU([x])) {\n        const xTexData = webglBackend.texData.get(x.dataId);\n        const values = xTexData.values;\n        const outValues = cpuTranspose(values, x.shape, x.dtype, perm, newShape);\n        out = webglBackend.makeTensorInfo(newShape, x.dtype);\n        const outData = webglBackend.texData.get(out.dataId);\n        outData.values = outValues;\n    }\n    else {\n        out = transposeImpl(x, perm, webglBackend);\n    }\n    return out;\n}\nexport const transposeConfig = {\n    kernelName: Transpose,\n    backendName: 'webgl',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=Transpose.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { upcastType, util } from '@tensorflow/tfjs-core';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { MatMulPackedProgram } from '../mulmat_packed_gpu';\nimport { multiply } from './Multiply';\nimport { reshape } from './Reshape';\nimport { sum } from './Sum';\nimport { transpose } from './Transpose';\n// Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\nexport const MATMUL_SHARED_DIM_THRESHOLD = 1000;\nexport function batchMatMulImpl({ a, b, transposeA, transposeB, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    const aRank = a.shape.length;\n    const bRank = b.shape.length;\n    const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n    const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n    const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n    const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n    const outerDimsA = a.shape.slice(0, -2);\n    const outerDimsB = b.shape.slice(0, -2);\n    const batchDimA = util.sizeFromShape(outerDimsA);\n    const batchDimB = util.sizeFromShape(outerDimsB);\n    const batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n    util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, () => `Error in matMul: the input batch dimensions must either be the ` +\n        `same or at least one input batch dimension must be 1. Got input ` +\n        `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n    const outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n    util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n        `${b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const a3dShape = transposeA ?\n        [batchDimA, innerShapeA, outerShapeA] :\n        [batchDimA, outerShapeA, innerShapeA];\n    const b3dShape = transposeB ?\n        [batchDimB, outerShapeB, innerShapeB] :\n        [batchDimB, innerShapeB, outerShapeB];\n    // The rest of the implementation is designed to operate on rank-3 tensors\n    const a3d = reshape({ inputs: { x: a }, backend, attrs: { shape: a3dShape } });\n    const b3d = reshape({ inputs: { x: b }, backend, attrs: { shape: b3dShape } });\n    const intermediates = [a3d, b3d];\n    const batchDim = Math.max(batchDimA, batchDimB);\n    const sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    const fusedActivation = activation != null ?\n        mapActivationToShaderProgram(activation, true) :\n        null;\n    const containsFusedOps = hasBias || hasPreluActivationWeights ||\n        hasLeakyreluAlpha || fusedActivation != null;\n    let out;\n    // Since the matrices are vectors, it is faster to call mul().sum()\n    // because sum() is O(sqrt(N)) due to divide-and-conquer.\n    if ((outerShapeA === 1 || outerShapeB === 1) &&\n        sharedDim > MATMUL_SHARED_DIM_THRESHOLD && containsFusedOps === false) {\n        let aVec = a3d;\n        let bVec = b3d;\n        if (transposeA) {\n            aVec = transpose({ inputs: { x: a3d }, backend, attrs: { perm: [0, 2, 1] } });\n            intermediates.push(aVec);\n        }\n        if (transposeB) {\n            bVec = transpose({ inputs: { x: b3d }, backend, attrs: { perm: [0, 2, 1] } });\n            intermediates.push(bVec);\n        }\n        const shouldReshapeA = outerShapeB !== 1;\n        const shouldReshapeB = outerShapeB === 1;\n        let aVec3d = aVec;\n        if (shouldReshapeA) {\n            aVec3d = reshape({\n                inputs: { x: aVec },\n                backend,\n                attrs: { shape: [batchDim, sharedDim, 1] }\n            });\n            intermediates.push(aVec3d);\n        }\n        const axis = outerShapeB === 1 ? 2 : 1;\n        let bVec3d = bVec;\n        if (shouldReshapeB) {\n            bVec3d = reshape({\n                inputs: { x: bVec },\n                backend,\n                attrs: { shape: [batchDim, 1, sharedDim] }\n            });\n            intermediates.push(bVec3d);\n        }\n        const product = multiply({ inputs: { a: aVec3d, b: bVec3d }, backend });\n        out = sum({ inputs: { x: product }, backend, attrs: { axis, keepDims: true } });\n        intermediates.push(product);\n    }\n    else {\n        const dtype = upcastType(a.dtype, b.dtype);\n        const program = new MatMulPackedProgram(a3dShape, b3dShape, [batchDim, outerShapeA, outerShapeB], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n        const inputs = [a3d, b3d];\n        if (bias != null) {\n            inputs.push(bias);\n        }\n        if (hasPreluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        if (hasLeakyreluAlpha) {\n            const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n            inputs.push($leakyreluAlpha);\n            intermediates.push($leakyreluAlpha);\n        }\n        out = backend.runWebGLProgram(program, inputs, dtype);\n    }\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: outShape } });\n    intermediates.push(out);\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return outReshaped;\n}\n//# sourceMappingURL=BatchMatMul_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    return batchMatMulImpl({\n        a,\n        b,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        preluActivationWeights,\n        leakyreluAlpha,\n        activation\n    });\n}\nexport const _fusedMatMulConfig = {\n    kernelName: _FusedMatMul,\n    backendName: 'webgl',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=_FusedMatMul.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, env } from '@tensorflow/tfjs-core';\nimport { simpleAbsImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nconst ABS = `return abs(x);`;\nexport function abs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    // TODO: handle cases when x is complex. Once the cpu implementation\n    // can handle complex values, refactor to use unaryKernelFunc.\n    if (backend.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n        const xData = backend.texData.get(x.dataId);\n        const outValues = simpleAbsImplCPU(xData.values);\n        return backend.makeTensorInfo(x.shape, x.dtype, outValues);\n    }\n    let program;\n    if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        program = new UnaryOpPackedProgram(x.shape, ABS);\n    }\n    else {\n        program = new UnaryOpProgram(x.shape, ABS);\n    }\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const absConfig = {\n    kernelName: Abs,\n    backendName: 'webgl',\n    kernelFunc: abs\n};\n//# sourceMappingURL=Abs.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ACOS = CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n`;\nexport const acos = unaryKernelFunc({ opSnippet: ACOS });\nexport const acosConfig = {\n    kernelName: Acos,\n    backendName: 'webgl',\n    kernelFunc: acos,\n};\n//# sourceMappingURL=Acos.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ACOSH = CHECK_NAN_SNIPPET + `\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));`;\nexport const acosh = unaryKernelFunc({ opSnippet: ACOSH });\nexport const acoshConfig = {\n    kernelName: Acosh,\n    backendName: 'webgl',\n    kernelFunc: acosh,\n};\n//# sourceMappingURL=Acosh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { addImplCPU as cpuAdd } from '../kernel_utils/shared';\nconst ADD = 'return a + b;';\nexport const addKernelFunc = binaryKernelFunc({\n    opSnippet: ADD,\n    packedOpSnippet: ADD,\n    supportsComplex: true,\n    cpuKernelImpl: cpuAdd\n});\nexport const addConfig = {\n    kernelName: Add,\n    backendName: 'webgl',\n    kernelFunc: addKernelFunc\n};\n//# sourceMappingURL=Add.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AddNProgram {\n    constructor(outputShape, shapes) {\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`float v${variable} = get${variable}AtOutCoords();`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=addn_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AddNPackedProgram {\n    constructor(outputShape, shapes) {\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`vec4 v${variable} = get${variable}AtOutCoords();`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        vec4 result = ${operation};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=addn_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, env, upcastType } from '@tensorflow/tfjs-core';\nimport { AddNProgram } from '../addn_gpu';\nimport { AddNPackedProgram } from '../addn_packed_gpu';\nimport { identity } from './Identity';\nexport function addN(args) {\n    const { inputs, backend } = args;\n    const tensors = inputs;\n    if (tensors.length === 1) {\n        return identity({ inputs: { x: tensors[0] }, backend });\n    }\n    // Limit the number of uploaded textures for optimization.\n    if (tensors.length > env().get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n        const midIndex = Math.floor(tensors.length / 2);\n        const leftSide = addN({ inputs: tensors.slice(0, midIndex), backend });\n        const rightSide = addN({ inputs: tensors.slice(midIndex), backend });\n        return addN({ inputs: [leftSide, rightSide], backend });\n    }\n    const dtype = tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n    const shapes = tensors.map(t => t.shape);\n    // We can make sure shapes are identical in op level.\n    const usePackedOp = env().getBool('WEBGL_PACK');\n    const program = usePackedOp ?\n        new AddNPackedProgram(tensors[0].shape, shapes) :\n        new AddNProgram(tensors[0].shape, shapes);\n    return backend.runWebGLProgram(program, tensors, dtype);\n}\nexport const addNConfig = {\n    kernelName: AddN,\n    backendName: 'webgl',\n    kernelFunc: addN\n};\n//# sourceMappingURL=AddN.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'all', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'webgl',\n    kernelFunc: all\n};\n//# sourceMappingURL=All.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('any', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'any', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const anyConfig = {\n    kernelName: Any,\n    backendName: 'webgl',\n    kernelFunc: any\n};\n//# sourceMappingURL=Any.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ArgMinMaxProgram {\n    constructor(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        const { windowSize, batchSize, outSize } = reduceInfo;\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        const compOp = (op === 'max') ? '>' : '<';\n        const indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          int inIdx = ${indexSnippet};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${compOp} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=argminmax_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class ArgMinMaxPackedProgram {\n    constructor(shape, windowSize, op, firstPass) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        util.assert(shape.length > 2, () => `Packed arg${op.charAt(0).toUpperCase() +\n            op.slice(1)} supports only inputs with rank above 2.`);\n        const inSize = shape[shape.length - 1];\n        const outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = shape.slice(0, -1);\n        if (outSize > 1) {\n            this.outputShape.push(outSize);\n        }\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        const outShape = this.outputShape;\n        const rank = outShape.length;\n        const dtype = getCoordsDataType(rank);\n        const coords = getChannels('coords', rank);\n        let sourceLocSetup;\n        let sourceRank;\n        if (outSize === 1) {\n            sourceRank = rank + 1;\n            const sourceLocDType = getCoordsDataType(sourceRank);\n            sourceLocSetup = `\n        ${sourceLocDType} sourceLocR = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 1]};\n        ${sourceLocDType} sourceLocG = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 2]};\n        ${sourceLocDType} sourceLocA = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 1]};\n        ${sourceLocDType} sourceLocB = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 2]};`;\n        }\n        else {\n            sourceRank = rank;\n            sourceLocSetup = `\n        ${dtype} sourceLocR = coords;\n        ++${coords[rank - 1]};\n        ${dtype} sourceLocG = coords;\n        ++${coords[rank - 2]};\n        ${dtype} sourceLocA = coords;\n        --${coords[rank - 1]};\n        ${dtype} sourceLocB = coords;\n        --${coords[rank - 2]};`;\n        }\n        const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, sourceRank);\n        const inChannel = '.' + channels[sourceRank - 1]; // e.g. \".b\" for rank 3.\n        const intChannels = channels.map(x => 'int ' + x);\n        const srcRCoords = getChannels('sourceLocR', sourceRank - 1).concat('inIdx.r');\n        const srcGCoords = getChannels('sourceLocG', sourceRank - 1).concat('inIdx.g');\n        const srcBCoords = getChannels('sourceLocB', sourceRank - 1).concat('inIdx.b');\n        const srcACoords = getChannels('sourceLocA', sourceRank - 1).concat('inIdx.a');\n        const compOp = (op === 'max') ? 'greaterThan' : 'lessThan';\n        const fetchCandidateIdx = firstPass ? '' : `\n          inIdx = round(vec4(getBestIndicesAChannel(${srcRCoords.join()}),\n                             getBestIndicesAChannel(${srcGCoords.join()}),\n                             getBestIndicesAChannel(${srcBCoords.join()}),\n                             getBestIndicesAChannel(${srcACoords.join()})));`;\n        const fetchValue = `vec4(\n            getAChannel(${srcRCoords.join()}),\n            hasNextCol ? getAChannel(${srcGCoords.join()}) : 0.,\n            hasNextRow ? getAChannel(${srcBCoords.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${srcACoords.join()}) : 0.)`;\n        const getBestIndicesAChannelSnippet = firstPass ? '' : `\n      float getBestIndicesAChannel(${intChannels.join()}) {\n        return getChannel(getBestIndicesA(${channels.join()}),\n                                          vec2(${channels.slice(-2).join()}));\n      }`;\n        this.userCode = `\n      float getAChannel(${intChannels.join()}) {\n        return getChannel(getA(${channels.join()}),\n                               vec2(${channels.slice(-2).join()}));\n      }\n      ${getBestIndicesAChannelSnippet}\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        bool hasNextCol = ${coords[rank - 1]} < ${outShape[rank - 1] - 1};\n        bool hasNextRow = ${coords[rank - 2]} < ${outShape[rank - 2] - 1};\n        ${sourceLocSetup}\n        ivec4 srcIdx = ivec4(sourceLocR${inChannel}, sourceLocG${inChannel},\n          sourceLocB${inChannel}, sourceLocA${inChannel}) * ${windowSize};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${fetchValue};\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          inIdx = srcIdx;\n          ${fetchCandidateIdx}\n          vec4 candidate = ${fetchValue};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${compOp}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=argminmax_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, util } from '@tensorflow/tfjs-core';\nimport { ArgMinMaxProgram } from '../argminmax_gpu';\nimport { ArgMinMaxPackedProgram } from '../argminmax_packed_gpu';\nimport { reshape } from '../kernels/Reshape';\nfunction argReduce(backend, x, reduceType, bestIndicesA = null) {\n    let batchSize = x.shape[0];\n    let inSize = x.shape[1];\n    if (bestIndicesA != null) {\n        batchSize = bestIndicesA.shape[0];\n        inSize = bestIndicesA.shape[1];\n    }\n    const windowSize = backend_util.computeOptimalWindowSize(inSize);\n    const reduceInfo = { windowSize, inSize, batchSize, outSize: Math.ceil(inSize / windowSize) };\n    const program = new ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n    const inputs = [x];\n    if (bestIndicesA != null) {\n        inputs.push(bestIndicesA);\n    }\n    const output = backend.runWebGLProgram(program, inputs, 'int32');\n    // No need to run another GPGPU program.\n    if (output.shape[1] === 1) {\n        return output;\n    }\n    const result = argReduce(backend, x, reduceType, output);\n    backend.disposeIntermediateTensorInfo(output);\n    return result;\n}\nfunction argReducePacked(backend, x, reduceType, bestIndicesA = null) {\n    const inShape = bestIndicesA != null ? bestIndicesA.shape : x.shape;\n    const inSize = inShape[inShape.length - 1];\n    const windowSize = backend_util.computeOptimalWindowSize(inSize);\n    const program = new ArgMinMaxPackedProgram(inShape, windowSize, reduceType, bestIndicesA == null);\n    const inputs = bestIndicesA == null ? [x] : [x, bestIndicesA];\n    const output = backend.runWebGLProgram(program, inputs, 'int32');\n    if (output.shape.length === x.shape.length) {\n        const result = argReducePacked(backend, x, reduceType, output);\n        backend.disposeIntermediateTensorInfo(output);\n        return result;\n    }\n    return output;\n}\nexport function argMinMaxReduce(backend, x, axis, reduceType) {\n    const axes = [axis];\n    backend_util.assertAxesAreInnerMostDims('arg' + reduceType.charAt(0).toUpperCase() + reduceType.slice(1), axes, x.shape.length);\n    if (!env().getBool('WEBGL_PACK_REDUCE') || x.shape.length <= 2) {\n        const intermediateTensorInfos = [];\n        const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(x.shape, axes);\n        const inSize = util.sizeFromShape(reduceShape);\n        const a2D = reshape({ inputs: { x }, backend, attrs: { shape: [-1, inSize] } });\n        intermediateTensorInfos.push(a2D);\n        const reduced = argReduce(backend, a2D, reduceType);\n        intermediateTensorInfos.push(reduced);\n        const reshaped = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n        intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return reshaped;\n    }\n    return argReducePacked(backend, x, reduceType);\n}\n//# sourceMappingURL=arg_min_max.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n    const out = argMinMaxReduce(backend, $x, axes[0], 'max');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nexport const argMaxConfig = {\n    kernelName: ArgMax,\n    backendName: 'webgl',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=ArgMax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMin, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMin(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n    const out = argMinMaxReduce(backend, $x, axes[0], 'min');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nexport const argMinConfig = {\n    kernelName: ArgMin,\n    backendName: 'webgl',\n    kernelFunc: argMin\n};\n//# sourceMappingURL=ArgMin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asin } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ASIN = CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n`;\nexport const asin = unaryKernelFunc({ opSnippet: ASIN });\nexport const asinConfig = {\n    kernelName: Asin,\n    backendName: 'webgl',\n    kernelFunc: asin,\n};\n//# sourceMappingURL=Asin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Asinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ASINH = CHECK_NAN_SNIPPET + `return log(x + sqrt(x * x + 1.0));`;\nexport const asinh = unaryKernelFunc({ opSnippet: ASINH });\nexport const asinhConfig = {\n    kernelName: Asinh,\n    backendName: 'webgl',\n    kernelFunc: asinh,\n};\n//# sourceMappingURL=Asinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ATAN = CHECK_NAN_SNIPPET + `\n  return atan(x);\n`;\nexport const atan = unaryKernelFunc({ opSnippet: ATAN });\nexport const atanConfig = {\n    kernelName: Atan,\n    backendName: 'webgl',\n    kernelFunc: atan,\n};\n//# sourceMappingURL=Atan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atan2 } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc, CHECK_NAN_SNIPPET_BINARY, CHECK_NAN_SNIPPET_BINARY_PACKED } from '../kernel_utils/kernel_funcs_utils';\nconst ATAN2 = CHECK_NAN_SNIPPET_BINARY + `\n  return atan(a, b);\n`;\nconst ATAN2_PACKED = `\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET_BINARY_PACKED + `\n  return result;\n`;\nexport const atan2 = binaryKernelFunc({ opSnippet: ATAN2, packedOpSnippet: ATAN2_PACKED });\nexport const atan2Config = {\n    kernelName: Atan2,\n    backendName: 'webgl',\n    kernelFunc: atan2,\n};\n//# sourceMappingURL=Atan2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Atanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst ATANH = CHECK_NAN_SNIPPET + `\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;`;\nexport const atanh = unaryKernelFunc({ opSnippet: ATANH });\nexport const atanhConfig = {\n    kernelName: Atanh,\n    backendName: 'webgl',\n    kernelFunc: atanh,\n};\n//# sourceMappingURL=Atanh.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class Pool2DProgram {\n    constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        const isAvgPool = poolType === 'avg';\n        const batchFlattenPositionStr = `((batch  * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n        const flattenPositionStr = `(xR * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n        let initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            const compareOp = '>=';\n            this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${flattenPositions ? (includeBatchInIndex ? batchFlattenPositionStr :\n                flattenPositionStr) :\n                `wR * ${effectiveFilterWidth} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n            return;\n        }\n        const compareOp = 'max';\n        let returnValue = `${poolType}(${poolType}(${poolType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = `avgValue / count`;\n        }\n        const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        const filterWidthVec4Remainder = filterWidth % 4;\n        const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\nexport class Pool3DProgram {\n    constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        const isAvgPool = poolType === 'avg';\n        let initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            const compareOp = '>=';\n            this.userCode = `\n        const ivec3 strides =\n            ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n        const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${effectiveFilterDepth};\n              wD += ${dilationDepth}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${effectiveFilterHeight};\n                wR += ${dilationHeight}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${effectiveFilterWidth};\n                  wC += ${dilationWidth}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${compareOp} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${flattenPositions ?\n                (includeBatchInIndex ?\n                    `(((batch * ${convInfo.inDepth} + xD) * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch` :\n                    `((xD * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch`) :\n                `wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                      wR * ${effectiveFilterWidth} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n            return;\n        }\n        const compareOp = 'max';\n        let returnValue = `${poolType}(${poolType}(${poolType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = `avgValue / count`;\n        }\n        const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        const filterWidthVec4Remainder = filterWidth % 4;\n        const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        this.userCode = `\n      const ivec3 strides =\n        ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${dilationWidth}, ch)\n              );\n\n              ${updateSnippet}\n            }\n\n            int xC = xCCorner + ${filterWidthNearestVec4};\n            if (${filterWidthVec4Remainder === 1}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 2}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 3}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                initializationValue\n              );\n\n              ${updateSnippet}\n            }\n          }\n          setOutput(${returnValue});\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pool_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool, backend_util, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nimport { identity } from './Identity';\nexport function avgPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'avgPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return identity({ inputs: { x }, backend });\n    }\n    const avgPoolProgram = new Pool2DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport const avgPoolConfig = {\n    kernelName: AvgPool,\n    backendName: 'webgl',\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=AvgPool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D, backend_util } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function avgPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const avgPoolProgram = new Pool3DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nexport const avgPool3DConfig = {\n    kernelName: AvgPool3D,\n    backendName: 'webgl',\n    kernelFunc: avgPool3D\n};\n//# sourceMappingURL=AvgPool3D.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class AvgPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const avgMultiplier = 1 / (filterHeight * filterWidth);\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth};\n            wC+= ${dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class AvgPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${convInfo.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=avg_pool_backprop_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3DGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool3DBackpropProgram } from '../avg_pool_backprop_gpu';\nexport function avgPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const avgPoolBackpropProgram = new AvgPool3DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport const avgPoolGrad3DConfig = {\n    kernelName: AvgPool3DGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPool3DGrad\n};\n//# sourceMappingURL=AvgPool3DGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPoolGrad, backend_util } from '@tensorflow/tfjs-core';\nimport { AvgPool2DBackpropProgram } from '../avg_pool_backprop_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function avgPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    assertNotComplex([dy, input], 'avgPoolGrad');\n    const { filterSize, strides, pad } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad);\n    const avgPoolBackpropProgram = new AvgPool2DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nexport const avgPoolGradConfig = {\n    kernelName: AvgPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPoolGrad\n};\n//# sourceMappingURL=AvgPoolGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '@tensorflow/tfjs-core';\nimport { batchMatMulImpl } from './BatchMatMul_impl';\nexport function batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    const { transposeA, transposeB } = attrs;\n    return batchMatMulImpl({ a, b, transposeA, transposeB, backend });\n}\nexport const batchMatMulConfig = {\n    kernelName: BatchMatMul,\n    backendName: 'webgl',\n    kernelFunc: batchMatMul,\n};\n//# sourceMappingURL=BatchMatMul.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport class BatchNormProgram {\n    constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.variableNames = ['x', 'mean', 'variance'];\n        backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n        backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        let offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        let scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = `\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${offsetSnippet};\n        float scale = ${scaleSnippet};\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=batchnorm_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport class BatchNormPackedProgram {\n    constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n        backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        let offsetSnippet = 'vec4(0.0)';\n        if (offsetShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        let scaleSnippet = 'vec4(1.0)';\n        if (scaleShape != null) {\n            backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = `\n      void main() {\n        vec4 offset = ${offsetSnippet};\n        vec4 scale = ${scaleSnippet};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${varianceEpsilon}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=batchnorm_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, FusedBatchNorm, util } from '@tensorflow/tfjs-core';\nimport { BatchNormProgram } from '../batchnorm_gpu';\nimport { BatchNormPackedProgram } from '../batchnorm_packed_gpu';\nexport const batchNorm = ({ inputs, backend, attrs }) => {\n    const { x, mean, variance, offset, scale } = inputs;\n    util.assert(mean.shape.length === variance.shape.length, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    util.assert(offset == null || mean.shape.length === offset.shape.length, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    util.assert(scale == null || mean.shape.length === scale.shape.length, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    let { varianceEpsilon } = attrs;\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const finalInputs = [x, mean, variance];\n    let offsetShape = null;\n    if (offset != null) {\n        offsetShape = offset.shape;\n        finalInputs.push(offset);\n    }\n    let scaleShape = null;\n    if (scale != null) {\n        scaleShape = scale.shape;\n        finalInputs.push(scale);\n    }\n    const program = env().getBool('WEBGL_PACK_NORMALIZATION') ?\n        new BatchNormPackedProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon) :\n        new BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n    const output = backend.runWebGLProgram(program, finalInputs, finalInputs[0].dtype);\n    return output;\n};\nexport const batchNormConfig = {\n    kernelName: FusedBatchNorm,\n    backendName: 'webgl',\n    kernelFunc: batchNorm,\n};\n//# sourceMappingURL=BatchNorm.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class SliceProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = getCoordsDataType(this.rank);\n        const uniformPart = `uniform int start[${this.rank}];`;\n        const sourceCoords = getCoords(this.rank);\n        let body;\n        const coordSum = destSize.map((_, i) => {\n            return `sourceLoc.${coords[i]} = start[${i}] + coords.${coords[i]};`;\n        });\n        body = `\n        ${dtype} sourceLoc;\n        ${dtype} coords = getOutputCoords();\n        ${coordSum.join('\\n')}\n      `;\n        this.userCode = `\n      ${uniformPart}\n      void main() {\n        ${body}\n        setOutput(getSource(${sourceCoords}));\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\nconst coords = ['x', 'y', 'z', 'w', 'u', 'v'];\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank <= 6) {\n        return coords.slice(0, rank).map(x => 'sourceLoc.' + x).join(',');\n    }\n    else {\n        throw Error(`Slicing for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=slice_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = getCoordsDataType(this.rank);\n        const coords = getChannels('coords', this.rank);\n        const sourceLoc = getChannels('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\n//# sourceMappingURL=slice_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { sliceImplCPU } from '../kernel_utils/shared';\nimport { SliceProgram } from '../slice_gpu';\nimport { SlicePackedProgram } from '../slice_packed_gpu';\nfunction shallowSlice(x, begin, size, backend) {\n    const xTexData = backend.texData.get(x.dataId);\n    const t = backend.makeTensorInfo(size, x.dtype);\n    const newTexData = backend.texData.get(t.dataId);\n    // Copy texture data from the original tensor.\n    Object.assign(newTexData, xTexData);\n    newTexData.shape = size;\n    newTexData.dtype = x.dtype;\n    let flatOffset = slice_util.computeFlatOffset(begin, util.computeStrides(x.shape));\n    if (xTexData.slice) {\n        // We are slicing an already sliced tensor, so we have to accumulate\n        // the offset.\n        flatOffset += xTexData.slice.flatOffset;\n    }\n    newTexData.slice = {\n        flatOffset,\n        // Point to the original dataId, which is used to do ref counting.\n        origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n    };\n    // Increase the ref count for that data bucket.\n    const refCount = backend.dataRefCount.get(newTexData.slice.origDataId) || 1;\n    backend.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n    return t;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    if (util.sizeFromShape($size) === 0) {\n        return backend.makeTensorInfo($size, x.dtype, []);\n    }\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgl doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string') {\n        const xTexData = backend.texData.get(x.dataId);\n        const outValues = sliceImplCPU(xTexData.values, $begin, $size, x.shape, x.dtype);\n        return backend.makeTensorInfo($size, x.dtype, outValues);\n    }\n    const { isPacked } = backend.texData.get(x.dataId);\n    const isContinous = slice_util.isSliceContinous(x.shape, $begin, $size);\n    if (isPacked || !isContinous) {\n        const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new SlicePackedProgram($size) :\n            new SliceProgram($size);\n        const customSetup = program.getCustomSetupFunc($begin);\n        return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n    }\n    backend.uploadToGPU(x.dataId);\n    return shallowSlice(x, $begin, $size, backend);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'webgl',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport const batchToSpaceND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, crops } = attrs;\n    util.assert(x.shape.length <= 4, () => 'batchToSpaceND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n    const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n    const toDispose = [];\n    const reshapedIntermediate = reshape({ inputs: { x }, backend, attrs: { shape: reshaped } });\n    const transposedIntermediate = transpose({ inputs: { x: reshapedIntermediate }, backend, attrs: { perm: permuted } });\n    const reshapedIntermediate2 = reshape({\n        inputs: { x: transposedIntermediate },\n        backend,\n        attrs: { shape: reshapedPermuted }\n    });\n    const sliced = slice({\n        inputs: { x: reshapedIntermediate2 },\n        backend,\n        attrs: { begin: sliceBeginCoords, size: sliceSize }\n    });\n    toDispose.push(reshapedIntermediate);\n    toDispose.push(transposedIntermediate);\n    toDispose.push(reshapedIntermediate2);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return sliced;\n};\nexport const batchToSpaceNDConfig = {\n    kernelName: BatchToSpaceND,\n    backendName: 'webgl',\n    kernelFunc: batchToSpaceND\n};\n//# sourceMappingURL=BatchToSpaceND.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Bincount } from '@tensorflow/tfjs-core';\nimport { bincountImplCPU } from '../kernel_utils/shared';\nexport function bincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size } = attrs;\n    const xVals = backend.readSync(x.dataId);\n    const weightsVals = backend.readSync(weights.dataId);\n    const outVals = bincountImplCPU(xVals, weightsVals, weights.dtype, weights.shape, size);\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nexport const bincountConfig = {\n    kernelName: Bincount,\n    backendName: 'webgl',\n    kernelFunc: bincount\n};\n//# sourceMappingURL=Bincount.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NotEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst NOT_EQUAL = `return float(a != b);`;\nexport const notEqual = binaryKernelFunc({ opSnippet: NOT_EQUAL, dtype: 'bool' });\nexport const notEqualConfig = {\n    kernelName: NotEqual,\n    backendName: 'webgl',\n    kernelFunc: notEqual,\n};\n//# sourceMappingURL=NotEqual.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.texData.get(input.dataId);\n    return identity({ inputs: { x: inputData.complexTensorInfos.real }, backend });\n}\nexport const realConfig = {\n    kernelName: Real,\n    backendName: 'webgl',\n    kernelFunc: real\n};\n//# sourceMappingURL=Real.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnaryOpProgram } from '../unaryop_gpu';\nconst TO_INT = `return float(int(x));`;\nexport function int(input, backend) {\n    const program = new UnaryOpProgram(input.shape, TO_INT);\n    const output = backend.runWebGLProgram(program, [input], 'int32');\n    return { dataId: output.dataId, shape: output.shape, dtype: output.dtype };\n}\n//# sourceMappingURL=int.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport { Cast, util } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { identity } from './Identity';\nimport { notEqual } from './NotEqual';\nimport { real } from './Real';\nimport { int } from '../kernel_utils/int';\nexport function cast(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dtype } = attrs;\n    // Casting to complex64.\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return identity({ inputs: { x }, backend });\n        }\n        // TODO(annxingyuan): Import kernel function once zeros is modularized.\n        const zerosTensor = tf.zeros(x.shape);\n        const floatX = cast({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n        const result = complex({ inputs: { real: floatX, imag: zerosTensor }, backend });\n        zerosTensor.dispose();\n        backend.disposeIntermediateTensorInfo(floatX);\n        return result;\n    }\n    // Casting from complex64\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const result = cast({ inputs: { x: realPart }, backend, attrs: { dtype } });\n        backend.disposeIntermediateTensorInfo(realPart);\n        return result;\n    }\n    if (!util.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        const result = identity({ inputs: { x }, backend });\n        return { dataId: result.dataId, shape: result.shape, dtype };\n    }\n    if (dtype === 'int32') {\n        return int(x, backend);\n    }\n    if (dtype === 'bool') {\n        const zerosTensorInfo = backend.makeTensorInfo([], 'bool', util.getTypedArrayFromDType('bool', 1));\n        const binaryInputs = { a: x, b: zerosTensorInfo };\n        const result = notEqual({ inputs: binaryInputs, backend });\n        backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n        return result;\n    }\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\nexport const castConfig = {\n    kernelName: Cast,\n    backendName: 'webgl',\n    kernelFunc: cast\n};\n//# sourceMappingURL=Cast.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Ceil } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { ceilImplCPU } from '../kernel_utils/shared';\nconst CEIL = `return ceil(x);`;\nexport const ceil = unaryKernelFunc({ opSnippet: CEIL, packedOpSnippet: CEIL, cpuKernelImpl: ceilImplCPU });\nexport const ceilConfig = {\n    kernelName: Ceil,\n    backendName: 'webgl',\n    kernelFunc: ceil\n};\n//# sourceMappingURL=Ceil.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipPackedProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue, env } from '@tensorflow/tfjs-core';\nimport { ClipProgram } from '../clip_gpu';\nimport { ClipPackedProgram } from '../clip_packed_gpu';\nexport function clipByValue(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { clipValueMin, clipValueMax } = attrs;\n    let program;\n    if (env().getBool('WEBGL_PACK_CLIP')) {\n        program = new ClipPackedProgram(x.shape);\n    }\n    else {\n        program = new ClipProgram(x.shape);\n    }\n    const customSetup = program.getCustomSetupFunc(clipValueMin, clipValueMax);\n    return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n}\nexport const clipByValueConfig = {\n    kernelName: ClipByValue,\n    backendName: 'webgl',\n    kernelFunc: clipByValue\n};\n//# sourceMappingURL=ClipByValue.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ComplexAbsProgram {\n    constructor(shape) {\n        this.variableNames = ['real', 'imag'];\n        this.outputShape = shape;\n        this.userCode = `\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    `;\n    }\n}\n//# sourceMappingURL=complex_abs_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs } from '@tensorflow/tfjs-core';\nimport { ComplexAbsProgram } from '../complex_abs_gpu';\n// Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\nfunction makeComplexComponentTensorInfo(complexTensor, complexPart) {\n    return {\n        dataId: complexPart.dataId,\n        dtype: complexPart.dtype,\n        shape: complexTensor.shape\n    };\n}\nexport function complexAbs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const xData = backend.texData.get(x.dataId);\n    const program = new ComplexAbsProgram(x.shape);\n    const programInputs = [\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real),\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag),\n    ];\n    return backend.runWebGLProgram(program, programInputs, programInputs[0].dtype);\n}\nexport const complexAbsConfig = {\n    kernelName: ComplexAbs,\n    backendName: 'webgl',\n    kernelFunc: complexAbs\n};\n//# sourceMappingURL=ComplexAbs.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport class ConcatProgram {\n    // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n    constructor(shapes) {\n        this.outputShape = [];\n        this.outputShape = backend_util.computeOutShape(shapes, 1 /* axis */);\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][1];\n        for (let i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][1];\n        }\n        const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n        for (let i = 1; i < offsets.length; i++) {\n            const shift = offsets[i - 1];\n            snippets.push(`else if (yC < ${offsets[i]}) ` +\n                `setOutput(getT${i}(yR, yC-${shift}));`);\n        }\n        const lastIndex = offsets.length;\n        const lastShift = offsets[offsets.length - 1];\n        snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n    }\n}\n//# sourceMappingURL=concat_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class ConcatPackedProgram {\n    constructor(shapes, axis) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        this.outputShape = backend_util.computeOutShape(shapes, axis);\n        const shape = this.outputShape;\n        const rank = shape.length;\n        const dtype = getCoordsDataType(rank);\n        const coords = getChannels('coords', rank);\n        const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][axis];\n        for (let i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][axis];\n        }\n        const channel = channels[axis];\n        const lastChannels = channels.slice(-2);\n        const allChannels = channels.join();\n        let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getT0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n        for (let i = 1; i < offsets.length; i++) {\n            const shift = offsets[i - 1];\n            // Note: the >= comparison below may seem unnecessary given the check\n            // above but is needed to workaround branch execution issues on some\n            // devices. It makes all the conditions exclusive without relying on\n            // execution order.\n            getValueSnippet += `\n        if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n          return getChannel(\n            getT${i}(${shiftedChannels(channels, channel, shift)}),\n            vec2(${shiftedChannels(lastChannels, channel, shift)}));\n        }`;\n        }\n        const lastIndex = offsets.length;\n        const shift = offsets[offsets.length - 1];\n        getValueSnippet += `\n        return getChannel(\n          getT${lastIndex}(${shiftedChannels(channels, channel, shift)}),\n          vec2(${shiftedChannels(lastChannels, channel, shift)}));`;\n        this.userCode = `\n      float getValue(${channels.map(x => 'int ' + x)}) {\n        ${getValueSnippet}\n      }\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n        ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n        if (${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.g = getValue(${coords});\n        }\n\n        ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n        if (${coords[rank - 2]} < ${shape[rank - 2]}) {\n          result.a = getValue(${coords});\n        }\n\n        ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n        if (${coords[rank - 2]} < ${shape[rank - 2]} &&\n            ${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.b = getValue(${coords});\n        }\n        setOutput(result);\n      }\n    `;\n    }\n}\n/**\n * Return an expression for coordinates into a vector where a given channel\n * will be offset by [shift].\n *\n * @param channels the channels to consider\n * @param channel the channel we want shifted\n * @param shift  the amount to subtract from the channel.\n *\n * @returns a string of the form 'x, y-[shift], z' where any one channel can\n * have the shift applied.\n */\nfunction shiftedChannels(channels, channel, shift) {\n    const channelIdx = channels.indexOf(channel);\n    const res = channels.map((c, idx) => {\n        if (idx === channelIdx) {\n            return `${c} - ${shift}`;\n        }\n        else {\n            return c;\n        }\n    });\n    return res.join();\n}\n//# sourceMappingURL=concat_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Imag } from '@tensorflow/tfjs-core';\nimport { identity } from './Identity';\nexport function imag(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.texData.get(input.dataId);\n    return identity({ inputs: { x: inputData.complexTensorInfos.imag }, backend });\n}\nexport const imagConfig = {\n    kernelName: Imag,\n    backendName: 'webgl',\n    kernelFunc: imag\n};\n//# sourceMappingURL=Imag.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, util } from '@tensorflow/tfjs-core';\nimport { ConcatProgram } from '../concat_gpu';\nimport { ConcatPackedProgram } from '../concat_packed_gpu';\nimport { concatImplCPU } from '../kernel_utils/shared';\nimport { complex } from './Complex';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { reshape } from './Reshape';\nexport function concatImpl(inputs, axis, backend) {\n    const dtype = inputs[0].dtype;\n    if (dtype === 'complex64') {\n        const reals = inputs.map((t) => real({ inputs: { input: t }, backend }));\n        const imags = inputs.map((t) => imag({ inputs: { input: t }, backend }));\n        const realConcated = concatImpl(reals, axis, backend);\n        const imagConcated = concatImpl(imags, axis, backend);\n        const result = complex({ inputs: { real: realConcated, imag: imagConcated }, backend });\n        reals.forEach(r => backend.disposeIntermediateTensorInfo(r));\n        imags.forEach(i => backend.disposeIntermediateTensorInfo(i));\n        backend.disposeIntermediateTensorInfo(realConcated);\n        backend.disposeIntermediateTensorInfo(imagConcated);\n        return result;\n    }\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgl doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (dtype === 'string') {\n        const { tensors2D, outShape } = computeTensors2D(inputs, axis, backend);\n        const inputsValShapes = tensors2D.map(t => {\n            return { vals: backend.readSync(t.dataId), shape: t.shape };\n        });\n        const simplyConcat = tensors2D[0].shape[0] === 1;\n        const outVals = concatImplCPU(inputsValShapes, outShape, dtype, simplyConcat);\n        const finalOutShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n        const outInfo = backend.makeTensorInfo(finalOutShape, dtype, outVals);\n        tensors2D.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return outInfo;\n    }\n    if (inputs.length > env().getNumber('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n        const midIndex = Math.floor(inputs.length / 2);\n        const leftSide = concatImpl(inputs.slice(0, midIndex), axis, backend);\n        const rightSide = concatImpl(inputs.slice(midIndex), axis, backend);\n        const result = concatImpl([leftSide, rightSide], axis, backend);\n        backend.disposeIntermediateTensorInfo(leftSide);\n        backend.disposeIntermediateTensorInfo(rightSide);\n        return result;\n    }\n    if (env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') &&\n        inputs[0].shape.length > 1) {\n        const program = new ConcatPackedProgram(inputs.map(t => t.shape), axis);\n        return backend.runWebGLProgram(program, inputs, dtype);\n    }\n    const { tensors2D, outShape } = computeTensors2D(inputs, axis, backend);\n    const program = new ConcatProgram(tensors2D.map(t => t.shape));\n    const result = backend.runWebGLProgram(program, tensors2D, dtype);\n    tensors2D.forEach(r => backend.disposeIntermediateTensorInfo(r));\n    const reshapedResult = reshape({ inputs: { x: result }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n}\nfunction computeTensors2D(inputs, axis, backend) {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n    const tensors2D = inputs.map(x => reshape({\n        inputs: { x },\n        attrs: { shape: [-1, util.sizeFromShape(x.shape.slice(axis))] },\n        backend\n    }));\n    return { tensors2D, outShape };\n}\n//# sourceMappingURL=Concat_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Concat, util } from '@tensorflow/tfjs-core';\nimport { concatImpl } from './Concat_impl';\nimport { identity } from './Identity';\nexport function concat(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    const $axis = util.parseAxisParam(axis, inputs[0].shape)[0];\n    const outShape = backend_util.computeOutShape(inputs.map(t => t.shape), $axis);\n    if (util.sizeFromShape(outShape) === 0) {\n        return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n    }\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n    if ($inputs.length === 1) {\n        return identity({ inputs: { x: $inputs[0] }, backend });\n    }\n    const shapes = $inputs.map(t => t.shape);\n    backend_util.assertParamsConsistent(shapes, $axis);\n    return concatImpl($inputs, $axis, backend);\n}\nexport const concatConfig = {\n    kernelName: Concat,\n    backendName: 'webgl',\n    kernelFunc: concat\n};\n//# sourceMappingURL=Concat.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class Conv2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivationWeights = false, hasLeakyreluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        const inputDepthVec4Remainder = convInfo.inChannels % 4;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        const rowDim = isChannelsLast ? 1 : 2;\n        const colDim = isChannelsLast ? 2 : 3;\n        const channelDim = isChannelsLast ? 3 : 1;\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivationWeights) {\n                activationSnippet = `float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyreluAlpha) {\n                activationSnippet = `float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `\n          float activation(float x) {\n            ${activation}\n          }\n        `;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyreluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${channelDim}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${rowDim}], coords[${colDim}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${convInfo.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${inputDepthVec4Remainder === 1}) {\n\n              if (${isChannelsLast}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${inputDepthNearestVec4}) *\n                    getW(wR, wC, ${inputDepthNearestVec4}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${inputDepthNearestVec4}, xR, xC) *\n                    getW(wR, wC, ${inputDepthNearestVec4}, d2);\n              }\n\n            } else if (${inputDepthVec4Remainder === 2}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${inputDepthNearestVec4}, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${inputDepthVec4Remainder === 3}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 2, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 1),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${inputDepthNearestVec4}, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 1, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\nexport class Conv3DProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        const inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = `\n      const ivec3 strides = ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          int xF = xFCorner + wF * ${dilationDepth};\n\n          if (xF < 0 || xF >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            int xR = xRCorner + wR * ${dilationHeight};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${inputDepthVec4Remainder === 1}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}) *\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2);\n              } else if (${inputDepthVec4Remainder === 2}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${inputDepthVec4Remainder === 3}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from './glsl_version';\nexport class Im2ColPackedProgram {\n    constructor(outputShape, inputShape, convInfo) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        const { filterWidth, inChannels, strideWidth, strideHeight, padInfo, outWidth, dilationWidth, dilationHeight, dataFormat } = convInfo;\n        const { left, top } = padInfo;\n        const itemsPerBlockRow = inChannels * filterWidth;\n        const glsl = getGlslDifferences();\n        const isChannelsLast = dataFormat === 'channelsLast';\n        const rowDim = isChannelsLast ? 0 : 1;\n        const colDim = isChannelsLast ? 1 : 2;\n        let unrolled = ``;\n        for (let row = 0; row <= 1; row++) {\n            for (let col = 0; col <= 1; col++) {\n                unrolled += `\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${row};\n\n          if(blockIndex < ${outputShape[1]} && pos < ${outputShape[0]}) {\n            offsetY = int(blockIndex / (${outWidth})) * ${strideHeight} - ${top};\n            d0 = offsetY + ${dilationHeight} * (pos / ${itemsPerBlockRow});\n\n            if(d0 < ${inputShape[rowDim]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${outWidth}.) * ${strideWidth}. - ${left}.);\n              d1 = offsetX + ${dilationWidth} * (int(mod(float(pos), ${itemsPerBlockRow}.) / ${inChannels}.));\n\n              if(d1 < ${inputShape[colDim]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${inChannels}.));\n\n                if (${isChannelsLast}) {\n                  innerDims = vec2(d1, ch);\n                  result[${row * 2 + col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${row * 2 + col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;\n            }\n        }\n        this.userCode = `\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${unrolled}\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=im2col_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, util } from '@tensorflow/tfjs-core';\nimport { Im2ColPackedProgram } from '../im2col_packed_gpu';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { MatMulPackedProgram } from '../mulmat_packed_gpu';\nimport * as webgl_util from '../webgl_util';\nimport { batchMatMulImpl, MATMUL_SHARED_DIM_THRESHOLD } from './BatchMatMul_impl';\nimport { identity } from './Identity';\nimport { reshape } from './Reshape';\n// For 1x1 kernels that iterate through every point in the input, convolution\n// can be expressed as matrix multiplication (without need for memory\n// remapping).\nexport function conv2dByMatMul({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    // Reshapes conv2D input to 2D tensors, uses matMul and then reshape the\n    // result from 2D to 4D.\n    const xShape = x.shape;\n    const xTexData = backend.texData.get(x.dataId);\n    const sharedMatMulDim = convInfo.inChannels;\n    const outerShapeX = xShape[0] * xShape[1] * xShape[2];\n    const outerShapeFilter = convInfo.outChannels;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const transposeA = false;\n    const transposeB = false;\n    let out;\n    const intermediates = [];\n    // TODO: Once reduction ops are packed, batchMatMul will always be packed\n    // and we can remove this condition.\n    const batchMatMulWillBeUnpacked = (outerShapeX === 1 || outerShapeFilter === 1) &&\n        sharedMatMulDim > MATMUL_SHARED_DIM_THRESHOLD;\n    const reshapeWillBeExpensive = xShape[2] % 2 !== 0 && !!xTexData.isPacked;\n    if (batchMatMulWillBeUnpacked || !env().getBool('WEBGL_LAZILY_UNPACK') ||\n        !env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ||\n        !reshapeWillBeExpensive) {\n        const targetShape = isChannelsLast ? xShape[0] * xShape[1] * xShape[2] :\n            xShape[0] * xShape[2] * xShape[3];\n        const xReshaped = reshape({\n            inputs: { x },\n            backend,\n            attrs: { shape: [1, targetShape, convInfo.inChannels] }\n        });\n        const filterReshaped = reshape({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, convInfo.inChannels, convInfo.outChannels] }\n        });\n        const result = batchMatMulImpl({\n            a: xReshaped,\n            b: filterReshaped,\n            transposeA,\n            transposeB,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n        out = reshape({ inputs: { x: result }, backend, attrs: { shape: convInfo.outShape } });\n        intermediates.push(xReshaped);\n        intermediates.push(filterReshaped);\n        intermediates.push(result);\n    }\n    else {\n        // Following optimization is specific to packed |x| with odd row count\n        // (For example, in channelLast mode, 'row count' refers to x.shape[2]):\n        // we avoid expensive packed 2x2 reshape by padding row count to next,\n        // even number. When x.shape[2] is odd, the result of packed batchMatMul is\n        // the same (has the same texture layout and and values in the texture) as\n        // it is for even x.shape[2] + 1. We make the odd-rows tensor to look like\n        // even-rows tensor before the operation and, after the batchMatMul,\n        // fix the even-rows result to have odd number of rows.\n        const targetShape = isChannelsLast ?\n            xShape[0] * xShape[1] * (xShape[2] + 1) :\n            xShape[0] * xShape[2] * (xShape[3] + 1);\n        const xReshaped = {\n            dataId: x.dataId,\n            shape: [1, targetShape, convInfo.inChannels],\n            dtype: x.dtype\n        };\n        // xTexData.shape gets referenced from GPGPUBinary.inShapeInfos.\n        // Decrementing row count, after batchMatMul->...->compileProgram leads to\n        // invalid row count within the reference in GPGPUBinary.inShapeInfos.\n        // Alternative fix would be to provide a copy to GPGPUBinary.inShapeInfos\n        // in compileProgram method, but that would affect compilation of all\n        // programs - instead, provide a copy here, with even row count, before\n        // calling batchMatMul->...->compileProgram and after that, the original\n        // xTexData.shape is restored.\n        const originalXTexDataShape = xTexData.shape;\n        xTexData.shape = xTexData.shape.slice();\n        xTexData.shape[xTexData.shape.length - 2]++;\n        util.assert(webgl_util.isReshapeFree(xTexData.shape, xReshaped.shape), () => `packed reshape ${xTexData.shape} to ${xReshaped.shape} isn't free`);\n        const filterReshaped = reshape({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, convInfo.inChannels, convInfo.outChannels] }\n        });\n        intermediates.push(filterReshaped);\n        const pointwiseConv = batchMatMulImpl({\n            a: xReshaped,\n            b: filterReshaped,\n            backend,\n            transposeA,\n            transposeB,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n        const pointwiseConvTexData = backend.texData.get(pointwiseConv.dataId);\n        util.assert(pointwiseConvTexData.isPacked, () => 'batchMatMul result is expected to be packed');\n        // Restore the input shape to original.\n        xTexData.shape = originalXTexDataShape;\n        // Set the output shape - there is no need for expensive reshape as data\n        // layout is already correct.\n        pointwiseConvTexData.shape = convInfo.outShape;\n        out = identity({ inputs: { x: pointwiseConv }, backend });\n        out.shape = convInfo.outShape;\n        intermediates.push(pointwiseConv);\n    }\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return out;\n}\n// Implements the im2row algorithm as outlined in \"High Performance\n// Convolutional Neural Networks for Document Processing\" (Suvisoft, 2006)\nexport function conv2dWithIm2Row({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    // Rearranges conv2d input so each block to be convolved over forms the\n    // column of a new matrix with shape [filterWidth * filterHeight *\n    // inChannels, outHeight * outWidth]. The filter is also rearranged so each\n    // output channel forms a row of a new matrix with shape [outChannels,\n    // filterWidth * filterHeight * inChannels]. The convolution is then\n    // computed by multiplying these matrices and reshaping the result.\n    const { filterWidth, filterHeight, inChannels, outWidth, outHeight, dataFormat } = convInfo;\n    const isChannelsLast = dataFormat === 'channelsLast';\n    const sharedDim = filterWidth * filterHeight * inChannels;\n    const numCols = outHeight * outWidth;\n    const x2ColShape = [sharedDim, numCols];\n    const transposeA = true;\n    const transposeB = false;\n    const intermediates = [];\n    const xSqueezed = reshape({ inputs: { x }, backend, attrs: { shape: x.shape.slice(1) } });\n    const w2Row = reshape({\n        inputs: { x: filter },\n        backend,\n        attrs: { shape: [1, sharedDim, util.sizeFromShape(filter.shape) / sharedDim] }\n    });\n    intermediates.push(xSqueezed);\n    intermediates.push(w2Row);\n    const im2ColProgram = new Im2ColPackedProgram(x2ColShape, xSqueezed.shape, convInfo);\n    const im2Col = backend.runWebGLProgram(im2ColProgram, [xSqueezed], 'float32');\n    const im2ColReshaped = reshape({\n        inputs: { x: im2Col },\n        backend,\n        attrs: { shape: [1, x2ColShape[0], x2ColShape[1]] }\n    });\n    intermediates.push(im2Col);\n    intermediates.push(im2ColReshaped);\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    const fusedActivation = activation ? mapActivationToShaderProgram(activation, true) : null;\n    const matmulProgram = new MatMulPackedProgram(im2ColReshaped.shape, w2Row.shape, [1, numCols, convInfo.outChannels], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    const inputs = [im2ColReshaped, w2Row];\n    if (bias) {\n        inputs.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        inputs.push(preluActivationWeights);\n    }\n    if (hasLeakyreluAlpha) {\n        const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n        inputs.push($leakyreluAlpha);\n        intermediates.push($leakyreluAlpha);\n    }\n    const product = backend.runWebGLProgram(matmulProgram, inputs, 'float32');\n    const outShape = isChannelsLast ?\n        [1, outHeight, outWidth, convInfo.outChannels] :\n        [1, convInfo.outChannels, outHeight, outWidth];\n    const out = reshape({ inputs: { x: product }, backend, attrs: { shape: outShape } });\n    intermediates.push(product);\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return out;\n}\n//# sourceMappingURL=Conv2D_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D, env } from '@tensorflow/tfjs-core';\nimport { Conv2DProgram } from '../conv_gpu';\nimport { conv2dByMatMul, conv2dWithIm2Row } from './Conv2D_impl';\nimport { reshape } from './Reshape';\nexport function conv2d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    let out;\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n        out = conv2dByMatMul({ x, filter, convInfo, backend });\n    }\n    else if (env().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n        out = conv2dWithIm2Row({ x, filter, convInfo, backend });\n    }\n    else {\n        const program = new Conv2DProgram(convInfo);\n        out = backend.runWebGLProgram(program, [x, filter], 'float32');\n    }\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    backend.disposeIntermediateTensorInfo(out);\n    return outReshaped;\n}\nexport const conv2DConfig = {\n    kernelName: Conv2D,\n    backendName: 'webgl',\n    kernelFunc: conv2d,\n};\n//# sourceMappingURL=Conv2D.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class Conv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              if (${isChannelsLast}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class Conv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        const rowDim = isChannelsLast ? 1 : 2;\n        const colDim = isChannelsLast ? 2 : 3;\n        const channelDim = isChannelsLast ? 3 : 1;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${channelDim}];\n\n        ivec2 dyCorner = ivec2(coords[${rowDim}], coords[${colDim}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n\n              if (${isChannelsLast}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class Conv3DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.userCode = `\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yF = 0; yF < ${convInfo.outDepth}; yF++) {\n            int xF = wF + yF * ${strideDepth} - ${padFront};\n\n            if (xF < 0 || xF >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n              int xR = wR + yR * ${strideHeight} - ${padTop};\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n                int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class Conv3DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padFront = filterDepth - 1 - convInfo.padInfo.front;\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${convInfo.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${filterDepth} - 1 - wF;\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${filterHeight} - 1 - wR;\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${filterWidth} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_backprop_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, filterShape } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const program = new Conv2DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const conv2DBackpropFilterConfig = {\n    kernelName: Conv2DBackpropFilter,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropFilter,\n};\n//# sourceMappingURL=Conv2DBackpropFilter.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropInput } from '@tensorflow/tfjs-core';\nimport { Conv2DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { inputShape, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    const program = new Conv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const conv2DBackpropInputConfig = {\n    kernelName: Conv2DBackpropInput,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropInput,\n};\n//# sourceMappingURL=Conv2DBackpropInput.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3D } from '@tensorflow/tfjs-core';\nimport { Conv3DProgram } from '../conv_gpu';\nexport function conv3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n    const program = new Conv3DProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nexport const conv3DConfig = {\n    kernelName: Conv3D,\n    backendName: 'webgl',\n    kernelFunc: conv3D,\n};\n//# sourceMappingURL=Conv3D.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropFilterV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerFilterProgram } from '../conv_backprop_gpu';\nexport function conv3DBackpropFilterV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, filterShape } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad);\n    const program = new Conv3DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const conv3DBackpropFilterV2Config = {\n    kernelName: Conv3DBackpropFilterV2,\n    backendName: 'webgl',\n    kernelFunc: conv3DBackpropFilterV2\n};\n//# sourceMappingURL=Conv3DBackpropFilterV2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv3DBackpropInputV2 } from '@tensorflow/tfjs-core';\nimport { Conv3DDerInputProgram } from '../conv_backprop_gpu';\nexport function conv3DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { pad, strides, inputShape } = attrs;\n    const convInfo = backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad);\n    const program = new Conv3DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const conv3DBackpropInputConfig = {\n    kernelName: Conv3DBackpropInputV2,\n    backendName: 'webgl',\n    kernelFunc: conv3DBackpropInput,\n};\n//# sourceMappingURL=Conv3DBackpropInputV2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cos } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst COS = CHECK_NAN_SNIPPET_UNARY + `\n  return cos(x);\n`;\nexport const cos = unaryKernelFunc({ opSnippet: COS });\nexport const cosConfig = {\n    kernelName: Cos,\n    backendName: 'webgl',\n    kernelFunc: cos,\n};\n//# sourceMappingURL=Cos.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cosh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst COSH = `\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n`;\nexport const cosh = unaryKernelFunc({ opSnippet: COSH });\nexport const coshConfig = {\n    kernelName: Cosh,\n    backendName: 'webgl',\n    kernelFunc: cosh,\n};\n//# sourceMappingURL=Cosh.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class CropAndResizeProgram {\n    constructor(imageShape, boxShape, cropSize, method, extrapolationValue) {\n        this.variableNames = ['Image', 'Boxes', 'BoxInd'];\n        this.outputShape = [];\n        const [batch, imageHeight, imageWidth, depth] = imageShape;\n        const [numBoxes,] = boxShape;\n        const [cropHeight, cropWidth] = cropSize;\n        this.outputShape = [numBoxes, cropHeight, cropWidth, depth];\n        const methodId = method === 'bilinear' ? 1 : 0;\n        const [inputHeightFloat, inputWidthFloat] = [`${imageHeight - 1}.0`, `${imageWidth - 1}.0`];\n        const [heightRatio, heightScale, inY] = cropHeight > 1 ?\n            [\n                `${(imageHeight - 1) / (cropHeight - 1)}`,\n                '(y2-y1) * height_ratio',\n                `y1*${inputHeightFloat} + float(y)*(height_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (y1+y2) * ${inputHeightFloat}`,\n            ];\n        const [widthRatio, widthScale, inX] = cropWidth > 1 ?\n            [\n                `${(imageWidth - 1) / (cropWidth - 1)}`,\n                '(x2-x1) * width_ratio',\n                `x1*${inputWidthFloat} + float(x)*(width_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (x1+x2) * ${inputWidthFloat}`,\n            ];\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n        this.userCode = `\n      const float height_ratio = float(${heightRatio});\n      const float width_ratio = float(${widthRatio});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${batch}) {\n          return;\n        }\n\n        float height_scale = ${heightScale};\n        float width_scale = ${widthScale};\n\n        float in_y = ${inY};\n        if( in_y < 0.0 || in_y > ${inputHeightFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n        float in_x = ${inX};\n        if( in_x < 0.0 || in_x > ${inputWidthFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${methodId} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=crop_and_resize_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { CropAndResize } from '@tensorflow/tfjs-core';\nimport { CropAndResizeProgram } from '../crop_and_resize_gpu';\nexport const cropAndResize = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { image, boxes, boxInd } = inputs;\n    const { cropSize, method, extrapolationValue } = attrs;\n    const program = new CropAndResizeProgram(image.shape, boxes.shape, cropSize, method, extrapolationValue);\n    return backend.runWebGLProgram(program, [image, boxes, boxInd], 'float32');\n};\nexport const cropAndResizeConfig = {\n    kernelName: CropAndResize,\n    backendName: 'webgl',\n    kernelFunc: cropAndResize\n};\n//# sourceMappingURL=CropAndResize.js.map","import { getCoordsDataType } from './shader_compiler';\nexport class CumSumProgram {\n    constructor(shape, exclusive, reverse) {\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        const rank = shape.length;\n        const val = exclusive ? '0.0' : `getX(${getCoords(rank, 'coords')})`;\n        const length = shape[shape.length - 1];\n        let condition = '';\n        let idxString = '';\n        // When exclusive is set, the cumsum op becomes roll op that copies the\n        // value from the previous index based on the direction specified by the\n        // reverse flag.\n        if (exclusive) {\n            condition = reverse ? `end != ${length - 1}` : 'end != 0';\n            idxString = reverse ? 'end + 1' : 'end - 1';\n        }\n        else {\n            condition = reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n            idxString = (reverse ? 'end + pow2' : 'end - pow2');\n        }\n        this.userCode = `\n      uniform float index;\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = ${val};\n        int pow2 = int(pow(2.0, index));\n        if (${condition}) {\n          int idx = ${idxString};\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n    }\n    getCustomSetupFunc(index) {\n        return (gpgpu, webGLProgram) => {\n            if (this.index == null) {\n                this.index = gpgpu.getUniformLocation(webGLProgram, 'index');\n            }\n            gpgpu.gl.uniform1f(this.index, index);\n        };\n    }\n}\nfunction getCoords(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.x, ${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.x, ${name}.y, ${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\nfunction getFinalCoord(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=cumsum_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Cumsum } from '@tensorflow/tfjs-core';\nimport { CumSumProgram } from '../cumsum_gpu';\nimport { identity } from './Identity';\nimport { transpose } from './Transpose';\nexport function cumsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    const xRank = x.shape.length;\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n    }\n    const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n    if (permutedAxis !== xRank - 1) {\n        throw new Error(`WebGL cumsum shader expects an inner-most axis=${x.shape.length - 1} ` +\n            `but got axis=${axis}`);\n    }\n    const size = x.shape[permutedAxis];\n    let result = identity({ inputs: { x: permutedX }, backend });\n    // Use cumsum parallel algorithm, ref:\n    // https://developer.nvidia.com/gpugems/gpugems3/part-vi-gpu-computing/chapter-39-parallel-prefix-sum-scan-cuda\n    for (let i = 0; i <= Math.ceil(Math.log2(size)) - 1; i++) {\n        const program = new CumSumProgram(permutedX.shape, false, reverse);\n        const customSetup = program.getCustomSetupFunc(i);\n        const prevResult = result;\n        result =\n            backend.runWebGLProgram(program, [result], result.dtype, customSetup);\n        backend.disposeIntermediateTensorInfo(prevResult);\n    }\n    // For exclusive cumsum, shift the end result in the direction of sum\n    // and add 0 to the front index.\n    if (exclusive) {\n        const program = new CumSumProgram(permutedX.shape, exclusive, reverse);\n        const prevResult = result;\n        result = backend.runWebGLProgram(program, [result], result.dtype);\n        backend.disposeIntermediateTensorInfo(prevResult);\n    }\n    if (permutation != null) {\n        const reversePermutation = backend_util.getUndoAxesPermutation(permutation);\n        const reverseTransposedResult = transpose({ inputs: { x: result }, backend, attrs: { perm: reversePermutation } });\n        backend.disposeIntermediateTensorInfo(result);\n        backend.disposeIntermediateTensorInfo(permutedX);\n        return reverseTransposedResult;\n    }\n    return result;\n}\nexport const cumsumConfig = {\n    kernelName: Cumsum,\n    backendName: 'webgl',\n    kernelFunc: cumsum\n};\n//# sourceMappingURL=Cumsum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DenseBincount } from '@tensorflow/tfjs-core';\nimport { bincountImplCPU, bincountReduceImplCPU } from '../kernel_utils/shared';\nexport function denseBincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size, binaryOutput } = attrs;\n    if (x.shape.length === 1) {\n        const xVals = backend.readSync(x.dataId);\n        const weightsVals = backend.readSync(weights.dataId);\n        const outVals = bincountImplCPU(xVals, weightsVals, weights.dtype, weights.shape, size);\n        return backend.makeTensorInfo([size], weights.dtype, outVals);\n    }\n    else if (x.shape.length === 2) {\n        const xBuf = backend.bufferSync(x);\n        const weightsBuf = backend.bufferSync(weights);\n        const outBuf = bincountReduceImplCPU(xBuf, weightsBuf, size, binaryOutput);\n        return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n    }\n    throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank` +\n        `${x.shape.length}.`);\n}\nexport const denseBincountConfig = {\n    kernelName: DenseBincount,\n    backendName: 'webgl',\n    kernelFunc: denseBincount\n};\n//# sourceMappingURL=DenseBincount.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class DepthToSpaceProgram {\n    constructor(outputShape, blockSize, dataFormat) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.blockSize = blockSize;\n        this.dataFormat = dataFormat;\n        this.userCode = `\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${blockSize};\n      int offset_h = imod(h, ${blockSize});\n      int in_w = w / ${blockSize};\n      int offset_w = imod(w, ${blockSize});\n      int offset_d = (offset_h * ${blockSize} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `;\n    }\n    getHeightCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[1]`;\n        }\n        else {\n            return `coords[2]`;\n        }\n    }\n    getWidthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[2]`;\n        }\n        else {\n            return `coords[3]`;\n        }\n    }\n    getDepthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[3]`;\n        }\n        else {\n            return `coords[1]`;\n        }\n    }\n    getOutputDepthSize() {\n        if (this.dataFormat === 'NHWC') {\n            return this.outputShape[3];\n        }\n        else {\n            return this.outputShape[1];\n        }\n    }\n    getInputSamplingString() {\n        if (this.dataFormat === 'NHWC') {\n            return `getX(b, in_h, in_w, in_d)`;\n        }\n        else {\n            return `getX(b, in_d, in_h, in_w)`;\n        }\n    }\n}\n//# sourceMappingURL=depth_to_space_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { DepthToSpace, util } from '@tensorflow/tfjs-core';\nimport { DepthToSpaceProgram } from '../depth_to_space_gpu';\nexport function depthToSpace(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    util.assert(blockSize > 1, () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n    const program = new DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const depthToSpaceConfig = {\n    kernelName: DepthToSpace,\n    backendName: 'webgl',\n    kernelFunc: depthToSpace\n};\n//# sourceMappingURL=DepthToSpace.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class DepthwiseConv2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false, hasLeakyReluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const xNumRows = convInfo.inHeight;\n        const xNumCols = convInfo.inWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyReluAlpha) {\n                activationSnippet = `float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `\n          float activation(float x) {\n            ${activation}\n          }\n        `;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyReluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${xNumRows}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${xNumCols}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_gpu_depthwise.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport class DepthwiseConvPacked2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false, hasLeakyReluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = convInfo.outShape;\n        const xNumRows = convInfo.inHeight;\n        const xNumCols = convInfo.inWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const texelsAcross = filterWidth;\n        let mainLoop = `int xR; int xC; int xCOffset;`;\n        for (let r = 0; r < filterHeight; r++) {\n            for (let c = 0; c < filterWidth; c++) {\n                mainLoop += `\n          vec4 xTexelR${r}C${c * 2} = vec4(0.);\n          vec4 wR${r}C${c} = vec4(0.);\n          vec4 xR${r}C${c} = vec4(0.);`;\n            }\n        }\n        /**\n         * This vectorized implementation works by gathering the values needed for\n         * each output channel's dot product into vec4's and then multiplying them\n         * all together (this happens in the final double for-loop below). Most of\n         * the main loop consists of constructing these vec4's with the minimum\n         * number of texture2D calls, which means making use of all four returned\n         * values from a texture2D call at once.\n         */\n        for (let r = 0; r < filterHeight; r++) {\n            for (let texelC = 0; texelC < texelsAcross; texelC++) {\n                const c = texelC * 2;\n                mainLoop += `\n          xR = xRCorner + ${r * dilationHeight};\n          xC = xCCorner + ${c * dilationWidth};\n        `;\n                if (strideWidth === 1) {\n                    if (c < filterWidth) {\n                        // If padding is odd, the outer texels have to be composed.\n                        if (padLeft % 2 === 1) {\n                            // TODO: Ensure vec4 previous does not result in redundant sample,\n                            // and avoid setting xTexelRC's that exceed the boundary in the\n                            // first place rather than resetting them to vec4(0)).\n                            // To compute xCOffset:\n                            // - If padding is odd, we must add 1 to ensure we ask for an\n                            // even-numbered row.\n                            // - We subtract 2 to access the previous texel.\n                            mainLoop += `\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${xNumCols}) {\n                    xTexelR${r}C${c}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${xNumCols}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${r}C${c} = vec4(previous.zw, xTexelR${r}C${c}.xy);\n                } else {\n                  xR${r}C${c} = vec4(0, 0, xTexelR${r}C${c}.xy);\n                }\n              `;\n                        }\n                        else {\n                            // Padding is even, so xRC corresponds to a single texel.\n                            mainLoop += `\n                if(xR >= 0 && xR < ${xNumRows} && xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xR${r}C${c} = xTexelR${r}C${c};\n              `;\n                        }\n                        if (c + 1 < filterWidth) {\n                            // If dilation is even, the second entry should match the first\n                            // (either both are composed or both are single samples). But if\n                            // dilation is odd, then the second entry should be the opposite\n                            // of the first (if the first is composed, the second is a single\n                            // sample, and vice versa.)\n                            const nextTexelOffset = padLeft % 2 === 0 ?\n                                util.nearestLargerEven(dilationWidth) :\n                                dilationWidth;\n                            if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                                (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                                mainLoop += `\n                  xCOffset = xC + ${padLeft % 2} + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `;\n                                // If dilation > 1 then the xRC's will not be able to share any\n                                // values, so each xRC will require two unique calls to getX.\n                                if (dilationWidth > 1) {\n                                    mainLoop += `\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${xNumRows} &&\n                      xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                      xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${r}C${c} = vec4(0.);\n                    }\n                  `;\n                                }\n                                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.xy);\n                `;\n                            }\n                            else {\n                                mainLoop += `\n                  xCOffset = xC + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${r}C${c + 1} = xTexelR${r}C${c + 2};\n                `;\n                            }\n                        }\n                    }\n                }\n                else { // stride > 1\n                    if (c < filterWidth) {\n                        mainLoop += `\n              if(xR >= 0 && xR < ${xNumRows}) {\n            `;\n                        // Depending on whether padLeft is even or odd, we want either the\n                        // xy or zw channels from X texels for xR${r}C${c}. If padLeft is\n                        // even, xR${r}C${c + 1} is simply the zw channels of texels we've\n                        // already sampled. But if padLeft is odd, xR${r}C{$c + 1}.zw will\n                        // need to come from the xy channels of a new texel, hence the `vec4\n                        // final` initialized below.\n                        if (padLeft % 2 === 1) {\n                            mainLoop += `\n                xCOffset = xC + 1 - ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n              `;\n                            if (c + 1 < filterWidth) {\n                                mainLoop += `\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${strideWidth};\n                  if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${r}C${c + 1} = vec4(xTexelR${r}C${c + 2}.xy, final.xy);\n                `;\n                            }\n                        }\n                        else {\n                            mainLoop += `\n                if(xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.xy, xTexelR${r}C${c + 2}.xy);\n              `;\n                            if (c + 1 < filterWidth) {\n                                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n                `;\n                            }\n                        }\n                        mainLoop += `}`;\n                    }\n                }\n                if (c < filterWidth) {\n                    mainLoop += `\n            vec4 wTexelR${r}C${c} = getW(${r}, ${c}, d1, q);\n            wR${r}C${c} = vec4(wTexelR${r}C${c}.xz, wTexelR${r}C${c}.xz);\n          `;\n                    if (c + 1 < filterWidth) {\n                        mainLoop += `\n              vec4 wTexelR${r}C${c + 1} = getW(${r}, ${c + 1}, d1, q);\n              wR${r}C${c + 1} =\n                vec4(wTexelR${r}C${c + 1}.xz, wTexelR${r}C${c + 1}.xz);`;\n                    }\n                }\n            }\n        }\n        for (let r = 0; r < filterHeight; r++) {\n            for (let c = 0; c < filterWidth; c++) {\n                mainLoop += `dotProd += xR${r}C${c} * wR${r}C${c};`;\n            }\n        }\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyReluAlpha) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyReluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${mainLoop}\n\n        vec4 result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_packed_gpu_depthwise.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative, env, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nexport function depthwiseConv2dNative(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations, dimRoundingMode } = attrs;\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    let program;\n    if (env().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1) {\n        program = new DepthwiseConvPacked2DProgram(convInfo);\n    }\n    else {\n        program = new DepthwiseConv2DProgram(convInfo);\n    }\n    return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nexport const depthwiseConv2dNativeConfig = {\n    kernelName: DepthwiseConv2dNative,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNative,\n};\n//# sourceMappingURL=DepthwiseConv2dNative.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class DepthwiseConv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${channelMul} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class DepthwiseConv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${channelMul}; dm++) {\n              int d2 = d1 * ${channelMul} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_backprop_gpu_depthwise.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropFilter } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerFilterProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, filterShape } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new DepthwiseConv2DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const depthwiseConv2dNativeBackpropFilterConfig = {\n    kernelName: DepthwiseConv2dNativeBackpropFilter,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNativeBackpropFilter\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropFilter.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerInputProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, inputShape } = attrs;\n    const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new DepthwiseConv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const depthwiseConv2dNativeBackpropInputConfig = {\n    kernelName: DepthwiseConv2dNativeBackpropInput,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNativeBackpropInput\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropInput.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class DiagProgram {\n    constructor(size) {\n        this.variableNames = ['X'];\n        this.outputShape = [size, size];\n        this.userCode = `\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=diag_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Diag, util } from '@tensorflow/tfjs-core';\nimport { DiagProgram } from '../diag_gpu';\nimport { reshape } from './Reshape';\nexport function diag(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const outShape = [...x.shape, ...x.shape];\n    const xSize = util.sizeFromShape(x.shape);\n    const flat = reshape({ inputs: { x }, backend, attrs: { shape: [xSize] } });\n    const program = new DiagProgram(xSize);\n    const res = backend.runWebGLProgram(program, [flat], flat.dtype);\n    const out = reshape({ inputs: { x: res }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(flat);\n    backend.disposeIntermediateTensorInfo(res);\n    return out;\n}\nexport const diagConfig = {\n    kernelName: Diag,\n    backendName: 'webgl',\n    kernelFunc: diag\n};\n//# sourceMappingURL=Diag.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class Dilation2DProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const { inHeight, inWidth, padInfo, strideHeight, strideWidth, filterHeight, filterWidth, dilationHeight, dilationWidth } = convInfo;\n        const { top: padTop, left: padLeft } = padInfo;\n        this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${filterHeight}; h++) {\n          int hIn = hBeg + h * ${dilationHeight};\n\n          if (hIn >= 0 && hIn < ${inHeight}) {\n            for (int w = 0; w < ${filterWidth}; w++) {\n              int wIn = wBeg + w * ${dilationWidth};\n\n              if (wIn >= 0 && wIn < ${inWidth}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=dilation_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { Dilation2DProgram } from '../dilation_gpu';\nimport { reshape } from './Reshape';\nexport function dilation2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    let out;\n    const program = new Dilation2DProgram(convInfo);\n    out = backend.runWebGLProgram(program, [x, filter], 'float32');\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    backend.disposeIntermediateTensorInfo(out);\n    return outReshaped;\n}\nexport const dilation2DConfig = {\n    kernelName: Dilation2D,\n    backendName: 'webgl',\n    kernelFunc: dilation2D,\n};\n//# sourceMappingURL=Dilation2D.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nconst ELU_PACKED = `\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n`;\nconst elu = unaryKernelFunc({ opSnippet: ELU, packedOpSnippet: ELU_PACKED });\nexport const eluConfig = {\n    kernelName: Elu,\n    backendName: 'webgl',\n    kernelFunc: elu\n};\n//# sourceMappingURL=Elu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad, env } from '@tensorflow/tfjs-core';\nimport { BinaryOpProgram } from '../binaryop_gpu';\nimport { BinaryOpPackedProgram } from '../binaryop_packed_gpu';\nconst ELU_DER = `return (b >= 1.0) ? a : a * (b + 1.0);`;\nconst ELU_DER_PACKED = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nexport const eluGrad = (args) => {\n    const { inputs, backend } = args;\n    const { dy, y } = inputs;\n    const program = env().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(ELU_DER_PACKED, dy.shape, y.shape) :\n        new BinaryOpProgram(ELU_DER, dy.shape, y.shape);\n    return backend.runWebGLProgram(program, [dy, y], dy.dtype);\n};\nexport const eluGradConfig = {\n    kernelName: EluGrad,\n    backendName: 'webgl',\n    kernelFunc: eluGrad\n};\n//# sourceMappingURL=EluGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Equal } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst PACKED_EQUAL = `\n  return vec4(equal(a, b));\n`;\nconst EQUAL = `return float(a == b);`;\nexport const equal = binaryKernelFunc({ opSnippet: EQUAL, packedOpSnippet: PACKED_EQUAL, dtype: 'bool' });\nexport const equalConfig = {\n    kernelName: Equal,\n    backendName: 'webgl',\n    kernelFunc: equal\n};\n//# sourceMappingURL=Equal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Erf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst ERF = `\n  // Error function is calculated approximately with elementary function.\n  // See \"Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\n  float p = ${backend_util.ERF_P};\n  float a1 = ${backend_util.ERF_A1};\n  float a2 = ${backend_util.ERF_A2};\n  float a3 = ${backend_util.ERF_A3};\n  float a4 = ${backend_util.ERF_A4};\n  float a5 = ${backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`;\nexport const erf = unaryKernelFunc({ opSnippet: ERF });\nexport const erfConfig = {\n    kernelName: Erf,\n    backendName: 'webgl',\n    kernelFunc: erf,\n};\n//# sourceMappingURL=Erf.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Exp } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expImplCPU } from '../kernel_utils/shared';\nexport const EXP = `return exp(x);`;\nexport const exp = unaryKernelFunc({ opSnippet: EXP, packedOpSnippet: EXP, cpuKernelImpl: expImplCPU });\nexport const expConfig = {\n    kernelName: Exp,\n    backendName: 'webgl',\n    kernelFunc: exp\n};\n//# sourceMappingURL=Exp.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ExpandDims, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nexport function expandDims(args) {\n    const { inputs, attrs, backend } = args;\n    const { dim } = attrs;\n    const { input } = inputs;\n    const inputRank = input.shape.length;\n    const newShape = input.shape.slice();\n    let $dim = dim;\n    if (dim < 0) {\n        // Negative value is counted from the tail of rank.\n        util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n        $dim = inputRank + dim + 1;\n    }\n    newShape.splice($dim, 0, 1);\n    return reshape({ inputs: { x: input }, backend, attrs: { shape: newShape } });\n}\nexport const expandDimsConfig = {\n    kernelName: ExpandDims,\n    backendName: 'webgl',\n    kernelFunc: expandDims,\n};\n//# sourceMappingURL=ExpandDims.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Expm1 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { expm1ImplCPU } from '../kernel_utils/shared';\nconst EXPM1 = `return exp(x) - 1.0;`;\nexport const expm1 = unaryKernelFunc({ opSnippet: EXPM1, packedOpSnippet: EXPM1, cpuKernelImpl: expm1ImplCPU });\nexport const expm1Config = {\n    kernelName: Expm1,\n    backendName: 'webgl',\n    kernelFunc: expm1\n};\n//# sourceMappingURL=Expm1.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class FFTProgram {\n    constructor(component, inputShape, inverse) {\n        this.variableNames = ['real', 'imag'];\n        const innerDim = inputShape[1];\n        this.outputShape = inputShape;\n        const exponentMultiplierSnippet = inverse ? `2.0 * ${Math.PI}` : `-2.0 * ${Math.PI}`;\n        const resultDenominator = inverse ? `${innerDim}.0` : '1.0';\n        let opString;\n        if (component === 'real') {\n            opString = 'return real * expR - imag * expI;';\n        }\n        else if (component === 'imag') {\n            opString = 'return real * expI + imag * expR;';\n        }\n        else {\n            throw new Error(`FFT component must be either \"real\" or \"imag\", got ${component}.`);\n        }\n        this.userCode = `\n      const float exponentMultiplier = ${exponentMultiplierSnippet};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${opString}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${innerDim});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${innerDim}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${resultDenominator};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=fft_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { FFTProgram } from '../fft_gpu';\nimport { complex } from './Complex';\nimport { reshape } from './Reshape';\nexport function fftImpl(x, inverse, backend) {\n    const xData = backend.texData.get(x.dataId);\n    const inputSize = util.sizeFromShape(x.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = x.shape[x.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const input2D = reshape({ inputs: { x }, backend, attrs: { shape: [batch, innerDimensionSize] } });\n    const xShape = input2D.shape;\n    const realProgram = new FFTProgram('real', xShape, inverse);\n    const imagProgram = new FFTProgram('imag', xShape, inverse);\n    const inputs = [\n        {\n            dataId: xData.complexTensorInfos.real.dataId,\n            dtype: xData.complexTensorInfos.real.dtype,\n            shape: xShape\n        },\n        {\n            dataId: xData.complexTensorInfos.imag.dataId,\n            dtype: xData.complexTensorInfos.imag.dtype,\n            shape: xShape\n        }\n    ];\n    const realPart = backend.runWebGLProgram(realProgram, inputs, 'float32');\n    const imagPart = backend.runWebGLProgram(imagProgram, inputs, 'float32');\n    const complexOutput = complex({ inputs: { real: realPart, imag: imagPart }, backend });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    const complexOutputReshaped = reshape({ inputs: { x: complexOutput }, backend, attrs: { shape: x.shape } });\n    backend.disposeIntermediateTensorInfo(complexOutputReshaped);\n    return complexOutputReshaped;\n}\n//# sourceMappingURL=FFT_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function fft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return fftImpl(input, false /* inverse */, backend);\n}\nexport const fftConfig = {\n    kernelName: FFT,\n    backendName: 'webgl',\n    kernelFunc: fft\n};\n//# sourceMappingURL=FFT.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class FillProgram {\n    constructor(shape, value) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        this.userCode = `\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    `;\n    }\n    getCustomSetupFunc(value) {\n        return (gpgpu, webGLProgram) => {\n            if (this.valueLoc == null) {\n                this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n            }\n            gpgpu.gl.uniform1f(this.valueLoc, value);\n        };\n    }\n}\n//# sourceMappingURL=fill_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value } = attrs;\n    let { dtype } = attrs;\n    dtype = dtype || util.inferDtype(value);\n    if (dtype === 'string') {\n        // String type should be handled in CPU memory.\n        const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n        values.fill(value);\n        return backend.makeTensorInfo(shape, dtype, values);\n    }\n    else {\n        const program = new FillProgram(shape, value);\n        const customSetup = program.getCustomSetupFunc(value);\n        return backend.runWebGLProgram(program, [], dtype, customSetup);\n    }\n}\nexport const fillConfig = {\n    kernelName: Fill,\n    backendName: 'webgl',\n    kernelFunc: fill\n};\n//# sourceMappingURL=Fill.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class FlipLeftRightProgram {\n    constructor(imageShape) {\n        this.variableNames = ['Image'];\n        this.outputShape = [];\n        const imageWidth = imageShape[2];\n        this.outputShape = imageShape;\n        this.userCode = `\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${imageWidth} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${imageWidth}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `;\n    }\n}\n//# sourceMappingURL=flip_left_right_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nimport { FlipLeftRightProgram } from '../flip_left_right_gpu';\nexport const flipLeftRightConfig = {\n    kernelName: FlipLeftRight,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, backend }) => {\n        const { image } = inputs;\n        const webglBackend = backend;\n        const program = new FlipLeftRightProgram(image.shape);\n        const output = webglBackend.runWebGLProgram(program, [image], image.dtype);\n        return output;\n    }\n};\n//# sourceMappingURL=FlipLeftRight.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Floor } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { floorImplCPU } from '../kernel_utils/shared';\nconst FLOOR = `return floor(x);`;\nexport const floor = unaryKernelFunc({ opSnippet: FLOOR, packedOpSnippet: FLOOR, cpuKernelImpl: floorImplCPU });\nexport const floorConfig = {\n    kernelName: Floor,\n    backendName: 'webgl',\n    kernelFunc: floor,\n};\n//# sourceMappingURL=Floor.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FloorDiv } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nconst INT_DIV = `\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n`;\nconst INT_DIV_PACKED = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\nexport const floorDiv = binaryKernelFunc({ opSnippet: INT_DIV, packedOpSnippet: INT_DIV_PACKED, dtype: 'int32' });\nexport const floorDivConfig = {\n    kernelName: FloorDiv,\n    backendName: 'webgl',\n    kernelFunc: floorDiv\n};\n//# sourceMappingURL=FloorDiv.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport class FromPixelsProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        const glsl = getGlslDifferences();\n        const [height, width,] = outputShape;\n        this.outputShape = outputShape;\n        this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${height}.0);\n\n        vec4 values = ${glsl.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=from_pixels_gpu.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlslDifferences } from '../../glsl_version';\nexport class FromPixelsPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        const glsl = getGlslDifferences();\n        const [height, width,] = outputShape;\n        this.outputShape = outputShape;\n        this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${width}.0, ${height}.0);\n            vec4 values = ${glsl.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=from_pixels_packed_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport { FromPixels } from '@tensorflow/tfjs-core';\nimport { TextureUsage } from '../tex_util';\nimport { FromPixelsProgram } from './FromPixels_utils/from_pixels_gpu';\nimport { FromPixelsPackedProgram } from './FromPixels_utils/from_pixels_packed_gpu';\nexport const fromPixelsConfig = {\n    kernelName: FromPixels,\n    backendName: 'webgl',\n    kernelFunc: fromPixels,\n};\nlet fromPixels2DContext;\nfunction fromPixels(args) {\n    const { inputs, backend, attrs } = args;\n    let { pixels } = inputs;\n    const { numChannels } = attrs;\n    const isVideo = typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement;\n    const isImage = typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' &&\n        pixels instanceof ImageBitmap;\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    const texShape = [height, width];\n    const outShape = [height, width, numChannels];\n    if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        pixels = fromPixels2DContext.canvas;\n    }\n    const tempPixelHandle = backend.makeTensorInfo(texShape, 'int32');\n    // This is a byte texture with pixels.\n    backend.texData.get(tempPixelHandle.dataId).usage = TextureUsage.PIXELS;\n    backend.gpgpu.uploadPixelDataToTexture(backend.getTexture(tempPixelHandle.dataId), pixels);\n    const program = env().getBool('WEBGL_PACK') ?\n        new FromPixelsPackedProgram(outShape) :\n        new FromPixelsProgram(outShape);\n    const res = backend.runWebGLProgram(program, [tempPixelHandle], 'int32');\n    backend.disposeData(tempPixelHandle.dataId);\n    return res;\n}\n//# sourceMappingURL=FromPixels.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, FusedConv2D, util } from '@tensorflow/tfjs-core';\nimport { Conv2DProgram } from '../conv_gpu';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nimport { conv2dByMatMul, conv2dWithIm2Row } from './Conv2D_impl';\nimport { reshape } from './Reshape';\nexport function fusedConv2d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    let out;\n    const intermediates = [];\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n        out = conv2dByMatMul({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n    }\n    else if (env().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n        out = conv2dWithIm2Row({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n    }\n    else {\n        const hasBias = bias != null;\n        const hasPreluActivationWeights = preluActivationWeights != null;\n        const hasLeakyreluAlpha = activation === 'leakyrelu';\n        const fusedActivation = activation ? mapActivationToShaderProgram(activation, false) : null;\n        const program = new Conv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n        const inputs = [x, filter];\n        if (bias) {\n            inputs.push(bias);\n        }\n        if (preluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        if (hasLeakyreluAlpha) {\n            const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n            inputs.push($leakyreluAlpha);\n            intermediates.push($leakyreluAlpha);\n        }\n        out = backend.runWebGLProgram(program, inputs, 'float32');\n    }\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    intermediates.push(out);\n    intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return outReshaped;\n}\nexport const fusedConv2DConfig = {\n    kernelName: FusedConv2D,\n    backendName: 'webgl',\n    kernelFunc: fusedConv2d,\n};\n//# sourceMappingURL=FusedConv2D.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, env, FusedDepthwiseConv2D, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nimport { mapActivationToShaderProgram } from '../kernel_utils/kernel_funcs_utils';\nexport function fusedDepthwiseConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const intermediates = [];\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const shouldPackDepthwiseConv = env().getBool('WEBGL_PACK_DEPTHWISECONV') &&\n        convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1;\n    const fusedActivation = activation ?\n        mapActivationToShaderProgram(activation, shouldPackDepthwiseConv) :\n        null;\n    const programInputs = [x, filter];\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    if (hasBias) {\n        programInputs.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        programInputs.push(preluActivationWeights);\n    }\n    if (hasLeakyreluAlpha) {\n        const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', util.createScalarValue(leakyreluAlpha, 'float32'));\n        programInputs.push($leakyreluAlpha);\n        intermediates.push($leakyreluAlpha);\n    }\n    let program;\n    if (shouldPackDepthwiseConv) {\n        program = new DepthwiseConvPacked2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    }\n    else {\n        program = new DepthwiseConv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    }\n    const result = backend.runWebGLProgram(program, programInputs, 'float32');\n    intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const fusedDepthwiseConv2DConfig = {\n    kernelName: FusedDepthwiseConv2D,\n    backendName: 'webgl',\n    kernelFunc: fusedDepthwiseConv2D,\n};\n//# sourceMappingURL=FusedDepthwiseConv2D.js.map","import { getCoordsDataType } from './shader_compiler';\nexport class GatherNDProgram {\n    constructor(sliceDim, strides, shape) {\n        this.sliceDim = sliceDim;\n        this.strides = strides;\n        this.variableNames = ['x', 'indices'];\n        this.outputShape = shape;\n        const stridesType = getCoordsDataType(strides.length);\n        const dtype = getCoordsDataType(shape.length);\n        const strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = `\n        ${stridesType} strides = ${stridesType}(${this.strides});\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${strideString};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `;\n    }\n}\n//# sourceMappingURL=gather_nd_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_gpu';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n    const { inputs, backend } = args;\n    const { params, indices } = inputs;\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numSlices, sliceRank] } });\n    const flattenX = reshape({\n        inputs: { x: params },\n        backend,\n        attrs: { shape: [(util.sizeFromShape(params.shape) / sliceSize), sliceSize] }\n    });\n    const program = new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: resultShape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nexport const gatherNdConfig = {\n    kernelName: GatherNd,\n    backendName: 'webgl',\n    kernelFunc: gatherNd\n};\n//# sourceMappingURL=GatherNd.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class GatherProgram {\n    constructor(aShape, outputShape) {\n        this.variableNames = ['A', 'indices'];\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const sourceCoords = getSourceCoords(aShape, 2);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\n// The input and output are always flattened into rank 4 tensors.\nfunction getSourceCoords(aShape, axis) {\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        if (i === 2) {\n            sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n        }\n        else {\n            sourceCoords.push(`${currentCoords[i]}`);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=gather_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { GatherProgram } from '../gather_gpu';\nimport { gatherV2ImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n    const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const toDispose = [];\n    const flattenX = reshape({\n        inputs: { x },\n        backend,\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        }\n    });\n    const flattenIndex = reshape({\n        inputs: { x: indices },\n        backend,\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] }\n    });\n    toDispose.push(flattenX);\n    toDispose.push(flattenIndex);\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    if (backend.shouldExecuteOnCPU([x, indices]) || x.dtype === 'string') {\n        const indicesBuf = backend.bufferSync(flattenIndex);\n        const xBuf = backend.bufferSync(flattenX);\n        const outBuf = gatherV2ImplCPU(xBuf, indicesBuf, flattenOutputShape);\n        toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n    }\n    const program = new GatherProgram(flattenX.shape, flattenOutputShape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndex], flattenX.dtype);\n    toDispose.push(res);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: shapeInfo.outputShape } });\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return reshaped;\n}\nexport const gatherV2Config = {\n    kernelName: GatherV2,\n    backendName: 'webgl',\n    kernelFunc: gatherV2\n};\n//# sourceMappingURL=GatherV2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Greater } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { greaterImplCPU } from '../kernel_utils/shared';\nconst GREATER = `return float(a > b);`;\nconst GREATER_PACKED = `\n  return vec4(greaterThan(a, b));\n`;\nexport const greater = binaryKernelFunc({\n    opSnippet: GREATER,\n    packedOpSnippet: GREATER_PACKED,\n    cpuKernelImpl: greaterImplCPU,\n    dtype: 'bool'\n});\nexport const greaterConfig = {\n    kernelName: Greater,\n    backendName: 'webgl',\n    kernelFunc: greater\n};\n//# sourceMappingURL=Greater.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GreaterEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst GREATER_EQUAL = `return float(a >= b);`;\nconst GREATER_EQUAL_PACKED = `\n  return vec4(greaterThanEqual(a, b));\n`;\nexport const greaterEqual = binaryKernelFunc({\n    opSnippet: GREATER_EQUAL,\n    packedOpSnippet: GREATER_EQUAL_PACKED,\n    dtype: 'bool'\n});\nexport const greaterEqualConfig = {\n    kernelName: GreaterEqual,\n    backendName: 'webgl',\n    kernelFunc: greaterEqual\n};\n//# sourceMappingURL=GreaterEqual.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IFFT } from '@tensorflow/tfjs-core';\nimport { fftImpl } from './FFT_impl';\nexport function ifft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return fftImpl(input, true /* inverse */, backend);\n}\nexport const ifftConfig = {\n    kernelName: IFFT,\n    backendName: 'webgl',\n    kernelFunc: ifft\n};\n//# sourceMappingURL=IFFT.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsFinite } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst IS_FINITE = `return float(!isnan(x) && !isinf(x));`;\nexport const isFinite = unaryKernelFunc({ opSnippet: IS_FINITE, dtype: 'bool' });\nexport const isFiniteConfig = {\n    kernelName: IsFinite,\n    backendName: 'webgl',\n    kernelFunc: isFinite,\n};\n//# sourceMappingURL=IsFinite.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsInf } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst IS_INF = `return float(isinf(x));`;\nexport const isInf = unaryKernelFunc({ opSnippet: IS_INF, dtype: 'bool' });\nexport const isInfConfig = {\n    kernelName: IsInf,\n    backendName: 'webgl',\n    kernelFunc: isInf,\n};\n//# sourceMappingURL=IsInf.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { IsNan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst IS_NAN = `return float(isnan(x));`;\nexport const isNaN = unaryKernelFunc({ opSnippet: IS_NAN, dtype: 'bool' });\nexport const isNaNConfig = {\n    kernelName: IsNan,\n    backendName: 'webgl',\n    kernelFunc: isNaN,\n};\n//# sourceMappingURL=IsNaN.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Less } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { lessImplCPU } from '../kernel_utils/shared';\nconst LESS = `return float(a < b);`;\nconst LESS_PACKED = `\n  return vec4(lessThan(a, b));\n`;\nexport const less = binaryKernelFunc({\n    opSnippet: LESS,\n    packedOpSnippet: LESS_PACKED,\n    cpuKernelImpl: lessImplCPU,\n    dtype: 'bool'\n});\nexport const lessConfig = {\n    kernelName: Less,\n    backendName: 'webgl',\n    kernelFunc: less\n};\n//# sourceMappingURL=Less.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LessEqual } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nexport const LESS_EQUAL = `return float(a <= b);`;\nexport const LESS_EQUAL_PACKED = `\n  return vec4(lessThanEqual(a, b));\n`;\nexport const lessEqual = binaryKernelFunc({ opSnippet: LESS_EQUAL, packedOpSnippet: LESS_EQUAL_PACKED, dtype: 'bool' });\nexport const lessEqualConfig = {\n    kernelName: LessEqual,\n    backendName: 'webgl',\n    kernelFunc: lessEqual\n};\n//# sourceMappingURL=LessEqual.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nimport { linSpaceImplCPU } from '../kernel_utils/shared';\nexport function linSpace(args) {\n    const { backend, attrs } = args;\n    const { start, stop, num } = attrs;\n    // TODO: Use CPU implementation due to the precision problem in Safari.\n    const outVals = linSpaceImplCPU(start, stop, num);\n    return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\nexport const linSpaceConfig = {\n    kernelName: LinSpace,\n    backendName: 'webgl',\n    kernelFunc: linSpace\n};\n//# sourceMappingURL=LinSpace.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { logImplCPU } from '../kernel_utils/shared';\nconst LOG = `if (x < 0.0) return NAN;\n  return log(x);`;\nconst LOG_PACKED = `\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n`;\nexport const log = unaryKernelFunc({ opSnippet: LOG, packedOpSnippet: LOG_PACKED, cpuKernelImpl: logImplCPU });\nexport const logConfig = {\n    kernelName: Log,\n    backendName: 'webgl',\n    kernelFunc: log\n};\n//# sourceMappingURL=Log.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Log1p } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst LOG1P = `return log(1.0 + x);`;\nexport const log1p = unaryKernelFunc({ opSnippet: LOG1P });\nexport const log1pConfig = {\n    kernelName: Log1p,\n    backendName: 'webgl',\n    kernelFunc: log1p,\n};\n//# sourceMappingURL=Log1p.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalAnd } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst LOGICAL_AND = `return float(a >= 1.0 && b >= 1.0);`;\nconst LOGICAL_AND_PACKED = `\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n`;\nexport const logicalAnd = binaryKernelFunc({\n    opSnippet: LOGICAL_AND,\n    packedOpSnippet: LOGICAL_AND_PACKED,\n    dtype: 'bool'\n});\nexport const logicalAndConfig = {\n    kernelName: LogicalAnd,\n    backendName: 'webgl',\n    kernelFunc: logicalAnd\n};\n//# sourceMappingURL=LogicalAnd.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalNot } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst LOGICAL_NOT = `return float(!(x >= 1.0));`;\nexport const logicalNot = unaryKernelFunc({ opSnippet: LOGICAL_NOT });\nexport const logicalNotConfig = {\n    kernelName: LogicalNot,\n    backendName: 'webgl',\n    kernelFunc: logicalNot,\n};\n//# sourceMappingURL=LogicalNot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogicalOr } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst LOGICAL_OR = `return float(a >= 1.0 || b >= 1.0);`;\nconst LOGICAL_OR_PACKED = `\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n`;\nexport const logicalOr = binaryKernelFunc({ opSnippet: LOGICAL_OR, packedOpSnippet: LOGICAL_OR_PACKED, dtype: 'bool' });\nexport const logicalOrConfig = {\n    kernelName: LogicalOr,\n    backendName: 'webgl',\n    kernelFunc: logicalOr\n};\n//# sourceMappingURL=LogicalOr.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class LRNProgram {\n    constructor(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        const rad = radius;\n        const maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        let powOperator;\n        const basis = `float(${bias}) + float(${alpha}) * sum`;\n        if (beta === 0.5) {\n            powOperator = `inversesqrt(${basis})`;\n        }\n        else if (beta === 1.0) {\n            powOperator = `1.0/(${basis})`;\n        }\n        else {\n            powOperator = `exp(log(${basis}) * float(-${beta}));`;\n        }\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${rad}; j <= ${rad}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${maxD}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${powOperator};\n        setOutput(val);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class LRNPackedProgram {\n    constructor(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const rad = radius;\n        const maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        let powOperator;\n        const basis = `float(${bias}) + float(${alpha}) * sum`;\n        if (beta === 0.5) {\n            powOperator = `inversesqrt(${basis})`;\n        }\n        else if (beta === 1.0) {\n            powOperator = `1.0/(${basis})`;\n        }\n        else {\n            powOperator = `exp(log(${basis}) * float(-${beta}));`;\n        }\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${rad};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${rad}; j <= ${rad}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${maxD}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${powOperator};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, LRN } from '@tensorflow/tfjs-core';\nimport { LRNProgram } from '../lrn_gpu';\nimport { LRNPackedProgram } from '../lrn_packed_gpu';\nexport const lrn = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    const program = env().getBool('WEBGL_PACK_NORMALIZATION') ?\n        new LRNPackedProgram(x.shape, depthRadius, bias, alpha, beta) :\n        new LRNProgram(x.shape, depthRadius, bias, alpha, beta);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n};\n// tslint:disable-next-line: variable-name\nexport const LRNConfig = {\n    kernelName: LRN,\n    backendName: 'webgl',\n    kernelFunc: lrn\n};\n//# sourceMappingURL=LRN.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class LRNGradProgram {\n    constructor(inputShape, depthRadius, bias, alpha, beta) {\n        this.variableNames = ['inputImage', 'outputImage', 'dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        this.depth = inputShape[3];\n        this.depthRadius = depthRadius;\n        this.bias = bias;\n        this.alpha = alpha;\n        this.beta = beta;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${depthRadius})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${depthRadius} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${alpha}) * norm + float(${bias});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${alpha})\n                * float(${beta})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${beta});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_grad_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad } from '@tensorflow/tfjs-core';\nimport { LRNGradProgram } from '../lrn_grad_gpu';\nexport const lrnGrad = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x, y, dy } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    const program = new LRNGradProgram(x.shape, depthRadius, bias, alpha, beta);\n    return backend.runWebGLProgram(program, [x, y, dy], x.dtype);\n};\n// tslint:disable-next-line: variable-name\nexport const LRNGradConfig = {\n    kernelName: LRNGrad,\n    backendName: 'webgl',\n    kernelFunc: lrnGrad\n};\n//# sourceMappingURL=LRNGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Max } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxImplCPU } from '../kernel_utils/shared';\nimport { maxImpl } from './Max_impl';\nimport { transposeImpl, transposeImplCPU } from './Transpose_impl';\nexport function max(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { reductionIndices, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(reductionIndices, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    const maxInputIsTransposed = permutedAxes != null;\n    const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([x]);\n    let maxInput = x;\n    if (maxInputIsTransposed) {\n        if (shouldExecuteOnCPU) {\n            const xTexData = backend.texData.get(maxInput.dataId);\n            const values = xTexData.values;\n            const newShape = new Array(xRank);\n            for (let i = 0; i < newShape.length; i++) {\n                newShape[i] = x.shape[permutedAxes[i]];\n            }\n            const maxInputValues = transposeImplCPU(values, x.shape, x.dtype, permutedAxes, newShape);\n            maxInput = backend.makeTensorInfo(newShape, x.dtype);\n            const maxInputData = backend.texData.get(maxInput.dataId);\n            maxInputData.values = maxInputValues;\n        }\n        else {\n            maxInput = transposeImpl(x, permutedAxes, backend);\n        }\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n    const [maxOutShape, reduceShape] = backend_util.computeOutAndReduceShapes(maxInput.shape, axes);\n    let outShape = maxOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        outShape = backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n    }\n    let out;\n    if (shouldExecuteOnCPU) {\n        const xTexData = backend.texData.get(maxInput.dataId);\n        const values = xTexData.values;\n        const outValues = maxImplCPU(values, util.sizeFromShape(reduceShape), outShape, x.dtype);\n        out = backend.makeTensorInfo(outShape, x.dtype);\n        const outData = backend.texData.get(out.dataId);\n        outData.values = outValues;\n    }\n    else {\n        out = maxImpl(maxInput, reduceShape, outShape, backend);\n    }\n    if (maxInputIsTransposed) {\n        backend.disposeIntermediateTensorInfo(maxInput);\n    }\n    return out;\n}\nexport const maxConfig = {\n    kernelName: Max,\n    backendName: 'webgl',\n    kernelFunc: max\n};\n//# sourceMappingURL=Max.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function maxImpl(x, reduceShape, outShape, backend) {\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape({ inputs: { x }, attrs: { shape: [batchSize, inSize] }, backend });\n    const reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n    const reshapedOutput = reshape({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    return reshapedOutput;\n}\n//# sourceMappingURL=Max_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_gpu';\nimport { CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { maximumImplCPU } from '../kernel_utils/shared';\nconst MAXIMUM = CHECK_NAN_SNIPPET + `\n  return max(a, b);\n`;\nconst MAXIMUM_PACKED = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET_PACKED + `\n  return result;\n`;\nexport const maximum = binaryKernelFunc({\n    opSnippet: MAXIMUM,\n    packedOpSnippet: MAXIMUM_PACKED,\n    cpuKernelImpl: maximumImplCPU\n});\nexport const maximumConfig = {\n    kernelName: Maximum,\n    backendName: 'webgl',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=Maximum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool, util } from '@tensorflow/tfjs-core';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nimport { identity } from './Identity';\nexport function maxPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'maxPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return identity({ inputs: { x }, backend });\n    }\n    const maxPoolProgram = new Pool2DProgram(convInfo, 'max', false);\n    return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nexport const maxPoolConfig = {\n    kernelName: MaxPool,\n    backendName: 'webgl',\n    kernelFunc: maxPool\n};\n//# sourceMappingURL=MaxPool.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D } from '@tensorflow/tfjs-core';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function maxPool3d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const maxPoolProgram = new Pool3DProgram(convInfo, 'max', false);\n    return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nexport const maxPool3DConfig = {\n    kernelName: MaxPool3D,\n    backendName: 'webgl',\n    kernelFunc: maxPool3d\n};\n//# sourceMappingURL=MaxPool3D.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class MaxPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const lastIndex = effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n          wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${lastIndex} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${effectiveFilterWidth} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nexport class MaxPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const lastIndex = effectiveFilterDepth * effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n           wD += ${dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${convInfo.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${lastIndex} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                  wR * ${effectiveFilterWidth} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=max_pool_backprop_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3DGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool3DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool3DProgram } from '../pool_gpu';\nexport function maxPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const maxPool3dPositionsProgram = new Pool3DProgram(convInfo, 'max', true /* get positions */);\n    const maxPool3dPositions = backend.runWebGLProgram(maxPool3dPositionsProgram, [x], x.dtype);\n    const maxPoolBackpropProgram = new MaxPool3DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackpropProgram, [dy, maxPool3dPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPool3dPositions);\n    return result;\n}\nexport const maxPoolGrad3DConfig = {\n    kernelName: MaxPool3DGrad,\n    backendName: 'webgl',\n    kernelFunc: maxPool3DGrad\n};\n//# sourceMappingURL=MaxPool3DGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPoolGrad } from '@tensorflow/tfjs-core';\nimport { MaxPool2DBackpropProgram } from '../max_pool_backprop_gpu';\nimport { Pool2DProgram } from '../pool_gpu';\nimport { assertNotComplex } from '../webgl_util';\nexport function maxPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    assertNotComplex([input, output], 'maxPoolGrad');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const getPositions = true;\n    const maxPoolPositionsProgram = new Pool2DProgram(convInfo, 'max', getPositions);\n    const maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n    const maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPoolPositions);\n    return result;\n}\nexport const maxPoolGradConfig = {\n    kernelName: MaxPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: maxPoolGrad\n};\n//# sourceMappingURL=MaxPoolGrad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MaxPoolWithArgmax } from '@tensorflow/tfjs-core';\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { maxPoolWithArgmaxImpl } from './MaxPoolWithArgmax_impl';\nexport const maxPoolWithArgmaxConfig = {\n    kernelName: MaxPoolWithArgmax,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { filterSize, strides, pad, includeBatchInIndex } = attrs;\n        const webglBackend = backend;\n        util.assert(x.shape.length === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x.shape.length}.`);\n        const dilations = [1, 1];\n        util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n            `Got strides ${strides} and dilations '${dilations}'`);\n        const convInfo = backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n        const [result, indexes] = maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, webglBackend);\n        return [result, indexes];\n    }\n};\n//# sourceMappingURL=MaxPoolWithArgmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pool2DProgram } from '../pool_gpu';\nexport function maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, backend) {\n    let program = new Pool2DProgram(convInfo, 'max', false);\n    const poolOutput = backend.runWebGLProgram(program, [x], 'float32');\n    program = new Pool2DProgram(convInfo, 'max', true, true, includeBatchInIndex);\n    const indexOutput = backend.runWebGLProgram(program, [x], 'float32');\n    return [poolOutput, indexOutput];\n}\n//# sourceMappingURL=MaxPoolWithArgmax_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Mean, util } from '@tensorflow/tfjs-core';\nimport { meanImpl } from './Mean_impl';\nimport { transposeImpl, transposeImplCPU } from './Transpose_impl';\nexport const meanConfig = {\n    kernelName: Mean,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { keepDims, axis } = attrs;\n        const webglBackend = backend;\n        const xRank = x.shape.length;\n        const origAxes = util.parseAxisParam(axis, x.shape);\n        let axes = origAxes;\n        const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n        const meanInputIsTransposed = permutedAxes != null;\n        const shouldExecuteOnCPU = webglBackend.shouldExecuteOnCPU([x]);\n        const intermediates = [];\n        let meanInput = x;\n        if (meanInputIsTransposed) {\n            if (shouldExecuteOnCPU) {\n                const xTexData = webglBackend.texData.get(meanInput.dataId);\n                const values = xTexData.values;\n                const newShape = new Array(xRank);\n                for (let i = 0; i < newShape.length; i++) {\n                    newShape[i] = x.shape[permutedAxes[i]];\n                }\n                const meanInputValues = transposeImplCPU(values, x.shape, x.dtype, permutedAxes, newShape);\n                meanInput = webglBackend.makeTensorInfo(newShape, x.dtype);\n                const meanInputData = webglBackend.texData.get(meanInput.dataId);\n                meanInputData.values = meanInputValues;\n            }\n            else {\n                meanInput = transposeImpl(x, permutedAxes, webglBackend);\n            }\n            intermediates.push(meanInput);\n            axes = backend_util.getInnerMostAxes(axes.length, xRank);\n        }\n        backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n        const [meanOutShape, reduceShape] = backend_util.computeOutAndReduceShapes(meanInput.shape, axes);\n        let outShape = meanOutShape;\n        if (keepDims) {\n            // rather than reshape at the end, set the target shape here.\n            outShape = backend_util.expandShapeToKeepDim(meanOutShape, origAxes);\n        }\n        const out = meanImpl(meanInput, reduceShape, outShape, webglBackend);\n        for (const i of intermediates) {\n            webglBackend.disposeIntermediateTensorInfo(i);\n        }\n        return out;\n    }\n};\n//# sourceMappingURL=Mean.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function meanImpl(x, reduceShape, outShape, backend) {\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape({ inputs: { x }, attrs: { shape: [batchSize, inSize] }, backend });\n    const reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n    const reshapedOutput = reshape({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    return reshapedOutput;\n}\n//# sourceMappingURL=Mean_impl.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function min(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('min', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'min', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const minConfig = {\n    kernelName: Min,\n    backendName: 'webgl',\n    kernelFunc: min\n};\n//# sourceMappingURL=Min.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_gpu';\nimport { CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { minimumImplCPU } from '../kernel_utils/shared';\nconst MINIMUM = CHECK_NAN_SNIPPET + `\n  return min(a, b);\n`;\nconst MINIMUM_PACKED = `\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET_PACKED + `\n  return result;\n`;\nexport const minimum = binaryKernelFunc({\n    opSnippet: MINIMUM,\n    packedOpSnippet: MINIMUM_PACKED,\n    cpuKernelImpl: minimumImplCPU\n});\nexport const minimumConfig = {\n    kernelName: Minimum,\n    backendName: 'webgl',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=Minimum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class MirrorPadProgram {\n    constructor(xShape, paddings, mode) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        const offset = mode === 'reflect' ? 0 : 1;\n        if (rank === 1) {\n            this.userCode = `\n        int start = ${start};\n        int end = ${end};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${offset};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${offset};\n          }\n          setOutput(getX(outC - start));\n        }\n      `;\n            return;\n        }\n        this.userCode = `\n      ${dtype} start = ${dtype}(${start});\n      ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outC = getOutputCoords();\n        for (int i = 0; i < ${rank}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${offset};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${offset};\n          }\n        }\n        ${dtype} coords = outC - start;\n        setOutput(getX(${unpackedCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mirror_pad_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\n/**\n * Example shader code for\n * `mirrorPad(tf.tensor1d([1, 2, 3], 'int32'), [[2, 2]], 'reflect')`\n * ```\n *    const int start = int(2);\n *    const int end = int(5);\n *\n *    void main() {\n *       int outputLoc = getOutputCoords();\n *       vec4 result = vec4(0.);\n *\n *       int rc = outputLoc;\n *\n *       int source = rc;\n *       if (source < start) {\n *         source = start * 2 - source - 0;\n *       } else if (source >= end) {\n *         source = (end - 1) * 2 - source + 0;\n *       }\n *       source -= start;\n *\n *       result[0] = getChannel(getX(source), source);\n *       rc += 1;\n *       if(rc < 6) {\n *          int source = rc;\n *          if (source < start) {\n *            source = start * 2 - source - 0;\n *          } else if (source >= end) {\n *            source = (end - 1) * 2 - source + 0;\n *          }\n *          source -= start;\n *\n *         result[1] = getChannel(getX(source), source);\n *       }\n *\n *       setOutput(result);\n *     }\n * ```\n */\nexport class MirrorPadPackedProgram {\n    constructor(xShape, paddings, mode) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = getChannels('rc', rank);\n        const source = getChannels('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const offset = mode === 'reflect' ? 0 : 1;\n        let mainLoop = '';\n        if (rank === 1) {\n            const padSetup = `\n        ${dtype} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${offset};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${offset};\n        }\n        source -= start;\n      `;\n            mainLoop = `\n        ${dtype} rc = outputLoc;\n        ${padSetup}\n        result[0] = getChannel(getX(${source.join()}), ${innerDims});\n        ${coords[rank - 1]} += 1;\n        if(${cLimit}) {\n          ${padSetup}\n          result[1] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        else {\n            const padSetup = `\n        ${dtype} source = rc;\n        ${dtype} lt = ${dtype}(lessThan(source, start));\n        ${dtype} gte = ${dtype}(greaterThanEqual(source, end));\n        ${dtype} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${offset}) +\n                gte * ((end - 1) * 2 - source + ${offset});\n        source -= start;\n      `;\n            mainLoop = `\n        ${dtype} rc = outputLoc;\n        ${padSetup}\n        result[0] = getChannel(getX(${source.join()}), ${innerDims});\n        ${coords[rank - 1]} += 1;\n        if(${cLimit}) {\n          ${padSetup}\n          result[1] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n        rc = outputLoc;\n        ${coords[rank - 2]} += 1;\n        if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {\n          ${padSetup}\n          result[2] = getChannel(getX(${source.join()}), ${innerDims});\n          ${coords[rank - 1]} += 1;\n          if(${cLimit}) {\n            ${padSetup}\n            result[3] = getChannel(getX(${source.join()}), ${innerDims});\n          }\n        }\n      `;\n        }\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mirror_pad_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport const mirrorPadKernelFunc = ({ inputs, backend, attrs }) => {\n    const { x } = inputs;\n    const { paddings, mode } = attrs;\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new MirrorPadPackedProgram(x.shape, paddings, mode) :\n        new MirrorPadProgram(x.shape, paddings, mode);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n};\nexport const mirrorPadConfig = {\n    kernelName: MirrorPad,\n    backendName: 'webgl',\n    kernelFunc: mirrorPadKernelFunc,\n};\n//# sourceMappingURL=MirrorPad.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst MOD = `if (b == 0.0) return NAN;\n  return mod(a, b);`;\nconst MOD_PACKED = `\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\nexport const mod = binaryKernelFunc({\n    opSnippet: MOD,\n    packedOpSnippet: MOD_PACKED,\n});\nexport const modConfig = {\n    kernelName: Mod,\n    backendName: 'webgl',\n    kernelFunc: mod\n};\n//# sourceMappingURL=Mod.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class MultinomialProgram {\n    constructor(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = `\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${numOutcomes - 1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${numOutcomes - 1}));\n      }\n    `;\n    }\n    getCustomSetupFunc(seed) {\n        return (gpgpu, webGLProgram) => {\n            if (this.seedLoc == null) {\n                this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(this.seedLoc, seed);\n        };\n    }\n}\n//# sourceMappingURL=multinomial_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RealDiv } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\n// Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\nconst DIV = `\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;`;\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\nconst DIV_PACKED = `\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n`;\nexport const realDiv = binaryKernelFunc({ opSnippet: DIV, packedOpSnippet: DIV_PACKED, checkOutOfBounds: true });\nexport const realDivConfig = {\n    kernelName: RealDiv,\n    backendName: 'webgl',\n    kernelFunc: realDiv,\n};\n//# sourceMappingURL=RealDiv.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { subImplCPU as cpuSub } from '../kernel_utils/shared';\nconst SUB = 'return a - b;';\nexport const sub = binaryKernelFunc({\n    opSnippet: SUB,\n    packedOpSnippet: SUB,\n    supportsComplex: true,\n    cpuKernelImpl: cpuSub\n});\nexport const subConfig = {\n    kernelName: Sub,\n    backendName: 'webgl',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { realDiv } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const axes = util.parseAxisParam([dim], logits.shape);\n    const maxLogit = max({\n        inputs: { x: logits },\n        backend,\n        attrs: { reductionIndices: axes, keepDims: false }\n    });\n    const expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n    const maxLogitsReshaped = reshape({ inputs: { x: maxLogit }, backend, attrs: { shape: expandedShape } });\n    const a = sub({ inputs: { a: logits, b: maxLogitsReshaped }, backend });\n    const b = exp({ inputs: { x: a }, backend });\n    const sumExp = sum({ inputs: { x: b }, backend, attrs: { axis: axes, keepDims: false } });\n    const sumExpReshaped = reshape({ inputs: { x: sumExp }, backend, attrs: { shape: expandedShape } });\n    const res = realDiv({ inputs: { a: b, b: sumExpReshaped }, backend });\n    backend.disposeIntermediateTensorInfo(maxLogit);\n    backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n    backend.disposeIntermediateTensorInfo(a);\n    backend.disposeIntermediateTensorInfo(b);\n    backend.disposeIntermediateTensorInfo(sumExp);\n    backend.disposeIntermediateTensorInfo(sumExpReshaped);\n    return res;\n}\nexport const softmaxConfig = {\n    kernelName: Softmax,\n    backendName: 'webgl',\n    kernelFunc: softmax\n};\n//# sourceMappingURL=Softmax.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multinomial } from '@tensorflow/tfjs-core';\nimport { MultinomialProgram } from '../multinomial_gpu';\nimport { softmax } from './Softmax';\nexport function multinomial(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { numSamples, seed, normalized } = attrs;\n    const probs = normalized ?\n        logits :\n        softmax({ inputs: { logits }, backend, attrs: { dim: logits.shape.length - 1 } });\n    const batchSize = probs.shape[0];\n    const numOutcomes = probs.shape[1];\n    const program = new MultinomialProgram(batchSize, numOutcomes, numSamples);\n    const customSetup = program.getCustomSetupFunc(seed);\n    const res = backend.runWebGLProgram(program, [probs], 'int32', customSetup);\n    if (!normalized) {\n        backend.disposeIntermediateTensorInfo(probs);\n    }\n    return res;\n}\nexport const multinomialConfig = {\n    kernelName: Multinomial,\n    backendName: 'webgl',\n    kernelFunc: multinomial\n};\n//# sourceMappingURL=Multinomial.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Neg } from '@tensorflow/tfjs-core';\nimport { negImplCPU } from '../kernel_utils/shared';\nimport { UnaryOpProgram } from '../unaryop_gpu';\nimport { UnaryOpPackedProgram } from '../unaryop_packed_gpu';\nconst NEG = `return -x;`;\n// This doesn't use unaryKernelFunc because negImplCPU is not of type\n// SimpleUnaryKernelImplCPU.\nexport function neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (backend.shouldExecuteOnCPU([x])) {\n        const xData = backend.texData.get(x.dataId);\n        const [outValues, newShape] = negImplCPU(xData.values, x.shape, x.dtype);\n        return backend.makeTensorInfo(newShape, x.dtype, outValues);\n    }\n    let program;\n    if (env().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        program = new UnaryOpPackedProgram(x.shape, NEG);\n    }\n    else {\n        program = new UnaryOpProgram(x.shape, NEG);\n    }\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const negConfig = {\n    kernelName: Neg,\n    backendName: 'webgl',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nexport function nonMaxSuppressionV3(args) {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n    kernelName: NonMaxSuppressionV3,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV3\n};\n//# sourceMappingURL=NonMaxSuppressionV3.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n    ];\n}\nexport const nonMaxSuppressionV4Config = {\n    kernelName: NonMaxSuppressionV4,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV4\n};\n//# sourceMappingURL=NonMaxSuppressionV4.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport function nonMaxSuppressionV5(args) {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class OneHotProgram {\n    constructor(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${offValue}), float(${onValue}),\n                      float(index == coords.y)));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=onehot_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n    const reshaped = reshape({ inputs: { x: indices }, backend, attrs: { shape: [indicesSize] } });\n    const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n    backend.disposeIntermediateTensorInfo(reshaped);\n    const outShape = [...indices.shape, depth];\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(result);\n    return out;\n};\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'webgl',\n    kernelFunc: oneHot\n};\n//# sourceMappingURL=OneHot.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return fill({\n            attrs: {\n                shape: x.shape,\n                dtype: x.dtype,\n                value: x.dtype === 'string' ? '' : 0\n            },\n            backend\n        });\n    }\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'webgl',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OnesLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nimport { zerosLike } from './ZerosLike';\nexport function onesLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('onesLike is not supported under string dtype');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = onesLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        // TODO(cais, smilkov): Add WebGL shader for onesLike:\n        //   https://github.com/tensorflow/tfjs/issues/1293\n        return fill({ attrs: { shape: x.shape, dtype: x.dtype, value: 1 }, backend });\n    }\n}\nexport const onesLikeConfig = {\n    kernelName: OnesLike,\n    backendName: 'webgl',\n    kernelFunc: onesLike\n};\n//# sourceMappingURL=OnesLike.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return expandDims({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = expandDims({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = concat({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const packConfig = {\n    kernelName: Pack,\n    backendName: 'webgl',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class PadProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const type = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        if (rank === 1) {\n            this.userCode = `\n        int start = ${start};\n        int end = ${end};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${constantValue}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `;\n            return;\n        }\n        this.userCode = `\n      ${type} start = ${type}(${start});\n      ${type} end = ${type}(${end});\n\n      void main() {\n        ${type} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${constantValue}));\n        } else {\n          ${type} coords = outC - start;\n          setOutput(getX(${unpackedCoords}));\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PadPackedProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = getChannels('rc', rank);\n        const source = getChannels('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const componentSetup = [\n            `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n            rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n            rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n        ];\n        const paddingArea = rank === 1 ?\n            'rc < start || rc >= end' :\n            'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n        let mainLoop = '';\n        for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n            mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        mainLoop += (rank === 1 ? `} ` : `}}`);\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, PadV2 } from '@tensorflow/tfjs-core';\nimport { PadProgram } from '../pad_gpu';\nimport { PadPackedProgram } from '../pad_packed_gpu';\nexport const padV2 = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { paddings, constantValue } = attrs;\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new PadPackedProgram(x.shape, paddings, constantValue) :\n        new PadProgram(x.shape, paddings, constantValue);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n};\nexport const padV2Config = {\n    kernelName: PadV2,\n    backendName: 'webgl',\n    kernelFunc: padV2\n};\n//# sourceMappingURL=PadV2.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pow } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst POW = `\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n`;\nconst POW_PACKED = `\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\nexport const pow = binaryKernelFunc({ opSnippet: POW, packedOpSnippet: POW_PACKED });\nexport const powConfig = {\n    kernelName: Pow,\n    backendName: 'webgl',\n    kernelFunc: pow\n};\n//# sourceMappingURL=Pow.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Prod, sumOutType, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { prodImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n        toDispose.push(permutedX);\n    }\n    backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n    let res;\n    if (backend.shouldExecuteOnCPU([permutedX])) {\n        const xVals = backend.texData.get(permutedX.dataId).values;\n        const { outVals, outShape, outDtype } = prodImplCPU(permutedX.shape, permutedX.dtype, xVals, axes);\n        res = backend.makeTensorInfo(outShape, outDtype, outVals);\n    }\n    else {\n        const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n        const inSize = util.sizeFromShape(reduceShape);\n        const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n        const outputDType = sumOutType(x.dtype);\n        const reduced = reduce(a2D, outputDType, 'prod', backend);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n        toDispose.push(a2D);\n        toDispose.push(reduced);\n    }\n    if (keepDims) {\n        toDispose.push(res);\n        const newShape = backend_util.expandShapeToKeepDim(res.shape, origAxes);\n        res = reshape({ inputs: { x: res }, backend, attrs: { shape: newShape } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nexport const prodConfig = {\n    kernelName: Prod,\n    backendName: 'webgl',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Range } from '@tensorflow/tfjs-core';\nimport { rangeImplCPU } from '../kernel_utils/shared';\nexport const range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = rangeImplCPU(start, stop, step, dtype);\n    return backend.makeTensorInfo([values.length], dtype, values);\n};\nexport const rangeConfig = {\n    kernelName: Range,\n    backendName: 'webgl',\n    kernelFunc: range\n};\n//# sourceMappingURL=Range.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reciprocal } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst RECIPROCAL = `return 1.0 / x;`;\nexport const reciprocal = unaryKernelFunc({ opSnippet: RECIPROCAL });\nexport const reciprocalConfig = {\n    kernelName: Reciprocal,\n    backendName: 'webgl',\n    kernelFunc: reciprocal,\n};\n//# sourceMappingURL=Reciprocal.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nconst RELU_PACKED = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const relu = unaryKernelFunc({ opSnippet: RELU, packedOpSnippet: RELU_PACKED });\nexport const reluConfig = {\n    kernelName: Relu,\n    backendName: 'webgl',\n    kernelFunc: relu\n};\n//# sourceMappingURL=Relu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Relu6 } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { CHECK_NAN_SNIPPET } from '../unaryop_gpu';\nconst RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nconst RELU6_PACKED = `\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nexport const relu6 = unaryKernelFunc({ opSnippet: RELU6, packedOpSnippet: RELU6_PACKED });\nexport const relu6Config = {\n    kernelName: Relu6,\n    backendName: 'webgl',\n    kernelFunc: relu6\n};\n//# sourceMappingURL=Relu6.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ResizeBilinearProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC =\n                `(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC` +\n                    ` - vec2(0.5)`;\n        }\n        else {\n            sourceFracIndexRC = `vec2(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ResizeBilinearPackedProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC = `(vec3(yRC) + vec3(0.5)) * ` +\n                `effectiveInputOverOutputRatioRC - vec3(0.5)`;\n        }\n        else {\n            sourceFracIndexRC = `vec3(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec3 inputShapeRC = vec3(${oldHeight}.0, ${oldWidth}.0,\n                                     ${oldWidth}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${depth - 1};\n        bool hasNextRow = coords.z < ${newWidth - 1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, ResizeBilinear } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearProgram } from '../resize_bilinear_gpu';\nimport { ResizeBilinearPackedProgram } from '../resize_bilinear_packed_gpu';\nexport function resizeBilinear(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = env().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n        new ResizeBilinearPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) :\n        new ResizeBilinearProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], 'float32');\n}\nexport const resizeBilinearConfig = {\n    kernelName: ResizeBilinear,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=ResizeBilinear.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ResizeBilinearBackpropProgram {\n    constructor(dyShape, inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        const [, xHeight, xWidth,] = inputShape;\n        const [, yHeight, yWidth] = dyShape;\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        const effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        const effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        const heightScale = effectiveXSize[0] / effectiveYSize[0];\n        const widthScale = effectiveXSize[1] / effectiveYSize[1];\n        const invHeightScale = 1 / heightScale;\n        const invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${xHeight - 1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${xWidth - 1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_backprop_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeBilinearGrad } from '@tensorflow/tfjs-core';\nimport { ResizeBilinearBackpropProgram } from '../resize_bilinear_backprop_gpu';\nexport function resizeBilinearGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new ResizeBilinearBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport const resizeBilinearGradConfig = {\n    kernelName: ResizeBilinearGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinearGrad\n};\n//# sourceMappingURL=ResizeBilinearGrad.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ResizeNearestNeighborProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        // When align corners is false, we rounds the value with floor.\n        const roundBase = alignCorners ? '0.5' : '0.0';\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC =\n                `max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC` +\n                    `, vec2(0.0))`;\n        }\n        else {\n            sourceFracIndexRC = `vec2(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${roundBase})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_nearest_neighbor_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighbor } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeighborProgram } from '../resize_nearest_neighbor_gpu';\nexport function resizeNearestNeighbor(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = new ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], images.dtype);\n}\nexport const resizeNearestNeighborConfig = {\n    kernelName: ResizeNearestNeighbor,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighbor\n};\n//# sourceMappingURL=ResizeNearestNeighbor.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ResizeNearestNeigborBackpropProgram {\n    constructor(dyShape, inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        const [, xHeight, xWidth,] = inputShape;\n        const [, yHeight, yWidth] = dyShape;\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        const effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        const effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        const heightScale = effectiveXSize[0] / effectiveYSize[0];\n        const widthScale = effectiveXSize[1] / effectiveYSize[1];\n        const invHeightScale = 1 / heightScale;\n        const invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${effectiveXSize[0]}) *\n                (float(dyR) / float(${effectiveYSize[0]}));\n\n            float sourceFracCol =\n                float(${effectiveXSize[1]}) *\n                  (float(dyC) / float(${effectiveYSize[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${xHeight}) - 1),\n                ${alignCorners} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${xWidth}) - 1),\n                ${alignCorners} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_nearest_neighbor_backprop_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ResizeNearestNeighborGrad } from '@tensorflow/tfjs-core';\nimport { ResizeNearestNeigborBackpropProgram } from '../resize_nearest_neighbor_backprop_gpu';\nexport function resizeNearestNeighborGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new ResizeNearestNeigborBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nexport const resizeNearestNeighborGradConfig = {\n    kernelName: ResizeNearestNeighborGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighborGrad\n};\n//# sourceMappingURL=ResizeNearestNeighborGrad.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReverseProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n            return;\n        }\n        const getInCoord = (i) => {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - coords[${i}] - 1`;\n            }\n            return `coords[${i}]`;\n        };\n        const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n        const type = getCoordsDataType(rank);\n        this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=reverse_gpu.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReversePackedProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        const channels = getChannels('rc', rank);\n        const nextColumn = `${channels[rank - 1]} + 1 < ${this.outputShape[rank - 1]}`;\n        const nextRow = `${channels[rank - 2]} + 1 < ${this.outputShape[rank - 2]}`;\n        const type = getCoordsDataType(rank);\n        if (rank === 1) {\n            this.userCode = `\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${xShape[0]} - rc - 1),\n            ${xShape[0]} - rc - 1);\n          if(${nextColumn}){\n              result.g = getChannel(getX(${xShape[0]} - (rc  + 1) - 1),\n                ${xShape[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `;\n        }\n        else {\n            this.userCode = `\n        void main() {\n          ${type} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${getR(channels.slice())};\n          if(${nextColumn}){\n            result.g = ${getG(channels.slice())};\n          }\n          if(${nextRow}) {\n            result.b = ${getB(channels.slice())};\n            if(${nextColumn}) {\n              result.a = ${getA(channels.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `;\n        }\n        function getR(channels) {\n            return getChannel(channels);\n        }\n        function getG(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getB(channels) {\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getA(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getChannel(channels) {\n            const inCoordsArray = xShape.map((_, i) => getInCoord(i, channels));\n            const inCoords = inCoordsArray.join(',');\n            const innerDims = inCoordsArray.slice(-2).join(',');\n            return `getChannel(getX(${inCoords}), vec2(${innerDims}))`;\n        }\n        function getInCoord(i, channels1) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - ${channels1[i]} - 1`;\n            }\n            else {\n                return `${channels1[i]}`;\n            }\n        }\n    }\n}\n//# sourceMappingURL=reverse_packed_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, Reverse, util } from '@tensorflow/tfjs-core';\nimport { ReverseProgram } from '../reverse_gpu';\nimport { ReversePackedProgram } from '../reverse_packed_gpu';\nimport { identity } from './Identity';\nexport function reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    const xRank = x.shape.length;\n    const $dims = util.parseAxisParam(dims, x.shape);\n    if (xRank === 0) {\n        return identity({ inputs: { x }, backend });\n    }\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new ReversePackedProgram(x.shape, $dims) :\n        new ReverseProgram(x.shape, $dims);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const reverseConfig = {\n    kernelName: Reverse,\n    backendName: 'webgl',\n    kernelFunc: reverse\n};\n//# sourceMappingURL=Reverse.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util } from '@tensorflow/tfjs-core';\nexport class RotateProgram {\n    constructor(imageShape, radians, fillValue, center) {\n        this.variableNames = ['Image'];\n        this.outputShape = [];\n        const imageHeight = imageShape[1];\n        const imageWidth = imageShape[2];\n        const sinFactor = Math.sin(radians).toFixed(3);\n        const cosFactor = Math.cos(radians).toFixed(3);\n        this.outputShape = imageShape;\n        const [centerX, centerY] = backend_util.getImageCenter(center, imageHeight, imageWidth);\n        const centerXString = centerX.toFixed(3);\n        const centerYString = centerY.toFixed(3);\n        let fillSnippet = '';\n        if (typeof fillValue === 'number') {\n            fillSnippet = `float outputValue = ${fillValue.toFixed(2)};`;\n        }\n        else {\n            fillSnippet = `\n        vec3 fill = vec3(${fillValue.join(',')});\n        float outputValue = fill[coords[3]];`;\n        }\n        this.userCode = `\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${centerXString}) * ${cosFactor} - (float(y) - ${centerYString}) * ${sinFactor};\n          float coordYFloat = (float(x) - ${centerXString}) * ${sinFactor} + (float(y) - ${centerYString}) * ${cosFactor};\n          int coordX = int(round(coordXFloat + ${centerXString}));\n          int coordY = int(round(coordYFloat + ${centerYString}));\n          ${fillSnippet}\n          if(coordX >= 0 && coordX < ${imageWidth} && coordY >= 0 && coordY < ${imageHeight}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `;\n    }\n}\n//# sourceMappingURL=rotate_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { RotateWithOffset } from '@tensorflow/tfjs-core';\nimport { RotateProgram } from '../rotate_gpu';\nexport const rotateWithOffsetConfig = {\n    kernelName: RotateWithOffset,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const { radians, fillValue, center } = attrs;\n        const webglBackend = backend;\n        const program = new RotateProgram(image.shape, radians, fillValue, center);\n        const output = webglBackend.runWebGLProgram(program, [image], image.dtype);\n        return output;\n    }\n};\n//# sourceMappingURL=RotateWithOffset.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Round } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst ROUND = `\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n`;\nexport const round = unaryKernelFunc({ opSnippet: ROUND });\nexport const roundConfig = {\n    kernelName: Round,\n    backendName: 'webgl',\n    kernelFunc: round,\n};\n//# sourceMappingURL=Round.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Rsqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { rsqrtImplCPU } from '../kernel_utils/shared';\nconst RSQRT = `return inversesqrt(x);`;\nexport const rsqrt = unaryKernelFunc({ opSnippet: RSQRT, cpuKernelImpl: rsqrtImplCPU });\nexport const rsqrtConfig = {\n    kernelName: Rsqrt,\n    backendName: 'webgl',\n    kernelFunc: rsqrt\n};\n//# sourceMappingURL=Rsqrt.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ScatterProgram {\n    constructor(updateSize, sliceDim, indicesRank, updatesRank, strides, shape, summingDupeIndex = true) {\n        this.variableNames = ['updates', 'indices', 'defaultValue'];\n        this.outputShape = shape;\n        const stridesType = getCoordsDataType(strides.length);\n        const dtype = getCoordsDataType(shape.length);\n        let indicesString = '';\n        if (indicesRank === 1) {\n            indicesString = 'i';\n        }\n        else if (indicesRank === 2) {\n            indicesString = 'i, j';\n        }\n        const indicesSnippet = `getIndices(${indicesString})`;\n        let updatesString = '';\n        if (updatesRank === 1) {\n            updatesString = 'i';\n        }\n        else if (updatesRank === 2) {\n            updatesString = 'i, coords[1]';\n        }\n        const updatesSnippet = `getUpdates(${updatesString})`;\n        const strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = `\n        ${stridesType} strides = ${stridesType}(${strides});\n\n        void main() {\n          ${dtype} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${updateSize}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${sliceDim}; j++) {\n              int index = round(${indicesSnippet});\n              flattenedIndex += index * ${strideString};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${updatesSnippet};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `;\n    }\n}\n//# sourceMappingURL=scatter_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, ScatterNd } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function scatterNd(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(updates, indices, shape);\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    if (outputSize === 0) {\n        return backend.makeTensorInfo(shape, indices.dtype);\n    }\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numUpdates, sliceRank] } });\n    const flattenX = reshape({ inputs: { x: updates }, backend, attrs: { shape: [numUpdates, sliceSize] } });\n    const defaultValue = backend.makeTensorInfo([], 'float32', new Float32Array([0])); // scalar(0)\n    const program = new ScatterProgram(numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices, defaultValue], flattenX.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    backend.disposeIntermediateTensorInfo(defaultValue);\n    return reshaped;\n}\nexport const scatterNdConfig = {\n    kernelName: ScatterNd,\n    backendName: 'webgl',\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=ScatterNd.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class SelectProgram {\n    constructor(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.outputShape = shape;\n        let cCoords;\n        let abCoords;\n        if (rank > 4) {\n            throw Error(`Where for rank ${rank} is not yet supported`);\n        }\n        if (rank === 1) {\n            abCoords = `resRC`;\n            cCoords = `resRC`;\n        }\n        else {\n            const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            const cCoordVars = [];\n            const abCoordVars = [];\n            for (let i = 0; i < shape.length; i++) {\n                abCoordVars.push(`${currentCoords[i]}`);\n                if (i < cRank) {\n                    cCoordVars.push(`${currentCoords[i]}`);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        const dtype = getCoordsDataType(rank);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        float cVal = getC(${cCoords});\n        if (cVal >= 1.0) {\n          setOutput(getA(${abCoords}));\n        } else {\n          setOutput(getB(${abCoords}));\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=select_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select, upcastType } from '@tensorflow/tfjs-core';\nimport { SelectProgram } from '../select_gpu';\nexport function select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const program = new SelectProgram(condition.shape.length, t.shape, t.shape.length);\n    return backend.runWebGLProgram(program, [condition, t, e], upcastType(t.dtype, e.dtype));\n}\nexport const selectConfig = {\n    kernelName: Select,\n    backendName: 'webgl',\n    kernelFunc: select\n};\n//# sourceMappingURL=Select.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SELU = `\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${backend_util.SELU_SCALEALPHA};\n  float scale = ${backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;\nexport const selu = unaryKernelFunc({ opSnippet: SELU });\nexport const seluConfig = {\n    kernelName: Selu,\n    backendName: 'webgl',\n    kernelFunc: selu,\n};\n//# sourceMappingURL=Selu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * x));`;\nexport const sigmoid = unaryKernelFunc({ opSnippet: SIGMOID });\nexport const sigmoidConfig = {\n    kernelName: Sigmoid,\n    backendName: 'webgl',\n    kernelFunc: sigmoid,\n};\n//# sourceMappingURL=Sigmoid.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sign } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\n// Sign does not propagate NANs.\nconst SIGN = `\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n`;\nexport const sign = unaryKernelFunc({ opSnippet: SIGN });\nexport const signConfig = {\n    kernelName: Sign,\n    backendName: 'webgl',\n    kernelFunc: sign,\n};\n//# sourceMappingURL=Sign.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sin } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET_UNARY, unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SIN = CHECK_NAN_SNIPPET_UNARY + `\n  return sin(x);\n`;\nexport const sin = unaryKernelFunc({ opSnippet: SIN });\nexport const sinConfig = {\n    kernelName: Sin,\n    backendName: 'webgl',\n    kernelFunc: sin,\n};\n//# sourceMappingURL=Sin.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sinh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SINH = `\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n`;\nexport const sinh = unaryKernelFunc({ opSnippet: SINH });\nexport const sinhConfig = {\n    kernelName: Sinh,\n    backendName: 'webgl',\n    kernelFunc: sinh,\n};\n//# sourceMappingURL=Sinh.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softplus } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SOFTPLUS = `\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n`;\nexport const softplus = unaryKernelFunc({ opSnippet: SOFTPLUS });\nexport const softplusConfig = {\n    kernelName: Softplus,\n    backendName: 'webgl',\n    kernelFunc: softplus,\n};\n//# sourceMappingURL=Softplus.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport const spaceToBatchND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const toDispose = [];\n    const paddedX = padV2({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapedPaddedX = reshape({ inputs: { x: paddedX }, backend, attrs: { shape: reshapedPaddedShape } });\n    const paddedXT = transpose({\n        inputs: { x: reshapedPaddedX },\n        backend,\n        attrs: { perm: permutedReshapedPaddedPermutation }\n    });\n    const result = reshape({ inputs: { x: paddedXT }, backend, attrs: { shape: flattenShape } });\n    toDispose.push(paddedX);\n    toDispose.push(reshapedPaddedX);\n    toDispose.push(paddedXT);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n};\nexport const spaceToBatchNDConfig = {\n    kernelName: SpaceToBatchND,\n    backendName: 'webgl',\n    kernelFunc: spaceToBatchND\n};\n//# sourceMappingURL=SpaceToBatchND.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { ScatterProgram } from '../scatter_gpu';\nimport { reshape } from './Reshape';\nexport function sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, strides, outputSize } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    const program = new ScatterProgram(numUpdates, sliceRank, sparseIndices.shape.length, sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n    const res = backend.runWebGLProgram(program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: outputShape } });\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nexport const sparseToDenseConfig = {\n    kernelName: SparseToDense,\n    backendName: 'webgl',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=SparseToDense.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const xRank = x.shape.length;\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = slice({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'webgl',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sqrt } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQRT = `return sqrt(x);`;\nexport const sqrt = unaryKernelFunc({ opSnippet: SQRT });\nexport const sqrtConfig = {\n    kernelName: Sqrt,\n    backendName: 'webgl',\n    kernelFunc: sqrt\n};\n//# sourceMappingURL=Sqrt.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQUARE = `return x * x;`;\nexport const square = unaryKernelFunc({ opSnippet: SQUARE });\nexport const squareConfig = {\n    kernelName: Square,\n    backendName: 'webgl',\n    kernelFunc: square,\n};\n//# sourceMappingURL=Square.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SquaredDifference } from '@tensorflow/tfjs-core';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nexport const squaredDifference = binaryKernelFunc({ opSnippet: SQUARED_DIFFERENCE, packedOpSnippet: SQUARED_DIFFERENCE });\nexport const squaredDifferenceConfig = {\n    kernelName: SquaredDifference,\n    backendName: 'webgl',\n    kernelFunc: squaredDifference,\n};\n//# sourceMappingURL=SquaredDifference.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step({ inputs, attrs, backend }) {\n    const { x } = inputs;\n    const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n    const program = new UnaryOpProgram(x.shape, opSnippet);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const stepConfig = {\n    kernelName: Step,\n    backendName: 'webgl',\n    kernelFunc: step,\n};\n//# sourceMappingURL=Step.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class StridedSliceProgram {\n    constructor(begin, strides, size) {\n        this.variableNames = ['x'];\n        this.outputShape = size;\n        const rank = size.length;\n        const inputDtype = getCoordsDataType(size.length);\n        const dtype = getCoordsDataType(size.length);\n        let newCoords = '';\n        if (rank === 1) {\n            newCoords = 'coords * strides + begin';\n        }\n        else {\n            let outputAxis = 0;\n            newCoords =\n                size.map((_, i) => {\n                    outputAxis++;\n                    return size.length === 1 ?\n                        `coords * strides[${i}] + begin[${i}]` :\n                        `coords[${outputAxis - 1}] * strides[${i}] + begin[${i}]`;\n                })\n                    .join(',');\n        }\n        this.userCode = `\n      ${inputDtype} begin = ${inputDtype}(${begin});\n      ${inputDtype} strides = ${inputDtype}(${strides});\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        setOutput(getX(${newCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=strided_slice_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, slice_util, StridedSlice } from '@tensorflow/tfjs-core';\nimport { stridedSliceImplCPU } from '../kernel_utils/shared';\nimport { StridedSliceProgram } from '../strided_slice_gpu';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function stridedSlice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    const { nonStrided, $begin, $strides, size, newShape, outShape } = slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    const $x = reshape({ inputs: { x }, backend, attrs: { shape: newShape } });\n    let result;\n    if (nonStrided) {\n        const sliced = slice({ inputs: { x: $x }, backend, attrs: { begin: $begin, size } });\n        result = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(sliced);\n    }\n    else if (outShape.some(axis => axis === 0)) {\n        result = backend.makeTensorInfo(outShape, x.dtype, []);\n    }\n    else {\n        const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([$x]);\n        if (shouldExecuteOnCPU) {\n            const xTexData = backend.texData.get($x.dataId);\n            const values = xTexData.values;\n            const xBuf = buffer($x.shape, $x.dtype, values);\n            const resultValues = stridedSliceImplCPU(outShape, xBuf, $strides, $begin);\n            result = backend.makeTensorInfo(outShape, $x.dtype, resultValues.values);\n        }\n        else {\n            const program = new StridedSliceProgram($begin, $strides, outShape);\n            result = backend.runWebGLProgram(program, [$x], $x.dtype);\n        }\n    }\n    const resultReshaped = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo($x);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nexport const stridedSliceConfig = {\n    kernelName: StridedSlice,\n    backendName: 'webgl',\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=StridedSlice.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tan } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst TAN = `return tan(x);`;\nexport const tan = unaryKernelFunc({ opSnippet: TAN });\nexport const tanConfig = {\n    kernelName: Tan,\n    backendName: 'webgl',\n    kernelFunc: tan,\n};\n//# sourceMappingURL=Tan.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tanh } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nconst TANH = `\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n`;\nexport const tanh = unaryKernelFunc({ opSnippet: TANH });\nexport const tanhConfig = {\n    kernelName: Tanh,\n    backendName: 'webgl',\n    kernelFunc: tanh,\n};\n//# sourceMappingURL=Tanh.js.map","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class TileProgram {\n    constructor(aShape, reps) {\n        this.variableNames = ['A'];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const sourceCoords = getSourceCoords(aShape);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\nfunction getSourceCoords(aShape) {\n    const rank = aShape.length;\n    if (rank > 5) {\n        throw Error(`Tile for rank ${rank} is not yet supported`);\n    }\n    if (rank === 1) {\n        return `imod(resRC, ${aShape[0]})`;\n    }\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        sourceCoords.push(`imod(${currentCoords[i]}, ${aShape[i]})`);\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=tile_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer, Tile, util } from '@tensorflow/tfjs-core';\nimport { tileImplCPU } from '../kernel_utils/shared';\nimport { TileProgram } from '../tile_gpu';\nexport function tile(params) {\n    const { inputs, backend, attrs } = params;\n    const { x } = inputs;\n    const { reps } = attrs;\n    if (x.dtype === 'string') {\n        // Even thought string tensor is always on CPU, just to be consistent on how\n        // to access tensor data.\n        const data = backend.readSync(x.dataId);\n        const decodedData = data.map(d => util.decodeString(d));\n        const buf = buffer(x.shape, x.dtype, decodedData);\n        const outBuf = tileImplCPU(buf, reps);\n        return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n    }\n    const program = new TileProgram(x.shape, reps);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n}\nexport const tileConfig = {\n    kernelName: Tile,\n    backendName: 'webgl',\n    kernelFunc: tile,\n};\n//# sourceMappingURL=Tile.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TopK } from '@tensorflow/tfjs-core';\nimport { topKImplCPU } from '../kernel_utils/shared';\nexport function topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    const xVals = backend.readSync(x.dataId);\n    const [allTopKVals, allTopKIndices] = topKImplCPU(xVals, x.shape, x.dtype, k, sorted);\n    return [\n        backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n        backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n    ];\n}\nexport const topKConfig = {\n    kernelName: TopK,\n    backendName: 'webgl',\n    kernelFunc: topK\n};\n//# sourceMappingURL=TopK.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n    const { inputs, attrs, backend } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    assertNotComplex(x, 'unique');\n    // For now, always forward calculation to the CPU backend.\n    console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n    const values = backend.readSync(x.dataId);\n    const { outputValues, outputShape, indices } = uniqueImplCPU(values, axis, x.shape, x.dtype);\n    return [\n        backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n        backend.makeTensorInfo([indices.length], 'int32', indices),\n    ];\n}\nexport const uniqueConfig = {\n    kernelName: Unique,\n    backendName: 'webgl',\n    kernelFunc: unique,\n};\n//# sourceMappingURL=Unique.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const x = value;\n    const xRank = x.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(xRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < xRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const toDispose = [];\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const sliced = slice({ inputs: { x }, backend, attrs: { begin, size } });\n        const reshaped = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        res[i] = reshaped;\n        toDispose.push(sliced);\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'webgl',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=Unpack.js.map","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class SegmentOpProgram {\n    constructor(segOpInfo, segOpType) {\n        this.variableNames = ['x', 'segmentIds'];\n        const windowSize = segOpInfo.windowSize;\n        const batchSize = segOpInfo.batchSize;\n        const inSize = segOpInfo.inSize;\n        const numSegments = segOpInfo.numSegments;\n        const outSize = numSegments * Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        const initializationValue = '0.0';\n        const returnValue = `sumValue`;\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        const updateSnippet = `\n        sumValue += dot(values, segFilter);\n    `;\n        let checkValueOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkValueOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n        }\n        let checkSegmentIdOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkSegmentIdOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return -1.0;\n        }\n      `;\n        }\n        this.userCode = `\n      const float initializationValue = ${initializationValue};\n\n      float getValue(int batch, int inIdx) {\n        ${checkValueOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${checkSegmentIdOutOfBounds}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${numSegments})) * float(${windowSize}));\n        int currentSeg = int(mod(float(outIdx), float(${numSegments})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\n//# sourceMappingURL=segment_gpu.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, sumOutType, UnsortedSegmentSum, util } from '@tensorflow/tfjs-core';\nimport { SegmentOpProgram } from '../segment_gpu';\nimport { range } from './Range';\nimport { reshape } from './Reshape';\nimport { tile } from './Tile';\nimport { transpose } from './Transpose';\nexport function unsortedSegmentSum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, segmentIds } = inputs;\n    const { numSegments } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    let axis = 0;\n    const permutation = backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutation } });\n        toDispose.push(permutedX);\n        axis = backend_util.getInnerMostAxes(1, xRank)[0];\n    }\n    const outShape = backend_util.segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n    const inSize = util.sizeFromShape([permutedX.shape[axis]]);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    toDispose.push(a2D);\n    const outputDType = sumOutType(x.dtype);\n    const segOpCompute = (x, segOpType, segmentIds, dtype, numSegments) => {\n        const batchSize = x.shape[0];\n        const inSize = x.shape[1];\n        const windowSize = backend_util.segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n        const segOpInfo = { windowSize, inSize, batchSize, numSegments };\n        const program = new SegmentOpProgram(segOpInfo, segOpType);\n        const output = backend.compileAndRun(program, [x, segmentIds], dtype);\n        toDispose.push(output);\n        // No need to run another GPGPU program.\n        if (output.shape[1] === numSegments) {\n            return output;\n        }\n        const rangeInfo = range({\n            backend,\n            attrs: { start: 0, stop: numSegments, step: 1, dtype: 'float32' }\n        });\n        const tileInfo = tile({\n            inputs: { x: rangeInfo },\n            backend,\n            attrs: { reps: [inSize / windowSize] }\n        });\n        toDispose.push(rangeInfo);\n        toDispose.push(tileInfo);\n        const result = segOpCompute(output, segOpType, tileInfo, dtype, numSegments);\n        return result;\n    };\n    const segOpResult = segOpCompute(a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments);\n    const reshaped = reshape({ inputs: { x: segOpResult }, backend, attrs: { shape: outShape } });\n    let result = reshaped;\n    if (permutation != null) {\n        toDispose.push(reshaped);\n        const perm = backend_util.getUndoAxesPermutation(permutation);\n        result = transpose({ inputs: { x: result }, backend, attrs: { perm } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const unsortedSegmentSumConfig = {\n    kernelName: UnsortedSegmentSum,\n    backendName: 'webgl',\n    kernelFunc: unsortedSegmentSum\n};\n//# sourceMappingURL=UnsortedSegmentSum.js.map","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { registerKernel } from '@tensorflow/tfjs-core';\nimport { _fusedMatMulConfig } from './kernels/_FusedMatMul';\nimport { absConfig } from './kernels/Abs';\nimport { acosConfig } from './kernels/Acos';\nimport { acoshConfig } from './kernels/Acosh';\nimport { addConfig } from './kernels/Add';\nimport { addNConfig } from './kernels/AddN';\nimport { allConfig } from './kernels/All';\nimport { anyConfig } from './kernels/Any';\nimport { argMaxConfig } from './kernels/ArgMax';\nimport { argMinConfig } from './kernels/ArgMin';\nimport { asinConfig } from './kernels/Asin';\nimport { asinhConfig } from './kernels/Asinh';\nimport { atanConfig } from './kernels/Atan';\nimport { atan2Config } from './kernels/Atan2';\nimport { atanhConfig } from './kernels/Atanh';\nimport { avgPoolConfig } from './kernels/AvgPool';\nimport { avgPool3DConfig } from './kernels/AvgPool3D';\nimport { avgPoolGrad3DConfig } from './kernels/AvgPool3DGrad';\nimport { avgPoolGradConfig } from './kernels/AvgPoolGrad';\nimport { batchMatMulConfig } from './kernels/BatchMatMul';\nimport { batchNormConfig } from './kernels/BatchNorm';\nimport { batchToSpaceNDConfig } from './kernels/BatchToSpaceND';\nimport { bincountConfig } from './kernels/Bincount';\nimport { castConfig } from './kernels/Cast';\nimport { ceilConfig } from './kernels/Ceil';\nimport { clipByValueConfig } from './kernels/ClipByValue';\nimport { complexConfig } from './kernels/Complex';\nimport { complexAbsConfig } from './kernels/ComplexAbs';\nimport { concatConfig } from './kernels/Concat';\nimport { conv2DConfig } from './kernels/Conv2D';\nimport { conv2DBackpropFilterConfig } from './kernels/Conv2DBackpropFilter';\nimport { conv2DBackpropInputConfig } from './kernels/Conv2DBackpropInput';\nimport { conv3DConfig } from './kernels/Conv3D';\nimport { conv3DBackpropFilterV2Config } from './kernels/Conv3DBackpropFilterV2';\nimport { conv3DBackpropInputConfig } from './kernels/Conv3DBackpropInputV2';\nimport { cosConfig } from './kernels/Cos';\nimport { coshConfig } from './kernels/Cosh';\nimport { cropAndResizeConfig } from './kernels/CropAndResize';\nimport { cumsumConfig } from './kernels/Cumsum';\nimport { denseBincountConfig } from './kernels/DenseBincount';\nimport { depthToSpaceConfig } from './kernels/DepthToSpace';\nimport { depthwiseConv2dNativeConfig } from './kernels/DepthwiseConv2dNative';\nimport { depthwiseConv2dNativeBackpropFilterConfig } from './kernels/DepthwiseConv2dNativeBackpropFilter';\nimport { depthwiseConv2dNativeBackpropInputConfig } from './kernels/DepthwiseConv2dNativeBackpropInput';\nimport { diagConfig } from './kernels/Diag';\nimport { dilation2DConfig } from './kernels/Dilation2D';\nimport { eluConfig } from './kernels/Elu';\nimport { eluGradConfig } from './kernels/EluGrad';\nimport { equalConfig } from './kernels/Equal';\nimport { erfConfig } from './kernels/Erf';\nimport { expConfig } from './kernels/Exp';\nimport { expandDimsConfig } from './kernels/ExpandDims';\nimport { expm1Config } from './kernels/Expm1';\nimport { fftConfig } from './kernels/FFT';\nimport { fillConfig } from './kernels/Fill';\nimport { flipLeftRightConfig } from './kernels/FlipLeftRight';\nimport { floorConfig } from './kernels/Floor';\nimport { floorDivConfig } from './kernels/FloorDiv';\nimport { fromPixelsConfig } from './kernels/FromPixels';\nimport { fusedConv2DConfig } from './kernels/FusedConv2D';\nimport { fusedDepthwiseConv2DConfig } from './kernels/FusedDepthwiseConv2D';\nimport { gatherNdConfig } from './kernels/GatherNd';\nimport { gatherV2Config } from './kernels/GatherV2';\nimport { greaterConfig } from './kernels/Greater';\nimport { greaterEqualConfig } from './kernels/GreaterEqual';\nimport { identityConfig } from './kernels/Identity';\nimport { ifftConfig } from './kernels/IFFT';\nimport { imagConfig } from './kernels/Imag';\nimport { isFiniteConfig } from './kernels/IsFinite';\nimport { isInfConfig } from './kernels/IsInf';\nimport { isNaNConfig } from './kernels/IsNaN';\nimport { leakyReluConfig } from './kernels/LeakyRelu';\nimport { lessConfig } from './kernels/Less';\nimport { lessEqualConfig } from './kernels/LessEqual';\nimport { linSpaceConfig } from './kernels/LinSpace';\nimport { logConfig } from './kernels/Log';\nimport { log1pConfig } from './kernels/Log1p';\nimport { logicalAndConfig } from './kernels/LogicalAnd';\nimport { logicalNotConfig } from './kernels/LogicalNot';\nimport { logicalOrConfig } from './kernels/LogicalOr';\nimport { LRNConfig } from './kernels/LRN';\nimport { LRNGradConfig } from './kernels/LRNGrad';\nimport { maxConfig } from './kernels/Max';\nimport { maximumConfig } from './kernels/Maximum';\nimport { maxPoolConfig } from './kernels/MaxPool';\nimport { maxPool3DConfig } from './kernels/MaxPool3D';\nimport { maxPoolGrad3DConfig } from './kernels/MaxPool3DGrad';\nimport { maxPoolGradConfig } from './kernels/MaxPoolGrad';\nimport { maxPoolWithArgmaxConfig } from './kernels/MaxPoolWithArgmax';\nimport { meanConfig } from './kernels/Mean';\nimport { minConfig } from './kernels/Min';\nimport { minimumConfig } from './kernels/Minimum';\nimport { mirrorPadConfig } from './kernels/MirrorPad';\nimport { modConfig } from './kernels/Mod';\nimport { multinomialConfig } from './kernels/Multinomial';\nimport { multiplyConfig } from './kernels/Multiply';\nimport { negConfig } from './kernels/Neg';\nimport { nonMaxSuppressionV3Config } from './kernels/NonMaxSuppressionV3';\nimport { nonMaxSuppressionV4Config } from './kernels/NonMaxSuppressionV4';\nimport { nonMaxSuppressionV5Config } from './kernels/NonMaxSuppressionV5';\nimport { notEqualConfig } from './kernels/NotEqual';\nimport { oneHotConfig } from './kernels/OneHot';\nimport { onesLikeConfig } from './kernels/OnesLike';\nimport { packConfig } from './kernels/Pack';\nimport { padV2Config } from './kernels/PadV2';\nimport { powConfig } from './kernels/Pow';\nimport { preluConfig } from './kernels/Prelu';\nimport { prodConfig } from './kernels/Prod';\nimport { rangeConfig } from './kernels/Range';\nimport { realConfig } from './kernels/Real';\nimport { realDivConfig } from './kernels/RealDiv';\nimport { reciprocalConfig } from './kernels/Reciprocal';\nimport { reluConfig } from './kernels/Relu';\nimport { relu6Config } from './kernels/Relu6';\nimport { reshapeConfig } from './kernels/Reshape';\nimport { resizeBilinearConfig } from './kernels/ResizeBilinear';\nimport { resizeBilinearGradConfig } from './kernels/ResizeBilinearGrad';\nimport { resizeNearestNeighborConfig } from './kernels/ResizeNearestNeighbor';\nimport { resizeNearestNeighborGradConfig } from './kernels/ResizeNearestNeighborGrad';\nimport { reverseConfig } from './kernels/Reverse';\nimport { rotateWithOffsetConfig } from './kernels/RotateWithOffset';\nimport { roundConfig } from './kernels/Round';\nimport { rsqrtConfig } from './kernels/Rsqrt';\nimport { scatterNdConfig } from './kernels/ScatterNd';\nimport { selectConfig } from './kernels/Select';\nimport { seluConfig } from './kernels/Selu';\nimport { sigmoidConfig } from './kernels/Sigmoid';\nimport { signConfig } from './kernels/Sign';\nimport { sinConfig } from './kernels/Sin';\nimport { sinhConfig } from './kernels/Sinh';\nimport { sliceConfig } from './kernels/Slice';\nimport { softmaxConfig } from './kernels/Softmax';\nimport { softplusConfig } from './kernels/Softplus';\nimport { spaceToBatchNDConfig } from './kernels/SpaceToBatchND';\nimport { sparseToDenseConfig } from './kernels/SparseToDense';\nimport { splitVConfig } from './kernels/SplitV';\nimport { sqrtConfig } from './kernels/Sqrt';\nimport { squareConfig } from './kernels/Square';\nimport { squaredDifferenceConfig } from './kernels/SquaredDifference';\nimport { stepConfig } from './kernels/Step';\nimport { stridedSliceConfig } from './kernels/StridedSlice';\nimport { subConfig } from './kernels/Sub';\nimport { sumConfig } from './kernels/Sum';\nimport { tanConfig } from './kernels/Tan';\nimport { tanhConfig } from './kernels/Tanh';\nimport { tileConfig } from './kernels/Tile';\nimport { topKConfig } from './kernels/TopK';\nimport { transposeConfig } from './kernels/Transpose';\nimport { uniqueConfig } from './kernels/Unique';\nimport { unpackConfig } from './kernels/Unpack';\nimport { unsortedSegmentSumConfig } from './kernels/UnsortedSegmentSum';\nimport { zerosLikeConfig } from './kernels/ZerosLike';\n// List all kernel configs here\nconst kernelConfigs = [\n    LRNConfig,\n    LRNGradConfig,\n    _fusedMatMulConfig,\n    absConfig,\n    acosConfig,\n    acoshConfig,\n    addConfig,\n    addNConfig,\n    allConfig,\n    anyConfig,\n    argMaxConfig,\n    argMinConfig,\n    asinConfig,\n    asinhConfig,\n    atan2Config,\n    atanConfig,\n    atanhConfig,\n    avgPool3DConfig,\n    avgPoolConfig,\n    avgPoolGrad3DConfig,\n    avgPoolGradConfig,\n    batchMatMulConfig,\n    batchNormConfig,\n    batchToSpaceNDConfig,\n    bincountConfig,\n    castConfig,\n    ceilConfig,\n    clipByValueConfig,\n    complexAbsConfig,\n    complexConfig,\n    concatConfig,\n    conv2DBackpropFilterConfig,\n    conv2DBackpropInputConfig,\n    conv2DConfig,\n    conv3DBackpropFilterV2Config,\n    conv3DBackpropInputConfig,\n    conv3DConfig,\n    cosConfig,\n    coshConfig,\n    cropAndResizeConfig,\n    cumsumConfig,\n    denseBincountConfig,\n    depthToSpaceConfig,\n    depthwiseConv2dNativeBackpropFilterConfig,\n    depthwiseConv2dNativeBackpropInputConfig,\n    depthwiseConv2dNativeConfig,\n    diagConfig,\n    dilation2DConfig,\n    eluConfig,\n    eluGradConfig,\n    equalConfig,\n    erfConfig,\n    expConfig,\n    expandDimsConfig,\n    expm1Config,\n    fftConfig,\n    fillConfig,\n    flipLeftRightConfig,\n    floorConfig,\n    floorDivConfig,\n    fromPixelsConfig,\n    fusedConv2DConfig,\n    fusedDepthwiseConv2DConfig,\n    gatherNdConfig,\n    gatherV2Config,\n    greaterConfig,\n    greaterEqualConfig,\n    identityConfig,\n    ifftConfig,\n    imagConfig,\n    isFiniteConfig,\n    isInfConfig,\n    isNaNConfig,\n    leakyReluConfig,\n    lessConfig,\n    lessEqualConfig,\n    linSpaceConfig,\n    log1pConfig,\n    logConfig,\n    logicalAndConfig,\n    logicalNotConfig,\n    logicalOrConfig,\n    maxConfig,\n    maxPool3DConfig,\n    maxPoolConfig,\n    maxPoolGrad3DConfig,\n    maxPoolGradConfig,\n    maxPoolWithArgmaxConfig,\n    maximumConfig,\n    meanConfig,\n    minConfig,\n    minimumConfig,\n    mirrorPadConfig,\n    modConfig,\n    multinomialConfig,\n    multiplyConfig,\n    negConfig,\n    nonMaxSuppressionV3Config,\n    nonMaxSuppressionV4Config,\n    nonMaxSuppressionV5Config,\n    notEqualConfig,\n    oneHotConfig,\n    onesLikeConfig,\n    packConfig,\n    padV2Config,\n    powConfig,\n    preluConfig,\n    prodConfig,\n    rangeConfig,\n    realConfig,\n    realDivConfig,\n    reciprocalConfig,\n    relu6Config,\n    reluConfig,\n    reshapeConfig,\n    resizeBilinearConfig,\n    resizeBilinearGradConfig,\n    resizeNearestNeighborConfig,\n    resizeNearestNeighborGradConfig,\n    reverseConfig,\n    rotateWithOffsetConfig,\n    roundConfig,\n    rsqrtConfig,\n    scatterNdConfig,\n    selectConfig,\n    seluConfig,\n    sigmoidConfig,\n    signConfig,\n    sinConfig,\n    sinhConfig,\n    sliceConfig,\n    softmaxConfig,\n    softplusConfig,\n    spaceToBatchNDConfig,\n    sparseToDenseConfig,\n    splitVConfig,\n    sqrtConfig,\n    squareConfig,\n    squaredDifferenceConfig,\n    stepConfig,\n    stridedSliceConfig,\n    subConfig,\n    sumConfig,\n    tanConfig,\n    tanhConfig,\n    tileConfig,\n    topKConfig,\n    transposeConfig,\n    uniqueConfig,\n    unpackConfig,\n    unsortedSegmentSumConfig,\n    zerosLikeConfig\n];\nfor (const kernelConfig of kernelConfigs) {\n    registerKernel(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n/** DataType enum. */\nexport var DataType;\n(function (DataType) {\n    // Not a legal value for DataType.  Used to indicate a DataType field\n    // has not been set.\n    DataType[DataType[\"DT_INVALID\"] = 0] = \"DT_INVALID\";\n    // Data types that all computation devices are expected to be\n    // capable to support.\n    DataType[DataType[\"DT_FLOAT\"] = 1] = \"DT_FLOAT\";\n    DataType[DataType[\"DT_DOUBLE\"] = 2] = \"DT_DOUBLE\";\n    DataType[DataType[\"DT_INT32\"] = 3] = \"DT_INT32\";\n    DataType[DataType[\"DT_UINT8\"] = 4] = \"DT_UINT8\";\n    DataType[DataType[\"DT_INT16\"] = 5] = \"DT_INT16\";\n    DataType[DataType[\"DT_INT8\"] = 6] = \"DT_INT8\";\n    DataType[DataType[\"DT_STRING\"] = 7] = \"DT_STRING\";\n    DataType[DataType[\"DT_COMPLEX64\"] = 8] = \"DT_COMPLEX64\";\n    DataType[DataType[\"DT_INT64\"] = 9] = \"DT_INT64\";\n    DataType[DataType[\"DT_BOOL\"] = 10] = \"DT_BOOL\";\n    DataType[DataType[\"DT_QINT8\"] = 11] = \"DT_QINT8\";\n    DataType[DataType[\"DT_QUINT8\"] = 12] = \"DT_QUINT8\";\n    DataType[DataType[\"DT_QINT32\"] = 13] = \"DT_QINT32\";\n    DataType[DataType[\"DT_BFLOAT16\"] = 14] = \"DT_BFLOAT16\";\n    DataType[DataType[\"DT_QINT16\"] = 15] = \"DT_QINT16\";\n    DataType[DataType[\"DT_QUINT16\"] = 16] = \"DT_QUINT16\";\n    DataType[DataType[\"DT_UINT16\"] = 17] = \"DT_UINT16\";\n    DataType[DataType[\"DT_COMPLEX128\"] = 18] = \"DT_COMPLEX128\";\n    DataType[DataType[\"DT_HALF\"] = 19] = \"DT_HALF\";\n    DataType[DataType[\"DT_RESOURCE\"] = 20] = \"DT_RESOURCE\";\n    DataType[DataType[\"DT_VARIANT\"] = 21] = \"DT_VARIANT\";\n    DataType[DataType[\"DT_UINT32\"] = 22] = \"DT_UINT32\";\n    DataType[DataType[\"DT_UINT64\"] = 23] = \"DT_UINT64\";\n    // Do not use!  These are only for parameters.  Every enum above\n    // should have a corresponding value below (verified by types_test).\n    DataType[DataType[\"DT_FLOAT_REF\"] = 101] = \"DT_FLOAT_REF\";\n    DataType[DataType[\"DT_DOUBLE_REF\"] = 102] = \"DT_DOUBLE_REF\";\n    DataType[DataType[\"DT_INT32_REF\"] = 103] = \"DT_INT32_REF\";\n    DataType[DataType[\"DT_UINT8_REF\"] = 104] = \"DT_UINT8_REF\";\n    DataType[DataType[\"DT_INT16_REF\"] = 105] = \"DT_INT16_REF\";\n    DataType[DataType[\"DT_INT8_REF\"] = 106] = \"DT_INT8_REF\";\n    DataType[DataType[\"DT_STRING_REF\"] = 107] = \"DT_STRING_REF\";\n    DataType[DataType[\"DT_COMPLEX64_REF\"] = 108] = \"DT_COMPLEX64_REF\";\n    DataType[DataType[\"DT_INT64_REF\"] = 109] = \"DT_INT64_REF\";\n    DataType[DataType[\"DT_BOOL_REF\"] = 110] = \"DT_BOOL_REF\";\n    DataType[DataType[\"DT_QINT8_REF\"] = 111] = \"DT_QINT8_REF\";\n    DataType[DataType[\"DT_QUINT8_REF\"] = 112] = \"DT_QUINT8_REF\";\n    DataType[DataType[\"DT_QINT32_REF\"] = 113] = \"DT_QINT32_REF\";\n    DataType[DataType[\"DT_BFLOAT16_REF\"] = 114] = \"DT_BFLOAT16_REF\";\n    DataType[DataType[\"DT_QINT16_REF\"] = 115] = \"DT_QINT16_REF\";\n    DataType[DataType[\"DT_QUINT16_REF\"] = 116] = \"DT_QUINT16_REF\";\n    DataType[DataType[\"DT_UINT16_REF\"] = 117] = \"DT_UINT16_REF\";\n    DataType[DataType[\"DT_COMPLEX128_REF\"] = 118] = \"DT_COMPLEX128_REF\";\n    DataType[DataType[\"DT_HALF_REF\"] = 119] = \"DT_HALF_REF\";\n    DataType[DataType[\"DT_RESOURCE_REF\"] = 120] = \"DT_RESOURCE_REF\";\n    DataType[DataType[\"DT_VARIANT_REF\"] = 121] = \"DT_VARIANT_REF\";\n    DataType[DataType[\"DT_UINT32_REF\"] = 122] = \"DT_UINT32_REF\";\n    DataType[DataType[\"DT_UINT64_REF\"] = 123] = \"DT_UINT64_REF\";\n})(DataType || (DataType = {}));\nexport var SaverDef;\n(function (SaverDef) {\n    /** CheckpointFormatVersion enum. */\n    let CheckpointFormatVersion;\n    (function (CheckpointFormatVersion) {\n        CheckpointFormatVersion[CheckpointFormatVersion[\"LEGACY\"] = 0] = \"LEGACY\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V1\"] = 1] = \"V1\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V2\"] = 2] = \"V2\";\n    })(CheckpointFormatVersion = SaverDef.CheckpointFormatVersion || (SaverDef.CheckpointFormatVersion = {}));\n})(SaverDef || (SaverDef = {}));\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nconst ENV = env();\n/** Whether to keep intermediate tensors. */\nENV.registerFlag('KEEP_INTERMEDIATE_TENSORS', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Keep intermediate tensors is ON. This will print the values of all ' +\n            'intermediate tensors during model inference. Not all models ' +\n            'support this mode. For details, check e2e/benchmarks/ ' +\n            'model_config.js. This significantly impacts performance.');\n    }\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvZmxhZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO0FBRWxCLDRDQUE0QztBQUM1QyxHQUFHLENBQUMsWUFBWSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsRUFBRTtJQUN0RSxJQUFJLFVBQVUsRUFBRTtRQUNkLE9BQU8sQ0FBQyxJQUFJLENBQ1IscUVBQXFFO1lBQ3JFLDhEQUE4RDtZQUM5RCx3REFBd0Q7WUFDeEQsMERBQTBELENBQUMsQ0FBQztLQUNqRTtBQUNILENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2Vudn0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuY29uc3QgRU5WID0gZW52KCk7XG5cbi8qKiBXaGV0aGVyIHRvIGtlZXAgaW50ZXJtZWRpYXRlIHRlbnNvcnMuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdLRUVQX0lOVEVSTUVESUFURV9URU5TT1JTJywgKCkgPT4gZmFsc2UsIGRlYnVnVmFsdWUgPT4ge1xuICBpZiAoZGVidWdWYWx1ZSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgJ0tlZXAgaW50ZXJtZWRpYXRlIHRlbnNvcnMgaXMgT04uIFRoaXMgd2lsbCBwcmludCB0aGUgdmFsdWVzIG9mIGFsbCAnICtcbiAgICAgICAgJ2ludGVybWVkaWF0ZSB0ZW5zb3JzIGR1cmluZyBtb2RlbCBpbmZlcmVuY2UuIE5vdCBhbGwgbW9kZWxzICcgK1xuICAgICAgICAnc3VwcG9ydCB0aGlzIG1vZGUuIEZvciBkZXRhaWxzLCBjaGVjayBlMmUvYmVuY2htYXJrcy8gJyArXG4gICAgICAgICdtb2RlbF9jb25maWcuanMuIFRoaXMgc2lnbmlmaWNhbnRseSBpbXBhY3RzIHBlcmZvcm1hbmNlLicpO1xuICB9XG59KTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst CUSTOM_OPS = {};\n/**\n * Register an Op for graph model executor. This allows you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object are based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function registerOp(name, opFunc) {\n    const opMapper = {\n        tfOpName: name,\n        category: 'custom',\n        inputs: [],\n        attrs: [],\n        customExecutor: opFunc\n    };\n    CUSTOM_OPS[name] = opMapper;\n}\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function getRegisteredOp(name) {\n    return CUSTOM_OPS[name];\n}\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function deregisterOp(name) {\n    delete CUSTOM_OPS[name];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvb3BlcmF0aW9ucy9jdXN0b21fb3AvcmVnaXN0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBSUgsTUFBTSxVQUFVLEdBQThCLEVBQUUsQ0FBQztBQUVqRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFZLEVBQUUsTUFBa0I7SUFDekQsTUFBTSxRQUFRLEdBQWE7UUFDekIsUUFBUSxFQUFFLElBQUk7UUFDZCxRQUFRLEVBQUUsUUFBUTtRQUNsQixNQUFNLEVBQUUsRUFBRTtRQUNWLEtBQUssRUFBRSxFQUFFO1FBQ1QsY0FBYyxFQUFFLE1BQU07S0FDdkIsQ0FBQztJQUVGLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUM7QUFDOUIsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSxlQUFlLENBQUMsSUFBWTtJQUMxQyxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMxQixDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsTUFBTSxVQUFVLFlBQVksQ0FBQyxJQUFZO0lBQ3ZDLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtPcEV4ZWN1dG9yLCBPcE1hcHBlcn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBDVVNUT01fT1BTOiB7W2tleTogc3RyaW5nXTogT3BNYXBwZXJ9ID0ge307XG5cbi8qKlxuICogUmVnaXN0ZXIgYW4gT3AgZm9yIGdyYXBoIG1vZGVsIGV4ZWN1dG9yLiBUaGlzIGFsbG93cyB5b3UgdG8gcmVnaXN0ZXJcbiAqIFRlbnNvckZsb3cgY3VzdG9tIG9wIG9yIG92ZXJyaWRlIGV4aXN0aW5nIG9wLlxuICpcbiAqIEhlcmUgaXMgYW4gZXhhbXBsZSBvZiByZWdpc3RlcmluZyBhIG5ldyBNYXRNdWwgT3AuXG4gKiBgYGBqc1xuICogY29uc3QgY3VzdG9tTWF0bXVsID0gKG5vZGUpID0+XG4gKiAgICB0Zi5tYXRNdWwoXG4gKiAgICAgICAgbm9kZS5pbnB1dHNbMF0sIG5vZGUuaW5wdXRzWzFdLFxuICogICAgICAgIG5vZGUuYXR0cnNbJ3RyYW5zcG9zZV9hJ10sIG5vZGUuYXR0cnNbJ3RyYW5zcG9zZV9iJ10pO1xuICpcbiAqIHRmLnJlZ2lzdGVyT3AoJ01hdE11bCcsIGN1c3RvbU1hdG11bCk7XG4gKiBgYGBcbiAqIFRoZSBpbnB1dHMgYW5kIGF0dHJzIG9mIHRoZSBub2RlIG9iamVjdCBhcmUgYmFzZWQgb24gdGhlIFRlbnNvckZsb3cgb3BcbiAqIHJlZ2lzdHJ5LlxuICpcbiAqIEBwYXJhbSBuYW1lIFRoZSBUZW5zb3JmbG93IE9wIG5hbWUuXG4gKiBAcGFyYW0gb3BGdW5jIEFuIG9wIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCB3aXRoIHRoZSBjdXJyZW50IGdyYXBoIG5vZGVcbiAqIGR1cmluZyBleGVjdXRpb24gYW5kIG5lZWRzIHRvIHJldHVybiBhIHRlbnNvciBvciBhIGxpc3Qgb2YgdGVuc29ycy4gVGhlIG5vZGVcbiAqIGhhcyB0aGUgZm9sbG93aW5nIGF0dHJpYnV0ZXM6XG4gKiAgICAtIGF0dHI6IEEgbWFwIGZyb20gYXR0cmlidXRlIG5hbWUgdG8gaXRzIHZhbHVlXG4gKiAgICAtIGlucHV0czogQSBsaXN0IG9mIGlucHV0IHRlbnNvcnNcbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnTW9kZWxzJywgc3ViaGVhZGluZzogJ09wIFJlZ2lzdHJ5J31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyT3AobmFtZTogc3RyaW5nLCBvcEZ1bmM6IE9wRXhlY3V0b3IpIHtcbiAgY29uc3Qgb3BNYXBwZXI6IE9wTWFwcGVyID0ge1xuICAgIHRmT3BOYW1lOiBuYW1lLFxuICAgIGNhdGVnb3J5OiAnY3VzdG9tJyxcbiAgICBpbnB1dHM6IFtdLFxuICAgIGF0dHJzOiBbXSxcbiAgICBjdXN0b21FeGVjdXRvcjogb3BGdW5jXG4gIH07XG5cbiAgQ1VTVE9NX09QU1tuYW1lXSA9IG9wTWFwcGVyO1xufVxuXG4vKipcbiAqIFJldHJpZXZlIHRoZSBPcE1hcHBlciBvYmplY3QgZm9yIHRoZSByZWdpc3RlcmVkIG9wLlxuICpcbiAqIEBwYXJhbSBuYW1lIFRoZSBUZW5zb3JmbG93IE9wIG5hbWUuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ01vZGVscycsIHN1YmhlYWRpbmc6ICdPcCBSZWdpc3RyeSd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWdpc3RlcmVkT3AobmFtZTogc3RyaW5nKTogT3BNYXBwZXIge1xuICByZXR1cm4gQ1VTVE9NX09QU1tuYW1lXTtcbn1cblxuLyoqXG4gKiBEZXJlZ2lzdGVyIHRoZSBPcCBmb3IgZ3JhcGggbW9kZWwgZXhlY3V0b3IuXG4gKlxuICogQHBhcmFtIG5hbWUgVGhlIFRlbnNvcmZsb3cgT3AgbmFtZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnTW9kZWxzJywgc3ViaGVhZGluZzogJ09wIFJlZ2lzdHJ5J31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlcmVnaXN0ZXJPcChuYW1lOiBzdHJpbmcpIHtcbiAgZGVsZXRlIENVU1RPTV9PUFNbbmFtZV07XG59XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { clone, util } from '@tensorflow/tfjs-core';\nexport function getParamValue(paramName, node, tensorMap, context, resourceManager) {\n    const inputParam = node.inputParams[paramName];\n    if (inputParam && inputParam.inputIndexStart !== undefined) {\n        const start = inputParam.inputIndexStart;\n        const end = inputParam.inputIndexEnd === 0 ?\n            undefined :\n            (inputParam.inputIndexEnd === undefined ? start + 1 :\n                inputParam.inputIndexEnd);\n        if (inputParam.type === 'tensor') {\n            return getTensor(node.inputNames[inputParam.inputIndexStart], tensorMap, context, resourceManager);\n        }\n        if (inputParam.type === 'tensors') {\n            const inputs = node.inputNames.slice(start, end);\n            return inputs.map(name => getTensor(name, tensorMap, context, resourceManager));\n        }\n        const tensor = getTensor(node.inputNames.slice(start)[0], tensorMap, context, resourceManager);\n        const data = tensor.dataSync();\n        return inputParam.type === 'number' ?\n            data[0] :\n            util.toNestedArray(tensor.shape, data);\n    }\n    const attrParam = node.attrParams[paramName];\n    return attrParam && attrParam.value;\n}\n/**\n * Retrieve the tensor from tensorsMap based on input name.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function getTensor(name, tensorsMap, context, resourceManager) {\n    const [nodeName, index] = parseNodeName(name);\n    if (resourceManager != null) {\n        const tensor = resourceManager.getHashTableHandleByName(nodeName);\n        if (tensor != null) {\n            return tensor;\n        }\n    }\n    const contextId = context.currentContextIds.find(contextId => {\n        return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n    });\n    return contextId !== undefined ?\n        tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n        undefined;\n}\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(name, tensorsMap, context) {\n    return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n/**\n * Returns the node name, outputName and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n * If the input name contains output name i.e. StringSplit:indices:0, it will\n * return ['StringSplit', 0, 'indices'].\n */\nexport function getNodeNameAndIndex(inputName, context) {\n    const [nodeName, index, outputName] = parseNodeName(inputName);\n    return [\n        getNodeNameWithContextId(nodeName, context && context.currentContextId),\n        index, outputName\n    ];\n}\nfunction getNodeNameWithContextId(name, contextId) {\n    return !!contextId ? `${name}-${contextId}` : name;\n}\nexport function parseNodeName(name) {\n    const parts = name.split(':');\n    if (parts.length === 1) {\n        return [name, 0, undefined];\n    }\n    const nodeName = parts[0];\n    const outputName = parts.length === 3 ? parts[1] : undefined;\n    const index = Number(parts[parts.length - 1]);\n    return [nodeName, index, outputName];\n}\nexport function split(arr, size) {\n    const res = [];\n    for (let i = 0; i < arr.length; i += size) {\n        res.push(arr.slice(i, i + size));\n    }\n    return res;\n}\nexport function getPadding(node, tensorMap, context) {\n    let pad = getParamValue('pad', node, tensorMap, context);\n    if (pad === 'explicit') {\n        // This is 1d array, we need to convert it to 2d array\n        pad = getParamValue('explicitPaddings', node, tensorMap, context);\n        const explicitPadding = [[0, 0], [0, 0], [0, 0], [0, 0]];\n        for (let i = 0; i < 4; i++) {\n            explicitPadding[i][0] = pad[i * 2];\n            explicitPadding[i][1] = pad[i * 2 + 1];\n        }\n        return explicitPadding;\n    }\n    return pad;\n}\n/**\n *  Reuse the tensor if it is marked as keep, otherwise clone the tensor to\n *  avoid disposal. This is important for TensorArray and TensorList ops, since\n *  internally they use a tensor as the id for TensorArray and TensorList, and\n * to simplify lookup, they also use Tensor.id as the key to the internal map.\n * These id tensors have been marked as kept in the backend, we need avoid clone\n * them in order to create new Tensor.id.\n * @param tensor\n */\nexport function cloneTensor(tensor) {\n    return tensor.kept ? tensor : clone(tensor);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Abs',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Acos',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Asin',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atan2',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'y',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Ceil',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ClipByValue',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'clipValueMin',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'clipValueMax',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Complex',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'real',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'imag',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ComplexAbs',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cos',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cosh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Elu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Exp',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Floor',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Log',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Imag',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Neg',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Real',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prelu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'alpha',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Relu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Relu6',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Selu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sigmoid',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sin',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sinh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sqrt',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Rsqrt',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Square',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tanh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sign',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Round',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Expm1',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Log1p',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reciprocal',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Softplus',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Asinh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Acosh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Atanh',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Erf',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axes',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LeakyRelu',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IsNan',\n        'category': 'basic_math',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Add',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AddV2',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AddN',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BiasAdd',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sub',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RealDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Div',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DivNoNan',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FloorDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mul',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Maximum',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Minimum',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pow',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SquaredDifference',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mod',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FloorMod',\n        'category': 'arithmetic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'EmptyTensorList',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 1,\n                'name': 'maxNumElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LoopCond',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'pred',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Switch',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'pred',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Merge',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Enter',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'frame_name',\n                'name': 'frameName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'is_constant',\n                'name': 'isConstant',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Exit',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NextIteration',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'size',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dynamic_size',\n                'name': 'dynamicSize',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'clear_after_read',\n                'name': 'clearAfterRead',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'identical_element_shapes',\n                'name': 'identicalElementShapes',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'tensor_array_name',\n                'name': 'name',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayWriteV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayReadV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayGatherV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayScatterV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayConcatV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'element_shape_except0',\n                'name': 'elementShapeExcept0',\n                'type': 'shape',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArraySplitV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'lengths',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArraySizeV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'flowIn',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayCloseV3',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorArrayId',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StatelessIf',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'cond',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'then_branch',\n                'name': 'thenBranch',\n                'type': 'func'\n            },\n            {\n                'tfName': 'else_branch',\n                'name': 'elseBranch',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'If',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'cond',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'then_branch',\n                'name': 'thenBranch',\n                'type': 'func'\n            },\n            {\n                'tfName': 'else_branch',\n                'name': 'elseBranch',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StatelessWhile',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'cond',\n                'name': 'cond',\n                'type': 'func'\n            },\n            {\n                'tfName': 'body',\n                'name': 'body',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'While',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'cond',\n                'name': 'cond',\n                'type': 'func'\n            },\n            {\n                'tfName': 'body',\n                'name': 'body',\n                'type': 'func'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListScatter',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListScatterV2',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 3,\n                'name': 'numElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListGather',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListGetItem',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListSetItem',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'index',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListReserve',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 1,\n                'name': 'numElements',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListFromTensor',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListStack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'num_elements',\n                'name': 'numElements',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListSplit',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'start': 2,\n                'name': 'lengths',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListConcat',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListConcatV2',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_shape',\n                'name': 'elementShape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListPopBack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'elementShape',\n                'type': 'shape'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListPushBack',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'element_dtype',\n                'name': 'elementDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListLength',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListResize',\n        'category': 'control',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensorListId',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL29wX2xpc3QvY29udHJvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQWU7SUFDOUI7UUFDRSxVQUFVLEVBQUUsaUJBQWlCO1FBQzdCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxjQUFjO2dCQUN0QixNQUFNLEVBQUUsT0FBTzthQUNoQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxnQkFBZ0I7Z0JBQ3hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7UUFDRCxPQUFPLEVBQUU7WUFDUDtnQkFDRSxRQUFRLEVBQUUsZUFBZTtnQkFDekIsTUFBTSxFQUFFLGNBQWM7Z0JBQ3RCLE1BQU0sRUFBRSxPQUFPO2FBQ2hCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLFVBQVU7UUFDdEIsVUFBVSxFQUFFLFNBQVM7UUFDckIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsUUFBUTtRQUNwQixVQUFVLEVBQUUsU0FBUztRQUNyQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsTUFBTTtnQkFDZCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtJ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VUFBVSxFQUFFLFNBQVM7UUFDckIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLGNBQWM7Z0JBQ3RCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7UUFDRCxPQUFPLEVBQUU7WUFDUDtnQkFDRSxRQUFRLEVBQUUsZUFBZTtnQkFDekIsTUFBTSxFQUFFLGNBQWM7Z0JBQ3RCLE1BQU0sRUFBRSxPQUFPO2FBQ2hCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLGtCQUFrQjtRQUM5QixVQUFVLEVBQUUsU0FBUztRQUNyQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsY0FBYztnQkFDdEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsa0JBQWtCO1FBQzlCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxjQUFjO2dCQUN0QixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtDQUNGLENBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtPcE1hcHBlcn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QganNvbjogT3BNYXBwZXJbXSA9IFtcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdFbXB0eVRlbnNvckxpc3QnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ21heE51bUVsZW1lbnRzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfZHR5cGUnLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50RFR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZSdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnTG9vcENvbmQnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdwcmVkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdTd2l0Y2gnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdkYXRhJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAncHJlZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnTWVyZ2UnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnZW5kJzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29ycycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcnMnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ0VudGVyJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ1QnLFxuICAgICAgICAnbmFtZSc6ICdkdHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJyxcbiAgICAgICAgJ25vdFN1cHBvcnRlZCc6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZnJhbWVfbmFtZScsXG4gICAgICAgICduYW1lJzogJ2ZyYW1lTmFtZScsXG4gICAgICAgICd0eXBlJzogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnaXNfY29uc3RhbnQnLFxuICAgICAgICAnbmFtZSc6ICdpc0NvbnN0YW50JyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnRXhpdCcsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvcicsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdUJyxcbiAgICAgICAgJ25hbWUnOiAnZHR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZScsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ05leHRJdGVyYXRpb24nLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3InLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JBcnJheVYzJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnc2l6ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdkdHlwZScsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfc2hhcGUnLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZHluYW1pY19zaXplJyxcbiAgICAgICAgJ25hbWUnOiAnZHluYW1pY1NpemUnLFxuICAgICAgICAndHlwZSc6ICdib29sJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdjbGVhcl9hZnRlcl9yZWFkJyxcbiAgICAgICAgJ25hbWUnOiAnY2xlYXJBZnRlclJlYWQnLFxuICAgICAgICAndHlwZSc6ICdib29sJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdpZGVudGljYWxfZWxlbWVudF9zaGFwZXMnLFxuICAgICAgICAnbmFtZSc6ICdpZGVudGljYWxFbGVtZW50U2hhcGVzJyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAndGVuc29yX2FycmF5X25hbWUnLFxuICAgICAgICAnbmFtZSc6ICduYW1lJyxcbiAgICAgICAgJ3R5cGUnOiAnc3RyaW5nJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JBcnJheVdyaXRlVjMnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JBcnJheUlkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kZXgnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3InLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdmbG93SW4nLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JBcnJheVJlYWRWMycsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvckFycmF5SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdpbmRleCcsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ2Zsb3dJbicsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdkdHlwZScsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JBcnJheUdhdGhlclYzJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yQXJyYXlJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2luZGljZXMnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXJbXSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ2Zsb3dJbicsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdkdHlwZScsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfc2hhcGUnLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVGVuc29yQXJyYXlTY2F0dGVyVjMnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JBcnJheUlkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kaWNlcycsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAndGVuc29yJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnZmxvd0luJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ1QnLFxuICAgICAgICAnbmFtZSc6ICdkdHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JBcnJheUNvbmNhdFYzJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yQXJyYXlJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2Zsb3dJbicsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdkdHlwZScsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfc2hhcGVfZXhjZXB0MCcsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnRTaGFwZUV4Y2VwdDAnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZScsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckFycmF5U3BsaXRWMycsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvckFycmF5SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3InLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdsZW5ndGhzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyW10nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdmbG93SW4nLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckFycmF5U2l6ZVYzJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yQXJyYXlJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2Zsb3dJbicsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVGVuc29yQXJyYXlDbG9zZVYzJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yQXJyYXlJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnU3RhdGVsZXNzSWYnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdjb25kJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ2VuZCc6IDAsXG4gICAgICAgICduYW1lJzogJ2FyZ3MnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3JzJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ3RoZW5fYnJhbmNoJyxcbiAgICAgICAgJ25hbWUnOiAndGhlbkJyYW5jaCcsXG4gICAgICAgICd0eXBlJzogJ2Z1bmMnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2Vsc2VfYnJhbmNoJyxcbiAgICAgICAgJ25hbWUnOiAnZWxzZUJyYW5jaCcsXG4gICAgICAgICd0eXBlJzogJ2Z1bmMnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ0lmJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnY29uZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICdlbmQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdhcmdzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29ycydcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICd0aGVuX2JyYW5jaCcsXG4gICAgICAgICduYW1lJzogJ3RoZW5CcmFuY2gnLFxuICAgICAgICAndHlwZSc6ICdmdW5jJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbHNlX2JyYW5jaCcsXG4gICAgICAgICduYW1lJzogJ2Vsc2VCcmFuY2gnLFxuICAgICAgICAndHlwZSc6ICdmdW5jJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdTdGF0ZWxlc3NXaGlsZScsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICdlbmQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdhcmdzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29ycydcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdjb25kJyxcbiAgICAgICAgJ25hbWUnOiAnY29uZCcsXG4gICAgICAgICd0eXBlJzogJ2Z1bmMnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2JvZHknLFxuICAgICAgICAnbmFtZSc6ICdib2R5JyxcbiAgICAgICAgJ3R5cGUnOiAnZnVuYydcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnV2hpbGUnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnZW5kJzogMCxcbiAgICAgICAgJ25hbWUnOiAnYXJncycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcnMnXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnY29uZCcsXG4gICAgICAgICduYW1lJzogJ2NvbmQnLFxuICAgICAgICAndHlwZSc6ICdmdW5jJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdib2R5JyxcbiAgICAgICAgJ25hbWUnOiAnYm9keScsXG4gICAgICAgICd0eXBlJzogJ2Z1bmMnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RTY2F0dGVyJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kaWNlcycsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnc2hhcGUnXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZWxlbWVudF9kdHlwZScsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnREVHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JMaXN0U2NhdHRlclYyJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kaWNlcycsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnc2hhcGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdudW1FbGVtZW50cycsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RHYXRoZXInLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JMaXN0SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdpbmRpY2VzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyW10nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RHZXRJdGVtJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yTGlzdElkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kZXgnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RTZXRJdGVtJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yTGlzdElkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kZXgnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3InLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZWxlbWVudF9kdHlwZScsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnREVHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JMaXN0UmVzZXJ2ZScsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnRTaGFwZScsXG4gICAgICAgICd0eXBlJzogJ3NoYXBlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnbnVtRWxlbWVudHMnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZWxlbWVudF9kdHlwZScsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnREVHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JMaXN0RnJvbVRlbnNvcicsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvcicsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnRTaGFwZScsXG4gICAgICAgICd0eXBlJzogJ3NoYXBlJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfZHR5cGUnLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50RFR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZSdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVGVuc29yTGlzdFN0YWNrJyxcbiAgICAnY2F0ZWdvcnknOiAnY29udHJvbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAndGVuc29yTGlzdElkJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnc2hhcGUnXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZWxlbWVudF9kdHlwZScsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnREVHlwZScsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdudW1fZWxlbWVudHMnLFxuICAgICAgICAnbmFtZSc6ICdudW1FbGVtZW50cycsXG4gICAgICAgICd0eXBlJzogJ2R0eXBlJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdUZW5zb3JMaXN0U3BsaXQnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3InLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ2xlbmd0aHMnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXJbXSdcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RDb25jYXQnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JMaXN0SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZWxlbWVudF9zaGFwZScsXG4gICAgICAgICduYW1lJzogJ2VsZW1lbnRTaGFwZScsXG4gICAgICAgICd0eXBlJzogJ3NoYXBlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RDb25jYXRWMicsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvckxpc3RJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X3NoYXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnc2hhcGUnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2VsZW1lbnRfZHR5cGUnLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50RFR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZSdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVGVuc29yTGlzdFBvcEJhY2snLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JMaXN0SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdlbGVtZW50U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICdzaGFwZSdcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RQdXNoQmFjaycsXG4gICAgJ2NhdGVnb3J5JzogJ2NvbnRyb2wnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3RlbnNvckxpc3RJZCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ3RlbnNvcicsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlbGVtZW50X2R0eXBlJyxcbiAgICAgICAgJ25hbWUnOiAnZWxlbWVudERUeXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RMZW5ndGgnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JMaXN0SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RlbnNvckxpc3RSZXNpemUnLFxuICAgICdjYXRlZ29yeSc6ICdjb250cm9sJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd0ZW5zb3JMaXN0SWQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdzaXplJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF1cbiAgfVxuXVxuO1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'AvgPool',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': [],\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPoolWithArgmax',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'include_batch_in_index',\n                'name': 'includeBatchInIndex',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'AvgPool3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'ksize',\n                'name': 'kernelSize',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv1D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'stride',\n                'name': 'stride',\n                'type': 'number'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NWC'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'dilation',\n                'name': 'dilation',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'useCudnnOnGpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': '_FusedConv2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'use_cudnn_on_gpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool',\n                'defaultValue': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [\n                    1,\n                    1,\n                    1,\n                    1\n                ]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2DBackpropInput',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 2,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 0,\n                'name': 'outputShape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2d',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedDepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [\n                    1,\n                    1,\n                    1,\n                    1\n                ]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv3D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Dilation2D',\n        'category': 'convolution',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'filter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'strides',\n                'name': 'strides',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'rates',\n                'name': 'dilations',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'padding',\n                'name': 'pad',\n                'type': 'string'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Fill',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            },\n            {\n                'start': 1,\n                'name': 'value',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LinSpace',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'start',\n                'type': 'number'\n            },\n            {\n                'start': 1,\n                'name': 'stop',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'num',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'OneHot',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'depth',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'onValue',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'start': 3,\n                'name': 'offValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Ones',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'OnesLike',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RandomStandardNormal',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RandomUniform',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'minval',\n                'name': 'minval',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'maxval',\n                'name': 'maxval',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Range',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'start',\n                'type': 'number'\n            },\n            {\n                'start': 1,\n                'name': 'stop',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'step',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tidx',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TruncatedNormal',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'means',\n                'name': 'mean',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'stddev',\n                'name': 'stdDev',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number'\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'T',\n                'name': 'T',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Zeros',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ZerosLike',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Multinomial',\n        'category': 'creation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'logits',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'numSamples',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'seed',\n                'name': 'seed',\n                'type': 'number'\n            },\n            {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'output_dtype',\n                'name': 'output_dtype',\n                'type': 'dtype'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'NonMaxSuppressionV2',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV3',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV4',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'T_threshold',\n                'name': 'threshold',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'pad_to_max_output_size',\n                'name': 'padToMaxOutputSize',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV5',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scores',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'maxOutputSize',\n                'type': 'number'\n            },\n            {\n                'start': 3,\n                'name': 'iouThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 4,\n                'name': 'scoreThreshold',\n                'type': 'number'\n            },\n            {\n                'start': 5,\n                'name': 'softNmsSigma',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Where',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ListDiff',\n        'category': 'dynamic',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'y',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL29wX2xpc3QvZHluYW1pYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQWU7SUFDOUI7UUFDRSxVQUFVLEVBQUUscUJBQXFCO1FBQ2pDLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLGVBQWU7Z0JBQ3ZCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLGNBQWM7Z0JBQ3RCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLHFCQUFxQjtRQUNqQyxVQUFVLEVBQUUsU0FBUztRQUNyQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsT0FBTztnQkFDZixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxRQUFRO2dCQUNoQixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxlQUFlO2dCQUN2QixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dC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Q0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxHQUFHO2dCQUNiLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE1BQU0sRUFBRSxPQUFPO2dCQUNmLGNBQWMsRUFBRSxJQUFJO2FBQ3JCO1NBQ0Y7S0FDRjtDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtPcE1hcHBlcn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QganNvbjogT3BNYXBwZXJbXSA9IFtcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdOb25NYXhTdXBwcmVzc2lvblYyJyxcbiAgICAnY2F0ZWdvcnknOiAnZHluYW1pYycsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnYm94ZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdzY29yZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdtYXhPdXRwdXRTaXplJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnaW91VGhyZXNob2xkJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdOb25NYXhTdXBwcmVzc2lvblYzJyxcbiAgICAnY2F0ZWdvcnknOiAnZHluYW1pYycsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnYm94ZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdzY29yZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdtYXhPdXRwdXRTaXplJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnaW91VGhyZXNob2xkJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogNCxcbiAgICAgICAgJ25hbWUnOiAnc2NvcmVUaHJlc2hvbGQnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ05vbk1heFN1cHByZXNzaW9uVjQnLFxuICAgICdjYXRlZ29yeSc6ICdkeW5hbWljJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdib3hlcycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ3Njb3JlcycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ21heE91dHB1dFNpemUnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdpb3VUaHJlc2hvbGQnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiA0LFxuICAgICAgICAnbmFtZSc6ICdzY29yZVRocmVzaG9sZCcsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdUJyxcbiAgICAgICAgJ25hbWUnOiAnZHR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZScsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ1RfdGhyZXNob2xkJyxcbiAgICAgICAgJ25hbWUnOiAndGhyZXNob2xkJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdwYWRfdG9fbWF4X291dHB1dF9zaXplJyxcbiAgICAgICAgJ25hbWUnOiAncGFkVG9NYXhPdXRwdXRTaXplJyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnTm9uTWF4U3VwcHJlc3Npb25WNScsXG4gICAgJ2NhdGVnb3J5JzogJ2R5bmFtaWMnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2JveGVzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnc2NvcmVzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnbWF4T3V0cHV0U2l6ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDMsXG4gICAgICAgICduYW1lJzogJ2lvdVRocmVzaG9sZCcsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDQsXG4gICAgICAgICduYW1lJzogJ3Njb3JlVGhyZXNob2xkJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogNSxcbiAgICAgICAgJ25hbWUnOiAnc29mdE5tc1NpZ21hJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdXaGVyZScsXG4gICAgJ2NhdGVnb3J5JzogJ2R5bmFtaWMnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2NvbmRpdGlvbicsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdUJyxcbiAgICAgICAgJ25hbWUnOiAnZHR5cGUnLFxuICAgICAgICAndHlwZSc6ICdkdHlwZScsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ0xpc3REaWZmJyxcbiAgICAnY2F0ZWdvcnknOiAnZHluYW1pYycsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ3knLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfVxuXTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'LowerBound',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sortedSequence',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TopKV2',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'k',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'sorted',\n                'name': 'sorted',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'UpperBound',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sortedSequence',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Unique',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'UniqueV2',\n        'category': 'evaluation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbHVhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL29wX2xpc3QvZXZhbHVhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQWU7SUFDOUI7UUFDRSxVQUFVLEVBQUUsWUFBWTtRQUN4QixVQUFVLEVBQUUsWUFBWTtRQUN4QixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsZ0JBQWdCO2dCQUN4QixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxRQUFRO2dCQUNoQixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLFVBQVUsRUFBRSxZQUFZO1FBQ3hCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxHQUFHO2dCQUNYLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsTUFBTSxFQUFFLE1BQU07YUFDZjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSxZQUFZO1FBQ3hCLFVBQVUsRUFBRSxZQUFZO1FBQ3hCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxnQkFBZ0I7Z0JBQ3hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLFFBQVE7UUFDcEIsVUFBVSxFQUFFLFlBQVk7UUFDeEIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsVUFBVTtRQUN0QixVQUFVLEVBQUUsWUFBWTtRQUN4QixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtDQUNGLENBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtPcE1hcHBlcn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QganNvbjogT3BNYXBwZXJbXSA9IFtcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdMb3dlckJvdW5kJyxcbiAgICAnY2F0ZWdvcnknOiAnZXZhbHVhdGlvbicsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnc29ydGVkU2VxdWVuY2UnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICd2YWx1ZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1RvcEtWMicsXG4gICAgJ2NhdGVnb3J5JzogJ2V2YWx1YXRpb24nLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3gnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdrJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ3NvcnRlZCcsXG4gICAgICAgICduYW1lJzogJ3NvcnRlZCcsXG4gICAgICAgICd0eXBlJzogJ2Jvb2wnXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1VwcGVyQm91bmQnLFxuICAgICdjYXRlZ29yeSc6ICdldmFsdWF0aW9uJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdzb3J0ZWRTZXF1ZW5jZScsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ3ZhbHVlcycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVW5pcXVlJyxcbiAgICAnY2F0ZWdvcnknOiAnZXZhbHVhdGlvbicsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnVW5pcXVlVjInLFxuICAgICdjYXRlZ29yeSc6ICdldmFsdWF0aW9uJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd4JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnYXhpcycsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdXG4gIH1cbl1cbjtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'PlaceholderWithDefault',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'default',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'shape',\n                'name': 'shape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Placeholder',\n        'category': 'graph',\n        'attrs': [\n            {\n                'tfName': 'shape',\n                'name': 'shape',\n                'type': 'shape'\n            },\n            {\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Const',\n        'category': 'graph'\n    },\n    {\n        'tfOpName': 'Identity',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IdentityN',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'x',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Snapshot',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Rank',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Size',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Shape',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ShapeN',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'x',\n                'type': 'tensors'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Print',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'data',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'message',\n                'name': 'message',\n                'type': 'string'\n            },\n            {\n                'tfName': 'first_n',\n                'name': 'firstN',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'summarize',\n                'name': 'summarize',\n                'type': 'number',\n                'defaultValue': 3\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NoOp',\n        'category': 'graph',\n        'inputs': []\n    },\n    {\n        'tfOpName': 'StopGradient',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FakeQuantWithMinMaxVars',\n        'category': 'graph',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'min',\n                'name': 'min',\n                'type': 'number'\n            },\n            {\n                'tfName': 'max',\n                'name': 'max',\n                'type': 'number'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'HashTable',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            {\n                'tfName': 'shared_name',\n                'name': 'sharedName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'key_dtype',\n                'name': 'keyDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'value_dtype',\n                'name': 'valueDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'HashTableV2',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            {\n                'tfName': 'shared_name',\n                'name': 'sharedName',\n                'type': 'string'\n            },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'key_dtype',\n                'name': 'keyDType',\n                'type': 'dtype'\n            },\n            {\n                'tfName': 'value_dtype',\n                'name': 'valueDType',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImport',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImportV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'values',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFind',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFindV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'keys',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'Tin',\n                'name': 'tIn',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableSize',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableSizeV2',\n        'category': 'hash_table',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tableHandle',\n                'type': 'tensor'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ResizeBilinear',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'align_corners',\n                'name': 'alignCorners',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ResizeNearestNeighbor',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'align_corners',\n                'name': 'alignCorners',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'CropAndResize',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'image',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'boxes',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'boxInd',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'cropSize',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'method',\n                'name': 'method',\n                'type': 'string'\n            },\n            {\n                'tfName': 'extrapolation_value',\n                'name': 'extrapolationValue',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ImageProjectiveTransformV3',\n        'category': 'image',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'images',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'transforms',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'fillValue',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'interpolation',\n                'name': 'interpolation',\n                'type': 'string'\n            },\n            {\n                'tfName': 'fill_mode',\n                'name': 'fillMode',\n                'type': 'string'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvb3BlcmF0aW9ucy9vcF9saXN0L2ltYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBZTtJQUM5QjtRQUNFLFVBQVUsRUFBRSxnQkFBZ0I7UUFDNUIsVUFBVSxFQUFFLE9BQU87UUFDbkIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLFVBQVU7YUFDbkI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxlQUFlO2dCQUN6QixNQUFNLEVBQUUsY0FBYztnQkFDdEIsTUFBTSxFQUFFLE1BQU07YUFDZjtZQUNEO2dCQUNFLFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLE1BQU0sRUFBRSxrQkFBa0I7Z0JBQzFCLE1BQU0sRUFBRSxNQUFNO2FBQ2Y7WUFDRDtnQkFDRSxRQUFRLEVBQUUsR0FBRztnQkFDYixNQUFNLEVBQUUsT0FBTztnQkFDZixNQUFNLEVBQUUsT0FBTztnQkFDZixjQUFjLEVBQUUsSUFBSTthQUNyQjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSx1QkFBdUI7UUFDbkMsVUFBVSxFQUFFLE9BQU87UUFDbkIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLFVBQVU7YUFDbkI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxlQUFlO2dCQUN6QixNQUFNLEVBQUUsY0FBYztnQkFDdEIsTUFBTSxFQUFFLE1BQU07YUFDZjtZQUNEO2dCQUNFLFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLE1BQU0sRUFBRSxrQkFBa0I7Z0JBQzFCLE1BQU0sRUFBRSxNQUFNO2FBQ2Y7WUFDRDtnQkFDRSxRQUFRLEVBQUUsR0FBRztnQkFDYixNQUFNLEVBQUUsT0FBTztnQkFDZixNQUFNLEVBQUUsT0FBTztnQkFDZixjQUFjLEVBQUUsSUFBSTthQUNyQjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSxlQUFlO1FBQzNCLFVBQVUsRUFBRSxPQUFPO1FBQ25CLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE9BQU87Z0JBQ2YsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsTUFBTSxFQUFFLFVBQVU7YUFDbkI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixNQUFNLEVBQUUsb0JBQW9CO2dCQUM1QixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSw0QkFBNEI7UUFDeEMsVUFBVSxFQUFFLE9BQU87UUFDbkIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFlBQVk7Z0JBQ3BCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLGFBQWE7Z0JBQ3JCLE1BQU0sRUFBRSxVQUFVO2FBQ25CO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFdBQVc7Z0JBQ25CLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7UUFDRCxPQUFPLEVBQUU7WUFDUDtnQkFDRSxRQUFRLEVBQUUsZUFBZTtnQkFDekIsTUFBTSxFQUFFLGVBQWU7Z0JBQ3ZCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLE1BQU0sRUFBRSxVQUFVO2dCQUNsQixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7T3BNYXBwZXJ9IGZyb20gJy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGpzb246IE9wTWFwcGVyW10gPSBbXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnUmVzaXplQmlsaW5lYXInLFxuICAgICdjYXRlZ29yeSc6ICdpbWFnZScsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnaW1hZ2VzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnc2l6ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2FsaWduX2Nvcm5lcnMnLFxuICAgICAgICAnbmFtZSc6ICdhbGlnbkNvcm5lcnMnLFxuICAgICAgICAndHlwZSc6ICdib29sJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdoYWxmX3BpeGVsX2NlbnRlcnMnLFxuICAgICAgICAnbmFtZSc6ICdoYWxmUGl4ZWxDZW50ZXJzJyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdSZXNpemVOZWFyZXN0TmVpZ2hib3InLFxuICAgICdjYXRlZ29yeSc6ICdpbWFnZScsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnaW1hZ2VzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnc2l6ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2FsaWduX2Nvcm5lcnMnLFxuICAgICAgICAnbmFtZSc6ICdhbGlnbkNvcm5lcnMnLFxuICAgICAgICAndHlwZSc6ICdib29sJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdoYWxmX3BpeGVsX2NlbnRlcnMnLFxuICAgICAgICAnbmFtZSc6ICdoYWxmUGl4ZWxDZW50ZXJzJyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdDcm9wQW5kUmVzaXplJyxcbiAgICAnY2F0ZWdvcnknOiAnaW1hZ2UnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2ltYWdlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnYm94ZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdib3hJbmQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdjcm9wU2l6ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ21ldGhvZCcsXG4gICAgICAgICduYW1lJzogJ21ldGhvZCcsXG4gICAgICAgICd0eXBlJzogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZXh0cmFwb2xhdGlvbl92YWx1ZScsXG4gICAgICAgICduYW1lJzogJ2V4dHJhcG9sYXRpb25WYWx1ZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnSW1hZ2VQcm9qZWN0aXZlVHJhbnNmb3JtVjMnLFxuICAgICdjYXRlZ29yeSc6ICdpbWFnZScsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnaW1hZ2VzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAndHJhbnNmb3JtcycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ291dHB1dFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyW10nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdmaWxsVmFsdWUnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnaW50ZXJwb2xhdGlvbicsXG4gICAgICAgICduYW1lJzogJ2ludGVycG9sYXRpb24nLFxuICAgICAgICAndHlwZSc6ICdzdHJpbmcnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2ZpbGxfbW9kZScsXG4gICAgICAgICduYW1lJzogJ2ZpbGxNb2RlJyxcbiAgICAgICAgJ3R5cGUnOiAnc3RyaW5nJ1xuICAgICAgfVxuICAgIF1cbiAgfVxuXTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Equal',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NotEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Greater',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GreaterEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Less',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LessEqual',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalAnd',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalNot',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalOr',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Select',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SelectV2',\n        'category': 'logical',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'condition',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': '_FusedMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMulV2',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Transpose',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'perm',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Einsum',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'equation',\n                'name': 'equation',\n                'type': 'string'\n            },\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'EuclideanNorm',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool',\n                'defaultValue': false\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNorm',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV2',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV3',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'scale',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'offset',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'mean',\n                'type': 'tensor'\n            },\n            {\n                'start': 4,\n                'name': 'variance',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LRN',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'depth_radius',\n                'name': 'radius',\n                'type': 'number',\n                'defaultValue': 5\n            },\n            {\n                'tfName': 'bias',\n                'name': 'bias',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            {\n                'tfName': 'beta',\n                'name': 'beta',\n                'type': 'number',\n                'defaultValue': 0.5\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Softmax',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LogSoftmax',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'normalization',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sparseIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'sparseValues',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': true,\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL29wX2xpc3Qvbm9ybWFsaXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQWU7SUFDOUI7UUFDRSxVQUFVLEVBQUUsZUFBZTtRQUMzQixVQUFVLEVBQUUsZUFBZTtRQUMzQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE1BQU0sRUFBRSxVQUFVO2FBQ25CO1NBQ0Y7UUFDRCxPQUFPLEVBQUU7WUFDUDtnQkFDRSxRQUFRLEVBQUUsV0FBVztnQkFDckIsTUFBTSxFQUFFLFVBQVU7Z0JBQ2xCLE1BQU0sRUFBRSxNQUFNO2dCQUNkLGNBQWMsRUFBRSxLQUFLO2FBQ3RCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLGdCQUFnQjtRQUM1QixVQUFVLEVBQUUsZUFBZTtRQUMzQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2Qs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QUNuQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxjQUFjO2dCQUN0QixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxjQUFjO2dCQUN0QixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO1FBQ0QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsTUFBTSxFQUFFLGlCQUFpQjtnQkFDekIsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsY0FBYyxFQUFFLElBQUk7Z0JBQ3BCLGNBQWMsRUFBRSxJQUFJO2FBQ3JCO1NBQ0Y7S0FDRjtDQUNGLENBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtPcE1hcHBlcn0gZnJvbSAnLi4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QganNvbjogT3BNYXBwZXJbXSA9IFtcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdFdWNsaWRlYW5Ob3JtJyxcbiAgICAnY2F0ZWdvcnknOiAnbm9ybWFsaXphdGlvbicsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2F4aXMnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXJbXSdcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdrZWVwX2RpbXMnLFxuICAgICAgICAnbmFtZSc6ICdrZWVwRGltcycsXG4gICAgICAgICd0eXBlJzogJ2Jvb2wnLFxuICAgICAgICAnZGVmYXVsdFZhbHVlJzogZmFsc2VcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnRnVzZWRCYXRjaE5vcm0nLFxuICAgICdjYXRlZ29yeSc6ICdub3JtYWxpemF0aW9uJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd4JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnc2NhbGUnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdvZmZzZXQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAzLFxuICAgICAgICAnbmFtZSc6ICdtZWFuJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogNCxcbiAgICAgICAgJ25hbWUnOiAndmFyaWFuY2UnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZXBzaWxvbicsXG4gICAgICAgICduYW1lJzogJ2Vwc2lsb24nLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInLFxuICAgICAgICAnZGVmYXVsdFZhbHVlJzogMC4wMDFcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZGF0YV9mb3JtYXQnLFxuICAgICAgICAnbmFtZSc6ICdkYXRhRm9ybWF0JyxcbiAgICAgICAgJ3R5cGUnOiAnc3RyaW5nJyxcbiAgICAgICAgJ25vdFN1cHBvcnRlZCc6IHRydWVcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnRnVzZWRCYXRjaE5vcm1WMicsXG4gICAgJ2NhdGVnb3J5JzogJ25vcm1hbGl6YXRpb24nLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3gnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdzY2FsZScsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ29mZnNldCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDMsXG4gICAgICAgICduYW1lJzogJ21lYW4nLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiA0LFxuICAgICAgICAnbmFtZSc6ICd2YXJpYW5jZScsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdlcHNpbG9uJyxcbiAgICAgICAgJ25hbWUnOiAnZXBzaWxvbicsXG4gICAgICAgICd0eXBlJzogJ251bWJlcicsXG4gICAgICAgICdkZWZhdWx0VmFsdWUnOiAwLjAwMVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdkYXRhX2Zvcm1hdCcsXG4gICAgICAgICduYW1lJzogJ2RhdGFGb3JtYXQnLFxuICAgICAgICAndHlwZSc6ICdzdHJpbmcnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdGdXNlZEJhdGNoTm9ybVYzJyxcbiAgICAnY2F0ZWdvcnknOiAnbm9ybWFsaXphdGlvbicsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ3NjYWxlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnb2Zmc2V0JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnbWVhbicsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDQsXG4gICAgICAgICduYW1lJzogJ3ZhcmlhbmNlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2Vwc2lsb24nLFxuICAgICAgICAnbmFtZSc6ICdlcHNpbG9uJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJyxcbiAgICAgICAgJ2RlZmF1bHRWYWx1ZSc6IDAuMDAxXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2RhdGFfZm9ybWF0JyxcbiAgICAgICAgJ25hbWUnOiAnZGF0YUZvcm1hdCcsXG4gICAgICAgICd0eXBlJzogJ3N0cmluZycsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ0xSTicsXG4gICAgJ2NhdGVnb3J5JzogJ25vcm1hbGl6YXRpb24nLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3gnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnZGVwdGhfcmFkaXVzJyxcbiAgICAgICAgJ25hbWUnOiAncmFkaXVzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJyxcbiAgICAgICAgJ2RlZmF1bHRWYWx1ZSc6IDVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnYmlhcycsXG4gICAgICAgICduYW1lJzogJ2JpYXMnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInLFxuICAgICAgICAnZGVmYXVsdFZhbHVlJzogMVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdhbHBoYScsXG4gICAgICAgICduYW1lJzogJ2FscGhhJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJyxcbiAgICAgICAgJ2RlZmF1bHRWYWx1ZSc6IDFcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnYmV0YScsXG4gICAgICAgICduYW1lJzogJ2JldGEnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInLFxuICAgICAgICAnZGVmYXVsdFZhbHVlJzogMC41XG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1NvZnRtYXgnLFxuICAgICdjYXRlZ29yeSc6ICdub3JtYWxpemF0aW9uJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd4JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdMb2dTb2Z0bWF4JyxcbiAgICAnY2F0ZWdvcnknOiAnbm9ybWFsaXphdGlvbicsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnU3BhcnNlVG9EZW5zZScsXG4gICAgJ2NhdGVnb3J5JzogJ25vcm1hbGl6YXRpb24nLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3NwYXJzZUluZGljZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdvdXRwdXRTaGFwZScsXG4gICAgICAgICd0eXBlJzogJ251bWJlcltdJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnc3BhcnNlVmFsdWVzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnZGVmYXVsdFZhbHVlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ3ZhbGlkYXRlX2luZGljZXMnLFxuICAgICAgICAnbmFtZSc6ICd2YWxpZGF0ZUluZGljZXMnLFxuICAgICAgICAndHlwZSc6ICdib29sJyxcbiAgICAgICAgJ2RlZmF1bHRWYWx1ZSc6IHRydWUsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9XG5dXG47XG4iXX0=","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Bincount',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'weights',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DenseBincount',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'size',\n                'type': 'number'\n            },\n            {\n                'start': 2,\n                'name': 'weights',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'binary_output',\n                'name': 'binaryOutput',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Max',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Mean',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Min',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sum',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'All',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Any',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ArgMax',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ArgMin',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cumprod',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'exclusive',\n                'name': 'exclusive',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'reverse',\n                'name': 'reverse',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Cumsum',\n        'category': 'reduction',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'exclusive',\n                'name': 'exclusive',\n                'type': 'bool'\n            },\n            {\n                'tfName': 'reverse',\n                'name': 'reverse',\n                'type': 'bool'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ConcatV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'end': -1,\n                'name': 'tensors',\n                'type': 'tensors'\n            },\n            {\n                'start': -1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Concat',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 1,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            },\n            {\n                'start': 0,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GatherV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'batch_dims',\n                'name': 'batchDims',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Gather',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reverse',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'dims',\n                'type': 'bool[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ReverseV2',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Slice',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'begin',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'size',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'StridedSlice',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'begin',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'end',\n                'type': 'number[]'\n            },\n            {\n                'start': 3,\n                'name': 'strides',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'begin_mask',\n                'name': 'beginMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'end_mask',\n                'name': 'endMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'new_axis_mask',\n                'name': 'newAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'ellipsis_mask',\n                'name': 'ellipsisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'shrink_axis_mask',\n                'name': 'shrinkAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pack',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Unpack',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'tensor',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'num',\n                'name': 'num',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tile',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'reps',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Split',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'start': 1,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_split',\n                'name': 'numOrSizeSplits',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SplitV',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'numOrSizeSplits',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'axis',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ScatterNd',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'GatherNd',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'slice_join',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'sparseIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'outputShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'sparseValues',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': false,\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'SparseFillEmptyRows',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'values',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'denseShape',\n                'type': 'tensor'\n            },\n            {\n                'start': 3,\n                'name': 'defaultValue',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseReshape',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'inputIndices',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'inputShape',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'newShape',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseSegmentMean',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'segmentIds',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SparseSegmentSum',\n        'category': 'sparse',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'indices',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'name': 'segmentIds',\n                'type': 'tensor'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhcnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb252ZXJ0ZXIvc3JjL29wZXJhdGlvbnMvb3BfbGlzdC9zcGFyc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBSUgsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFlO0lBQzlCO1FBQ0UsVUFBVSxFQUFFLHFCQUFxQjtRQUNqQyxVQUFVLEVBQUUsUUFBUTtRQUNwQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsU0FBUztnQkFDakIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsWUFBWTtnQkFDcEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsY0FBYztnQkFDdEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsZUFBZTtRQUMzQixVQUFVLEVBQUUsUUFBUTtRQUNwQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsY0FBYztnQkFDdEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsWUFBWTtnQkFDcEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxHQUFHO2dCQUNiLE1BQU0sRUFBRSxPQUFPO2dCQUNmLE1BQU0sRUFBRSxPQUFPO2dCQUNmLGNBQWMsRUFBRSxJQUFJO2FBQ3JCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLG1CQUFtQjtRQUMvQixVQUFVLEVBQUUsUUFBUTtRQUNwQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsTUFBTTtnQkFDZCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxTQUFTO2dCQUNqQixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxZQUFZO2dCQUNwQixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO0tBQ0Y7SUFDRDtRQUNFLFVBQVUsRUFBRSxrQkFBa0I7UUFDOUIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsU0FBUztnQkFDakIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsWUFBWTtnQkFDcEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge09wTWFwcGVyfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBqc29uOiBPcE1hcHBlcltdID0gW1xuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1NwYXJzZUZpbGxFbXB0eVJvd3MnLFxuICAgICdjYXRlZ29yeSc6ICdzcGFyc2UnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2luZGljZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICd2YWx1ZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdkZW5zZVNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMyxcbiAgICAgICAgJ25hbWUnOiAnZGVmYXVsdFZhbHVlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdTcGFyc2VSZXNoYXBlJyxcbiAgICAnY2F0ZWdvcnknOiAnc3BhcnNlJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdpbnB1dEluZGljZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAxLFxuICAgICAgICAnbmFtZSc6ICdpbnB1dFNoYXBlJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMixcbiAgICAgICAgJ25hbWUnOiAnbmV3U2hhcGUnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnVCcsXG4gICAgICAgICduYW1lJzogJ2R0eXBlJyxcbiAgICAgICAgJ3R5cGUnOiAnZHR5cGUnLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdTcGFyc2VTZWdtZW50TWVhbicsXG4gICAgJ2NhdGVnb3J5JzogJ3NwYXJzZScsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnZGF0YScsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2luZGljZXMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAyLFxuICAgICAgICAnbmFtZSc6ICdzZWdtZW50SWRzJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdTcGFyc2VTZWdtZW50U3VtJyxcbiAgICAnY2F0ZWdvcnknOiAnc3BhcnNlJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdkYXRhJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnaW5kaWNlcycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDIsXG4gICAgICAgICduYW1lJzogJ3NlZ21lbnRJZHMnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXVxuICB9XG5dO1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'FFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'RFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IRFFT',\n        'category': 'spectral',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RyYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvb3BlcmF0aW9ucy9vcF9saXN0L3NwZWN0cmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBZTtJQUM5QjtRQUNFLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFVBQVUsRUFBRSxVQUFVO1FBQ3RCLFFBQVEsRUFBRTtZQUNSO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxHQUFHO2dCQUNYLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1NBQ0Y7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLE1BQU07UUFDbEIsVUFBVSxFQUFFLFVBQVU7UUFDdEIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsTUFBTTtRQUNsQixVQUFVLEVBQUUsVUFBVTtRQUN0QixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxZQUFZO2dCQUNwQixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsY0FBYyxFQUFFLElBQUk7YUFDckI7U0FDRjtLQUNGO0lBQ0Q7UUFDRSxVQUFVLEVBQUUsT0FBTztRQUNuQixVQUFVLEVBQUUsVUFBVTtRQUN0QixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsR0FBRztnQkFDWCxNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE1BQU0sRUFBRSxZQUFZO2dCQUNwQixNQUFNLEVBQUUsUUFBUTtnQkFDaEIsY0FBYyxFQUFFLElBQUk7YUFDckI7U0FDRjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge09wTWFwcGVyfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBqc29uOiBPcE1hcHBlcltdID0gW1xuICB7XG4gICAgJ3RmT3BOYW1lJzogJ0ZGVCcsXG4gICAgJ2NhdGVnb3J5JzogJ3NwZWN0cmFsJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd4JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdJRkZUJyxcbiAgICAnY2F0ZWdvcnknOiAnc3BlY3RyYWwnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ3gnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgJ3RmT3BOYW1lJzogJ1JGRlQnLFxuICAgICdjYXRlZ29yeSc6ICdzcGVjdHJhbCcsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAneCcsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDEsXG4gICAgICAgICduYW1lJzogJ2ZmdF9sZW5ndGgnLFxuICAgICAgICAndHlwZSc6ICdudW1iZXInLFxuICAgICAgICAnbm90U3VwcG9ydGVkJzogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgICd0Zk9wTmFtZSc6ICdJUkZGVCcsXG4gICAgJ2NhdGVnb3J5JzogJ3NwZWN0cmFsJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICd4JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnZmZ0X2xlbmd0aCcsXG4gICAgICAgICd0eXBlJzogJ251bWJlcicsXG4gICAgICAgICdub3RTdXBwb3J0ZWQnOiB0cnVlXG4gICAgICB9XG4gICAgXVxuICB9XG5dO1xuIl19","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'StringNGrams',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'data',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'dataSplits',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'separator',\n                'name': 'separator',\n                'type': 'string'\n            },\n            {\n                'tfName': 'ngram_widths',\n                'name': 'nGramWidths',\n                'type': 'number[]'\n            },\n            {\n                'tfName': 'left_pad',\n                'name': 'leftPad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'right_pad',\n                'name': 'rightPad',\n                'type': 'string'\n            },\n            {\n                'tfName': 'pad_width',\n                'name': 'padWidth',\n                'type': 'number'\n            },\n            {\n                'tfName': 'preserve_short_sequences',\n                'name': 'preserveShortSequences',\n                'type': 'bool'\n            }\n        ],\n        'outputs': [\n            'ngrams',\n            'ngrams_splits'\n        ]\n    },\n    {\n        'tfOpName': 'StringSplit',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'delimiter',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'skip_empty',\n                'name': 'skipEmpty',\n                'type': 'bool'\n            }\n        ],\n        'outputs': [\n            'indices',\n            'values',\n            'shape'\n        ]\n    },\n    {\n        'tfOpName': 'StringToHashBucketFast',\n        'category': 'string',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'input',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_buckets',\n                'name': 'numBuckets',\n                'type': 'number'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb252ZXJ0ZXIvc3JjL29wZXJhdGlvbnMvb3BfbGlzdC9zdHJpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBSUgsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFlO0lBQzlCO1FBQ0UsVUFBVSxFQUFFLGNBQWM7UUFDMUIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsWUFBWTtnQkFDcEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixNQUFNLEVBQUUsV0FBVztnQkFDbkIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxRQUFRLEVBQUUsY0FBYztnQkFDeEIsTUFBTSxFQUFFLGFBQWE7Z0JBQ3JCLE1BQU0sRUFBRSxVQUFVO2FBQ25CO1lBQ0Q7Z0JBQ0UsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLE1BQU0sRUFBRSxTQUFTO2dCQUNqQixNQUFNLEVBQUUsUUFBUTthQUNqQjtZQUNEO2dCQUNFLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxRQUFRLEVBQUUsV0FBVztnQkFDckIsTUFBTSxFQUFFLFVBQVU7Z0JBQ2xCLE1BQU0sRUFBRSxRQUFRO2FBQ2pCO1lBQ0Q7Z0JBQ0UsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsTUFBTSxFQUFFLHdCQUF3QjtnQkFDaEMsTUFBTSxFQUFFLE1BQU07YUFDZjtTQUNGO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsUUFBUTtZQUNSLGVBQWU7U0FDaEI7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLGFBQWE7UUFDekIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsT0FBTyxFQUFFLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLE9BQU87Z0JBQ2YsTUFBTSxFQUFFLFFBQVE7YUFDakI7WUFDRDtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsV0FBVztnQkFDbkIsTUFBTSxFQUFFLFFBQVE7YUFDakI7U0FDRjtRQUNELE9BQU8sRUFBRTtZQUNQO2dCQUNFLFFBQVEsRUFBRSxZQUFZO2dCQUN0QixNQUFNLEVBQUUsV0FBVztnQkFDbkIsTUFBTSxFQUFFLE1BQU07YUFDZjtTQUNGO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsU0FBUztZQUNULFFBQVE7WUFDUixPQUFPO1NBQ1I7S0FDRjtJQUNEO1FBQ0UsVUFBVSxFQUFFLHdCQUF3QjtRQUNwQyxVQUFVLEVBQUUsUUFBUTtRQUNwQixRQUFRLEVBQUU7WUFDUjtnQkFDRSxPQUFPLEVBQUUsQ0FBQztnQkFDVixNQUFNLEVBQUUsT0FBTztnQkFDZixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO1FBQ0QsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLE1BQU0sRUFBRSxZQUFZO2dCQUNwQixNQUFNLEVBQUUsUUFBUTthQUNqQjtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7T3BNYXBwZXJ9IGZyb20gJy4uL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGpzb246IE9wTWFwcGVyW10gPSBbXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnU3RyaW5nTkdyYW1zJyxcbiAgICAnY2F0ZWdvcnknOiAnc3RyaW5nJyxcbiAgICAnaW5wdXRzJzogW1xuICAgICAge1xuICAgICAgICAnc3RhcnQnOiAwLFxuICAgICAgICAnbmFtZSc6ICdkYXRhJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnZGF0YVNwbGl0cycsXG4gICAgICAgICd0eXBlJzogJ3RlbnNvcidcbiAgICAgIH1cbiAgICBdLFxuICAgICdhdHRycyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdzZXBhcmF0b3InLFxuICAgICAgICAnbmFtZSc6ICdzZXBhcmF0b3InLFxuICAgICAgICAndHlwZSc6ICdzdHJpbmcnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ25ncmFtX3dpZHRocycsXG4gICAgICAgICduYW1lJzogJ25HcmFtV2lkdGhzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyW10nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ2xlZnRfcGFkJyxcbiAgICAgICAgJ25hbWUnOiAnbGVmdFBhZCcsXG4gICAgICAgICd0eXBlJzogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAncmlnaHRfcGFkJyxcbiAgICAgICAgJ25hbWUnOiAncmlnaHRQYWQnLFxuICAgICAgICAndHlwZSc6ICdzdHJpbmcnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ3BhZF93aWR0aCcsXG4gICAgICAgICduYW1lJzogJ3BhZFdpZHRoJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3RmTmFtZSc6ICdwcmVzZXJ2ZV9zaG9ydF9zZXF1ZW5jZXMnLFxuICAgICAgICAnbmFtZSc6ICdwcmVzZXJ2ZVNob3J0U2VxdWVuY2VzJyxcbiAgICAgICAgJ3R5cGUnOiAnYm9vbCdcbiAgICAgIH1cbiAgICBdLFxuICAgICdvdXRwdXRzJzogW1xuICAgICAgJ25ncmFtcycsXG4gICAgICAnbmdyYW1zX3NwbGl0cydcbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnU3RyaW5nU3BsaXQnLFxuICAgICdjYXRlZ29yeSc6ICdzdHJpbmcnLFxuICAgICdpbnB1dHMnOiBbXG4gICAgICB7XG4gICAgICAgICdzdGFydCc6IDAsXG4gICAgICAgICduYW1lJzogJ2lucHV0JyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMSxcbiAgICAgICAgJ25hbWUnOiAnZGVsaW1pdGVyJyxcbiAgICAgICAgJ3R5cGUnOiAndGVuc29yJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2F0dHJzJzogW1xuICAgICAge1xuICAgICAgICAndGZOYW1lJzogJ3NraXBfZW1wdHknLFxuICAgICAgICAnbmFtZSc6ICdza2lwRW1wdHknLFxuICAgICAgICAndHlwZSc6ICdib29sJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ291dHB1dHMnOiBbXG4gICAgICAnaW5kaWNlcycsXG4gICAgICAndmFsdWVzJyxcbiAgICAgICdzaGFwZSdcbiAgICBdXG4gIH0sXG4gIHtcbiAgICAndGZPcE5hbWUnOiAnU3RyaW5nVG9IYXNoQnVja2V0RmFzdCcsXG4gICAgJ2NhdGVnb3J5JzogJ3N0cmluZycsXG4gICAgJ2lucHV0cyc6IFtcbiAgICAgIHtcbiAgICAgICAgJ3N0YXJ0JzogMCxcbiAgICAgICAgJ25hbWUnOiAnaW5wdXQnLFxuICAgICAgICAndHlwZSc6ICd0ZW5zb3InXG4gICAgICB9XG4gICAgXSxcbiAgICAnYXR0cnMnOiBbXG4gICAgICB7XG4gICAgICAgICd0Zk5hbWUnOiAnbnVtX2J1Y2tldHMnLFxuICAgICAgICAnbmFtZSc6ICdudW1CdWNrZXRzJyxcbiAgICAgICAgJ3R5cGUnOiAnbnVtYmVyJ1xuICAgICAgfVxuICAgIF1cbiAgfVxuXTtcbiJdfQ==","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'Cast',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'SrcT',\n                'name': 'sdtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'DstT',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'ExpandDims',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'axis',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MirrorPad',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'mode',\n                'name': 'mode',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pad',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'constant_value',\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'PadV2',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'padding',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reshape',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Squeeze',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'tfDeprecatedName': 'squeeze_dims',\n                'name': 'axis',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'SpaceToBatchND',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'blockShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'paddings',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchToSpaceND',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'blockShape',\n                'type': 'number[]'\n            },\n            {\n                'start': 2,\n                'name': 'crops',\n                'type': 'number[]'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthToSpace',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'block_size',\n                'name': 'blockSize',\n                'type': 'number'\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BroadcastTo',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'shape',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': []\n    },\n    {\n        'tfOpName': 'BroadcastArgs',\n        'category': 'transformation',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 's0',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 's1',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': []\n    }\n];\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '@tensorflow/tfjs-core';\nimport * as tensorflow from '../data/compiled_api';\nimport { getRegisteredOp } from './custom_op/register';\nimport { getNodeNameAndIndex } from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as hashTable from './op_list/hash_table';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as sparse from './op_list/sparse';\nimport * as spectral from './op_list/spectral';\nimport * as string from './op_list/string';\nimport * as transformation from './op_list/transformation';\nexport class OperationMapper {\n    // Singleton instance for the mapper\n    static get Instance() {\n        return this._instance || (this._instance = new this());\n    }\n    // Loads the op mapping from the JSON file.\n    constructor() {\n        const ops = [\n            arithmetic, basicMath, control, convolution, creation, dynamic,\n            evaluation, graph, hashTable, image, logical, matrices, normalization,\n            reduction, sliceJoin, sparse, spectral, string, transformation\n        ];\n        const mappersJson = [].concat(...ops.map(op => op.json));\n        this.opMappers = mappersJson.reduce((map, mapper) => {\n            map[mapper.tfOpName] = mapper;\n            return map;\n        }, {});\n    }\n    // Converts the model inference graph from Tensorflow GraphDef to local\n    // representation for TensorFlow.js API\n    transformGraph(graph, signature = {}) {\n        const tfNodes = graph.node;\n        const placeholders = [];\n        const weights = [];\n        const initNodes = [];\n        const nodes = tfNodes.reduce((map, node) => {\n            map[node.name] = this.mapNode(node);\n            if (node.op.startsWith('Placeholder')) {\n                placeholders.push(map[node.name]);\n            }\n            else if (node.op === 'Const') {\n                weights.push(map[node.name]);\n            }\n            else if (node.input == null || node.input.length === 0) {\n                initNodes.push(map[node.name]);\n            }\n            return map;\n        }, {});\n        let inputs = [];\n        const outputs = [];\n        let inputNodeNameToKey = {};\n        let outputNodeNameToKey = {};\n        if (signature != null) {\n            inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n            outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n        }\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach((name, index) => {\n                const [nodeName, , outputName] = getNodeNameAndIndex(name);\n                const inputNode = nodes[nodeName];\n                if (inputNode.outputs != null) {\n                    const outputIndex = inputNode.outputs.indexOf(outputName);\n                    if (outputIndex !== -1) {\n                        const inputName = `${nodeName}:${outputIndex}`;\n                        // update the input name to use the mapped output index directly.\n                        node.inputNames[index] = inputName;\n                    }\n                }\n                node.inputs.push(inputNode);\n                inputNode.children.push(node);\n            });\n        });\n        // if signature has not outputs set, add any node that does not have\n        // outputs.\n        if (Object.keys(outputNodeNameToKey).length === 0) {\n            allNodes.forEach(key => {\n                const node = nodes[key];\n                if (node.children.length === 0) {\n                    outputs.push(node);\n                }\n            });\n        }\n        else {\n            Object.keys(outputNodeNameToKey).forEach(name => {\n                const [nodeName,] = getNodeNameAndIndex(name);\n                const node = nodes[nodeName];\n                if (node != null) {\n                    node.signatureKey = outputNodeNameToKey[name];\n                    outputs.push(node);\n                }\n            });\n        }\n        if (Object.keys(inputNodeNameToKey).length > 0) {\n            Object.keys(inputNodeNameToKey).forEach(name => {\n                const [nodeName,] = getNodeNameAndIndex(name);\n                const node = nodes[nodeName];\n                if (node) {\n                    node.signatureKey = inputNodeNameToKey[name];\n                    inputs.push(node);\n                }\n            });\n        }\n        else {\n            inputs = placeholders;\n        }\n        let functions = {};\n        if (graph.library != null && graph.library.function != null) {\n            functions = graph.library.function.reduce((functions, func) => {\n                functions[func.signature.name] = this.mapFunction(func);\n                return functions;\n            }, {});\n        }\n        const result = { nodes, inputs, outputs, weights, placeholders, signature, functions };\n        if (initNodes.length > 0) {\n            result.initNodes = initNodes;\n        }\n        return result;\n    }\n    mapSignatureEntries(entries) {\n        return Object.keys(entries || {})\n            .reduce((prev, curr) => {\n            prev[entries[curr].name] = curr;\n            return prev;\n        }, {});\n    }\n    mapNode(node) {\n        // Unsupported ops will cause an error at run-time (not parse time), since\n        // they may not be used by the actual execution subgraph.\n        const mapper = getRegisteredOp(node.op) || this.opMappers[node.op] || {};\n        if (node.attr == null) {\n            node.attr = {};\n        }\n        const newNode = {\n            name: node.name,\n            op: node.op,\n            category: mapper.category,\n            inputNames: (node.input ||\n                []).map(input => input.startsWith('^') ? input.slice(1) : input),\n            inputs: [],\n            children: [],\n            inputParams: {},\n            attrParams: {},\n            rawAttrs: node.attr,\n            outputs: mapper.outputs\n        };\n        if (mapper.inputs != null) {\n            newNode.inputParams =\n                mapper.inputs.reduce((map, param) => {\n                    map[param.name] = {\n                        type: param.type,\n                        inputIndexStart: param.start,\n                        inputIndexEnd: param.end\n                    };\n                    return map;\n                }, {});\n        }\n        if (mapper.attrs != null) {\n            newNode.attrParams =\n                mapper.attrs.reduce((map, param) => {\n                    const type = param.type;\n                    let value = undefined;\n                    switch (param.type) {\n                        case 'string':\n                            value = getStringParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'string[]':\n                            value = getStringArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number':\n                            value = getNumberParam(node.attr, param.tfName, (param.defaultValue || 0));\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumberParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number[]':\n                            value = getNumericArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumericArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool':\n                            value = getBoolParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool[]':\n                            value = getBoolArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape':\n                            value = getTensorShapeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape[]':\n                            value = getTensorShapeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype':\n                            value = getDtypeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype[]':\n                            value = getDtypeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'func':\n                            value = getFuncParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getFuncParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'tensor':\n                        case 'tensors':\n                            break;\n                        default:\n                            throw new Error(`Unsupported param type: ${param.type} for op: ${node.op}`);\n                    }\n                    map[param.name] = { value, type };\n                    return map;\n                }, {});\n        }\n        return newNode;\n    }\n    // map the TFunctionDef to TFJS graph object\n    mapFunction(functionDef) {\n        const tfNodes = functionDef.nodeDef;\n        const placeholders = [];\n        const weights = [];\n        let nodes = {};\n        if (tfNodes != null) {\n            nodes = tfNodes.reduce((map, node) => {\n                map[node.name] = this.mapNode(node);\n                if (node.op === 'Const') {\n                    weights.push(map[node.name]);\n                }\n                return map;\n            }, {});\n        }\n        const inputs = [];\n        const outputs = [];\n        functionDef.signature.inputArg.forEach(arg => {\n            const [nodeName,] = getNodeNameAndIndex(arg.name);\n            const node = {\n                name: nodeName,\n                op: 'Placeholder',\n                inputs: [],\n                inputNames: [],\n                category: 'graph',\n                inputParams: {},\n                attrParams: { dtype: { value: parseDtypeParam(arg.type), type: 'dtype' } },\n                children: []\n            };\n            node.signatureKey = arg.name;\n            inputs.push(node);\n            nodes[nodeName] = node;\n        });\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach((name, index) => {\n                const [nodeName, , outputName] = getNodeNameAndIndex(name);\n                const inputNode = nodes[nodeName];\n                if (inputNode.outputs != null) {\n                    const outputIndex = inputNode.outputs.indexOf(outputName);\n                    if (outputIndex !== -1) {\n                        const inputName = `${nodeName}:${outputIndex}`;\n                        // update the input name to use the mapped output index directly.\n                        node.inputNames[index] = inputName;\n                    }\n                }\n                node.inputs.push(inputNode);\n                inputNode.children.push(node);\n            });\n        });\n        const returnNodeMap = functionDef.ret;\n        functionDef.signature.outputArg.forEach(output => {\n            const [nodeName, index] = getNodeNameAndIndex(returnNodeMap[output.name]);\n            const node = nodes[nodeName];\n            if (node != null) {\n                node.defaultOutput = index;\n                outputs.push(node);\n            }\n        });\n        const signature = this.mapArgsToSignature(functionDef);\n        return { nodes, inputs, outputs, weights, placeholders, signature };\n    }\n    mapArgsToSignature(functionDef) {\n        return {\n            methodName: functionDef.signature.name,\n            inputs: functionDef.signature.inputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg);\n                return map;\n            }, {}),\n            outputs: functionDef.signature.outputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg, functionDef.ret);\n                return map;\n            }, {}),\n        };\n    }\n    mapArgToTensorInfo(arg, nameMap) {\n        let name = arg.name;\n        if (nameMap != null) {\n            name = nameMap[name];\n        }\n        return { name, dtype: arg.type };\n    }\n}\nexport function decodeBase64(text) {\n    const global = env().global;\n    if (typeof global.atob !== 'undefined') {\n        return global.atob(text);\n    }\n    else if (typeof Buffer !== 'undefined') {\n        return new Buffer(text, 'base64').toString();\n    }\n    else {\n        throw new Error('Unable to decode base64 in this environment. ' +\n            'Missing built-in atob() or Buffer()');\n    }\n}\nexport function parseStringParam(s, keepCase) {\n    const value = Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n    return keepCase ? value : value.toLowerCase();\n}\nexport function getStringParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param != null) {\n        return parseStringParam(param.s, keepCase);\n    }\n    return def;\n}\nexport function getBoolParam(attrs, name, def) {\n    const param = attrs[name];\n    return param ? param.b : def;\n}\nexport function getNumberParam(attrs, name, def) {\n    const param = attrs[name] || {};\n    const value = param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n    return (typeof value === 'number') ? value : parseInt(value, 10);\n}\nexport function parseDtypeParam(value) {\n    if (typeof (value) === 'string') {\n        // tslint:disable-next-line:no-any\n        value = tensorflow.DataType[value];\n    }\n    switch (value) {\n        case tensorflow.DataType.DT_FLOAT:\n        case tensorflow.DataType.DT_HALF:\n            return 'float32';\n        case tensorflow.DataType.DT_INT32:\n        case tensorflow.DataType.DT_INT64:\n        case tensorflow.DataType.DT_INT8:\n        case tensorflow.DataType.DT_UINT8:\n            return 'int32';\n        case tensorflow.DataType.DT_BOOL:\n            return 'bool';\n        case tensorflow.DataType.DT_DOUBLE:\n            return 'float32';\n        case tensorflow.DataType.DT_STRING:\n            return 'string';\n        default:\n            // Unknown dtype error will happen at runtime (instead of parse time),\n            // since these nodes might not be used by the actual subgraph execution.\n            return null;\n    }\n}\nexport function getFuncParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.func) {\n        return param.func.name;\n    }\n    return def;\n}\nexport function getDtypeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.type) {\n        return parseDtypeParam(param.type);\n    }\n    return def;\n}\nexport function getDtypeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.type) {\n        return param.list.type.map(v => parseDtypeParam(v));\n    }\n    return def;\n}\nexport function parseTensorShapeParam(shape) {\n    if (shape.unknownRank) {\n        return undefined;\n    }\n    if (shape.dim != null) {\n        return shape.dim.map(dim => (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n    }\n    return [];\n}\nexport function getTensorShapeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.shape) {\n        return parseTensorShapeParam(param.shape);\n    }\n    return def;\n}\nexport function getNumericArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param) {\n        return ((param.list.f && param.list.f.length ? param.list.f :\n            param.list.i) ||\n            [])\n            .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n    }\n    return def;\n}\nexport function getStringArrayParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param && param.list && param.list.s) {\n        return param.list.s.map((v) => {\n            return parseStringParam(v, keepCase);\n        });\n    }\n    return def;\n}\nexport function getTensorShapeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.shape) {\n        return param.list.shape.map((v) => {\n            return parseTensorShapeParam(v);\n        });\n    }\n    return def;\n}\nexport function getBoolArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.b) {\n        return param.list.b;\n    }\n    return def;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getTensor } from '../executors/utils';\nimport { getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam } from '../operation_mapper';\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl {\n    constructor(node, tensorMap, context) {\n        this.node = node;\n        this.tensorMap = tensorMap;\n        this.context = context;\n        this.inputs = [];\n        this.attrs = {};\n        this.inputs = node.inputNames.map(name => this.getInput(name));\n        if (node.rawAttrs != null) {\n            this.attrs = Object.keys(node.rawAttrs)\n                .reduce((attrs, key) => {\n                attrs[key] = this.getAttr(key);\n                return attrs;\n            }, {});\n        }\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getInput(name) {\n        return getTensor(name, this.tensorMap, this.context);\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getAttr(name, defaultValue) {\n        const value = this.node.rawAttrs[name];\n        if (value.tensor != null) {\n            return getTensor(name, this.tensorMap, this.context);\n        }\n        if (value.i != null || value.f != null) {\n            return getNumberParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.s != null) {\n            return getStringParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.b != null) {\n            return getBoolParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.shape != null) {\n            return getTensorShapeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.type != null) {\n            return getDtypeParam(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.list != null) {\n            if (value.list.i != null || value.list.f != null) {\n                return getNumericArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.s != null) {\n                return getStringArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.shape != null) {\n                return getTensorShapeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.b != null) {\n                return getBoolArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.type != null) {\n                return getDtypeArrayParam(this.node.rawAttrs, name, defaultValue);\n            }\n        }\n        return defaultValue;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'BiasAdd':\n        case 'AddV2':\n        case 'Add': {\n            return [ops.add(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'AddN': {\n            return [ops.addN(getParamValue('tensors', node, tensorMap, context))];\n        }\n        case 'FloorMod':\n        case 'Mod':\n            return [ops.mod(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        case 'Mul':\n            return [ops.mul(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        case 'RealDiv':\n        case 'Div': {\n            return [ops.div(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'DivNoNan': {\n            return [ops.divNoNan(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'FloorDiv': {\n            return [ops.floorDiv(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Sub': {\n            return [ops.sub(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Minimum': {\n            return [ops.minimum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Maximum': {\n            return [ops.maximum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Pow': {\n            return [ops.pow(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'SquaredDifference': {\n            return [ops.squaredDifference(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'arithmetic';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\nimport { util } from '@tensorflow/tfjs-core';\n/**\n * Used by TensorList and TensorArray to verify if elementShape matches, support\n * negative value as the dim shape.\n * @param shapeA\n * @param shapeB\n * @param errorMessagePrefix\n */\nexport function assertShapesMatchAllowUndefinedSize(shapeA, shapeB, errorMessagePrefix = '') {\n    // constant shape means unknown rank\n    if (typeof shapeA === 'number' || typeof shapeB === 'number') {\n        return;\n    }\n    util.assert(shapeA.length === shapeB.length, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    for (let i = 0; i < shapeA.length; i++) {\n        const dim0 = shapeA[i];\n        const dim1 = shapeB[i];\n        util.assert(dim0 < 0 || dim1 < 0 || dim0 === dim1, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    }\n}\nexport function fullDefinedShape(elementShape) {\n    if (typeof elementShape === 'number' || elementShape.some(dim => dim < 0)) {\n        return false;\n    }\n    return true;\n}\n/**\n * Generate the output element shape from the list elementShape, list tensors\n * and input param.\n * @param listElementShape\n * @param tensors\n * @param elementShape\n */\nexport function inferElementShape(listElementShape, tensors, elementShape) {\n    let partialShape = mergeElementShape(listElementShape, elementShape);\n    const notfullDefinedShape = !fullDefinedShape(partialShape);\n    if (notfullDefinedShape && tensors.length === 0) {\n        throw new Error(`Tried to calculate elements of an empty list` +\n            ` with non-fully-defined elementShape: ${partialShape}`);\n    }\n    if (notfullDefinedShape) {\n        tensors.forEach(tensor => {\n            partialShape = mergeElementShape(tensor.shape, partialShape);\n        });\n    }\n    if (!fullDefinedShape(partialShape)) {\n        throw new Error(`Non-fully-defined elementShape: ${partialShape}`);\n    }\n    return partialShape;\n}\nexport function mergeElementShape(elementShapeA, elementShapeB) {\n    if (typeof elementShapeA === 'number') {\n        return elementShapeB;\n    }\n    if (typeof elementShapeB === 'number') {\n        return elementShapeA;\n    }\n    if (elementShapeA.length !== elementShapeB.length) {\n        throw new Error(`Incompatible ranks during merge: ${elementShapeA} vs. ${elementShapeB}`);\n    }\n    const result = [];\n    for (let i = 0; i < elementShapeA.length; ++i) {\n        const dim0 = elementShapeA[i];\n        const dim1 = elementShapeB[i];\n        if (dim0 >= 0 && dim1 >= 0 && dim0 !== dim1) {\n            throw new Error(`Incompatible shape during merge: ${elementShapeA} vs. ${elementShapeB}`);\n        }\n        result[i] = dim0 >= 0 ? dim0 : dim1;\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat, keep, reshape, scalar, slice, stack, tensor, tidy, unstack } from '@tensorflow/tfjs-core';\nimport { assertShapesMatchAllowUndefinedSize } from './tensor_utils';\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n    constructor(name, dtype, maxSize, elementShape, identicalElementShapes, dynamicSize, clearAfterRead) {\n        this.name = name;\n        this.dtype = dtype;\n        this.maxSize = maxSize;\n        this.elementShape = elementShape;\n        this.identicalElementShapes = identicalElementShapes;\n        this.dynamicSize = dynamicSize;\n        this.clearAfterRead = clearAfterRead;\n        this.tensors = [];\n        this.closed_ = false;\n        this.idTensor = scalar(0);\n        keep(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    get closed() {\n        return this.closed_;\n    }\n    /**\n     * Dispose the tensors and idTensor and mark the TensoryArray as closed.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.tensor.id)) {\n                tensor.tensor.dispose();\n            }\n        });\n        this.tensors = [];\n        this.closed_ = true;\n        this.idTensor.dispose();\n    }\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Read the value at location index in the TensorArray.\n     * @param index Number the index to read from.\n     */\n    read(index) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || index >= this.size()) {\n            throw new Error(`Tried to read from index ${index}, but array size is: ${this.size()}`);\n        }\n        const tensorWithState = this.tensors[index];\n        if (tensorWithState.cleared) {\n            throw new Error(`TensorArray ${this.name}: Could not read index ${index} twice because it was cleared after a previous read ` +\n                `(perhaps try setting clear_after_read = false?).`);\n        }\n        if (this.clearAfterRead) {\n            tensorWithState.cleared = true;\n        }\n        tensorWithState.read = true;\n        return tensorWithState.tensor;\n    }\n    /**\n     * Helper method to read multiple tensors from the specified indices.\n     */\n    readMany(indices) {\n        return indices.map(index => this.read(index));\n    }\n    /**\n     * Write value into the index of the TensorArray.\n     * @param index number the index to write to.\n     * @param tensor\n     */\n    write(index, tensor) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n            throw new Error(`Tried to write to index ${index}, but array is not resizeable and size is: ${this.maxSize}`);\n        }\n        const t = this.tensors[index] || {};\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n        }\n        // Set the shape for the first time write to unknow shape tensor array\n        if (this.size() === 0 &&\n            (this.elementShape == null || this.elementShape.length === 0)) {\n            this.elementShape = tensor.shape;\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensor.shape, `TensorArray ${this.name}: Could not write to TensorArray index ${index}.`);\n        if (t.read) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been read.`);\n        }\n        if (t.written) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been written.`);\n        }\n        t.tensor = tensor;\n        keep(tensor);\n        t.written = true;\n        this.tensors[index] = t;\n    }\n    /**\n     * Helper method to write multiple tensors to the specified indices.\n     */\n    writeMany(indices, tensors) {\n        if (indices.length !== tensors.length) {\n            throw new Error(`TensorArray ${this.name}: could not write multiple tensors,` +\n                `because the index size: ${indices.length} is not the same as tensors size: ${tensors.length}.`);\n        }\n        indices.forEach((i, index) => this.write(i, tensors[index]));\n    }\n    /**\n     * Return selected values in the TensorArray as a packed Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size(). If not specified returns\n     *    all tensors in the original order.\n     * @param [dtype]\n     */\n    gather(indices, dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${dtype}`);\n        }\n        if (!indices) {\n            indices = [];\n            for (let i = 0; i < this.size(); i++) {\n                indices.push(i);\n            }\n        }\n        else {\n            indices = indices.slice(0, this.size());\n        }\n        if (indices.length === 0) {\n            return tensor([], [0].concat(this.elementShape));\n        }\n        // Read all the PersistentTensors into a vector to keep track of\n        // their memory.\n        const tensors = this.readMany(indices);\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n        return stack(tensors, 0);\n    }\n    /**\n     * Return the values in the TensorArray as a concatenated Tensor.\n     */\n    concat(dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${dtype}`);\n        }\n        if (this.size() === 0) {\n            return tensor([], [0].concat(this.elementShape));\n        }\n        const indices = [];\n        for (let i = 0; i < this.size(); i++) {\n            indices.push(i);\n        }\n        // Collect all the tensors from the tensors array.\n        const tensors = this.readMany(indices);\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensors[0].shape, `TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n        return concat(tensors, 0);\n    }\n    /**\n     * Scatter the values of a Tensor in specific indices of a TensorArray.\n     * @param indices nummber[] values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size().\n     * @param tensor Tensor input tensor.\n     */\n    scatter(indices, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        if (indices.length !== tensor.shape[0]) {\n            throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n        }\n        const maxIndex = Math.max(...indices);\n        if (!this.dynamicSize && maxIndex >= this.maxSize) {\n            throw new Error(`Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n        }\n        this.writeMany(indices, unstack(tensor, 0));\n    }\n    /**\n     * Split the values of a Tensor into the TensorArray.\n     * @param length number[] with the lengths to use when splitting value along\n     *    its first dimension.\n     * @param tensor Tensor, the tensor to split.\n     */\n    split(length, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        let totalLength = 0;\n        const cumulativeLengths = length.map(len => {\n            totalLength += len;\n            return totalLength;\n        });\n        if (totalLength !== tensor.shape[0]) {\n            throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n        }\n        if (!this.dynamicSize && length.length !== this.maxSize) {\n            throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${length.length}), ` +\n                'and the TensorArray is not marked as dynamically resizeable');\n        }\n        const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n        const tensors = [];\n        tidy(() => {\n            tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n            for (let i = 0; i < length.length; ++i) {\n                const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n                const indices = [0, previousLength, 0];\n                const sizes = [1, length[i], elementPerRow];\n                tensors[i] = reshape(slice(tensor, indices, sizes), this.elementShape);\n            }\n            return tensors;\n        });\n        const indices = [];\n        for (let i = 0; i < length.length; i++) {\n            indices[i] = i;\n        }\n        this.writeMany(indices, tensors);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { concat, keep, reshape, scalar, slice, stack, tensor, tidy, unstack } from '@tensorflow/tfjs-core';\nimport { assertShapesMatchAllowUndefinedSize, inferElementShape, mergeElementShape } from './tensor_utils';\n/**\n * TensorList stores a container of `tf.Tensor` objects, which are accessible\n * via tensors field.\n *\n * In order to get a copy of the underlying list, use the copy method:\n * ```\n *    TensorList b = a.copy();\n *    b.tensors().pushBack(t);  // This does not modify a.tensors().\n * ```\n *\n * Note that this is not a deep copy: the memory locations of the underlying\n * tensors will still point to the same locations of the corresponding tensors\n * in the original.\n */\nexport class TensorList {\n    /**\n     *\n     * @param tensors list of tensors\n     * @param elementShape shape of each tensor, this can be a single number (any\n     * shape is allowed) or partial shape (dim = -1).\n     * @param elementDtype data type of each tensor\n     * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1\n     *   meaning that the size of `tensors` is unbounded.\n     */\n    constructor(tensors, elementShape, elementDtype, maxNumElements = -1) {\n        this.tensors = tensors;\n        this.elementShape = elementShape;\n        this.elementDtype = elementDtype;\n        if (tensors != null) {\n            tensors.forEach(tensor => {\n                if (elementDtype !== tensor.dtype) {\n                    throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${tensor.dtype}`);\n                }\n                assertShapesMatchAllowUndefinedSize(elementShape, tensor.shape, 'TensorList shape mismatch: ');\n                keep(tensor);\n            });\n        }\n        this.idTensor = scalar(0);\n        this.maxNumElements = maxNumElements;\n        keep(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    /**\n     * Get a new TensorList containing a copy of the underlying tensor container.\n     */\n    copy() {\n        return new TensorList([...this.tensors], this.elementShape, this.elementDtype);\n    }\n    /**\n     * Dispose the tensors and idTensor and clear the tensor list.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.id)) {\n                tensor.dispose();\n            }\n        });\n        this.tensors.length = 0;\n        this.idTensor.dispose();\n    }\n    /**\n     * The size of the tensors in the tensor list.\n     */\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)\n     * tf.Tensor.\n     * @param elementShape shape of each tensor\n     * @param elementDtype data type of each tensor\n     * @param numElements the number of elements to stack\n     */\n    stack(elementShape, elementDtype, numElements = -1) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (numElements !== -1 && this.tensors.length !== numElements) {\n            throw new Error(`Operation expected a list with ${numElements} elements but got a list with ${this.tensors.length} elements.`);\n        }\n        assertShapesMatchAllowUndefinedSize(elementShape, this.elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        return tidy(() => {\n            const reshapedTensors = this.tensors.map(tensor => reshape(tensor, outputElementShape));\n            return stack(reshapedTensors, 0);\n        });\n    }\n    /**\n     * Pop a tensor from the end of the list.\n     * @param elementShape shape of the tensor\n     * @param elementDtype data type of the tensor\n     */\n    popBack(elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (this.size() === 0) {\n            throw new Error('Trying to pop from an empty list.');\n        }\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        const tensor = this.tensors.pop();\n        tensor.kept = false;\n        assertShapesMatchAllowUndefinedSize(tensor.shape, elementShape, 'TensorList shape mismatch: ');\n        return reshape(tensor, outputElementShape);\n    }\n    /**\n     * Push a tensor to the end of the list.\n     * @param tensor Tensor to be pushed.\n     */\n    pushBack(tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(tensor.shape, this.elementShape, 'TensorList shape mismatch: ');\n        if (this.maxNumElements === this.size()) {\n            throw new Error(`Trying to push element into a full list.`);\n        }\n        keep(tensor);\n        this.tensors.push(tensor);\n    }\n    /**\n     * Update the size of the list.\n     * @param size the new size of the list.\n     */\n    resize(size) {\n        if (size < 0) {\n            throw new Error(`TensorListResize expects size to be non-negative. Got: ${size}`);\n        }\n        if (this.maxNumElements !== -1 && size > this.maxNumElements) {\n            throw new Error(`TensorListResize input size ${size} is greater maxNumElement ${this.maxNumElements}.`);\n        }\n        const destTensorList = new TensorList([], this.elementShape, this.elementDtype, this.maxNumElements);\n        destTensorList.tensors.length = size;\n        for (let i = 0; i < Math.min(this.tensors.length, size); ++i) {\n            destTensorList.tensors[i] = this.tensors[i];\n        }\n        return destTensorList;\n    }\n    /**\n     * Retrieve the element at the provided index\n     * @param elementShape shape of the tensor\n     * @param elementDtype dtype of the tensor\n     * @param elementIndex index of the tensor\n     */\n    getItem(elementIndex, elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 || elementIndex > this.tensors.length) {\n            throw new Error(`Trying to access element ${elementIndex} in a list with ${this.tensors.length} elements.`);\n        }\n        if (this.tensors[elementIndex] == null) {\n            throw new Error(`element at index ${elementIndex} is null.`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.tensors[elementIndex].shape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        return reshape(this.tensors[elementIndex], outputElementShape);\n    }\n    /**\n     * Set the tensor at the index\n     * @param elementIndex index of the tensor\n     * @param tensor the tensor to be inserted into the list\n     */\n    setItem(elementIndex, tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 ||\n            this.maxNumElements !== -1 && elementIndex >= this.maxNumElements) {\n            throw new Error(`Trying to set element ${elementIndex} in a list with max ${this.maxNumElements} elements.`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, tensor.shape, 'TensorList shape mismatch: ');\n        keep(tensor);\n        // dispose the previous value if it is replacing.\n        if (this.tensors[elementIndex] != null) {\n            this.tensors[elementIndex].kept = false;\n        }\n        this.tensors[elementIndex] = tensor;\n    }\n    /**\n     * Return selected values in the TensorList as a stacked Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param indices indices of tensors to gather\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    gather(indices, elementDtype, elementShape) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        // When indices is greater than the size of the list, indices beyond the\n        // size of the list are ignored.\n        indices = indices.slice(0, this.size());\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        if (indices.length === 0) {\n            return tensor([], [0].concat(outputElementShape));\n        }\n        return tidy(() => {\n            const tensors = indices.map(i => reshape(this.tensors[i], outputElementShape));\n            return stack(tensors, 0);\n        });\n    }\n    /**\n     * Return the values in the TensorList as a concatenated Tensor.\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    concat(elementDtype, elementShape) {\n        if (!!elementDtype && elementDtype !== this.elementDtype) {\n            throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${elementDtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = inferElementShape(this.elementShape, this.tensors, elementShape);\n        if (this.size() === 0) {\n            return tensor([], [0].concat(outputElementShape));\n        }\n        return tidy(() => {\n            const tensors = this.tensors.map(t => reshape(t, outputElementShape));\n            return concat(tensors, 0);\n        });\n    }\n}\n/**\n * Creates a TensorList which, when stacked, has the value of tensor.\n * @param tensor from tensor\n * @param elementShape output tensor element shape\n */\nexport function fromTensor(tensor, elementShape, elementDtype) {\n    const dtype = tensor.dtype;\n    if (tensor.shape.length < 1) {\n        throw new Error(`Tensor must be at least a vector, but saw shape: ${tensor.shape}`);\n    }\n    if (tensor.dtype !== elementDtype) {\n        throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${elementDtype}`);\n    }\n    const tensorElementShape = tensor.shape.slice(1);\n    assertShapesMatchAllowUndefinedSize(tensorElementShape, elementShape, 'TensorList shape mismatch: ');\n    const tensorList = unstack(tensor);\n    return new TensorList(tensorList, elementShape, dtype);\n}\n/**\n * Return a TensorList of the given size with empty elements.\n * @param elementShape the shape of the future elements of the list\n * @param elementDtype the desired type of elements in the list\n * @param numElements the number of elements to reserve\n * @param maxNumElements the maximum number of elements in th list\n */\nexport function reserve(elementShape, elementDtype, numElements, maxNumElements) {\n    return new TensorList([], elementShape, elementDtype, maxNumElements);\n}\n/**\n * Put tensors at specific indices of a stacked tensor into a TensorList.\n * @param indices list of indices on how to scatter the tensor.\n * @param tensor input tensor.\n * @param elementShape the shape of the future elements of the list\n * @param numElements the number of elements to scatter\n */\nexport function scatter(tensor, indices, elementShape, numElements) {\n    if (indices.length !== tensor.shape[0]) {\n        throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n    }\n    const maxIndex = Math.max(...indices);\n    if (numElements != null && numElements !== -1 && maxIndex >= numElements) {\n        throw new Error(`Max index must be < array size (${maxIndex}  vs. ${numElements})`);\n    }\n    const list = new TensorList([], elementShape, tensor.dtype, numElements);\n    const tensors = unstack(tensor, 0);\n    indices.forEach((value, index) => {\n        list.setItem(value, tensors[index]);\n    });\n    return list;\n}\n/**\n * Split the values of a Tensor into a TensorList.\n * @param length the lengths to use when splitting value along\n *    its first dimension.\n * @param tensor the tensor to split.\n * @param elementShape the shape of the future elements of the list\n */\nexport function split(tensor, length, elementShape) {\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n        totalLength += len;\n        return totalLength;\n    });\n    if (totalLength !== tensor.shape[0]) {\n        throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n    const shapeWithoutFirstDim = tensor.shape.slice(1);\n    const outputElementShape = mergeElementShape(shapeWithoutFirstDim, elementShape);\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors = tidy(() => {\n        const tensors = [];\n        tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n        for (let i = 0; i < length.length; ++i) {\n            const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n            const indices = [0, previousLength, 0];\n            const sizes = [1, length[i], elementPerRow];\n            tensors[i] = reshape(slice(tensor, indices, sizes), outputElementShape);\n        }\n        tensor.dispose();\n        return tensors;\n    });\n    const list = new TensorList([], elementShape, tensor.dtype, length.length);\n    for (let i = 0; i < tensors.length; i++) {\n        list.setItem(i, tensors[i]);\n    }\n    return list;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { scalar } from '@tensorflow/tfjs-core';\nimport { TensorArray } from '../../executor/tensor_array';\nimport { fromTensor, reserve, scatter, split } from '../../executor/tensor_list';\nimport { cloneTensor, getParamValue, getTensor } from './utils';\nexport const executeOp = async (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'If':\n        case 'StatelessIf': {\n            const thenFunc = getParamValue('thenBranch', node, tensorMap, context);\n            const elseFunc = getParamValue('elseBranch', node, tensorMap, context);\n            const cond = getParamValue('cond', node, tensorMap, context);\n            const args = getParamValue('args', node, tensorMap, context);\n            const condValue = await cond.data();\n            if (condValue[0]) {\n                return context.functionMap[thenFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n            else {\n                return context.functionMap[elseFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n        }\n        case 'While':\n        case 'StatelessWhile': {\n            const bodyFunc = getParamValue('body', node, tensorMap, context);\n            const condFunc = getParamValue('cond', node, tensorMap, context);\n            const args = getParamValue('args', node, tensorMap, context);\n            // Calculate the condition of the loop\n            const condResult = (await context.functionMap[condFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap));\n            const argIds = args.map(tensor => tensor.id);\n            let condValue = await condResult[0].data();\n            // Dispose the intermediate tensors for condition function\n            condResult.forEach(tensor => {\n                if (!tensor.kept && argIds.indexOf(tensor.id) === -1) {\n                    tensor.dispose();\n                }\n            });\n            let result = args;\n            while (condValue[0]) {\n                // Record the previous result for intermediate tensor tracking\n                const origResult = result;\n                // Execution the body of the loop\n                result = await context.functionMap[bodyFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap);\n                const resultIds = result.map(tensor => tensor.id);\n                // Dispose the intermediate tensor for body function that is not global\n                // kept, not input/output of the body function\n                origResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n                // Recalcuate the condition of the loop using the latest results.\n                const condResult = (await context.functionMap[condFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap));\n                condValue = await condResult[0].data();\n                // Dispose the intermediate tensors for condition function\n                condResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n            }\n            return result;\n        }\n        case 'LoopCond': {\n            const pred = getParamValue('pred', node, tensorMap, context);\n            return [cloneTensor(pred)];\n        }\n        case 'Switch': {\n            const pred = getParamValue('pred', node, tensorMap, context);\n            let data = getParamValue('data', node, tensorMap, context);\n            if (!data.kept) {\n                data = cloneTensor(data);\n            }\n            // Outputs nodes :0 => false, :1 => true\n            return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n        }\n        case 'Merge': {\n            const inputName = node.inputNames.find(name => getTensor(name, tensorMap, context) !== undefined);\n            if (inputName) {\n                const data = getTensor(inputName, tensorMap, context);\n                return [cloneTensor(data)];\n            }\n            return undefined;\n        }\n        case 'Enter': {\n            const frameId = getParamValue('frameName', node, tensorMap, context);\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.enterFrame(frameId);\n            return [cloneTensor(data)];\n        }\n        case 'Exit': {\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.exitFrame();\n            return [cloneTensor(data)];\n        }\n        case 'NextIteration': {\n            const data = getParamValue('tensor', node, tensorMap, context);\n            context.nextIteration();\n            return [cloneTensor(data)];\n        }\n        case 'TensorArrayV3': {\n            const size = getParamValue('size', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const dynamicSize = getParamValue('dynamicSize', node, tensorMap, context);\n            const clearAfterRead = getParamValue('clearAfterRead', node, tensorMap, context);\n            const identicalElementShapes = getParamValue('identicalElementShapes', node, tensorMap, context);\n            const name = getParamValue('name', node, tensorMap, context);\n            const tensorArray = new TensorArray(name, dtype, size, elementShape, identicalElementShapes, dynamicSize, clearAfterRead);\n            context.addTensorArray(tensorArray);\n            return [tensorArray.idTensor, scalar(1.0)];\n        }\n        case 'TensorArrayWriteV3': {\n            const id = getParamValue('tensorArrayId', node, tensorMap, context);\n            const index = getParamValue('index', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const writeTensorArray = context.getTensorArray(id.id);\n            writeTensorArray.write(index, writeTensor);\n            return [writeTensorArray.idTensor];\n        }\n        case 'TensorArrayReadV3': {\n            const readId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const readIndex = getParamValue('index', node, tensorMap, context);\n            const readTensorArray = context.getTensorArray(readId.id);\n            return [readTensorArray.read(readIndex)];\n        }\n        case 'TensorArrayGatherV3': {\n            const gatherId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const gatherIndices = getParamValue('indices', node, tensorMap, context);\n            const gatherDtype = getParamValue('dtype', node, tensorMap, context);\n            const gatherTensorArray = context.getTensorArray(gatherId.id);\n            return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n        }\n        case 'TensorArrayScatterV3': {\n            const scatterId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const scatterIndices = getParamValue('indices', node, tensorMap, context);\n            const scatterTensor = getParamValue('tensor', node, tensorMap, context);\n            const scatterTensorArray = context.getTensorArray(scatterId.id);\n            scatterTensorArray.scatter(scatterIndices, scatterTensor);\n            return [scatterTensorArray.idTensor];\n        }\n        case 'TensorArrayConcatV3': {\n            const concatId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const concatTensorArray = context.getTensorArray(concatId.id);\n            const concatDtype = getParamValue('dtype', node, tensorMap, context);\n            return [concatTensorArray.concat(concatDtype)];\n        }\n        case 'TensorArraySplitV3': {\n            const splitId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const splitTensor = getParamValue('tensor', node, tensorMap, context);\n            const lengths = getParamValue('lengths', node, tensorMap, context);\n            const splitTensorArray = context.getTensorArray(splitId.id);\n            splitTensorArray.split(lengths, splitTensor);\n            return [splitTensorArray.idTensor];\n        }\n        case 'TensorArraySizeV3': {\n            const sizeId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const sizeTensorArray = context.getTensorArray(sizeId.id);\n            return [scalar(sizeTensorArray.size(), 'int32')];\n        }\n        case 'TensorArrayCloseV3': {\n            const closeId = getParamValue('tensorArrayId', node, tensorMap, context);\n            const closeTensorArray = context.getTensorArray(closeId.id);\n            closeTensorArray.clearAndClose();\n            return [closeTensorArray.idTensor];\n        }\n        case 'TensorListSetItem': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const index = getParamValue('index', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.setItem(index, writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGetItem': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const readIndex = getParamValue('index', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDType = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.getItem(readIndex, elementShape, elementDType)];\n        }\n        case 'TensorListScatterV2':\n        case 'TensorListScatter': {\n            const scatterIndices = getParamValue('indices', node, tensorMap, context);\n            const scatterTensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const numElements = getParamValue('numElements', node, tensorMap, context);\n            const tensorList = scatter(scatterTensor, scatterIndices, elementShape, numElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListReserve':\n        case 'EmptyTensorList': {\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            let numElementsParam;\n            if (node.op === 'TensorListReserve') {\n                numElementsParam = 'numElements';\n            }\n            else {\n                numElementsParam = 'maxNumElements';\n            }\n            const numElements = getParamValue(numElementsParam, node, tensorMap, context);\n            const maxNumElements = node.op === 'TensorListReserve' ? -1 : numElements;\n            const tensorList = reserve(elementShape, elementDtype, numElements, maxNumElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGather': {\n            const gatherId = getParamValue('tensorListId', node, tensorMap, context);\n            const gatherIndices = getParamValue('indices', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(gatherId.id);\n            return [tensorList.gather(gatherIndices, elementDtype, elementShape)];\n        }\n        case 'TensorListStack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const numElements = getParamValue('numElements', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.stack(elementShape, elementDtype, numElements)];\n        }\n        case 'TensorListFromTensor': {\n            const tensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDtype = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = fromTensor(tensor, elementShape, elementDtype);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListConcat':\n        case 'TensorListConcatV2': {\n            const concatId = getParamValue('tensorListId', node, tensorMap, context);\n            const tensorList = context.getTensorList(concatId.id);\n            const concatDtype = getParamValue('dtype', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            return [tensorList.concat(concatDtype, elementShape)];\n        }\n        case 'TensorListPushBack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const writeTensor = getParamValue('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.pushBack(writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListPopBack': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const elementDType = getParamValue('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.popBack(elementShape, elementDType)];\n        }\n        case 'TensorListSplit': {\n            const splitTensor = getParamValue('tensor', node, tensorMap, context);\n            const elementShape = getParamValue('elementShape', node, tensorMap, context);\n            const lengths = getParamValue('lengths', node, tensorMap, context);\n            const tensorList = split(splitTensor, lengths, elementShape);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListLength': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [scalar(tensorList.size(), 'int32')];\n        }\n        case 'TensorListResize': {\n            const idTensor = getParamValue('tensorListId', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const srcTensorList = context.getTensorList(idTensor.id);\n            const destTensorList = srcTensorList.resize(size);\n            context.addTensorList(destTensorList);\n            return [destTensorList.idTensor];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'control';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getPadding, getParamValue } from './utils';\nfunction fusedConvAndDepthWiseParams(node, tensorMap, context) {\n    const [extraOp, activationFunc] = getParamValue('fusedOps', node, tensorMap, context);\n    const isBiasAdd = extraOp === 'biasadd';\n    const noBiasAdd = !isBiasAdd;\n    const isPrelu = activationFunc === 'prelu';\n    const isBatchNorm = extraOp === 'fusedbatchnorm';\n    const numArgs = getParamValue('numArgs', node, tensorMap, context);\n    if (isBiasAdd) {\n        if (isPrelu && numArgs !== 2) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n                'must have two extra arguments: bias and alpha.');\n        }\n        if (!isPrelu && isBiasAdd && numArgs !== 1) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n                'one extra argument: bias.');\n        }\n    }\n    if (isBatchNorm) {\n        throw new Error('FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported');\n    }\n    const stride = getParamValue('strides', node, tensorMap, context);\n    const pad = getPadding(node, tensorMap, context);\n    const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n        .toUpperCase();\n    const dilations = getParamValue('dilations', node, tensorMap, context);\n    let [biasArg, preluArg] = getParamValue('args', node, tensorMap, context);\n    if (noBiasAdd) {\n        preluArg = biasArg;\n        biasArg = undefined;\n    }\n    const leakyreluAlpha = getParamValue('leakyreluAlpha', node, tensorMap, context);\n    return {\n        stride,\n        pad,\n        dataFormat,\n        dilations,\n        biasArg,\n        preluArg,\n        activationFunc,\n        leakyreluAlpha\n    };\n}\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Conv1D': {\n            const stride = getParamValue('stride', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilation = getParamValue('dilation', node, tensorMap, context);\n            return [ops.conv1d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), stride, pad, dataFormat, dilation)];\n        }\n        case 'Conv2D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            return [ops.conv2d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [ops.fused.conv2d({\n                    x: getParamValue('x', node, tensorMap, context),\n                    filter: getParamValue('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'FusedDepthwiseConv2dNative': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha, } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [ops.fused.depthwiseConv2d({\n                    x: getParamValue('x', node, tensorMap, context),\n                    filter: getParamValue('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n            const shape = getParamValue('outputShape', node, tensorMap, context);\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            return [ops.conv2dTranspose(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), shape, [stride[1], stride[2]], pad)];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getPadding(node, tensorMap, context);\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            return [ops.depthwiseConv2d(getParamValue('input', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            return [ops.conv3d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [stride[1], stride[2], stride[3]], pad, dataFormat, [dilations[1], dilations[2], dilations[3]])];\n        }\n        case 'AvgPool': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.avgPool(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPool': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.maxPool(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPoolWithArgmax': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            const includeBatchInIndex = getParamValue('includeBatchInIndex', node, tensorMap, context);\n            const { result, indexes } = ops.maxPoolWithArgmax(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad, includeBatchInIndex);\n            return [result, indexes];\n        }\n        case 'AvgPool3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.avgPool3d(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'MaxPool3D': {\n            const stride = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const kernelSize = getParamValue('kernelSize', node, tensorMap, context);\n            return [ops.maxPool3d(getParamValue('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'Dilation2D': {\n            const strides = getParamValue('strides', node, tensorMap, context);\n            const pad = getParamValue('pad', node, tensorMap, context);\n            const dilations = getParamValue('dilations', node, tensorMap, context);\n            // strides: [1, stride_height, stride_width, 1].\n            const strideHeight = strides[1];\n            const strideWidth = strides[2];\n            // dilations: [1, dilation_height, dilation_width, 1].\n            const dilationHeight = dilations[1];\n            const dilationWidth = dilations[2];\n            return [ops.dilation2d(getParamValue('x', node, tensorMap, context), getParamValue('filter', node, tensorMap, context), [strideHeight, strideWidth], pad, [dilationHeight, dilationWidth], 'NHWC' /* dataFormat */)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'convolution';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nfunction nmsParams(node, tensorMap, context) {\n    const boxes = getParamValue('boxes', node, tensorMap, context);\n    const scores = getParamValue('scores', node, tensorMap, context);\n    const maxOutputSize = getParamValue('maxOutputSize', node, tensorMap, context);\n    const iouThreshold = getParamValue('iouThreshold', node, tensorMap, context);\n    const scoreThreshold = getParamValue('scoreThreshold', node, tensorMap, context);\n    const softNmsSigma = getParamValue('softNmsSigma', node, tensorMap, context);\n    return {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n    };\n}\nexport const executeOp = async (node, tensorMap, context, resourceManager, ops = tfOps) => {\n    switch (node.op) {\n        case 'NonMaxSuppressionV5': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = nmsParams(node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionWithScoreAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n            return [result.selectedIndices, result.selectedScores];\n        }\n        case 'NonMaxSuppressionV4': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            const padToMaxOutputSize = getParamValue('padToMaxOutputSize', node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionPaddedAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n            return [result.selectedIndices, result.validOutputs];\n        }\n        case 'NonMaxSuppressionV3':\n        case 'NonMaxSuppressionV2': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            return [await ops.image.nonMaxSuppressionAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold)];\n        }\n        case 'Where': {\n            const condition = ops.cast(getParamValue('condition', node, tensorMap, context), 'bool');\n            const result = [await ops.whereAsync(condition)];\n            condition.dispose();\n            return result;\n        }\n        case 'ListDiff': {\n            return ops.setdiff1dAsync(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context));\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'dynamic';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { keep, scalar, stack, tidy, unstack, util } from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n/**\n * Hashtable contains a set of tensors, which can be accessed by key.\n */\nexport class HashTable {\n    /**\n     * Constructor of HashTable. Creates a hash table.\n     *\n     * @param keyDType `dtype` of the table keys.\n     * @param valueDType `dtype` of the table values.\n     */\n    constructor(keyDType, valueDType) {\n        this.keyDType = keyDType;\n        this.valueDType = valueDType;\n        this.handle = scalar(0);\n        // tslint:disable-next-line: no-any\n        this.tensorMap = new Map();\n        keep(this.handle);\n    }\n    get id() {\n        return this.handle.id;\n    }\n    /**\n     * Dispose the tensors and handle and clear the hashtable.\n     */\n    clearAndClose() {\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        this.handle.dispose();\n    }\n    /**\n     * The number of items in the hash table.\n     */\n    size() {\n        return this.tensorMap.size;\n    }\n    /**\n     * The number of items in the hash table as a rank-0 tensor.\n     */\n    tensorSize() {\n        return tfOps.scalar(this.size(), 'int32');\n    }\n    /**\n     * Replaces the contents of the table with the specified keys and values.\n     * @param keys Keys to store in the hashtable.\n     * @param values Values to store in the hashtable.\n     */\n    async import(keys, values) {\n        this.checkKeyAndValueTensor(keys, values);\n        // We only store the primitive values of the keys, this allows lookup\n        // to be O(1).\n        const $keys = await keys.data();\n        // Clear the hashTable before inserting new values.\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        return tidy(() => {\n            const $values = unstack(values);\n            const keysLength = $keys.length;\n            const valuesLength = $values.length;\n            util.assert(keysLength === valuesLength, () => `The number of elements doesn't match, keys has ` +\n                `${keysLength} elements, the values has ${valuesLength} ` +\n                `elements.`);\n            for (let i = 0; i < keysLength; i++) {\n                const key = $keys[i];\n                const value = $values[i];\n                keep(value);\n                this.tensorMap.set(key, value);\n            }\n            return this.handle;\n        });\n    }\n    /**\n     * Looks up keys in a hash table, outputs the corresponding values.\n     *\n     * Performs batch lookups, for every element in the key tensor, `find`\n     * stacks the corresponding value into the return tensor.\n     *\n     * If an element is not present in the table, the given `defaultValue` is\n     * used.\n     *\n     * @param keys Keys to look up. Must have the same type as the keys of the\n     *     table.\n     * @param defaultValue The scalar `defaultValue` is the value output for keys\n     *     not present in the table. It must also be of the same type as the\n     *     table values.\n     */\n    async find(keys, defaultValue) {\n        this.checkKeyAndValueTensor(keys, defaultValue);\n        const $keys = await keys.data();\n        return tidy(() => {\n            const result = [];\n            for (let i = 0; i < $keys.length; i++) {\n                const key = $keys[i];\n                const value = this.findWithDefault(key, defaultValue);\n                result.push(value);\n            }\n            return stack(result);\n        });\n    }\n    // tslint:disable-next-line: no-any\n    findWithDefault(key, defaultValue) {\n        const result = this.tensorMap.get(key);\n        return result != null ? result : defaultValue;\n    }\n    checkKeyAndValueTensor(key, value) {\n        if (key.dtype !== this.keyDType) {\n            throw new Error(`Expect key dtype ${this.keyDType}, but got ` +\n                `${key.dtype}`);\n        }\n        if (value.dtype !== this.valueDType) {\n            throw new Error(`Expect value dtype ${this.valueDType}, but got ` +\n                `${value.dtype}`);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { NodeValueImpl } from './custom_op/node_value_impl';\nimport { getRegisteredOp } from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as hashTable from './executors/hash_table_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as sparse from './executors/sparse_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as string from './executors/string_executor';\nimport * as transformation from './executors/transformation_executor';\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function executeOp(node, tensorMap, context, resourceManager, tidy = tfc.tidy) {\n    const value = ((node, tensorMap, context) => {\n        switch (node.category) {\n            case 'arithmetic':\n                return tidy(() => arithmetic.executeOp(node, tensorMap, context));\n            case 'basic_math':\n                return tidy(() => basicMath.executeOp(node, tensorMap, context));\n            case 'control':\n                return control.executeOp(node, tensorMap, context);\n            case 'convolution':\n                return tidy(() => convolution.executeOp(node, tensorMap, context));\n            case 'creation':\n                return tidy(() => creation.executeOp(node, tensorMap, context));\n            case 'dynamic':\n                return dynamic.executeOp(node, tensorMap, context);\n            case 'evaluation':\n                return tidy(() => evaluation.executeOp(node, tensorMap, context));\n            case 'image':\n                return tidy(() => image.executeOp(node, tensorMap, context));\n            case 'graph':\n                return tidy(() => graph.executeOp(node, tensorMap, context));\n            case 'logical':\n                return tidy(() => logical.executeOp(node, tensorMap, context));\n            case 'matrices':\n                return tidy(() => matrices.executeOp(node, tensorMap, context));\n            case 'normalization':\n                return tidy(() => normalization.executeOp(node, tensorMap, context));\n            case 'reduction':\n                return tidy(() => reduction.executeOp(node, tensorMap, context));\n            case 'slice_join':\n                return tidy(() => sliceJoin.executeOp(node, tensorMap, context));\n            case 'sparse':\n                return tidy(() => sparse.executeOp(node, tensorMap, context));\n            case 'spectral':\n                return tidy(() => spectral.executeOp(node, tensorMap, context));\n            case 'string':\n                return tidy(() => string.executeOp(node, tensorMap, context));\n            case 'transformation':\n                return tidy(() => transformation.executeOp(node, tensorMap, context));\n            case 'hash_table':\n                return hashTable.executeOp(node, tensorMap, context, resourceManager);\n            case 'custom':\n                const opMapper = getRegisteredOp(node.op);\n                if (opMapper && opMapper.customExecutor) {\n                    return opMapper.customExecutor(new NodeValueImpl(node, tensorMap, context));\n                }\n                else {\n                    throw TypeError(`Custom op ${node.op} is not registered.`);\n                }\n            default:\n                throw TypeError(`Unknown op '${node.op}'. File an issue at ` +\n                    `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                    `, or register a custom execution with tf.registerOp()`);\n        }\n    })(node, tensorMap, context);\n    if (tfc.util.isPromise(value)) {\n        return value.then((data) => [].concat(data));\n    }\n    return [].concat(value);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue, getTensor } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Abs':\n        case 'ComplexAbs':\n            return [ops.abs(getParamValue('x', node, tensorMap, context))];\n        case 'Acos':\n            return [ops.acos(getParamValue('x', node, tensorMap, context))];\n        case 'Acosh':\n            return [ops.acosh(getParamValue('x', node, tensorMap, context))];\n        case 'Asin':\n            return [ops.asin(getParamValue('x', node, tensorMap, context))];\n        case 'Asinh':\n            return [ops.asinh(getParamValue('x', node, tensorMap, context))];\n        case 'Atan':\n            return [ops.atan(getParamValue('x', node, tensorMap, context))];\n        case 'Atan2':\n            return [ops.atan2(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context))];\n        case 'Atanh':\n            return [ops.atanh(getParamValue('x', node, tensorMap, context))];\n        case 'Ceil':\n            return [ops.ceil(getParamValue('x', node, tensorMap, context))];\n        case 'Complex':\n            return [ops.complex(getParamValue('real', node, tensorMap, context), getParamValue('imag', node, tensorMap, context))];\n        case 'Cos':\n            return [ops.cos(getParamValue('x', node, tensorMap, context))];\n        case 'Cosh':\n            return [ops.cosh(getParamValue('x', node, tensorMap, context))];\n        case 'Elu':\n            return [ops.elu(getParamValue('x', node, tensorMap, context))];\n        case 'Erf':\n            return [ops.erf(getParamValue('x', node, tensorMap, context))];\n        case 'Exp':\n            return [ops.exp(getParamValue('x', node, tensorMap, context))];\n        case 'Expm1': {\n            return [ops.expm1(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Floor':\n            return [ops.floor(getParamValue('x', node, tensorMap, context))];\n        case 'Log':\n            return [ops.log(getParamValue('x', node, tensorMap, context))];\n        case 'Log1p': {\n            return [ops.log1p(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Imag':\n            return [ops.imag(getParamValue('x', node, tensorMap, context))];\n        case 'Neg':\n            return [ops.neg(getParamValue('x', node, tensorMap, context))];\n        case 'Reciprocal': {\n            return [ops.reciprocal(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Real':\n            return [ops.real(getParamValue('x', node, tensorMap, context))];\n        case 'Relu':\n            return [ops.relu(getParamValue('x', node, tensorMap, context))];\n        case 'Round': {\n            return [ops.round(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Selu':\n            return [ops.selu(getParamValue('x', node, tensorMap, context))];\n        case 'Sigmoid':\n            return [ops.sigmoid(getParamValue('x', node, tensorMap, context))];\n        case 'Sin':\n            return [ops.sin(getParamValue('x', node, tensorMap, context))];\n        case 'Sign': {\n            return [ops.sign(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Sinh': {\n            return [ops.sinh(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Softplus': {\n            return [ops.softplus(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Sqrt': {\n            return [ops.sqrt(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Square': {\n            return [ops.square(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Tanh': {\n            return [ops.tanh(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'Tan':\n            return [ops.tan(getParamValue('x', node, tensorMap, context))];\n        case 'ClipByValue':\n            return [ops.clipByValue(getParamValue('x', node, tensorMap, context), getParamValue('clipValueMin', node, tensorMap, context), getParamValue('clipValueMax', node, tensorMap, context))];\n        case 'Relu6':\n            return [ops.relu6(getParamValue('x', node, tensorMap, context))];\n        case 'Rsqrt':\n            return [ops.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n        case 'Prod':\n            return [ops.prod(getParamValue('x', node, tensorMap, context), getParamValue('axes', node, tensorMap, context))];\n        case 'LeakyRelu':\n            return [ops.leakyRelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n        case 'Prelu':\n            return [ops.prelu(getParamValue('x', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context))];\n        case 'IsNan':\n            return [ops.isNaN(getTensor(node.inputNames[0], tensorMap, context))];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'basic_math';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Fill': {\n            const shape = getParamValue('shape', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            const value = getParamValue('value', node, tensorMap, context);\n            return [ops.fill(shape, value, dtype)];\n        }\n        case 'LinSpace': {\n            const start = getParamValue('start', node, tensorMap, context);\n            const stop = getParamValue('stop', node, tensorMap, context);\n            const num = getParamValue('num', node, tensorMap, context);\n            return [ops.linspace(start, stop, num)];\n        }\n        case 'Multinomial': {\n            const logits = getParamValue('logits', node, tensorMap, context);\n            const numSamples = getParamValue('numSamples', node, tensorMap, context);\n            const seed = getParamValue('seed', node, tensorMap, context);\n            return [ops.multinomial(logits, numSamples, seed)];\n        }\n        case 'OneHot': {\n            const indices = getParamValue('indices', node, tensorMap, context);\n            const depth = getParamValue('depth', node, tensorMap, context);\n            const onValue = getParamValue('onValue', node, tensorMap, context);\n            const offValue = getParamValue('offValue', node, tensorMap, context);\n            const dtype = getParamValue('dtype', node, tensorMap, context);\n            return [ops.oneHot(indices, depth, onValue, offValue, dtype)];\n        }\n        case 'Ones': {\n            return [ops.ones(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'OnesLike': {\n            return [ops.onesLike(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'RandomStandardNormal': {\n            return [ops.randomStandardNormal(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context), getParamValue('seed', node, tensorMap, context))];\n        }\n        case 'RandomUniform': {\n            return [ops.randomUniform(\n                // tslint:disable-next-line:no-any\n                getParamValue('shape', node, tensorMap, context), getParamValue('minval', node, tensorMap, context), getParamValue('maxval', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'Range': {\n            const start = getParamValue('start', node, tensorMap, context);\n            const stop = getParamValue('stop', node, tensorMap, context);\n            const step = getParamValue('step', node, tensorMap, context);\n            return [ops.range(start, stop, step, getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'TruncatedNormal': {\n            const shape = getParamValue('shape', node, tensorMap, context);\n            const mean = getParamValue('mean', node, tensorMap, context);\n            const stdDev = getParamValue('stdDev', node, tensorMap, context);\n            const seed = getParamValue('seed', node, tensorMap, context);\n            return [ops.truncatedNormal(shape, mean, stdDev, getParamValue('dtype', node, tensorMap, context), seed)];\n        }\n        case 'Zeros': {\n            return [ops.zeros(getParamValue('shape', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'ZerosLike': {\n            return [ops.zerosLike(getParamValue('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'creation';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRpb25fZXhlY3V0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvb3BlcmF0aW9ucy9leGVjdXRvcnMvY3JlYXRpb25fZXhlY3V0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBR0gsaURBQWlEO0FBQ2pELE9BQU8sS0FBSyxLQUFLLE1BQU0sa0RBQWtELENBQUM7QUFNMUUsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUV0QyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQ2xCLENBQUMsSUFBVSxFQUFFLFNBQTBCLEVBQUUsT0FBeUIsRUFDakUsR0FBRyxHQUFHLEtBQUssRUFBWSxFQUFFO0lBQ3hCLFFBQVEsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUNmLEtBQUssTUFBTSxDQUFDLENBQUM7WUFDWCxNQUFNLEtBQUssR0FDUCxhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLENBQUM7WUFDakUsTUFBTSxLQUFLLEdBQ1AsYUFBYSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBYSxDQUFDO1lBQ2pFLE1BQU0sS0FBSyxHQUNQLGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsQ0FBQztZQUMvRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDeEM7UUFDRCxLQUFLLFVBQVUsQ0FBQyxDQUFDO1lBQ2YsTUFBTSxLQUFLLEdBQ1AsYUFBYSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDO1lBQy9ELE1BQU0sSUFBSSxHQUNOLGFBQWEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxF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QixhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUNwQyxFQUNYLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDWjtRQUNELEtBQUssT0FBTyxDQUFDLENBQUM7WUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FDYixhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzVELGFBQWEsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQWEsQ0FBQyxDQUFDLENBQUM7U0FDcEU7UUFDRCxLQUFLLFdBQVcsQ0FBQyxDQUFDO1lBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUNqQixhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUMsQ0FBQyxDQUFDO1NBQzlEO1FBQ0Q7WUFDRSxNQUFNLFNBQVMsQ0FBQyxhQUFhLElBQUksQ0FBQyxFQUFFLHFCQUFxQixDQUFDLENBQUM7S0FDOUQ7QUFDSCxDQUFDLENBQUM7QUFFTixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0RhdGFUeXBlLCBUZW5zb3IsIFRlbnNvcjFEfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBvcnRzLWZyb20tZGlzdFxuaW1wb3J0ICogYXMgdGZPcHMgZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlL2Rpc3Qvb3BzL29wc19mb3JfY29udmVydGVyJztcblxuaW1wb3J0IHtOYW1lZFRlbnNvcnNNYXB9IGZyb20gJy4uLy4uL2RhdGEvdHlwZXMnO1xuaW1wb3J0IHtFeGVjdXRpb25Db250ZXh0fSBmcm9tICcuLi8uLi9leGVjdXRvci9leGVjdXRpb25fY29udGV4dCc7XG5pbXBvcnQge0ludGVybmFsT3BFeGVjdXRvciwgTm9kZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge2dldFBhcmFtVmFsdWV9IGZyb20gJy4vdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgZXhlY3V0ZU9wOiBJbnRlcm5hbE9wRXhlY3V0b3IgPVxuICAgIChub2RlOiBOb2RlLCB0ZW5zb3JNYXA6IE5hbWVkVGVuc29yc01hcCwgY29udGV4dDogRXhlY3V0aW9uQ29udGV4dCxcbiAgICAgb3BzID0gdGZPcHMpOiBUZW5zb3JbXSA9PiB7XG4gICAgICBzd2l0Y2ggKG5vZGUub3ApIHtcbiAgICAgICAgY2FzZSAnRmlsbCc6IHtcbiAgICAgICAgICBjb25zdCBzaGFwZSA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3NoYXBlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXJbXTtcbiAgICAgICAgICBjb25zdCBkdHlwZSA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2R0eXBlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBEYXRhVHlwZTtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3ZhbHVlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXI7XG4gICAgICAgICAgcmV0dXJuIFtvcHMuZmlsbChzaGFwZSwgdmFsdWUsIGR0eXBlKV07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnTGluU3BhY2UnOiB7XG4gICAgICAgICAgY29uc3Qgc3RhcnQgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzdGFydCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIGNvbnN0IHN0b3AgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzdG9wJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXI7XG4gICAgICAgICAgY29uc3QgbnVtID0gZ2V0UGFyYW1WYWx1ZSgnbnVtJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXI7XG4gICAgICAgICAgcmV0dXJuIFtvcHMubGluc3BhY2Uoc3RhcnQsIHN0b3AsIG51bSldO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ011bHRpbm9taWFsJzoge1xuICAgICAgICAgIGNvbnN0IGxvZ2l0cyA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2xvZ2l0cycsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yMUQ7XG4gICAgICAgICAgY29uc3QgbnVtU2FtcGxlcyA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ251bVNhbXBsZXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcjtcbiAgICAgICAgICBjb25zdCBzZWVkID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc2VlZCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIHJldHVybiBbb3BzLm11bHRpbm9taWFsKGxvZ2l0cywgbnVtU2FtcGxlcywgc2VlZCldO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ09uZUhvdCc6IHtcbiAgICAgICAgICBjb25zdCBpbmRpY2VzID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnaW5kaWNlcycsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yMUQ7XG4gICAgICAgICAgY29uc3QgZGVwdGggPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkZXB0aCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIGNvbnN0IG9uVmFsdWUgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdvblZhbHVlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXI7XG4gICAgICAgICAgY29uc3Qgb2ZmVmFsdWUgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdvZmZWYWx1ZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIGNvbnN0IGR0eXBlID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZHR5cGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIERhdGFUeXBlO1xuICAgICAgICAgIHJldHVybiBbb3BzLm9uZUhvdChpbmRpY2VzLCBkZXB0aCwgb25WYWx1ZSwgb2ZmVmFsdWUsIGR0eXBlKV07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnT25lcyc6IHtcbiAgICAgICAgICByZXR1cm4gW29wcy5vbmVzKFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzaGFwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyW10sXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2R0eXBlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBEYXRhVHlwZSldO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ09uZXNMaWtlJzoge1xuICAgICAgICAgIHJldHVybiBbb3BzLm9uZXNMaWtlKFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCd4Jywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IpXTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdSYW5kb21TdGFuZGFyZE5vcm1hbCc6IHtcbiAgICAgICAgICByZXR1cm4gW29wcy5yYW5kb21TdGFuZGFyZE5vcm1hbChcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc2hhcGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcltdLFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkdHlwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgJ2Zsb2F0MzInIHxcbiAgICAgICAgICAgICAgICAgICdpbnQzMicsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3NlZWQnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcildO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1JhbmRvbVVuaWZvcm0nOiB7XG4gICAgICAgICAgcmV0dXJuIFtvcHMucmFuZG9tVW5pZm9ybShcbiAgICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzaGFwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgYW55LFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdtaW52YWwnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcixcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnbWF4dmFsJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXIsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2R0eXBlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBEYXRhVHlwZSldO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1JhbmdlJzoge1xuICAgICAgICAgIGNvbnN0IHN0YXJ0ID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc3RhcnQnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcjtcbiAgICAgICAgICBjb25zdCBzdG9wID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc3RvcCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIGNvbnN0IHN0ZXAgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzdGVwJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXI7XG4gICAgICAgICAgcmV0dXJuIFtvcHMucmFuZ2UoXG4gICAgICAgICAgICAgIHN0YXJ0LCBzdG9wLCBzdGVwLFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkdHlwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgJ2Zsb2F0MzInIHxcbiAgICAgICAgICAgICAgICAgICdpbnQzMicpXTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdUcnVuY2F0ZWROb3JtYWwnOiB7XG4gICAgICAgICAgY29uc3Qgc2hhcGUgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzaGFwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyW107XG4gICAgICAgICAgY29uc3QgbWVhbiA9XG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ21lYW4nLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcjtcbiAgICAgICAgICBjb25zdCBzdGREZXYgPVxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzdGREZXYnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcjtcbiAgICAgICAgICBjb25zdCBzZWVkID1cbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc2VlZCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgIHJldHVybiBbb3BzLnRydW5jYXRlZE5vcm1hbChcbiAgICAgICAgICAgICAgc2hhcGUsIG1lYW4sIHN0ZERldixcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZHR5cGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzICdmbG9hdDMyJyB8XG4gICAgICAgICAgICAgICAgICAnaW50MzInLFxuICAgICAgICAgICAgICBzZWVkKV07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnWmVyb3MnOiB7XG4gICAgICAgICAgcmV0dXJuIFtvcHMuemVyb3MoXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3NoYXBlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXJbXSxcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZHR5cGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIERhdGFUeXBlKV07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnWmVyb3NMaWtlJzoge1xuICAgICAgICAgIHJldHVybiBbb3BzLnplcm9zTGlrZShcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgneCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yKV07XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoYE5vZGUgdHlwZSAke25vZGUub3B9IGlzIG5vdCBpbXBsZW1lbnRlZGApO1xuICAgICAgfVxuICAgIH07XG5cbmV4cG9ydCBjb25zdCBDQVRFR09SWSA9ICdjcmVhdGlvbic7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'LowerBound': {\n            const sortedSequence = getParamValue('sortedSequence', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            return [ops.lowerBound(sortedSequence, values)];\n        }\n        case 'TopKV2': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const k = getParamValue('k', node, tensorMap, context);\n            const sorted = getParamValue('sorted', node, tensorMap, context);\n            const result = ops.topk(x, k, sorted);\n            return [result.values, result.indices];\n        }\n        case 'UpperBound': {\n            const sortedSequence = getParamValue('sortedSequence', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            return [ops.upperBound(sortedSequence, values)];\n        }\n        case 'Unique': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const result = ops.unique(x);\n            return [result.values, result.indices];\n        }\n        case 'UniqueV2': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const result = ops.unique(x, axis);\n            return [result.values, result.indices];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'evaluation';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbHVhdGlvbl9leGVjdXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL2V4ZWN1dG9ycy9ldmFsdWF0aW9uX2V4ZWN1dG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUdILGlEQUFpRDtBQUNqRCxPQUFPLEtBQUssS0FBSyxNQUFNLGtEQUFrRCxDQUFDO0FBTTFFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFFdEMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUNsQixDQUFDLElBQVUsRUFBRSxTQUEwQixFQUFFLE9BQXlCLEVBQ2pFLEdBQUcsR0FBRyxLQUFLLEVBQ0MsRUFBRTtJQUNULFFBQVEsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUNmLEtBQUssWUFBWSxDQUFDLENBQUM7WUFDakIsTUFBTSxjQUFjLEdBQ2hCLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FDbEQsQ0FBQztZQUNYLE1BQU0sTUFBTSxHQUNSLGFBQWEsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsQ0FBQztZQUNoRSxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUNqRDtRQUNELEtBQUssUUFBUSxDQUFDLENBQUM7WUFDYixNQUFNLENBQUMsR0FBRyxhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUM7WUFDakUsTUFBTSxDQUFDLEdBQUcsYUFBYSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDO1lBQ2pFLE1BQU0sTUFBTSxHQUNSLGFBQWEsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVksQ0FBQztZQUNqRSxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDdEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3hDO1FBQ0QsS0FBSyxZQUFZLENBQUMsQ0FBQztZQUNqQixNQUFNLGNBQWMsR0FDaEIsYUFBYSxDQUFDLGdCQUFnQixFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUNsRCxDQUFDO1lBQ1gsTUFBTSxNQUFNLEdBQ1IsYUFBYSxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDO1lBQ2hFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsS0FBSyxRQUFRLENBQUMsQ0FBQztZQUNiLE1BQU0sQ0FBQyxHQUFHLGFBQWEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsQ0FBQztZQUNqRSxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN4QztRQUNELEtBQUssVUFBVSxDQUFDLENBQUM7WUFDZixNQUFNLENBQUMsR0FBRyxhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUM7WUFDakUsTUFBTSxJQUFJLEdBQ04sYUFBYSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDO1lBQzlELE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ25DLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN4QztRQUNEO1lBQ0UsTUFBTSxTQUFTLENBQUMsYUFBYSxJQUFJLENBQUMsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO0tBQzlEO0FBQ0gsQ0FBQyxDQUFDO0FBRVYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3J9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWltcG9ydHMtZnJvbS1kaXN0XG5pbXBvcnQgKiBhcyB0Zk9wcyBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUvZGlzdC9vcHMvb3BzX2Zvcl9jb252ZXJ0ZXInO1xuXG5pbXBvcnQge05hbWVkVGVuc29yc01hcH0gZnJvbSAnLi4vLi4vZGF0YS90eXBlcyc7XG5pbXBvcnQge0V4ZWN1dGlvbkNvbnRleHR9IGZyb20gJy4uLy4uL2V4ZWN1dG9yL2V4ZWN1dGlvbl9jb250ZXh0JztcbmltcG9ydCB7SW50ZXJuYWxPcEV4ZWN1dG9yLCBOb2RlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7Z2V0UGFyYW1WYWx1ZX0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBleGVjdXRlT3A6IEludGVybmFsT3BFeGVjdXRvciA9XG4gICAgKG5vZGU6IE5vZGUsIHRlbnNvck1hcDogTmFtZWRUZW5zb3JzTWFwLCBjb250ZXh0OiBFeGVjdXRpb25Db250ZXh0LFxuICAgICBvcHMgPSB0Zk9wcyk6XG4gICAgICAgIFRlbnNvcltdID0+IHtcbiAgICAgICAgICBzd2l0Y2ggKG5vZGUub3ApIHtcbiAgICAgICAgICAgIGNhc2UgJ0xvd2VyQm91bmQnOiB7XG4gICAgICAgICAgICAgIGNvbnN0IHNvcnRlZFNlcXVlbmNlID1cbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3NvcnRlZFNlcXVlbmNlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgVGVuc29yO1xuICAgICAgICAgICAgICBjb25zdCB2YWx1ZXMgPVxuICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgndmFsdWVzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3I7XG4gICAgICAgICAgICAgIHJldHVybiBbb3BzLmxvd2VyQm91bmQoc29ydGVkU2VxdWVuY2UsIHZhbHVlcyldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnVG9wS1YyJzoge1xuICAgICAgICAgICAgICBjb25zdCB4ID0gZ2V0UGFyYW1WYWx1ZSgneCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yO1xuICAgICAgICAgICAgICBjb25zdCBrID0gZ2V0UGFyYW1WYWx1ZSgnaycsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgbnVtYmVyO1xuICAgICAgICAgICAgICBjb25zdCBzb3J0ZWQgPVxuICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc29ydGVkJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBib29sZWFuO1xuICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBvcHMudG9wayh4LCBrLCBzb3J0ZWQpO1xuICAgICAgICAgICAgICByZXR1cm4gW3Jlc3VsdC52YWx1ZXMsIHJlc3VsdC5pbmRpY2VzXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ1VwcGVyQm91bmQnOiB7XG4gICAgICAgICAgICAgIGNvbnN0IHNvcnRlZFNlcXVlbmNlID1cbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3NvcnRlZFNlcXVlbmNlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgVGVuc29yO1xuICAgICAgICAgICAgICBjb25zdCB2YWx1ZXMgPVxuICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgndmFsdWVzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3I7XG4gICAgICAgICAgICAgIHJldHVybiBbb3BzLnVwcGVyQm91bmQoc29ydGVkU2VxdWVuY2UsIHZhbHVlcyldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnVW5pcXVlJzoge1xuICAgICAgICAgICAgICBjb25zdCB4ID0gZ2V0UGFyYW1WYWx1ZSgneCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yO1xuICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBvcHMudW5pcXVlKHgpO1xuICAgICAgICAgICAgICByZXR1cm4gW3Jlc3VsdC52YWx1ZXMsIHJlc3VsdC5pbmRpY2VzXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ1VuaXF1ZVYyJzoge1xuICAgICAgICAgICAgICBjb25zdCB4ID0gZ2V0UGFyYW1WYWx1ZSgneCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yO1xuICAgICAgICAgICAgICBjb25zdCBheGlzID1cbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2F4aXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcjtcbiAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gb3BzLnVuaXF1ZSh4LCBheGlzKTtcbiAgICAgICAgICAgICAgcmV0dXJuIFtyZXN1bHQudmFsdWVzLCByZXN1bHQuaW5kaWNlc107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoYE5vZGUgdHlwZSAke25vZGUub3B9IGlzIG5vdCBpbXBsZW1lbnRlZGApO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuZXhwb3J0IGNvbnN0IENBVEVHT1JZID0gJ2V2YWx1YXRpb24nO1xuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'ResizeBilinear': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const alignCorners = getParamValue('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = getParamValue('halfPixelCenters', node, tensorMap, context);\n            return [ops.image.resizeBilinear(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'ResizeNearestNeighbor': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const alignCorners = getParamValue('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = getParamValue('halfPixelCenters', node, tensorMap, context);\n            return [ops.image.resizeNearestNeighbor(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'CropAndResize': {\n            const image = getParamValue('image', node, tensorMap, context);\n            const boxes = getParamValue('boxes', node, tensorMap, context);\n            const boxInd = getParamValue('boxInd', node, tensorMap, context);\n            const cropSize = getParamValue('cropSize', node, tensorMap, context);\n            const method = getParamValue('method', node, tensorMap, context);\n            const extrapolationValue = getParamValue('extrapolationValue', node, tensorMap, context);\n            return [ops.image.cropAndResize(image, boxes, boxInd, cropSize, method, extrapolationValue)];\n        }\n        case 'ImageProjectiveTransformV3': {\n            const images = getParamValue('images', node, tensorMap, context);\n            const transforms = getParamValue('transforms', node, tensorMap, context);\n            const outputShape = getParamValue('outputShape', node, tensorMap, context);\n            const fillValue = getParamValue('fillValue', node, tensorMap, context);\n            const interpolation = getParamValue('interpolation', node, tensorMap, context);\n            const fillMode = getParamValue('fillMode', node, tensorMap, context);\n            return [ops.image.transform(images, transforms, interpolation.toLowerCase(), fillMode.toLowerCase(), fillValue, outputShape)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'image';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { cloneTensor, getParamValue, getTensor } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Const': {\n            return tensorMap[node.name];\n        }\n        case 'PlaceholderWithDefault':\n            const def = getParamValue('default', node, tensorMap, context);\n            return [getTensor(node.name, tensorMap, context) || def];\n        case 'Placeholder':\n            return [getTensor(node.name, tensorMap, context)];\n        case 'Identity':\n        case 'StopGradient':\n        case 'FakeQuantWithMinMaxVars': { // This op is currently ignored.\n            const data = getParamValue('x', node, tensorMap, context);\n            return [cloneTensor(data)];\n        }\n        case 'IdentityN':\n            return getParamValue('x', node, tensorMap, context)\n                .map((t) => cloneTensor(t));\n        case 'Snapshot':\n            const snapshot = getParamValue('x', node, tensorMap, context);\n            return [cloneTensor(snapshot)];\n        case 'Shape':\n            return [ops.tensor1d(getParamValue('x', node, tensorMap, context).shape, 'int32')];\n        case 'ShapeN':\n            return getParamValue('x', node, tensorMap, context)\n                .map((t) => ops.tensor1d(t.shape));\n        case 'Size':\n            return [ops.scalar(getParamValue('x', node, tensorMap, context).size, 'int32')];\n        case 'Rank':\n            return [ops.scalar(getParamValue('x', node, tensorMap, context).rank, 'int32')];\n        case 'NoOp':\n            return [ops.scalar(1)];\n        case 'Print':\n            const input = getParamValue('x', node, tensorMap, context);\n            const data = getParamValue('data', node, tensorMap, context);\n            const message = getParamValue('message', node, tensorMap, context);\n            const summarize = getParamValue('summarize', node, tensorMap, context);\n            console.warn('The graph has a tf.print() operation,' +\n                'usually used for debugging, which slows down performance.');\n            console.log(message);\n            for (let i = 0; i < data.length; i++) {\n                console.log(Array.prototype.slice.call(data[i].dataSync())\n                    .slice(0, summarize));\n            }\n            return [input];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'graph';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Equal': {\n            return [ops.equal(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'NotEqual': {\n            return [ops.notEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Greater': {\n            return [ops.greater(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'GreaterEqual': {\n            return [ops.greaterEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Less': {\n            return [ops.less(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LessEqual': {\n            return [ops.lessEqual(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LogicalAnd': {\n            return [ops.logicalAnd(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'LogicalNot': {\n            return [ops.logicalNot(getParamValue('a', node, tensorMap, context))];\n        }\n        case 'LogicalOr': {\n            return [ops.logicalOr(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        case 'Select':\n        case 'SelectV2': {\n            return [ops.where(getParamValue('condition', node, tensorMap, context), getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'logical';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'BatchMatMul':\n        case 'BatchMatMulV2':\n        case 'MatMul':\n            return [ops.matMul(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context), getParamValue('transposeA', node, tensorMap, context), getParamValue('transposeB', node, tensorMap, context))];\n        case 'Einsum':\n            return [ops.einsum(getParamValue('equation', node, tensorMap, context), ...getParamValue('tensors', node, tensorMap, context))];\n        case 'Transpose':\n            return [ops.transpose(getParamValue('x', node, tensorMap, context), getParamValue('perm', node, tensorMap, context))];\n        case '_FusedMatMul':\n            const [extraOp, activationFunc] = getParamValue('fusedOps', node, tensorMap, context);\n            const isBiasAdd = extraOp === 'biasadd';\n            const isPrelu = activationFunc === 'prelu';\n            const numArgs = getParamValue('numArgs', node, tensorMap, context);\n            const leakyreluAlpha = getParamValue('leakyreluAlpha', node, tensorMap, context);\n            if (isBiasAdd) {\n                if (isPrelu && numArgs !== 2) {\n                    throw new Error('Fused MatMul with BiasAdd and Prelu must have two ' +\n                        'extra arguments: bias and alpha.');\n                }\n                if (!isPrelu && numArgs !== 1) {\n                    throw new Error('Fused MatMul with BiasAdd must have one extra argument: bias.');\n                }\n            }\n            const [biasArg, preluArg] = getParamValue('args', node, tensorMap, context);\n            return [ops.fused.matMul({\n                    a: getParamValue('a', node, tensorMap, context),\n                    b: getParamValue('b', node, tensorMap, context),\n                    transposeA: getParamValue('transposeA', node, tensorMap, context),\n                    transposeB: getParamValue('transposeB', node, tensorMap, context),\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'matrices';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'EuclideanNorm':\n            return [ops.euclideanNorm(getParamValue('x', node, tensorMap, context), getParamValue('axis', node, tensorMap, context), getParamValue('keepDims', node, tensorMap, context))];\n        case 'FusedBatchNorm':\n        case 'FusedBatchNormV2': {\n            return [ops.batchNorm(getParamValue('x', node, tensorMap, context), getParamValue('mean', node, tensorMap, context), getParamValue('variance', node, tensorMap, context), getParamValue('offset', node, tensorMap, context), getParamValue('scale', node, tensorMap, context), getParamValue('epsilon', node, tensorMap, context))];\n        }\n        case 'FusedBatchNormV3': {\n            return [ops.batchNorm(getParamValue('x', node, tensorMap, context), getParamValue('mean', node, tensorMap, context), getParamValue('variance', node, tensorMap, context), getParamValue('offset', node, tensorMap, context), getParamValue('scale', node, tensorMap, context), getParamValue('epsilon', node, tensorMap, context))];\n        }\n        case 'LRN': {\n            return [ops.localResponseNormalization(getParamValue('x', node, tensorMap, context), getParamValue('radius', node, tensorMap, context), getParamValue('bias', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context), getParamValue('beta', node, tensorMap, context))];\n        }\n        case 'Softmax': {\n            return [ops.softmax(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'LogSoftmax': {\n            return [ops.logSoftmax(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'SparseToDense': {\n            return [ops.sparseToDense(getParamValue('sparseIndices', node, tensorMap, context), getParamValue('outputShape', node, tensorMap, context), getParamValue('sparseValues', node, tensorMap, context), getParamValue('defaultValue', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'normalization';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Max': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.max(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Mean': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.mean(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Min': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.min(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Sum': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.sum(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'All': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.all(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Any': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.any(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'ArgMax': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.argMax(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'ArgMin': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.argMin(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Prod': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const keepDims = getParamValue('keepDims', node, tensorMap, context);\n            return [ops.prod(getParamValue('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Cumprod': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const exclusive = getParamValue('exclusive', node, tensorMap, context);\n            const reverse = getParamValue('reverse', node, tensorMap, context);\n            return [ops.cumprod(getParamValue('x', node, tensorMap, context), axis, exclusive, reverse)];\n        }\n        case 'Cumsum': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const exclusive = getParamValue('exclusive', node, tensorMap, context);\n            const reverse = getParamValue('reverse', node, tensorMap, context);\n            return [ops.cumsum(getParamValue('x', node, tensorMap, context), axis, exclusive, reverse)];\n        }\n        case 'Bincount':\n            const x = getParamValue('x', node, tensorMap, context);\n            const weights = getParamValue('weights', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            return [ops.bincount(x, weights, size)];\n        case 'DenseBincount': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const weights = getParamValue('weights', node, tensorMap, context);\n            const size = getParamValue('size', node, tensorMap, context);\n            const binaryOutput = getParamValue('binaryOutput', node, tensorMap, context);\n            return [ops.denseBincount(x, weights, size, binaryOutput)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'reduction';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tidy, util } from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'ConcatV2':\n        case 'Concat': {\n            const n = getParamValue('n', node, tensorMap, context);\n            const axis = getParamValue('axis', node, tensorMap, context);\n            let inputs = getParamValue('tensors', node, tensorMap, context);\n            inputs = inputs.slice(0, n);\n            return [ops.concat(inputs, axis)];\n        }\n        case 'Gather': {\n            const input = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gather(input, ops.cast(indices, 'int32'), 0)];\n        }\n        case 'GatherV2': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const batchDims = getParamValue('batchDims', node, tensorMap, context);\n            const input = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gather(input, ops.cast(indices, 'int32'), axis, batchDims)];\n        }\n        case 'Reverse': {\n            const dims = getParamValue('dims', node, tensorMap, context);\n            const axis = [];\n            for (let i = 0; i < dims.length; i++) {\n                if (dims[i]) {\n                    axis.push(i);\n                }\n            }\n            const input = getParamValue('x', node, tensorMap, context);\n            return [ops.reverse(input, axis)];\n        }\n        case 'ReverseV2': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const input = getParamValue('x', node, tensorMap, context);\n            return [ops.reverse(input, axis)];\n        }\n        case 'Slice': {\n            // tslint:disable-next-line:no-any\n            const begin = getParamValue('begin', node, tensorMap, context);\n            // tslint:disable-next-line:no-any\n            const size = getParamValue('size', node, tensorMap, context);\n            return [ops.slice(getParamValue('x', node, tensorMap, context), begin, size)];\n        }\n        case 'StridedSlice': {\n            const begin = getParamValue('begin', node, tensorMap, context);\n            const end = getParamValue('end', node, tensorMap, context);\n            const strides = getParamValue('strides', node, tensorMap, context);\n            const beginMask = getParamValue('beginMask', node, tensorMap, context);\n            const endMask = getParamValue('endMask', node, tensorMap, context);\n            const ellipsisMask = getParamValue('ellipsisMask', node, tensorMap, context);\n            const newAxisMask = getParamValue('newAxisMask', node, tensorMap, context);\n            const shrinkAxisMask = getParamValue('shrinkAxisMask', node, tensorMap, context);\n            const tensor = getParamValue('x', node, tensorMap, context);\n            return [ops.stridedSlice(tensor, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask)];\n        }\n        case 'Pack': {\n            return tidy(() => {\n                const axis = getParamValue('axis', node, tensorMap, context);\n                const tensors = getParamValue('tensors', node, tensorMap, context);\n                // Reshape the tensors to the first tensor's shape if they don't\n                // match.\n                const shape = tensors[0].shape;\n                const squeezedShape = ops.squeeze(tensors[0]).shape;\n                const mapped = tensors.map(tensor => {\n                    const sameShape = util.arraysEqual(tensor.shape, shape);\n                    if (!sameShape &&\n                        !util.arraysEqual(ops.squeeze(tensor).shape, squeezedShape)) {\n                        throw new Error('the input tensors shape does not match');\n                    }\n                    return sameShape ? tensor : ops.reshape(tensor, shape);\n                });\n                return [ops.stack(mapped, axis)];\n            });\n        }\n        case 'Unpack': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const tensor = getParamValue('tensor', node, tensorMap, context);\n            return ops.unstack(tensor, axis);\n        }\n        case 'Tile': {\n            const reps = getParamValue('reps', node, tensorMap, context);\n            return [ops.tile(getParamValue('x', node, tensorMap, context), reps)];\n        }\n        case 'Split':\n        case 'SplitV': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            const numOrSizeSplits = getParamValue('numOrSizeSplits', node, tensorMap, context);\n            const tensor = getParamValue('x', node, tensorMap, context);\n            return ops.split(tensor, numOrSizeSplits, axis);\n        }\n        case 'ScatterNd': {\n            const indices = getParamValue('indices', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            const shape = getParamValue('shape', node, tensorMap, context);\n            return [ops.scatterND(indices, values, shape)];\n        }\n        case 'GatherNd': {\n            const x = getParamValue('x', node, tensorMap, context);\n            const indices = getParamValue('indices', node, tensorMap, context);\n            return [ops.gatherND(x, indices)];\n        }\n        case 'SparseToDense': {\n            const indices = getParamValue('sparseIndices', node, tensorMap, context);\n            const shape = getParamValue('outputShape', node, tensorMap, context);\n            const sparseValues = getParamValue('sparseValues', node, tensorMap, context);\n            const defaultValue = getParamValue('defaultValue', node, tensorMap, context);\n            return [ops.sparseToDense(indices, sparseValues, shape, sparseValues.dtype === defaultValue.dtype ?\n                    defaultValue :\n                    ops.cast(defaultValue, sparseValues.dtype))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'slice_join';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'SparseFillEmptyRows': {\n            const { outputIndices, outputValues, emptyRowIndicator, reverseIndexMap } = ops.sparse.sparseFillEmptyRows(getParamValue('indices', node, tensorMap, context), getParamValue('values', node, tensorMap, context), getParamValue('denseShape', node, tensorMap, context), getParamValue('defaultValue', node, tensorMap, context));\n            return [\n                outputIndices, outputValues, emptyRowIndicator, reverseIndexMap\n            ];\n        }\n        case 'SparseReshape': {\n            const { outputIndices, outputShape } = ops.sparse.sparseReshape(getParamValue('inputIndices', node, tensorMap, context), getParamValue('inputShape', node, tensorMap, context), getParamValue('newShape', node, tensorMap, context));\n            return [outputIndices, outputShape];\n        }\n        case 'SparseSegmentMean': {\n            const outputData = ops.sparse.sparseSegmentMean(getParamValue('data', node, tensorMap, context), getParamValue('indices', node, tensorMap, context), getParamValue('segmentIds', node, tensorMap, context));\n            return [outputData];\n        }\n        case 'SparseSegmentSum': {\n            const outputData = ops.sparse.sparseSegmentSum(getParamValue('data', node, tensorMap, context), getParamValue('indices', node, tensorMap, context), getParamValue('segmentIds', node, tensorMap, context));\n            return [outputData];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'sparse';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhcnNlX2V4ZWN1dG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb252ZXJ0ZXIvc3JjL29wZXJhdGlvbnMvZXhlY3V0b3JzL3NwYXJzZV9leGVjdXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxpREFBaUQ7QUFDakQsT0FBTyxLQUFLLEtBQUssTUFBTSxrREFBa0QsQ0FBQztBQU0xRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRXRDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FDbEIsQ0FBQyxJQUFVLEVBQUUsU0FBMEIsRUFDdEMsT0FBeUIsRUFBRSxHQUFHLEdBQUcsS0FBSyxFQUFZLEVBQUU7SUFDbkQsUUFBUSxJQUFJLENBQUMsRUFBRSxFQUFFO1FBQ2YsS0FBSyxxQkFBcUIsQ0FBQyxDQUFDO1lBQzFCLE1BQU0sRUFDSixhQUFhLEVBQ2IsWUFBWSxFQUNaLGlCQUFpQixFQUNqQixlQUFlLEVBQ2hCLEdBQ0csR0FBRyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FDMUIsYUFBYSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FDckMsRUFDWixhQUFhLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzdELGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQ3hDLEVBQ1osYUFBYSxDQUFDLGNBQWMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FDNUMsQ0FBQyxDQUFDO1lBQ3BCLE9BQU87Z0JBQ0wsYUFBYSxFQUFFLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxlQUFlO2FBQ2hFLENBQUM7U0FDSDtRQUNELEtBQUssZUFBZSxDQUFDLENBQUM7WUFDcEIsTUFBTSxFQUFDLGFBQWEsRUFBRSxXQUFXLEVBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FDekQsYUFBYSxDQUFDLGNBQWMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FDMUMsRUFDWixhQUFhLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQ2pFLGFBQWEsQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQWEsQ0FBQyxDQUFDO1lBQ3JFLE9BQU8sQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7U0FDckM7UUFDRCxLQUFLLG1CQUFtQixDQUFDLENBQUM7WUFDeEIsTUFBTSxVQUFVLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FDM0MsYUFBYSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxFQUN6RCxhQUFhLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzlELGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQ3hDLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDckI7UUFDRCxLQUFLLGtCQUFrQixDQUFDLENBQUM7WUFDdkIsTUFBTSxVQUFVLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FDMUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxFQUN6RCxhQUFhLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzlELGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQ3hDLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDckI7UUFDRDtZQUNFLE1BQU0sU0FBUyxDQUFDLGFBQWEsSUFBSSxDQUFDLEVBQUUscUJBQXFCLENBQUMsQ0FBQztLQUM5RDtBQUNILENBQUMsQ0FBQztBQUVOLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7U2NhbGFyLCBUZW5zb3IsIFRlbnNvcjFELCBUZW5zb3IyRH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8taW1wb3J0cy1mcm9tLWRpc3RcbmltcG9ydCAqIGFzIHRmT3BzIGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZS9kaXN0L29wcy9vcHNfZm9yX2NvbnZlcnRlcic7XG5cbmltcG9ydCB7TmFtZWRUZW5zb3JzTWFwfSBmcm9tICcuLi8uLi9kYXRhL3R5cGVzJztcbmltcG9ydCB7RXhlY3V0aW9uQ29udGV4dH0gZnJvbSAnLi4vLi4vZXhlY3V0b3IvZXhlY3V0aW9uX2NvbnRleHQnO1xuaW1wb3J0IHtJbnRlcm5hbE9wRXhlY3V0b3IsIE5vZGV9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtnZXRQYXJhbVZhbHVlfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGNvbnN0IGV4ZWN1dGVPcDogSW50ZXJuYWxPcEV4ZWN1dG9yID1cbiAgICAobm9kZTogTm9kZSwgdGVuc29yTWFwOiBOYW1lZFRlbnNvcnNNYXAsXG4gICAgIGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQsIG9wcyA9IHRmT3BzKTogVGVuc29yW10gPT4ge1xuICAgICAgc3dpdGNoIChub2RlLm9wKSB7XG4gICAgICAgIGNhc2UgJ1NwYXJzZUZpbGxFbXB0eVJvd3MnOiB7XG4gICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgb3V0cHV0SW5kaWNlcyxcbiAgICAgICAgICAgIG91dHB1dFZhbHVlcyxcbiAgICAgICAgICAgIGVtcHR5Um93SW5kaWNhdG9yLFxuICAgICAgICAgICAgcmV2ZXJzZUluZGV4TWFwXG4gICAgICAgICAgfSA9XG4gICAgICAgICAgICAgIG9wcy5zcGFyc2Uuc3BhcnNlRmlsbEVtcHR5Um93cyhcbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2luZGljZXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzXG4gICAgICAgICAgICAgICAgICAgICAgVGVuc29yMkQsXG4gICAgICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCd2YWx1ZXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjFELFxuICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZGVuc2VTaGFwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXNcbiAgICAgICAgICAgICAgICAgICAgICBUZW5zb3IxRCxcbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2RlZmF1bHRWYWx1ZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXNcbiAgICAgICAgICAgICAgICAgICAgICBTY2FsYXIpO1xuICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBvdXRwdXRJbmRpY2VzLCBvdXRwdXRWYWx1ZXMsIGVtcHR5Um93SW5kaWNhdG9yLCByZXZlcnNlSW5kZXhNYXBcbiAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1NwYXJzZVJlc2hhcGUnOiB7XG4gICAgICAgICAgY29uc3Qge291dHB1dEluZGljZXMsIG91dHB1dFNoYXBlfSA9IG9wcy5zcGFyc2Uuc3BhcnNlUmVzaGFwZShcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnaW5wdXRJbmRpY2VzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgVGVuc29yMkQsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2lucHV0U2hhcGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjFELFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCduZXdTaGFwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yMUQpO1xuICAgICAgICAgIHJldHVybiBbb3V0cHV0SW5kaWNlcywgb3V0cHV0U2hhcGVdO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1NwYXJzZVNlZ21lbnRNZWFuJzoge1xuICAgICAgICAgIGNvbnN0IG91dHB1dERhdGEgPSBvcHMuc3BhcnNlLnNwYXJzZVNlZ21lbnRNZWFuKFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkYXRhJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2luZGljZXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjFELFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzZWdtZW50SWRzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgVGVuc29yMUQpO1xuICAgICAgICAgIHJldHVybiBbb3V0cHV0RGF0YV07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnU3BhcnNlU2VnbWVudFN1bSc6IHtcbiAgICAgICAgICBjb25zdCBvdXRwdXREYXRhID0gb3BzLnNwYXJzZS5zcGFyc2VTZWdtZW50U3VtKFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkYXRhJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2luZGljZXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjFELFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdzZWdtZW50SWRzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgVGVuc29yMUQpO1xuICAgICAgICAgIHJldHVybiBbb3V0cHV0RGF0YV07XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoYE5vZGUgdHlwZSAke25vZGUub3B9IGlzIG5vdCBpbXBsZW1lbnRlZGApO1xuICAgICAgfVxuICAgIH07XG5cbmV4cG9ydCBjb25zdCBDQVRFR09SWSA9ICdzcGFyc2UnO1xuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'FFT': {\n            return [ops.fft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IFFT': {\n            return [ops.ifft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'RFFT': {\n            return [ops.rfft(getParamValue('x', node, tensorMap, context))];\n        }\n        case 'IRFFT': {\n            return [ops.irfft(getParamValue('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'spectral';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY3RyYWxfZXhlY3V0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvb3BlcmF0aW9ucy9leGVjdXRvcnMvc3BlY3RyYWxfZXhlY3V0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBR0gsaURBQWlEO0FBQ2pELE9BQU8sS0FBSyxLQUFLLE1BQU0sa0RBQWtELENBQUM7QUFNMUUsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUV0QyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQ2xCLENBQUMsSUFBVSxFQUFFLFNBQTBCLEVBQUUsT0FBeUIsRUFDakUsR0FBRyxHQUFHLEtBQUssRUFBWSxFQUFFO0lBQ3BCLFFBQVEsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUNmLEtBQUssS0FBSyxDQUFDLENBQUM7WUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FDWCxhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUMsQ0FBQyxDQUFDO1NBQzlEO1FBQ0QsS0FBSyxNQUFNLENBQUMsQ0FBQztZQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUNaLGFBQWEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsQ0FBQyxDQUFDLENBQUM7U0FDOUQ7UUFDRCxLQUFLLE1BQU0sQ0FBQyxDQUFDO1lBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQ1osYUFBYSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDLENBQUMsQ0FBQztTQUM5RDtRQUNELEtBQUssT0FBTyxDQUFDLENBQUM7WUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FDYixhQUFhLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUMsQ0FBQyxDQUFDO1NBQzlEO1FBQ0Q7WUFDRSxNQUFNLFNBQVMsQ0FBQyxhQUFhLElBQUksQ0FBQyxFQUFFLHFCQUFxQixDQUFDLENBQUM7S0FDOUQ7QUFDSCxDQUFDLENBQUM7QUFFVixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8taW1wb3J0cy1mcm9tLWRpc3RcbmltcG9ydCAqIGFzIHRmT3BzIGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZS9kaXN0L29wcy9vcHNfZm9yX2NvbnZlcnRlcic7XG5cbmltcG9ydCB7TmFtZWRUZW5zb3JzTWFwfSBmcm9tICcuLi8uLi9kYXRhL3R5cGVzJztcbmltcG9ydCB7RXhlY3V0aW9uQ29udGV4dH0gZnJvbSAnLi4vLi4vZXhlY3V0b3IvZXhlY3V0aW9uX2NvbnRleHQnO1xuaW1wb3J0IHtJbnRlcm5hbE9wRXhlY3V0b3IsIE5vZGV9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtnZXRQYXJhbVZhbHVlfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGNvbnN0IGV4ZWN1dGVPcDogSW50ZXJuYWxPcEV4ZWN1dG9yID1cbiAgICAobm9kZTogTm9kZSwgdGVuc29yTWFwOiBOYW1lZFRlbnNvcnNNYXAsIGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQsXG4gICAgIG9wcyA9IHRmT3BzKTogVGVuc29yW10gPT4ge1xuICAgICAgICAgIHN3aXRjaCAobm9kZS5vcCkge1xuICAgICAgICAgICAgY2FzZSAnRkZUJzoge1xuICAgICAgICAgICAgICByZXR1cm4gW29wcy5mZnQoXG4gICAgICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCd4Jywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ0lGRlQnOiB7XG4gICAgICAgICAgICAgIHJldHVybiBbb3BzLmlmZnQoXG4gICAgICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCd4Jywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ1JGRlQnOiB7XG4gICAgICAgICAgICAgIHJldHVybiBbb3BzLnJmZnQoXG4gICAgICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCd4Jywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3IpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ0lSRkZUJzoge1xuICAgICAgICAgICAgICByZXR1cm4gW29wcy5pcmZmdChcbiAgICAgICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ3gnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcildO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGhyb3cgVHlwZUVycm9yKGBOb2RlIHR5cGUgJHtub2RlLm9wfSBpcyBub3QgaW1wbGVtZW50ZWRgKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbmV4cG9ydCBjb25zdCBDQVRFR09SWSA9ICdzcGVjdHJhbCc7XG4iXX0=","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'StringNGrams': {\n            const { nGrams, nGramsSplits } = ops.string.stringNGrams(getParamValue('data', node, tensorMap, context), getParamValue('dataSplits', node, tensorMap, context), getParamValue('separator', node, tensorMap, context), getParamValue('nGramWidths', node, tensorMap, context), getParamValue('leftPad', node, tensorMap, context), getParamValue('rightPad', node, tensorMap, context), getParamValue('padWidth', node, tensorMap, context), getParamValue('preserveShortSequences', node, tensorMap, context));\n            return [nGrams, nGramsSplits];\n        }\n        case 'StringSplit': {\n            const { indices, values, shape } = ops.string.stringSplit(getParamValue('input', node, tensorMap, context), getParamValue('delimiter', node, tensorMap, context), getParamValue('skipEmpty', node, tensorMap, context));\n            return [indices, values, shape];\n        }\n        case 'StringToHashBucketFast': {\n            const output = ops.string.stringToHashBucketFast(getParamValue('input', node, tensorMap, context), getParamValue('numBuckets', node, tensorMap, context));\n            return [output];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'string';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nX2V4ZWN1dG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb252ZXJ0ZXIvc3JjL29wZXJhdGlvbnMvZXhlY3V0b3JzL3N0cmluZ19leGVjdXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxpREFBaUQ7QUFDakQsT0FBTyxLQUFLLEtBQUssTUFBTSxrREFBa0QsQ0FBQztBQU0xRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRXRDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FDbEIsQ0FBQyxJQUFVLEVBQUUsU0FBMEIsRUFDdEMsT0FBeUIsRUFBRSxHQUFHLEdBQUcsS0FBSyxFQUFZLEVBQUU7SUFDbkQsUUFBUSxJQUFJLENBQUMsRUFBRSxFQUFFO1FBQ2YsS0FBSyxjQUFjLENBQUMsQ0FBQztZQUNuQixNQUFNLEVBQUMsTUFBTSxFQUFFLFlBQVksRUFBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUNsRCxhQUFhLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzNELGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsRUFDL0QsYUFBYSxDQUFDLFdBQVcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxFQUM5RCxhQUFhLENBQUMsYUFBYSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUN6QyxFQUNaLGFBQWEsQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsRUFDNUQsYUFBYSxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxFQUM3RCxhQUFhLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLEVBQzdELGFBQWEsQ0FDVCx3QkFBd0IsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FDM0MsQ0FBQyxDQUFDO1lBQ2pCLE9BQU8sQ0FBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7U0FDL0I7UUFDRCxLQUFLLGFBQWEsQ0FBQyxDQUFDO1lBQ2xCLE1BQU0sRUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUNuRCxhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFhLEVBQzVELGFBQWEsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsRUFDOUQsYUFBYSxDQUFDLFdBQVcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBWSxDQUFDLENBQUM7WUFDckUsT0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDakM7UUFDRCxLQUFLLHdCQUF3QixDQUFDLENBQUM7WUFDN0IsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FDNUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxFQUMxRCxhQUFhLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUMsQ0FBQztZQUNyRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDakI7UUFDRDtZQUNFLE1BQU0sU0FBUyxDQUFDLGFBQWEsSUFBSSxDQUFDLEVBQUUscUJBQXFCLENBQUMsQ0FBQztLQUM5RDtBQUNILENBQUMsQ0FBQztBQUVOLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7U2NhbGFyLCBUZW5zb3IsIFRlbnNvcjFEfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBvcnRzLWZyb20tZGlzdFxuaW1wb3J0ICogYXMgdGZPcHMgZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlL2Rpc3Qvb3BzL29wc19mb3JfY29udmVydGVyJztcblxuaW1wb3J0IHtOYW1lZFRlbnNvcnNNYXB9IGZyb20gJy4uLy4uL2RhdGEvdHlwZXMnO1xuaW1wb3J0IHtFeGVjdXRpb25Db250ZXh0fSBmcm9tICcuLi8uLi9leGVjdXRvci9leGVjdXRpb25fY29udGV4dCc7XG5pbXBvcnQge0ludGVybmFsT3BFeGVjdXRvciwgTm9kZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge2dldFBhcmFtVmFsdWV9IGZyb20gJy4vdXRpbHMnO1xuXG5leHBvcnQgY29uc3QgZXhlY3V0ZU9wOiBJbnRlcm5hbE9wRXhlY3V0b3IgPVxuICAgIChub2RlOiBOb2RlLCB0ZW5zb3JNYXA6IE5hbWVkVGVuc29yc01hcCxcbiAgICAgY29udGV4dDogRXhlY3V0aW9uQ29udGV4dCwgb3BzID0gdGZPcHMpOiBUZW5zb3JbXSA9PiB7XG4gICAgICBzd2l0Y2ggKG5vZGUub3ApIHtcbiAgICAgICAgY2FzZSAnU3RyaW5nTkdyYW1zJzoge1xuICAgICAgICAgIGNvbnN0IHtuR3JhbXMsIG5HcmFtc1NwbGl0c30gPSBvcHMuc3RyaW5nLnN0cmluZ05HcmFtcyhcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZGF0YScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yMUQsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2RhdGFTcGxpdHMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcixcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc2VwYXJhdG9yJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ25HcmFtV2lkdGhzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgbnVtYmVyW10sXG4gICAgICAgICAgICAgIGdldFBhcmFtVmFsdWUoJ2xlZnRQYWQnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgncmlnaHRQYWQnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgncGFkV2lkdGgnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIG51bWJlcixcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZShcbiAgICAgICAgICAgICAgICAgICdwcmVzZXJ2ZVNob3J0U2VxdWVuY2VzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhc1xuICAgICAgICAgICAgICAgICAgYm9vbGVhbik7XG4gICAgICAgICAgcmV0dXJuIFtuR3JhbXMsIG5HcmFtc1NwbGl0c107XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnU3RyaW5nU3BsaXQnOiB7XG4gICAgICAgICAgY29uc3Qge2luZGljZXMsIHZhbHVlcywgc2hhcGV9ID0gb3BzLnN0cmluZy5zdHJpbmdTcGxpdChcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnaW5wdXQnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjFELFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdkZWxpbWl0ZXInLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFNjYWxhcixcbiAgICAgICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnc2tpcEVtcHR5Jywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBib29sZWFuKTtcbiAgICAgICAgICByZXR1cm4gW2luZGljZXMsIHZhbHVlcywgc2hhcGVdO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1N0cmluZ1RvSGFzaEJ1Y2tldEZhc3QnOiB7XG4gICAgICAgICAgY29uc3Qgb3V0cHV0ID0gb3BzLnN0cmluZy5zdHJpbmdUb0hhc2hCdWNrZXRGYXN0KFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdpbnB1dCcsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgVGVuc29yLFxuICAgICAgICAgICAgICBnZXRQYXJhbVZhbHVlKCdudW1CdWNrZXRzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBudW1iZXIpO1xuICAgICAgICAgIHJldHVybiBbb3V0cHV0XTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IFR5cGVFcnJvcihgTm9kZSB0eXBlICR7bm9kZS5vcH0gaXMgbm90IGltcGxlbWVudGVkYCk7XG4gICAgICB9XG4gICAgfTtcblxuZXhwb3J0IGNvbnN0IENBVEVHT1JZID0gJ3N0cmluZyc7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nexport const executeOp = (node, tensorMap, context, ops = tfOps) => {\n    switch (node.op) {\n        case 'Cast': {\n            return [ops.cast(getParamValue('x', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\n        }\n        case 'ExpandDims': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.expandDims(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Squeeze': {\n            const axis = getParamValue('axis', node, tensorMap, context);\n            return [ops.squeeze(getParamValue('x', node, tensorMap, context), axis)];\n        }\n        case 'Reshape': {\n            return [ops.reshape(getParamValue('x', node, tensorMap, context), getParamValue('shape', node, tensorMap, context))];\n        }\n        case 'MirrorPad': {\n            return [ops.mirrorPad(getParamValue('x', node, tensorMap, context), getParamValue('padding', node, tensorMap, context), getParamValue('mode', node, tensorMap, context))];\n        }\n        case 'PadV2':\n        case 'Pad': {\n            return [ops.pad(getParamValue('x', node, tensorMap, context), getParamValue('padding', node, tensorMap, context), getParamValue('constantValue', node, tensorMap, context))];\n        }\n        case 'SpaceToBatchND': {\n            const blockShape = getParamValue('blockShape', node, tensorMap, context);\n            const paddings = getParamValue('paddings', node, tensorMap, context);\n            return [ops.spaceToBatchND(getParamValue('x', node, tensorMap, context), blockShape, paddings)];\n        }\n        case 'BatchToSpaceND': {\n            const blockShape = getParamValue('blockShape', node, tensorMap, context);\n            const crops = getParamValue('crops', node, tensorMap, context);\n            return [ops.batchToSpaceND(getParamValue('x', node, tensorMap, context), blockShape, crops)];\n        }\n        case 'DepthToSpace': {\n            const blockSize = getParamValue('blockSize', node, tensorMap, context);\n            const dataFormat = getParamValue('dataFormat', node, tensorMap, context).toUpperCase();\n            return [ops.depthToSpace(getParamValue('x', node, tensorMap, context), blockSize, dataFormat)];\n        }\n        case 'BroadcastTo': {\n            return [ops.broadcastTo(getParamValue('x', node, tensorMap, context), getParamValue('shape', node, tensorMap, context))];\n        }\n        case 'BroadcastArgs': {\n            return [ops.broadcastArgs(getParamValue('s0', node, tensorMap, context), getParamValue('s1', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'transformation';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { HashTable } from '../../executor/hash_table';\nimport { getParamValue } from './utils';\nexport const executeOp = async (node, tensorMap, context, resourceManager) => {\n    switch (node.op) {\n        case 'HashTable':\n        case 'HashTableV2': {\n            const keyDType = getParamValue('keyDType', node, tensorMap, context);\n            const valueDType = getParamValue('valueDType', node, tensorMap, context);\n            const hashTable = new HashTable(keyDType, valueDType);\n            resourceManager.addHashTable(node.name, hashTable);\n            return [hashTable.handle];\n        }\n        case 'LookupTableImport':\n        case 'LookupTableImportV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = getParamValue('keys', node, tensorMap, context);\n            const values = getParamValue('values', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.import(keys, values)];\n        }\n        case 'LookupTableFind':\n        case 'LookupTableFindV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = getParamValue('keys', node, tensorMap, context);\n            const defaultValue = getParamValue('defaultValue', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.find(keys, defaultValue)];\n        }\n        case 'LookupTableSize':\n        case 'LookupTableSizeV2': {\n            const handle = getParamValue('tableHandle', node, tensorMap, context, resourceManager);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [hashTable.tensorSize()];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'hash_table';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF90YWJsZV9leGVjdXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9vcGVyYXRpb25zL2V4ZWN1dG9ycy9oYXNoX3RhYmxlX2V4ZWN1dG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQU1ILE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUlwRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRXRDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBNEIsS0FBSyxFQUNuRCxJQUFVLEVBQUUsU0FBMEIsRUFBRSxPQUF5QixFQUNqRSxlQUFnQyxFQUFxQixFQUFFO0lBQ3pELFFBQVEsSUFBSSxDQUFDLEVBQUUsRUFBRTtRQUNmLEtBQUssV0FBVyxDQUFDO1FBQ2pCLEtBQUssYUFBYSxDQUFDLENBQUM7WUFDbEIsTUFBTSxRQUFRLEdBQ1YsYUFBYSxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBYSxDQUFDO1lBQ3BFLE1BQU0sVUFBVSxHQUNaLGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQWEsQ0FBQztZQUV0RSxNQUFNLFNBQVMsR0FBRyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDdEQsZUFBZSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1lBQ25ELE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDM0I7UUFDRCxLQUFLLG1CQUFtQixDQUFDO1FBQ3pCLEtBQUsscUJBQXFCLENBQUMsQ0FBQztZQUMxQixNQUFNLE1BQU0sR0FBRyxhQUFhLENBQ1QsYUFBYSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUN2QyxlQUFlLENBQVcsQ0FBQztZQUM5QyxNQUFNLElBQUksR0FBRyxhQUFhLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUM7WUFDdkUsTUFBTSxNQUFNLEdBQ1IsYUFBYSxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBVyxDQUFDO1lBRWhFLE1BQU0sU0FBUyxHQUFHLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7WUFFOUQsT0FBTyxDQUFDLE1BQU0sU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUMvQztRQUNELEtBQUssaUJBQWlCLENBQUM7UUFDdkIsS0FBSyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ3hCLE1BQU0sTUFBTSxHQUFHLGFBQWEsQ0FDVCxhQUFhLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQ3ZDLGVBQWUsQ0FBVyxDQUFDO1lBQzlDLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQVcsQ0FBQztZQUN2RSxNQUFNLFlBQVksR0FDZCxhQUFhLENBQUMsY0FBYyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFXLENBQUM7WUFFdEUsTUFBTSxTQUFTLEdBQUcsZUFBZSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM5RCxPQUFPLENBQUMsTUFBTSxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO1NBQ25EO1FBQ0QsS0FBSyxpQkFBaUIsQ0FBQztRQUN2QixLQUFLLG1CQUFtQixDQUFDLENBQUM7WUFDeEIsTUFBTSxNQUFNLEdBQUcsYUFBYSxDQUNULGFBQWEsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFDdkMsZUFBZSxDQUFXLENBQUM7WUFFOUMsTUFBTSxTQUFTLEdBQUcsZUFBZSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM5RCxPQUFPLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7U0FDakM7UUFDRDtZQUNFLE1BQU0sU0FBUyxDQUFDLGFBQWEsSUFBSSxDQUFDLEVBQUUscUJBQXFCLENBQUMsQ0FBQztLQUM5RDtBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RGF0YVR5cGUsIFRlbnNvcn0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuaW1wb3J0IHtOYW1lZFRlbnNvcnNNYXB9IGZyb20gJy4uLy4uL2RhdGEvdHlwZXMnO1xuaW1wb3J0IHtFeGVjdXRpb25Db250ZXh0fSBmcm9tICcuLi8uLi9leGVjdXRvci9leGVjdXRpb25fY29udGV4dCc7XG5pbXBvcnQge0hhc2hUYWJsZX0gZnJvbSAnLi4vLi4vZXhlY3V0b3IvaGFzaF90YWJsZSc7XG5pbXBvcnQge1Jlc291cmNlTWFuYWdlcn0gZnJvbSAnLi4vLi4vZXhlY3V0b3IvcmVzb3VyY2VfbWFuYWdlcic7XG5pbXBvcnQge0ludGVybmFsT3BBc3luY0V4ZWN1dG9yLCBOb2RlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7Z2V0UGFyYW1WYWx1ZX0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBleGVjdXRlT3A6IEludGVybmFsT3BBc3luY0V4ZWN1dG9yID0gYXN5bmMoXG4gICAgbm9kZTogTm9kZSwgdGVuc29yTWFwOiBOYW1lZFRlbnNvcnNNYXAsIGNvbnRleHQ6IEV4ZWN1dGlvbkNvbnRleHQsXG4gICAgcmVzb3VyY2VNYW5hZ2VyOiBSZXNvdXJjZU1hbmFnZXIpOiBQcm9taXNlPFRlbnNvcltdPiA9PiB7XG4gIHN3aXRjaCAobm9kZS5vcCkge1xuICAgIGNhc2UgJ0hhc2hUYWJsZSc6XG4gICAgY2FzZSAnSGFzaFRhYmxlVjInOiB7XG4gICAgICBjb25zdCBrZXlEVHlwZSA9XG4gICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgna2V5RFR5cGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIERhdGFUeXBlO1xuICAgICAgY29uc3QgdmFsdWVEVHlwZSA9XG4gICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgndmFsdWVEVHlwZScsIG5vZGUsIHRlbnNvck1hcCwgY29udGV4dCkgYXMgRGF0YVR5cGU7XG5cbiAgICAgIGNvbnN0IGhhc2hUYWJsZSA9IG5ldyBIYXNoVGFibGUoa2V5RFR5cGUsIHZhbHVlRFR5cGUpO1xuICAgICAgcmVzb3VyY2VNYW5hZ2VyLmFkZEhhc2hUYWJsZShub2RlLm5hbWUsIGhhc2hUYWJsZSk7XG4gICAgICByZXR1cm4gW2hhc2hUYWJsZS5oYW5kbGVdO1xuICAgIH1cbiAgICBjYXNlICdMb29rdXBUYWJsZUltcG9ydCc6XG4gICAgY2FzZSAnTG9va3VwVGFibGVJbXBvcnRWMic6IHtcbiAgICAgIGNvbnN0IGhhbmRsZSA9IGdldFBhcmFtVmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgJ3RhYmxlSGFuZGxlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlTWFuYWdlcikgYXMgVGVuc29yO1xuICAgICAgY29uc3Qga2V5cyA9IGdldFBhcmFtVmFsdWUoJ2tleXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjtcbiAgICAgIGNvbnN0IHZhbHVlcyA9XG4gICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgndmFsdWVzJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3I7XG5cbiAgICAgIGNvbnN0IGhhc2hUYWJsZSA9IHJlc291cmNlTWFuYWdlci5nZXRIYXNoVGFibGVCeUlkKGhhbmRsZS5pZCk7XG5cbiAgICAgIHJldHVybiBbYXdhaXQgaGFzaFRhYmxlLmltcG9ydChrZXlzLCB2YWx1ZXMpXTtcbiAgICB9XG4gICAgY2FzZSAnTG9va3VwVGFibGVGaW5kJzpcbiAgICBjYXNlICdMb29rdXBUYWJsZUZpbmRWMic6IHtcbiAgICAgIGNvbnN0IGhhbmRsZSA9IGdldFBhcmFtVmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgJ3RhYmxlSGFuZGxlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgIHJlc291cmNlTWFuYWdlcikgYXMgVGVuc29yO1xuICAgICAgY29uc3Qga2V5cyA9IGdldFBhcmFtVmFsdWUoJ2tleXMnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQpIGFzIFRlbnNvcjtcbiAgICAgIGNvbnN0IGRlZmF1bHRWYWx1ZSA9XG4gICAgICAgICAgZ2V0UGFyYW1WYWx1ZSgnZGVmYXVsdFZhbHVlJywgbm9kZSwgdGVuc29yTWFwLCBjb250ZXh0KSBhcyBUZW5zb3I7XG5cbiAgICAgIGNvbnN0IGhhc2hUYWJsZSA9IHJlc291cmNlTWFuYWdlci5nZXRIYXNoVGFibGVCeUlkKGhhbmRsZS5pZCk7XG4gICAgICByZXR1cm4gW2F3YWl0IGhhc2hUYWJsZS5maW5kKGtleXMsIGRlZmF1bHRWYWx1ZSldO1xuICAgIH1cbiAgICBjYXNlICdMb29rdXBUYWJsZVNpemUnOlxuICAgIGNhc2UgJ0xvb2t1cFRhYmxlU2l6ZVYyJzoge1xuICAgICAgY29uc3QgaGFuZGxlID0gZ2V0UGFyYW1WYWx1ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAndGFibGVIYW5kbGUnLCBub2RlLCB0ZW5zb3JNYXAsIGNvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2VNYW5hZ2VyKSBhcyBUZW5zb3I7XG5cbiAgICAgIGNvbnN0IGhhc2hUYWJsZSA9IHJlc291cmNlTWFuYWdlci5nZXRIYXNoVGFibGVCeUlkKGhhbmRsZS5pZCk7XG4gICAgICByZXR1cm4gW2hhc2hUYWJsZS50ZW5zb3JTaXplKCldO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgVHlwZUVycm9yKGBOb2RlIHR5cGUgJHtub2RlLm9wfSBpcyBub3QgaW1wbGVtZW50ZWRgKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IENBVEVHT1JZID0gJ2hhc2hfdGFibGUnO1xuIl19","/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n    constructor(weightMap = {}, tensorArrayMap = {}, tensorListMap = {}, functionMap = {}) {\n        this.weightMap = weightMap;\n        this.tensorArrayMap = tensorArrayMap;\n        this.tensorListMap = tensorListMap;\n        this.functionMap = functionMap;\n        this.rootContext = { id: 0, frameName: '', iterationId: 0 };\n        this.contexts = [this.rootContext];\n        this.lastId = 0;\n        this.generateCurrentContextIds();\n    }\n    newFrame(id, frameName) {\n        return { id, frameName, iterationId: 0 };\n    }\n    /**\n     * Set the current context\n     * @param contexts: ExecutionContextInfo[] the current path of execution\n     * frames\n     */\n    set currentContext(contexts) {\n        if (this.contexts !== contexts) {\n            this.contexts = contexts;\n            this.generateCurrentContextIds();\n        }\n    }\n    get currentContext() {\n        return this.contexts;\n    }\n    /**\n     * Returns the current context in string format.\n     */\n    get currentContextId() {\n        return this._currentContextIds[0];\n    }\n    /**\n     * Returns the current context and all parent contexts in string format.\n     * This allow access to the nodes in the current and parent frames.\n     */\n    get currentContextIds() {\n        return this._currentContextIds;\n    }\n    generateCurrentContextIds() {\n        const names = [];\n        for (let i = 0; i < this.contexts.length - 1; i++) {\n            const contexts = this.contexts.slice(0, this.contexts.length - i);\n            names.push(this.contextIdforContexts(contexts));\n        }\n        names.push('');\n        this._currentContextIds = names;\n    }\n    contextIdforContexts(contexts) {\n        return contexts ?\n            contexts\n                .map(context => (context.id === 0 && context.iterationId === 0) ?\n                '' :\n                `${context.frameName}-${context.iterationId}`)\n                .join('/') :\n            '';\n    }\n    /**\n     * Enter a new frame, a new context is pushed on the current context list.\n     * @param frameId new frame id\n     */\n    enterFrame(frameId) {\n        if (this.contexts) {\n            this.lastId++;\n            this.contexts = this.contexts.slice();\n            this.contexts.push(this.newFrame(this.lastId, frameId));\n            this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n        }\n    }\n    /**\n     * Exit the current frame, the last context is removed from the current\n     * context list.\n     */\n    exitFrame() {\n        if (this.contexts && this.contexts.length > 1) {\n            this.contexts = this.contexts.slice();\n            this.contexts.splice(-1);\n            this.currentContextIds.shift();\n        }\n        else {\n            throw new Error('Cannot exit frame, the context is empty');\n        }\n    }\n    /**\n     * Enter the next iteration of a loop, the iteration id of last context is\n     * increased.\n     */\n    nextIteration() {\n        if (this.contexts && this.contexts.length > 0) {\n            this.contexts = this.contexts.slice();\n            this.lastId++;\n            const context = Object.assign({}, this.contexts[this.contexts.length - 1]);\n            context.iterationId += 1;\n            context.id = this.lastId;\n            this.contexts.splice(-1, 1, context);\n            this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts));\n        }\n        else {\n            throw new Error('Cannot increase frame iteration, the context is empty');\n        }\n    }\n    getWeight(name) {\n        return this.weightMap[name];\n    }\n    addTensorArray(tensorArray) {\n        this.tensorArrayMap[tensorArray.id] = tensorArray;\n    }\n    getTensorArray(id) {\n        return this.tensorArrayMap[id];\n    }\n    addTensorList(tensorList) {\n        this.tensorListMap[tensorList.id] = tensorList;\n    }\n    getTensorList(id) {\n        return this.tensorListMap[id];\n    }\n    dispose(keepIds) {\n        for (const key in this.tensorArrayMap) {\n            this.tensorArrayMap[key].clearAndClose(keepIds);\n        }\n        for (const key in this.tensorListMap) {\n            this.tensorListMap[key].clearAndClose(keepIds);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { parseNodeName } from '../operations/executors/utils';\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(inputs, outputs, weightMap, initNodes) {\n    const usedNodes = new Set();\n    const missingInputs = [];\n    let dynamicNode = null;\n    let syncInputs = null;\n    // Start with the outputs, going backwards and find all the nodes that are\n    // needed to compute those outputs.\n    const seen = new Set();\n    const inputNodeNames = Object.keys(inputs).map(name => parseNodeName(name)[0]);\n    let initNodeNames = [];\n    if (initNodes != null) {\n        initNodeNames = initNodes.map(node => parseNodeName(node.name)[0]);\n    }\n    const frontier = [...outputs];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        if (isControlFlow(node) || isDynamicShape(node) || isHashTable(node)) {\n            if (dynamicNode == null) {\n                dynamicNode = node;\n                syncInputs = dynamicNode.children.map(child => child.name)\n                    .filter(name => usedNodes.has(name));\n            }\n        }\n        usedNodes.add(node.name);\n        // Weights are dead end since we already have their values.\n        if (weightMap[node.name] != null) {\n            continue;\n        }\n        // This node is a dead end since it's one of the user-provided inputs.\n        if (inputNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        // This node is a dead end since it doesn't have any inputs.\n        if (initNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        if (node.inputs.length === 0) {\n            missingInputs.push(node.name);\n            continue;\n        }\n        node.inputs.forEach(input => {\n            // Don't add to the frontier if it is already there.\n            if (seen.has(input.name)) {\n                return;\n            }\n            seen.add(input.name);\n            frontier.push(input);\n        });\n    }\n    return { inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs };\n}\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(graph, weightMap, executionInfo) {\n    const { usedNodes, inputs } = executionInfo;\n    const frontier = [];\n    const inputNodes = Object.keys(inputs)\n        .map(name => parseNodeName(name)[0])\n        .map(name => graph.nodes[name]);\n    const initNodes = graph.initNodes;\n    inputNodes.forEach(input => {\n        if (usedNodes.has(input.name)) {\n            frontier.push(input);\n        }\n    });\n    graph.weights.forEach(weight => {\n        if (usedNodes.has(weight.name)) {\n            frontier.push(weight);\n        }\n    });\n    if (initNodes != null) {\n        initNodes.forEach(node => {\n            if (usedNodes.has(node.name)) {\n                frontier.push(node);\n            }\n        });\n    }\n    const seen = new Set();\n    const orderedNodes = [];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        seen.add(node.name);\n        if (!weightMap[node.name]) {\n            orderedNodes.push(node);\n        }\n        node.children.forEach(child => {\n            if (!seen.has(child.name) && usedNodes.has(child.name) &&\n                child.inputs.every(input => seen.has(input.name))) {\n                frontier.push(child);\n            }\n        });\n    }\n    return orderedNodes;\n}\nconst CONTROL_FLOW_OPS = [\n    'Switch', 'Merge', 'Enter', 'Exit', 'NextIteration', 'StatelessIf',\n    'StatelessWhile', 'if', 'While'\n];\nconst DYNAMIC_SHAPE_OPS = [\n    'NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'NonMaxSuppressionV5', 'Where'\n];\nconst HASH_TABLE_OPS = [\n    'HashTable', 'HashTableV2', 'LookupTableImport', 'LookupTableImportV2',\n    'LookupTableFind', 'LookupTableFindV2', 'LookupTableSize', 'LookupTableSizeV2'\n];\nexport function isControlFlow(node) {\n    return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\nexport function isDynamicShape(node) {\n    return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\nexport function isHashTable(node) {\n    return HASH_TABLE_OPS.indexOf(node.op) >= 0;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWxfYW5hbHlzaXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvbnZlcnRlci9zcmMvZXhlY3V0b3IvbW9kZWxfYW5hbHlzaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBS0gsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBWTVEOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLFVBQVUsb0JBQW9CLENBQ2hDLE1BQXNCLEVBQUUsT0FBZSxFQUFFLFNBQTBCLEVBQ25FLFNBQWtCO0lBQ3BCLE1BQU0sU0FBUyxHQUFHLElBQUksR0FBRyxFQUFVLENBQUM7SUFDcEMsTUFBTSxhQUFhLEdBQWEsRUFBRSxDQUFDO0lBQ25DLElBQUksV0FBVyxHQUFTLElBQUksQ0FBQztJQUM3QixJQUFJLFVBQVUsR0FBYSxJQUFJLENBQUM7SUFFaEMsMEVBQTBFO0lBQzFFLG1DQUFtQztJQUNuQyxNQUFNLElBQUksR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO0lBQy9CLE1BQU0sY0FBYyxHQUNoQixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTVELElBQUksYUFBYSxHQUFhLEVBQUUsQ0FBQztJQUNqQyxJQUFJLFNBQVMsSUFBSSxJQUFJLEVBQUU7UUFDckIsYUFBYSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDcEU7SUFFRCxNQUFNLFFBQVEsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUM7SUFDOUIsT0FBTyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMs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O2FBQ3RCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sWUFBWSxDQUFDO0FBQ3RCLENBQUM7QUFFRCxNQUFNLGdCQUFnQixHQUFHO0lBQ3ZCLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsYUFBYTtJQUNsRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsT0FBTztDQUNoQyxDQUFDO0FBQ0YsTUFBTSxpQkFBaUIsR0FBRztJQUN4QixxQkFBcUIsRUFBRSxxQkFBcUIsRUFBRSxxQkFBcUIsRUFBRSxPQUFPO0NBQzdFLENBQUM7QUFDRixNQUFNLGNBQWMsR0FBRztJQUNyQixXQUFXLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixFQUFFLHFCQUFxQjtJQUN0RSxpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRSxtQkFBbUI7Q0FDL0UsQ0FBQztBQUVGLE1BQU0sVUFBVSxhQUFhLENBQUMsSUFBVTtJQUN0QyxPQUFPLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hELENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLElBQVU7SUFDdkMsT0FBTyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqRCxDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFVO0lBQ3BDLE9BQU8sY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzlDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJ0B0ZW5zb3JmbG93L3RmanMtY29yZSc7XG5cbmltcG9ydCB7TmFtZWRUZW5zb3JzTWFwfSBmcm9tICcuLi9kYXRhL3R5cGVzJztcbmltcG9ydCB7cGFyc2VOb2RlTmFtZX0gZnJvbSAnLi4vb3BlcmF0aW9ucy9leGVjdXRvcnMvdXRpbHMnO1xuaW1wb3J0IHtHcmFwaCwgTm9kZX0gZnJvbSAnLi4vb3BlcmF0aW9ucy90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXhlY3V0aW9uSW5mbyB7XG4gIGlucHV0czogTmFtZWRUZW5zb3JNYXA7XG4gIG91dHB1dHM6IE5vZGVbXTtcbiAgdXNlZE5vZGVzOiBTZXQ8c3RyaW5nPjtcbiAgbWlzc2luZ0lucHV0czogc3RyaW5nW107XG4gIGR5bmFtaWNOb2RlOiBOb2RlO1xuICBzeW5jSW5wdXRzOiBzdHJpbmdbXTtcbn1cblxuLyoqXG4gKiBHaXZlbiBncmFwaCBpbnB1dHMgYW5kIGRlc2lyZWQgb3V0cHV0cywgZmluZCB0aGUgbWluaW1hbCBzZXQgb2Ygbm9kZXNcbiAqIHRvIGV4ZWN1dGUgaW4gb3JkZXIgdG8gY29tcHV0ZSB0aGUgb3V0cHV0cy4gSW4gYWRkaXRpb24gcmV0dXJuIG90aGVyIHVzZWZ1bFxuICogaW5mbyBzdWNoOlxuICogLSBNaXNzaW5nIGlucHV0cyBuZWVkZWQgdG8gY29tcHV0ZSB0aGUgb3V0cHV0LlxuICogLSBXaGV0aGVyIHRoZSBzdWJncmFwaCBjb250YWlucyBkeW5hbWljIG9wcyAoY29udHJvbCBmbG93LCBkeW5hbWljIHNoYXBlKS5cbiAqIC0gQWx0ZXJuYXRpdmUgaW5wdXRzIGluIG9yZGVyIHRvIGF2b2lkIGFzeW5jIChkeW5hbWljIG9wKSBleGVjdXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFeGVjdXRpb25TdWJncmFwaChcbiAgICBpbnB1dHM6IE5hbWVkVGVuc29yTWFwLCBvdXRwdXRzOiBOb2RlW10sIHdlaWdodE1hcDogTmFtZWRUZW5zb3JzTWFwLFxuICAgIGluaXROb2Rlcz86IE5vZGVbXSk6IEV4ZWN1dGlvbkluZm8ge1xuICBjb25zdCB1c2VkTm9kZXMgPSBuZXcgU2V0PHN0cmluZz4oKTtcbiAgY29uc3QgbWlzc2luZ0lucHV0czogc3RyaW5nW10gPSBbXTtcbiAgbGV0IGR5bmFtaWNOb2RlOiBOb2RlID0gbnVsbDtcbiAgbGV0IHN5bmNJbnB1dHM6IHN0cmluZ1tdID0gbnVsbDtcblxuICAvLyBTdGFydCB3aXRoIHRoZSBvdXRwdXRzLCBnb2luZyBiYWNrd2FyZHMgYW5kIGZpbmQgYWxsIHRoZSBub2RlcyB0aGF0IGFyZVxuICAvLyBuZWVkZWQgdG8gY29tcHV0ZSB0aG9zZSBvdXRwdXRzLlxuICBjb25zdCBzZWVuID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gIGNvbnN0IGlucHV0Tm9kZU5hbWVzID1cbiAgICAgIE9iamVjdC5rZXlzKGlucHV0cykubWFwKG5hbWUgPT4gcGFyc2VOb2RlTmFtZShuYW1lKVswXSk7XG5cbiAgbGV0IGluaXROb2RlTmFtZXM6IHN0cmluZ1tdID0gW107XG4gIGlmIChpbml0Tm9kZXMgIT0gbnVsbCkge1xuICAgIGluaXROb2RlTmFtZXMgPSBpbml0Tm9kZXMubWFwKG5vZGUgPT4gcGFyc2VOb2RlTmFtZShub2RlLm5hbWUpWzBdKTtcbiAgfVxuXG4gIGNvbnN0IGZyb250aWVyID0gWy4uLm91dHB1dHNdO1xuICB3aGlsZSAoZnJvbnRpZXIubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IG5vZGUgPSBmcm9udGllci5wb3AoKTtcbiAgICBpZiAoaXNDb250cm9sRmxvdyhub2RlKSB8fCBpc0R5bmFtaWNTaGFwZShub2RlKSB8fCBpc0hhc2hUYWJsZShub2RlKSkge1xuICAgICAgaWYgKGR5bmFtaWNOb2RlID09IG51bGwpIHtcbiAgICAgICAgZHluYW1pY05vZGUgPSBub2RlO1xuICAgICAgICBzeW5jSW5wdXRzID0gZHluYW1pY05vZGUuY2hpbGRyZW4ubWFwKGNoaWxkID0+IGNoaWxkLm5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihuYW1lID0+IHVzZWROb2Rlcy5oYXMobmFtZSkpO1xuICAgICAgfVxuICAgIH1cbiAgICB1c2VkTm9kZXMuYWRkKG5vZGUubmFtZSk7XG5cbiAgICAvLyBXZWlnaHRzIGFyZSBkZWFkIGVuZCBzaW5jZSB3ZSBhbHJlYWR5IGhhdmUgdGhlaXIgdmFsdWVzLlxuICAgIGlmICh3ZWlnaHRNYXBbbm9kZS5uYW1lXSAhPSBudWxsKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgLy8gVGhpcyBub2RlIGlzIGEgZGVhZCBlbmQgc2luY2UgaXQncyBvbmUgb2YgdGhlIHVzZXItcHJvdmlkZWQgaW5wdXRzLlxuICAgIGlmIChpbnB1dE5vZGVOYW1lcy5pbmRleE9mKG5vZGUubmFtZSkgIT09IC0xKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgLy8gVGhpcyBub2RlIGlzIGEgZGVhZCBlbmQgc2luY2UgaXQgZG9lc24ndCBoYXZlIGFueSBpbnB1dHMuXG4gICAgaWYgKGluaXROb2RlTmFtZXMuaW5kZXhPZihub2RlLm5hbWUpICE9PSAtMSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChub2RlLmlucHV0cy5sZW5ndGggPT09IDApIHtcbiAgICAgIG1pc3NpbmdJbnB1dHMucHVzaChub2RlLm5hbWUpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIG5vZGUuaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgLy8gRG9uJ3QgYWRkIHRvIHRoZSBmcm9udGllciBpZiBpdCBpcyBhbHJlYWR5IHRoZXJlLlxuICAgICAgaWYgKHNlZW4uaGFzKGlucHV0Lm5hbWUpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNlZW4uYWRkKGlucHV0Lm5hbWUpO1xuICAgICAgZnJvbnRpZXIucHVzaChpbnB1dCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtpbnB1dHMsIG91dHB1dHMsIHVzZWROb2RlcywgbWlzc2luZ0lucHV0cywgZHluYW1pY05vZGUsIHN5bmNJbnB1dHN9O1xufVxuXG4vKipcbiAqIEdpdmVuIHRoZSBleGVjdXRpb24gaW5mbywgcmV0dXJuIGEgbGlzdCBvZiBub2RlcyBpbiB0b3BvbG9naWNhbCBvcmRlciB0aGF0XG4gKiBuZWVkIHRvIGJlIGV4ZWN1dGVkIHRvIGNvbXB1dGUgdGhlIG91dHB1dC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVzSW5Ub3BvbG9naWNhbE9yZGVyKFxuICAgIGdyYXBoOiBHcmFwaCwgd2VpZ2h0TWFwOiBOYW1lZFRlbnNvcnNNYXAsXG4gICAgZXhlY3V0aW9uSW5mbzogRXhlY3V0aW9uSW5mbyk6IE5vZGVbXSB7XG4gIGNvbnN0IHt1c2VkTm9kZXMsIGlucHV0c30gPSBleGVjdXRpb25JbmZvO1xuICBjb25zdCBmcm9udGllcjogTm9kZVtdID0gW107XG4gIGNvbnN0IGlucHV0Tm9kZXMgPSBPYmplY3Qua2V5cyhpbnB1dHMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChuYW1lID0+IHBhcnNlTm9kZU5hbWUobmFtZSlbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChuYW1lID0+IGdyYXBoLm5vZGVzW25hbWVdKTtcbiAgY29uc3QgaW5pdE5vZGVzID0gZ3JhcGguaW5pdE5vZGVzO1xuXG4gIGlucHV0Tm9kZXMuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgaWYgKHVzZWROb2Rlcy5oYXMoaW5wdXQubmFtZSkpIHtcbiAgICAgIGZyb250aWVyLnB1c2goaW5wdXQpO1xuICAgIH1cbiAgfSk7XG4gIGdyYXBoLndlaWdodHMuZm9yRWFjaCh3ZWlnaHQgPT4ge1xuICAgIGlmICh1c2VkTm9kZXMuaGFzKHdlaWdodC5uYW1lKSkge1xuICAgICAgZnJvbnRpZXIucHVzaCh3ZWlnaHQpO1xuICAgIH1cbiAgfSk7XG4gIGlmIChpbml0Tm9kZXMgIT0gbnVsbCkge1xuICAgIGluaXROb2Rlcy5mb3JFYWNoKG5vZGUgPT4ge1xuICAgICAgaWYgKHVzZWROb2Rlcy5oYXMobm9kZS5uYW1lKSkge1xuICAgICAgICBmcm9udGllci5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGNvbnN0IHNlZW4gPSBuZXcgU2V0PHN0cmluZz4oKTtcbiAgY29uc3Qgb3JkZXJlZE5vZGVzOiBOb2RlW10gPSBbXTtcbiAgd2hpbGUgKGZyb250aWVyLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBub2RlID0gZnJvbnRpZXIucG9wKCk7XG4gICAgc2Vlbi5hZGQobm9kZS5uYW1lKTtcbiAgICBpZiAoIXdlaWdodE1hcFtub2RlLm5hbWVdKSB7XG4gICAgICBvcmRlcmVkTm9kZXMucHVzaChub2RlKTtcbiAgICB9XG4gICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgIGlmICghc2Vlbi5oYXMoY2hpbGQubmFtZSkgJiYgdXNlZE5vZGVzLmhhcyhjaGlsZC5uYW1lKSAmJlxuICAgICAgICAgIGNoaWxkLmlucHV0cy5ldmVyeShpbnB1dCA9PiBzZWVuLmhhcyhpbnB1dC5uYW1lKSkpIHtcbiAgICAgICAgZnJvbnRpZXIucHVzaChjaGlsZCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG9yZGVyZWROb2Rlcztcbn1cblxuY29uc3QgQ09OVFJPTF9GTE9XX09QUyA9IFtcbiAgJ1N3aXRjaCcsICdNZXJnZScsICdFbnRlcicsICdFeGl0JywgJ05leHRJdGVyYXRpb24nLCAnU3RhdGVsZXNzSWYnLFxuICAnU3RhdGVsZXNzV2hpbGUnLCAnaWYnLCAnV2hpbGUnXG5dO1xuY29uc3QgRFlOQU1JQ19TSEFQRV9PUFMgPSBbXG4gICdOb25NYXhTdXBwcmVzc2lvblYyJywgJ05vbk1heFN1cHByZXNzaW9uVjMnLCAnTm9uTWF4U3VwcHJlc3Npb25WNScsICdXaGVyZSdcbl07XG5jb25zdCBIQVNIX1RBQkxFX09QUyA9IFtcbiAgJ0hhc2hUYWJsZScsICdIYXNoVGFibGVWMicsICdMb29rdXBUYWJsZUltcG9ydCcsICdMb29rdXBUYWJsZUltcG9ydFYyJyxcbiAgJ0xvb2t1cFRhYmxlRmluZCcsICdMb29rdXBUYWJsZUZpbmRWMicsICdMb29rdXBUYWJsZVNpemUnLCAnTG9va3VwVGFibGVTaXplVjInXG5dO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNDb250cm9sRmxvdyhub2RlOiBOb2RlKSB7XG4gIHJldHVybiBDT05UUk9MX0ZMT1dfT1BTLmluZGV4T2Yobm9kZS5vcCkgPj0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRHluYW1pY1NoYXBlKG5vZGU6IE5vZGUpIHtcbiAgcmV0dXJuIERZTkFNSUNfU0hBUEVfT1BTLmluZGV4T2Yobm9kZS5vcCkgPj0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSGFzaFRhYmxlKG5vZGU6IE5vZGUpIHtcbiAgcmV0dXJuIEhBU0hfVEFCTEVfT1BTLmluZGV4T2Yobm9kZS5vcCkgPj0gMDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, tidy, util } from '@tensorflow/tfjs-core';\nimport { getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt, parseNodeName } from '../operations/executors/utils';\nimport { executeOp } from '../operations/operation_executor';\nimport { ExecutionContext } from './execution_context';\nimport { getExecutionSubgraph, getNodesInTopologicalOrder, isControlFlow } from './model_analysis';\nexport class GraphExecutor {\n    /**\n     *\n     * @param graph Graph the model or function graph to be executed.\n     * @param parent When building function exector you need to set the parent\n     * executor. Since the weights and function executor maps are set at parant\n     * level, that function executor can access the function maps and weight maps\n     * through the parent.\n     */\n    constructor(graph, parent) {\n        this.graph = graph;\n        this.parent = parent;\n        this.compiledMap = new Map();\n        this._weightMap = {};\n        this.SEPERATOR = ',';\n        this._functions = {};\n        this._functionExecutorMap = {};\n        this.intermediateTensors = {};\n        this.keepTensorForDebug = false;\n        this._outputs = graph.outputs;\n        this._inputs = graph.inputs;\n        this._initNodes = graph.initNodes;\n        this._signature = graph.signature;\n        this._functions = graph.functions;\n        // create sub-graph executors\n        if (graph.functions != null) {\n            Object.keys(graph.functions).forEach(name => {\n                this._functionExecutorMap[name] =\n                    new GraphExecutor(graph.functions[name], this);\n            });\n        }\n    }\n    get weightIds() {\n        return this.parent ? this.parent.weightIds : this._weightIds;\n    }\n    get functionExecutorMap() {\n        return this.parent ? this.parent.functionExecutorMap :\n            this._functionExecutorMap;\n    }\n    get weightMap() {\n        return this.parent ? this.parent.weightMap : this._weightMap;\n    }\n    set weightMap(weightMap) {\n        const weightIds = Object.keys(weightMap).map(key => weightMap[key].map(tensor => tensor.id));\n        this._weightIds = [].concat(...weightIds);\n        this._weightMap = weightMap;\n    }\n    /**\n     * Set `ResourceManager` shared by executors of a model.\n     * @param resourceManager: `ResourceManager` of the `GraphModel`.\n     */\n    set resourceManager(resourceManager) {\n        this._resourceManager = resourceManager;\n    }\n    get inputs() {\n        return this._inputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get outputs() {\n        return this._outputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get inputNodes() {\n        return this._inputs.map(node => node.signatureKey || node.name);\n    }\n    get outputNodes() {\n        return this._outputs.map((node) => {\n            const name = node.signatureKey || node.name;\n            return node.defaultOutput ? (`${name}:${node.defaultOutput}`) : name;\n        });\n    }\n    get functions() {\n        return Object.keys(this._functions).reduce((map, key) => {\n            map[key] = this._functions[key].signature;\n            return map;\n        }, {});\n    }\n    getCompilationKey(inputs, outputs) {\n        const sortedInputs = inputs.map(node => node.name).sort();\n        const sortedOutputs = outputs.map(node => node.name).sort();\n        return sortedInputs.join(this.SEPERATOR) + '--' +\n            sortedOutputs.join(this.SEPERATOR);\n    }\n    /**\n     * Compiles the inference graph and returns the minimal set of nodes that are\n     * required for execution, in the correct execution order.\n     */\n    compile(inputs, outputs) {\n        const executionInfo = getExecutionSubgraph(inputs, outputs, this.weightMap, this._initNodes);\n        const { missingInputs, dynamicNode, syncInputs } = executionInfo;\n        if (dynamicNode != null) {\n            throw new Error(`This execution contains the node '${dynamicNode.name}', which has ` +\n                `the dynamic op '${dynamicNode.op}'. Please use ` +\n                `model.executeAsync() instead. Alternatively, to avoid the ` +\n                `dynamic ops, specify the inputs [${syncInputs}]`);\n        }\n        if (missingInputs.length > 0) {\n            const outNames = outputs.map(n => n.name);\n            const inNames = Object.keys(inputs);\n            throw new Error(`Cannot compute the outputs [${outNames}] from the provided inputs ` +\n                `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n        }\n        return getNodesInTopologicalOrder(this.graph, this.weightMap, executionInfo);\n    }\n    /**\n     * Executes the inference for given input tensors.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model, if\n     * no outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     */\n    execute(inputs, outputs) {\n        inputs = this.mapInputs(inputs);\n        const names = Object.keys(inputs).sort();\n        this.checkInputs(inputs);\n        this.checkInputShapeAndType(inputs);\n        outputs = this.mapOutputs(outputs);\n        this.checkOutputs(outputs);\n        const inputNodes = names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n        const outputNodeNames = outputs.map(name => parseNodeName(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        this.resetIntermediateTensors();\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n        // Do nothing if the compiled graph cache contains the input.\n        let orderedNodes = this.compiledMap.get(compilationKey);\n        if (orderedNodes == null) {\n            orderedNodes = this.compile(inputs, outputNodes);\n            this.compiledMap.set(compilationKey, orderedNodes);\n        }\n        const tensorArrayMap = {};\n        const tensorListMap = {};\n        return tidy(() => {\n            const context = new ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n            const tensorsMap = Object.assign({}, this.weightMap);\n            Object.keys(inputs).forEach(name => {\n                const [nodeName, index] = parseNodeName(name);\n                const tensors = [];\n                tensors[index] = inputs[name];\n                tensorsMap[nodeName] = tensors;\n            });\n            const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n            const intermediateTensorConsumerCount = {};\n            for (let i = 0; i < orderedNodes.length; i++) {\n                const node = orderedNodes[i];\n                if (!tensorsMap[node.name]) {\n                    const tensors = executeOp(node, tensorsMap, context, this._resourceManager);\n                    if (util.isPromise(tensors)) {\n                        throw new Error(`The execution of the op '${node.op}' returned a promise. ` +\n                            `Please use model.executeAsync() instead.`);\n                    }\n                    tensorsMap[node.name] = tensors;\n                    this.checkTensorForDisposal(node.name, node, tensorsMap, context, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount);\n                }\n            }\n            // dispose the context for the root executor\n            if (this.parent == null) {\n                context.dispose(tensorsToKeep);\n            }\n            return outputs.map(name => getTensor(name, tensorsMap, context));\n        });\n    }\n    getFrozenTensorIds(tensorMap) {\n        const ids = [].concat.apply([], Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n        return new Set(ids);\n    }\n    checkTensorForDisposal(nodeName, node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount) {\n        // Skip output nodes and any control flow nodes, since its dependency is\n        // tricky to track correctly.\n        if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n            return;\n        }\n        tensorMap[nodeName].forEach(tensor => {\n            if (tensor != null) {\n                intermediateTensorConsumerCount[tensor.id] =\n                    (intermediateTensorConsumerCount[tensor.id] || 0) +\n                        node.children.length;\n            }\n        });\n        node.inputs.forEach(input => {\n            // Skip any control flow nodes, since its dependency is tricky to track\n            // correctly.\n            if (input.category !== 'control') {\n                const tensors = getTensorsForCurrentContenxt(input.name, tensorMap, context);\n                if (tensors != null) {\n                    tensors.forEach(tensor => {\n                        if (tensor && !tensor.kept && !tensorsToKeep.has(tensor.id)) {\n                            const count = intermediateTensorConsumerCount[tensor.id];\n                            if (count === 1) {\n                                if (!this.keepTensorForDebug) {\n                                    tensor.dispose();\n                                }\n                                else {\n                                    const [nodeName, index] = getNodeNameAndIndex(node.name, context);\n                                    if (this.intermediateTensors[nodeName]) {\n                                        this.intermediateTensors[nodeName][index] = tensor;\n                                    }\n                                    else {\n                                        this.intermediateTensors[nodeName] = [];\n                                        this.intermediateTensors[nodeName][index] = tensor;\n                                    }\n                                }\n                                delete intermediateTensorConsumerCount[tensor.id];\n                            }\n                            else if (count != null) {\n                                // only intermediate nodes has count set, inputs and weights are\n                                // not.\n                                intermediateTensorConsumerCount[tensor.id]--;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs output node name from the Tensorflow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     */\n    async executeAsync(inputs, outputs) {\n        return this._executeAsync(inputs, outputs);\n    }\n    disposeIntermediateTensors() {\n        if (!this.intermediateTensors) {\n            return;\n        }\n        Object.keys(this.intermediateTensors)\n            .forEach(key => this.intermediateTensors[key].forEach(tensor => tensor.dispose()));\n        this.disposeTensorsMap();\n    }\n    disposeTensorsMap() {\n        if (!this.tensorsMap) {\n            return;\n        }\n        Object.keys(this.tensorsMap).forEach(key => {\n            const tensorArray = this.tensorsMap[key];\n            tensorArray.forEach(tensor => {\n                if (tensor && !tensor.kept && !tensor.isDisposed &&\n                    !this.keepIds.has(tensor.id)) {\n                    tensor.dispose();\n                }\n            });\n        });\n    }\n    getIntermediateTensors() {\n        return this.tensorsMap;\n    }\n    resetIntermediateTensors() {\n        for (const key in this.intermediateTensors) {\n            this.intermediateTensors[key].forEach(tensor => tensor.dispose());\n            delete this.intermediateTensors[key];\n        }\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Optional. Flag for executing a function.\n     * @param tensorArrayMap Optional, global TensorArray map by id. Used for\n     * function execution.\n     * @param tensorArrayMap Optinal global TensorList map by id. Used for\n     * function execution.\n     */\n    async _executeAsync(inputs, outputs, isFunctionExecution = false, tensorArrayMap = {}, tensorListMap = {}) {\n        if (!isFunctionExecution) {\n            inputs = this.mapInputs(inputs);\n            this.checkInputs(inputs);\n            this.checkInputShapeAndType(inputs);\n            outputs = this.mapOutputs(outputs);\n            this.checkOutputs(outputs);\n        }\n        // For model debug.\n        try {\n            this.keepTensorForDebug = env().getBool('KEEP_INTERMEDIATE_TENSORS');\n        }\n        catch (e) {\n            console.warn(e.message);\n        }\n        this.resetIntermediateTensors();\n        const context = new ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n        // Graph with control flow op requires runtime evaluation of the execution\n        // order, while without control flow the execution order is pre-determined\n        // in the compile method.\n        this.tensorsMap = await this.executeWithControlFlow(inputs, context, outputs, isFunctionExecution);\n        const results = outputs.map(name => getTensor(name, this.tensorsMap, context));\n        // dispose all the intermediate tensors\n        const outputIds = results.map(t => t.id);\n        const inputIds = Object.keys(inputs).map(name => inputs[name].id);\n        this.keepIds =\n            new Set([...outputIds, ...inputIds, ...this.weightIds]);\n        if (!this.keepTensorForDebug) {\n            this.disposeTensorsMap();\n        }\n        // dispose the context for the root executor\n        if (this.parent == null) {\n            context.dispose(this.keepIds);\n        }\n        return results;\n    }\n    async executeFunctionAsync(inputs, tensorArrayMap, tensorListMap) {\n        const mappedInputs = inputs.reduce((map, tensor, index) => {\n            map[this.inputs[index].name] = tensor;\n            return map;\n        }, {});\n        return this._executeAsync(mappedInputs, this.outputNodes, true, tensorArrayMap, tensorListMap);\n    }\n    /**\n     * When there are control flow nodes in the graph, the graph execution use\n     * ExecutionContext to keep track of the frames and loop iterators.\n     * @param inputs placeholder tensors for the graph.\n     * @param context the execution context object for current execution.\n     * @param outputNames Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Flag for executing a function.\n     */\n    async executeWithControlFlow(inputs, context, outputNames, isFunctionExecution) {\n        const names = Object.keys(inputs);\n        const inputNodes = names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n        const outputNodeNames = outputNames.map(name => parseNodeName(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const { usedNodes, missingInputs, dynamicNode, syncInputs } = getExecutionSubgraph(inputs, outputNodes, this.weightMap, this._initNodes);\n        // First nodes to execute include inputNodes, weights, and initNodes.\n        const stack = [\n            ...inputNodes, ...this.graph.weights, ...(this._initNodes || [])\n        ].map(node => {\n            return { node, contexts: context.currentContext };\n        });\n        const tensorsMap = Object.assign({}, this.weightMap);\n        Object.keys(inputs).forEach(name => {\n            const [nodeName, index] = parseNodeName(name);\n            const tensors = [];\n            tensors[index] = inputs[name];\n            tensorsMap[nodeName] = tensors;\n        });\n        const intermediateTensorConsumerCount = {};\n        const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n        const added = {};\n        while (stack.length > 0) {\n            const promises = this.processStack(inputNodes, stack, context, tensorsMap, added, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount, usedNodes);\n            await Promise.all(promises);\n        }\n        if (dynamicNode == null && !isFunctionExecution) {\n            console.warn(`This model execution did not contain any nodes with control flow ` +\n                `or dynamic output shapes. You can use model.execute() instead.`);\n        }\n        const missingOutputs = outputNodes\n            .filter(node => !isControlFlow(node) &&\n            !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n        if (missingOutputs.length > 0) {\n            let alternativeMsg = '';\n            if (dynamicNode != null) {\n                alternativeMsg =\n                    `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n                        `and specify the inputs [${syncInputs}]`;\n            }\n            throw new Error(`Cannot compute the outputs [${missingOutputs}] from the provided ` +\n                `inputs [${names}]. Consider providing the following inputs: ` +\n                `[${missingInputs}]. ${alternativeMsg}`);\n        }\n        return tensorsMap;\n    }\n    processStack(inputNodes, stack, context, tensorMap, added, tensorsToKeep, outputNames, intermediateTensorConsumerCount, usedNodes) {\n        const promises = [];\n        while (stack.length > 0) {\n            const item = stack.pop();\n            context.currentContext = item.contexts;\n            let nodeName = '';\n            // The tensor of the Enter op with isConstant set should be set\n            // in the parent scope, so it will be available as constant for the\n            // whole loop.\n            if (item.node.op === 'Enter' &&\n                getParamValue('isConstant', item.node, tensorMap, context)) {\n                [nodeName] = getNodeNameAndIndex(item.node.name, context);\n            }\n            // only process nodes that are not in the tensorMap yet, this include\n            // inputNodes and internal initNodes.\n            if (tensorMap[item.node.name] == null) {\n                const tensors = executeOp(item.node, tensorMap, context, this._resourceManager);\n                if (!nodeName) {\n                    [nodeName] = getNodeNameAndIndex(item.node.name, context);\n                }\n                const currentContext = context.currentContext;\n                if (util.isPromise(tensors)) {\n                    promises.push(tensors.then(t => {\n                        tensorMap[nodeName] = t;\n                        context.currentContext = currentContext;\n                        this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                        this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                        return t;\n                    }));\n                }\n                else {\n                    tensorMap[nodeName] = tensors;\n                    this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                    this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                }\n            }\n            else {\n                this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n            }\n        }\n        return promises;\n    }\n    processChildNodes(node, stack, context, tensorMap, added, usedNodes) {\n        node.children.forEach((childNode) => {\n            const [nodeName,] = getNodeNameAndIndex(childNode.name, context);\n            if (added[nodeName] || !usedNodes.has(childNode.name)) {\n                return;\n            }\n            // Merge op can be pushed if any of its inputs has value.\n            if (childNode.op === 'Merge') {\n                if (childNode.inputNames.some(name => {\n                    return !!getTensor(name, tensorMap, context);\n                })) {\n                    added[nodeName] = true;\n                    stack.push({ contexts: context.currentContext, node: childNode });\n                }\n            }\n            else // Otherwise all inputs must to have value.\n             if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n            })) {\n                added[nodeName] = true;\n                stack.push({ contexts: context.currentContext, node: childNode });\n            }\n        });\n    }\n    /**\n     * Releases the memory used by the weight tensors.\n     */\n    dispose() {\n        Object.keys(this.weightMap)\n            .forEach(key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n    }\n    checkInputShapeAndType(inputs) {\n        Object.keys(inputs).forEach(name => {\n            const input = inputs[name];\n            const [nodeName,] = parseNodeName(name);\n            const node = this.graph.nodes[nodeName];\n            if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n                const shape = node.attrParams['shape'].value;\n                const match = shape.length === input.shape.length &&\n                    input.shape.every((dim, index) => shape[index] === -1 || shape[index] === dim);\n                util.assert(match, () => `The shape of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be [${shape}], but was ` +\n                    `[${input.shape}]`);\n            }\n            if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n                util.assert(input.dtype === node.attrParams['dtype'].value, () => `The dtype of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be ` +\n                    `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n            }\n        });\n    }\n    mapInputs(inputs) {\n        const result = {};\n        for (const inputName in inputs) {\n            if (this._signature != null && this._signature.inputs != null &&\n                this._signature.inputs[inputName] != null) {\n                const tensor = this._signature.inputs[inputName];\n                result[tensor.name] = inputs[inputName];\n            }\n            else {\n                result[inputName] = inputs[inputName];\n            }\n        }\n        return result;\n    }\n    checkInputs(inputs) {\n        const notInGraph = Object.keys(inputs).filter(name => {\n            const [nodeName] = parseNodeName(name);\n            return this.graph.nodes[nodeName] == null;\n        });\n        if (notInGraph.length > 0) {\n            throw new Error(`The dict provided in model.execute(dict) has ` +\n                `keys: [${notInGraph}] that are not part of graph`);\n        }\n    }\n    mapOutputs(outputs) {\n        return outputs.map(name => {\n            if (this._signature != null && this._signature.outputs != null &&\n                this._signature.outputs[name] != null) {\n                const tensor = this._signature.outputs[name];\n                return tensor.name;\n            }\n            return name;\n        }, {});\n    }\n    checkOutputs(outputs) {\n        outputs.forEach(name => {\n            const [normalizedName] = parseNodeName(name);\n            if (!this.graph.nodes[normalizedName]) {\n                throw new Error(`The output '${name}' is not found in the graph`);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * Contains global resources of a model.\n */\nexport class ResourceManager {\n    constructor(hashTableNameToHandle = {}, hashTableMap = {}) {\n        this.hashTableNameToHandle = hashTableNameToHandle;\n        this.hashTableMap = hashTableMap;\n    }\n    /**\n     * Register a `HashTable` in the resource manager.\n     *\n     * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,\n     * where id is the table handle tensor's id.\n     *\n     * @param name Op node name that creates the `HashTable`.\n     * @param hashTable The `HashTable` to be added to resource manager.\n     */\n    addHashTable(name, hashTable) {\n        this.hashTableNameToHandle[name] = hashTable.handle;\n        this.hashTableMap[hashTable.id] = hashTable;\n    }\n    /**\n     * Get the table handle by node name.\n     * @param name Op node name that creates the `HashTable`. This name is also\n     *     used in the inputs list of lookup and import `HashTable` ops.\n     */\n    getHashTableHandleByName(name) {\n        return this.hashTableNameToHandle[name];\n    }\n    /**\n     * Get the actual `HashTable` by its handle tensor's id.\n     * @param id The id of the handle tensor.\n     */\n    getHashTableById(id) {\n        return this.hashTableMap[id];\n    }\n    /**\n     * Dispose `ResourceManager`, including its hashTables and tensors in them.\n     */\n    dispose() {\n        for (const key in this.hashTableMap) {\n            this.hashTableMap[key].clearAndClose();\n            delete this.hashTableMap[key];\n        }\n        for (const name in this.hashTableNameToHandle) {\n            this.hashTableNameToHandle[name].dispose();\n            delete this.hashTableNameToHandle[name];\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb3VyY2VfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29udmVydGVyL3NyYy9leGVjdXRvci9yZXNvdXJjZV9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CQTs7R0FFRztBQUNILE1BQU0sT0FBTyxlQUFlO0lBQzFCLFlBQ2Esd0JBQXdDLEVBQUUsRUFDMUMsZUFBNkIsRUFBRTtRQUQvQiwwQkFBcUIsR0FBckIscUJBQXFCLENBQXFCO1FBQzFDLGlCQUFZLEdBQVosWUFBWSxDQUFtQjtJQUFHLENBQUM7SUFFaEQ7Ozs7Ozs7O09BUUc7SUFDSCxZQUFZLENBQUMsSUFBWSxFQUFFLFNBQW9CO1FBQzdDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDO1FBQ3BELElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztJQUM5QyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILHdCQUF3QixDQUFDLElBQVk7UUFDbkMsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVEOzs7T0FHRztJQUNILGdCQUFnQixDQUFDLEVBQVU7UUFDekIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRDs7T0FFRztJQUNILE9BQU87UUFDTCxLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztZQUN2QyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDL0I7UUFFRCxLQUFLLE1BQU0sSUFBSSxJQUFJLElBQUksQ0FBQyxxQkFBcUIsRUFBRTtZQUM3QyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDM0MsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDekM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0hhc2hUYWJsZU1hcCwgTmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL2RhdGEvdHlwZXMnO1xuaW1wb3J0IHtIYXNoVGFibGV9IGZyb20gJy4vaGFzaF90YWJsZSc7XG5cbi8qKlxuICogQ29udGFpbnMgZ2xvYmFsIHJlc291cmNlcyBvZiBhIG1vZGVsLlxuICovXG5leHBvcnQgY2xhc3MgUmVzb3VyY2VNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgICByZWFkb25seSBoYXNoVGFibGVOYW1lVG9IYW5kbGU6IE5hbWVkVGVuc29yTWFwID0ge30sXG4gICAgICByZWFkb25seSBoYXNoVGFibGVNYXA6IEhhc2hUYWJsZU1hcCA9IHt9KSB7fVxuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIGBIYXNoVGFibGVgIGluIHRoZSByZXNvdXJjZSBtYW5hZ2VyLlxuICAgKlxuICAgKiBUaGUgYEhhc2hUYWJsZWAgY2FuIGJlIHJldHJpZXZlZCBieSBgcmVzb3VyY2VNYW5hZ2VyLmdldEhhc2hUYWJsZUJ5SWRgLFxuICAgKiB3aGVyZSBpZCBpcyB0aGUgdGFibGUgaGFuZGxlIHRlbnNvcidzIGlkLlxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSBPcCBub2RlIG5hbWUgdGhhdCBjcmVhdGVzIHRoZSBgSGFzaFRhYmxlYC5cbiAgICogQHBhcmFtIGhhc2hUYWJsZSBUaGUgYEhhc2hUYWJsZWAgdG8gYmUgYWRkZWQgdG8gcmVzb3VyY2UgbWFuYWdlci5cbiAgICovXG4gIGFkZEhhc2hUYWJsZShuYW1lOiBzdHJpbmcsIGhhc2hUYWJsZTogSGFzaFRhYmxlKSB7XG4gICAgdGhpcy5oYXNoVGFibGVOYW1lVG9IYW5kbGVbbmFtZV0gPSBoYXNoVGFibGUuaGFuZGxlO1xuICAgIHRoaXMuaGFzaFRhYmxlTWFwW2hhc2hUYWJsZS5pZF0gPSBoYXNoVGFibGU7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSB0YWJsZSBoYW5kbGUgYnkgbm9kZSBuYW1lLlxuICAgKiBAcGFyYW0gbmFtZSBPcCBub2RlIG5hbWUgdGhhdCBjcmVhdGVzIHRoZSBgSGFzaFRhYmxlYC4gVGhpcyBuYW1lIGlzIGFsc29cbiAgICogICAgIHVzZWQgaW4gdGhlIGlucHV0cyBsaXN0IG9mIGxvb2t1cCBhbmQgaW1wb3J0IGBIYXNoVGFibGVgIG9wcy5cbiAgICovXG4gIGdldEhhc2hUYWJsZUhhbmRsZUJ5TmFtZShuYW1lOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNoVGFibGVOYW1lVG9IYW5kbGVbbmFtZV07XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBhY3R1YWwgYEhhc2hUYWJsZWAgYnkgaXRzIGhhbmRsZSB0ZW5zb3IncyBpZC5cbiAgICogQHBhcmFtIGlkIFRoZSBpZCBvZiB0aGUgaGFuZGxlIHRlbnNvci5cbiAgICovXG4gIGdldEhhc2hUYWJsZUJ5SWQoaWQ6IG51bWJlcik6IEhhc2hUYWJsZSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzaFRhYmxlTWFwW2lkXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNwb3NlIGBSZXNvdXJjZU1hbmFnZXJgLCBpbmNsdWRpbmcgaXRzIGhhc2hUYWJsZXMgYW5kIHRlbnNvcnMgaW4gdGhlbS5cbiAgICovXG4gIGRpc3Bvc2UoKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5oYXNoVGFibGVNYXApIHtcbiAgICAgIHRoaXMuaGFzaFRhYmxlTWFwW2tleV0uY2xlYXJBbmRDbG9zZSgpO1xuICAgICAgZGVsZXRlIHRoaXMuaGFzaFRhYmxlTWFwW2tleV07XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBuYW1lIGluIHRoaXMuaGFzaFRhYmxlTmFtZVRvSGFuZGxlKSB7XG4gICAgICB0aGlzLmhhc2hUYWJsZU5hbWVUb0hhbmRsZVtuYW1lXS5kaXNwb3NlKCk7XG4gICAgICBkZWxldGUgdGhpcy5oYXNoVGFibGVOYW1lVG9IYW5kbGVbbmFtZV07XG4gICAgfVxuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { io, Tensor, util } from '@tensorflow/tfjs-core';\nimport { OperationMapper } from '../operations/operation_mapper';\nimport { GraphExecutor } from './graph_executor';\nimport { ResourceManager } from './resource_manager';\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph built from a\n * SavedModel GraphDef and allows inference execution.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class GraphModel {\n    /**\n     * @param modelUrl url for the model, or an `io.IOHandler`.\n     * @param weightManifestUrl url for the weight file generated by\n     * scripts/convert.py script.\n     * @param requestOption options for Request, which allows to send credentials\n     * and custom headers.\n     * @param onProgress Optional, progress callback function, fired periodically\n     * before the load is completed.\n     */\n    constructor(modelUrl, loadOptions = {}, tfio = io) {\n        this.modelUrl = modelUrl;\n        this.loadOptions = loadOptions;\n        this.version = 'n/a';\n        this.io = tfio;\n        if (loadOptions == null) {\n            this.loadOptions = {};\n        }\n        this.resourceManager = new ResourceManager();\n    }\n    // Returns the version information for the tensorflow model GraphDef.\n    get modelVersion() {\n        return this.version;\n    }\n    get inputNodes() {\n        return this.executor.inputNodes;\n    }\n    get outputNodes() {\n        return this.executor.outputNodes;\n    }\n    get inputs() {\n        return this.executor.inputs;\n    }\n    get outputs() {\n        return this.executor.outputs;\n    }\n    get weights() {\n        return this.executor.weightMap;\n    }\n    get metadata() {\n        return this.artifacts.userDefinedMetadata;\n    }\n    get modelSignature() {\n        return this.signature;\n    }\n    get modelStructuredOutputKeys() {\n        return this.structuredOutputKeys;\n    }\n    findIOHandler() {\n        const path = this.modelUrl;\n        if (path.load != null) {\n            // Path is an IO Handler.\n            this.handler = path;\n        }\n        else if (this.loadOptions.requestInit != null) {\n            this.handler = this.io.browserHTTPRequest(path, this.loadOptions);\n        }\n        else {\n            const handlers = this.io.getLoadHandlers(path, this.loadOptions);\n            if (handlers.length === 0) {\n                // For backward compatibility: if no load handler can be found,\n                // assume it is a relative http path.\n                handlers.push(this.io.browserHTTPRequest(path, this.loadOptions));\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) load handlers for ` +\n                    `URL '${[path]}'`);\n            }\n            this.handler = handlers[0];\n        }\n    }\n    /**\n     * Loads the model and weight files, construct the in memory weight map and\n     * compile the inference graph.\n     */\n    load() {\n        this.findIOHandler();\n        if (this.handler.load == null) {\n            throw new Error('Cannot proceed with model loading because the IOHandler provided ' +\n                'does not have the `load` method implemented.');\n        }\n        const loadResult = this.handler.load();\n        if (util.isPromise(loadResult)) {\n            return loadResult.then(artifacts => this.loadSync(artifacts));\n        }\n        return this.loadSync(loadResult);\n    }\n    /**\n     * Synchronously construct the in memory weight map and\n     * compile the inference graph. Also initialize hashtable if any.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    loadSync(artifacts) {\n        this.artifacts = artifacts;\n        const graph = this.artifacts.modelTopology;\n        let signature = this.artifacts.signature;\n        if (this.artifacts.userDefinedMetadata != null) {\n            const metadata = this.artifacts.userDefinedMetadata;\n            if (metadata.signature != null) {\n                signature = metadata.signature;\n            }\n            if (metadata.structuredOutputKeys != null) {\n                this.structuredOutputKeys = metadata.structuredOutputKeys;\n            }\n        }\n        this.signature = signature;\n        this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n        const weightMap = this.io.decodeWeights(this.artifacts.weightData, this.artifacts.weightSpecs);\n        this.executor = new GraphExecutor(OperationMapper.Instance.transformGraph(graph, this.signature));\n        this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n        // Attach a model-level resourceManager to each executor to share resources,\n        // such as `HashTable`.\n        this.executor.resourceManager = this.resourceManager;\n        if (artifacts.modelInitializer != null &&\n            artifacts.modelInitializer.node != null) {\n            const initializer = OperationMapper.Instance.transformGraph(artifacts.modelInitializer);\n            this.initializer = new GraphExecutor(initializer);\n            this.initializer.weightMap = this.executor.weightMap;\n            // Attach a model-level resourceManager to the initializer, the\n            // hashTables created from when executing the initializer will be stored\n            // in the resourceManager.\n            this.initializer.resourceManager = this.resourceManager;\n            this.initializer.executeAsync({}, []);\n        }\n        return true;\n    }\n    /**\n     * Save the configuration and/or weights of the GraphModel.\n     *\n     * An `IOHandler` is an object that has a `save` method of the proper\n     * signature defined. The `save` method manages the storing or\n     * transmission of serialized data (\"artifacts\") that represent the\n     * model's topology and weights onto or via a specific medium, such as\n     * file downloads, local storage, IndexedDB in the web browser and HTTP\n     * requests to a server. TensorFlow.js provides `IOHandler`\n     * implementations for a number of frequently used saving mediums, such as\n     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n     * for more details.\n     *\n     * This method also allows you to refer to certain types of `IOHandler`s\n     * as URL-like string shortcuts, such as 'localstorage://' and\n     * 'indexeddb://'.\n     *\n     * Example 1: Save `model`'s topology and weights to browser [local\n     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n     * then load it back.\n     *\n     * ```js\n     * const modelUrl =\n     *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n     * const model = await tf.loadGraphModel(modelUrl);\n     * const zeros = tf.zeros([1, 224, 224, 3]);\n     * model.predict(zeros).print();\n     *\n     * const saveResults = await model.save('localstorage://my-model-1');\n     *\n     * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');\n     * console.log('Prediction from loaded model:');\n     * model.predict(zeros).print();\n     * ```\n     *\n     * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n     * scheme-based string shortcut for `IOHandler`.\n     * @param config Options for saving the model.\n     * @returns A `Promise` of `SaveResult`, which summarizes the result of\n     * the saving, such as byte sizes of the saved artifacts for the model's\n     *   topology and weight values.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    async save(handlerOrURL, config) {\n        if (typeof handlerOrURL === 'string') {\n            const handlers = this.io.getSaveHandlers(handlerOrURL);\n            if (handlers.length === 0) {\n                throw new Error(`Cannot find any save handlers for URL '${handlerOrURL}'`);\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) save handlers for ` +\n                    `URL '${handlerOrURL}'`);\n            }\n            handlerOrURL = handlers[0];\n        }\n        if (handlerOrURL.save == null) {\n            throw new Error('GraphModel.save() cannot proceed because the IOHandler ' +\n                'provided does not have the `save` attribute defined.');\n        }\n        return handlerOrURL.save(this.artifacts);\n    }\n    /**\n     * Execute the inference for the input tensors.\n     *\n     * @param input The input tensors, when there is single input for the model,\n     * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n     * inputs params should be in either `tf.Tensor`[] if the input order is\n     * fixed, or otherwise NamedTensorMap format.\n     *\n     * For model with multiple inputs, we recommend you use NamedTensorMap as the\n     * input type, if you use `tf.Tensor`[], the order of the array needs to\n     * follow the\n     * order of inputNodes array. @see {@link GraphModel.inputNodes}\n     *\n     * You can also feed any intermediate nodes using the NamedTensorMap as the\n     * input type. For example, given the graph\n     *    InputNode => Intermediate => OutputNode,\n     * you can execute the subgraph Intermediate => OutputNode by calling\n     *    model.execute('IntermediateNode' : tf.tensor(...));\n     *\n     * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n     * state needs to be fed manually.\n     *\n     * For batch inference execution, the tensors for each input need to be\n     * concatenated together. For example with mobilenet, the required input shape\n     * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n     * If we are provide a batched data of 100 images, the input tensor should be\n     * in the shape of [100, 244, 244, 3].\n     *\n     * @param config Prediction configuration for specifying the batch size.\n     * Currently the batch size option is ignored for graph model.\n     *\n     * @returns Inference result tensors. If the model is converted and it\n     * originally had structured_outputs in tensorflow, then a NamedTensorMap\n     * will be returned matching the structured_outputs. If no structured_outputs\n     * are present, the output will be single `tf.Tensor` if the model has single\n     * output node, otherwise Tensor[].\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    predict(inputs, config) {\n        const outputTensors = this.execute(inputs, this.outputNodes);\n        if (this.structuredOutputKeys) {\n            const outputTensorsArray = outputTensors instanceof Tensor ? [outputTensors] : outputTensors;\n            const outputTensorMap = {};\n            outputTensorsArray.forEach((outputTensor, i) => outputTensorMap[this.structuredOutputKeys[i]] =\n                outputTensor);\n            return outputTensorMap;\n        }\n        return outputTensors;\n    }\n    normalizeInputs(inputs) {\n        if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n            // The input is already a NamedTensorMap.\n            return inputs;\n        }\n        inputs = Array.isArray(inputs) ? inputs : [inputs];\n        if (inputs.length !== this.inputNodes.length) {\n            throw new Error('Input tensor count mismatch,' +\n                `the graph model has ${this.inputNodes.length} placeholders, ` +\n                `while there are ${inputs.length} input tensors.`);\n        }\n        return this.inputNodes.reduce((map, inputName, i) => {\n            map[inputName] = inputs[i];\n            return map;\n        }, {});\n    }\n    normalizeOutputs(outputs) {\n        outputs = outputs || this.outputNodes;\n        return !Array.isArray(outputs) ? [outputs] : outputs;\n    }\n    /**\n     * Executes inference for the model for given input tensors.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the TensorFlow model, if no\n     * outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     *\n     * @returns A single tensor if provided with a single output or no outputs\n     * are provided and there is only one default output, otherwise return a\n     * tensor array. The order of the tensor array is the same as the outputs\n     * if provided, otherwise the order of outputNodes attribute of the model.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    execute(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = this.executor.execute(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    /**\n     * Executes inference for the model for given input tensors in async\n     * fashion, use this method when your model contains control flow ops.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the TensorFlow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     *\n     * @returns A Promise of single tensor if provided with a single output or\n     * no outputs are provided and there is only one default output, otherwise\n     * return a tensor map.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    async executeAsync(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = await this.executor.executeAsync(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    /**\n     * Get intermediate tensors for model debugging mode (flag\n     * KEEP_INTERMEDIATE_TENSORS is true).\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    getIntermediateTensors() {\n        return this.executor.getIntermediateTensors();\n    }\n    /**\n     * Dispose intermediate tensors for model debugging mode (flag\n     * KEEP_INTERMEDIATE_TENSORS is true).\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    disposeIntermediateTensors() {\n        this.executor.disposeIntermediateTensors();\n    }\n    convertTensorMapToTensorsMap(map) {\n        return Object.keys(map).reduce((newMap, key) => {\n            newMap[key] = [map[key]];\n            return newMap;\n        }, {});\n    }\n    /**\n     * Releases the memory used by the weight tensors and resourceManager.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    dispose() {\n        this.executor.dispose();\n        if (this.initializer) {\n            this.initializer.dispose();\n        }\n        this.resourceManager.dispose();\n    }\n}\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction\n * with a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send\n *     credentials\n *    and custom headers.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport async function loadGraphModel(modelUrl, options = {}, tfio = io) {\n    if (modelUrl == null) {\n        throw new Error('modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n            'or an IOHandler that loads the model');\n    }\n    if (options == null) {\n        options = {};\n    }\n    if (options.fromTFHub && typeof modelUrl === 'string') {\n        modelUrl = getTFHubUrl(modelUrl);\n    }\n    const model = new GraphModel(modelUrl, options, tfio);\n    await model.load();\n    return model;\n}\n/**\n * Load a graph model given a synchronous IO handler with a 'load' method.\n *\n * @param modelSource The `io.IOHandlerSync` that loads the model, or the\n *     `io.ModelArtifacts` that encode the model, or a tuple of\n *     `[io.ModelJSON, ArrayBuffer]` of which the first element encodes the\n *      model and the second contains the weights.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport function loadGraphModelSync(modelSource) {\n    if (modelSource == null) {\n        throw new Error('modelUrl in loadGraphModelSync() cannot be null. Please provide ' +\n            'model artifacts or an IOHandler that loads the model');\n    }\n    let ioHandler;\n    if (modelSource instanceof Array) {\n        const [modelJSON, weights] = modelSource;\n        if (!modelJSON) {\n            throw new Error('modelJSON must be the first element of the array');\n        }\n        if (!weights || !(weights instanceof ArrayBuffer)) {\n            throw new Error('An ArrayBuffer of weights must be the second element of'\n                + ' the array');\n        }\n        if (!('modelTopology' in modelJSON)) {\n            throw new Error('Model JSON is missing \\'modelTopology\\'');\n        }\n        if (!('weightsManifest' in modelJSON)) {\n            throw new Error('Model JSON is missing \\'weightsManifest\\'');\n        }\n        const weightSpecs = io.getWeightSpecs(modelJSON.weightsManifest);\n        const modelArtifacts = io.getModelArtifactsForJSONSync(modelJSON, weightSpecs, weights);\n        ioHandler = io.fromMemorySync(modelArtifacts);\n    }\n    else if ('load' in modelSource) {\n        // Then modelSource is already an IOHandlerSync.\n        ioHandler = modelSource;\n    }\n    else if ('modelTopology' in modelSource && 'weightSpecs' in modelSource\n        && 'weightData' in modelSource) {\n        // modelSource is of type ModelArtifacts.\n        ioHandler = io.fromMemorySync(modelSource);\n    }\n    else {\n        throw new Error('Unknown model format');\n    }\n    const model = new GraphModel(ioHandler);\n    model.load();\n    return model;\n}\nfunction getTFHubUrl(modelUrl) {\n    if (!modelUrl.endsWith('/')) {\n        modelUrl = (modelUrl) + '/';\n    }\n    return `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n    * @license\n    * Copyright 2021 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */\nimport*as tf from\"@tensorflow/tfjs-core\";import{tidy,sub,div,util,Tensor,browser,image,pad3d,cast,expandDims,squeeze,sigmoid,scalar,mul,reshape,argMax,concat,tensor2d,add}from\"@tensorflow/tfjs-core\";import{loadGraphModel}from\"@tensorflow/tfjs-converter\";var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function __extends(e,t){function n(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var __assign=function(){return(__assign=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function __awaiter(e,t,n,r){return new(n||(n=Promise))(function(o,i){function s(e){try{a(r.next(e))}catch(e){i(e)}}function u(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(s,u)}a((r=r.apply(e,t||[])).next())})}function __generator(e,t){var n,r,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}var BaseModel=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;util.assert(-1===n[1]&&-1===n[2],function(){return\"Input shape [\"+n[1]+\", \"+n[2]+\"] must both be equal to or -1\"})}return e.prototype.predict=function(e){var t=this;return tidy(function(){var n=t.preprocessInput(cast(e,\"float32\")),r=expandDims(n,0),o=t.model.predict(r).map(function(e){return squeeze(e,[0])}),i=t.nameOutputResults(o);return{heatmapScores:sigmoid(i.heatmap),offsets:i.offsets,displacementFwd:i.displacementFwd,displacementBwd:i.displacementBwd}})},e.prototype.dispose=function(){this.model.dispose()},e}(),MobileNet=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.preprocessInput=function(e){return tidy(function(){return sub(div(e,127.5),1)})},t.prototype.nameOutputResults=function(e){return{offsets:e[0],heatmap:e[1],displacementFwd:e[2],displacementBwd:e[3]}},t}(BaseModel);function half(e){return Math.floor(e/2)}var MaxHeap=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(half(e),e);)this.exchange(e,half(e)),e=half(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function scoreIsMaximumInLocalWindow(e,t,n,r,o,i){for(var s=i.shape,u=s[0],a=s[1],l=!0,p=Math.max(n-o,0),c=Math.min(n+o+1,u),d=p;d<c;++d){for(var f=Math.max(r-o,0),h=Math.min(r+o+1,a),m=f;m<h;++m)if(i.get(d,m,e)>t){l=!1;break}if(!l)break}return l}function buildPartWithScoreQueue(e,t,n){for(var r=n.shape,o=r[0],i=r[1],s=r[2],u=new MaxHeap(o*i*s,function(e){return e.score}),a=0;a<o;++a)for(var l=0;l<i;++l)for(var p=0;p<s;++p){var c=n.get(a,l,p);c<e||scoreIsMaximumInLocalWindow(p,c,a,l,t,n)&&u.enqueue({score:c,part:{heatmapY:a,heatmapX:l,id:p}})}return u}var partNames=[\"nose\",\"leftEye\",\"rightEye\",\"leftEar\",\"rightEar\",\"leftShoulder\",\"rightShoulder\",\"leftElbow\",\"rightElbow\",\"leftWrist\",\"rightWrist\",\"leftHip\",\"rightHip\",\"leftKnee\",\"rightKnee\",\"leftAnkle\",\"rightAnkle\"],NUM_KEYPOINTS=partNames.length,partIds=partNames.reduce(function(e,t,n){return e[t]=n,e},{}),connectedPartNames=[[\"leftHip\",\"leftShoulder\"],[\"leftElbow\",\"leftShoulder\"],[\"leftElbow\",\"leftWrist\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"rightHip\",\"rightShoulder\"],[\"rightElbow\",\"rightShoulder\"],[\"rightElbow\",\"rightWrist\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"],[\"leftShoulder\",\"rightShoulder\"],[\"leftHip\",\"rightHip\"]],poseChain=[[\"nose\",\"leftEye\"],[\"leftEye\",\"leftEar\"],[\"nose\",\"rightEye\"],[\"rightEye\",\"rightEar\"],[\"nose\",\"leftShoulder\"],[\"leftShoulder\",\"leftElbow\"],[\"leftElbow\",\"leftWrist\"],[\"leftShoulder\",\"leftHip\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"nose\",\"rightShoulder\"],[\"rightShoulder\",\"rightElbow\"],[\"rightElbow\",\"rightWrist\"],[\"rightShoulder\",\"rightHip\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"]],connectedPartIndices=connectedPartNames.map(function(e){var t=e[0],n=e[1];return[partIds[t],partIds[n]]}),partChannels=[\"left_face\",\"right_face\",\"right_upper_leg_front\",\"right_lower_leg_back\",\"right_upper_leg_back\",\"left_lower_leg_front\",\"left_upper_leg_front\",\"left_upper_leg_back\",\"left_lower_leg_back\",\"right_feet\",\"right_lower_leg_front\",\"left_feet\",\"torso_front\",\"torso_back\",\"right_upper_arm_front\",\"right_upper_arm_back\",\"right_lower_arm_back\",\"left_lower_arm_front\",\"left_upper_arm_front\",\"left_upper_arm_back\",\"left_lower_arm_back\",\"right_hand\",\"right_lower_arm_front\",\"left_hand\"];function getOffsetPoint(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+NUM_KEYPOINTS)}}function getImageCoords(e,t,n){var r=getOffsetPoint(e.heatmapY,e.heatmapX,e.id,n),o=r.y,i=r.x;return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function clamp(e,t,n){return e<t?t:e>n?n:e}function squaredDistance(e,t,n,r){var o=n-e,i=r-t;return o*o+i*i}function addVectors(e,t){return{x:e.x+t.x,y:e.y+t.y}}var parentChildrenTuples=poseChain.map(function(e){var t=e[0],n=e[1];return[partIds[t],partIds[n]]}),parentToChildEdges=parentChildrenTuples.map(function(e){return e[1]}),childToParentEdges=parentChildrenTuples.map(function(e){return e[0]});function getDisplacement(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}function getStridedIndexNearPoint(e,t,n,r){return{y:clamp(Math.round(e.y/t),0,n-1),x:clamp(Math.round(e.x/t),0,r-1)}}function traverseToTargetKeypoint(e,t,n,r,o,i,s,u){void 0===u&&(u=2);for(var a=r.shape,l=a[0],p=a[1],c=getDisplacement(e,getStridedIndexNearPoint(t.position,i,l,p),s),d=addVectors(t.position,c),f=0;f<u;f++){var h=getStridedIndexNearPoint(d,i,l,p),m=getOffsetPoint(h.y,h.x,n,o);d=addVectors({x:h.x*i,y:h.y*i},{x:m.x,y:m.y})}var g=getStridedIndexNearPoint(d,i,l,p),_=r.get(g.y,g.x,n);return{position:d,part:partNames[n],score:_}}function decodePose(e,t,n,r,o,i){var s=t.shape[2],u=parentToChildEdges.length,a=new Array(s),l=e.part,p=e.score,c=getImageCoords(l,r,n);a[l.id]={score:p,part:partNames[l.id],position:c};for(var d=u-1;d>=0;--d){var f=parentToChildEdges[d],h=childToParentEdges[d];a[f]&&!a[h]&&(a[h]=traverseToTargetKeypoint(d,a[f],h,t,n,r,i))}for(d=0;d<u;++d){f=childToParentEdges[d],h=parentToChildEdges[d];a[f]&&!a[h]&&(a[h]=traverseToTargetKeypoint(d,a[f],h,t,n,r,o))}return a}function withinNmsRadiusOfCorrespondingPoint(e,t,n,r){var o=n.x,i=n.y;return e.some(function(e){var n=e.keypoints[r].position;return squaredDistance(i,o,n.y,n.x)<=t})}function getInstanceScore(e,t,n){return n.reduce(function(n,r,o){var i=r.position,s=r.score;return withinNmsRadiusOfCorrespondingPoint(e,t,i,o)||(n+=s),n},0)/n.length}var kLocalMaximumRadius=1;function decodeMultiplePoses(e,t,n,r,o,i,s,u){void 0===s&&(s=.5),void 0===u&&(u=20);for(var a=[],l=buildPartWithScoreQueue(s,kLocalMaximumRadius,e),p=u*u;a.length<i&&!l.empty();){var c=l.dequeue();if(!withinNmsRadiusOfCorrespondingPoint(a,p,getImageCoords(c.part,o,t),c.part.id)){var d=decodePose(c,e,t,o,n,r),f=getInstanceScore(a,p,d);a.push({keypoints:d,score:f})}}return a}function mod(e,t){return tidy(function(){var n=div(e,scalar(t,\"int32\"));return sub(e,mul(n,scalar(t,\"int32\")))})}function argmax2d(e){var t=e.shape,n=t[0],r=t[1],o=t[2];return tidy(function(){var t=reshape(e,[n*r,o]),i=argMax(t,0),s=expandDims(div(i,scalar(r,\"int32\")),1),u=expandDims(mod(i,r),1);return concat([s,u],1)})}function getPointsConfidence(e,t){for(var n=t.shape[0],r=new Float32Array(n),o=0;o<n;o++){var i=t.get(o,0),s=t.get(o,1);r[o]=e.get(i,s,o)}return r}function getOffsetPoint$1(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+NUM_KEYPOINTS)}}function getOffsetVectors(e,t){for(var n=[],r=0;r<NUM_KEYPOINTS;r++){var o=getOffsetPoint$1(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),i=o.x,s=o.y;n.push(s),n.push(i)}return tensor2d(n,[NUM_KEYPOINTS,2])}function getOffsetPoints(e,t,n){return tidy(function(){var r=getOffsetVectors(e,n);return add(cast(mul(e.toTensor(),scalar(t,\"int32\")),\"float32\"),r)})}function decodeSinglePose(e,t,n){return __awaiter(this,void 0,void 0,function(){var r,o,i,s,u,a,l,p,c,d;return __generator(this,function(f){switch(f.label){case 0:return r=0,o=argmax2d(e),[4,Promise.all([e.buffer(),t.buffer(),o.buffer()])];case 1:return i=f.sent(),s=i[0],u=i[1],a=i[2],[4,(l=getOffsetPoints(a,n,u)).buffer()];case 2:return p=f.sent(),c=Array.from(getPointsConfidence(s,a)),d=c.map(function(e,t){return r+=e,{position:{y:p.get(t,0),x:p.get(t,1)},part:partNames[t],score:e}}),o.dispose(),l.dispose(),[2,{keypoints:d,score:r/d.length}]}})})}var MOBILENET_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/\",RESNET50_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/\";function resNet50Checkpoint(e,t){var n=\"model-stride\"+e+\".json\";return 4===t?RESNET50_BASE_URL+\"float/\"+n:RESNET50_BASE_URL+\"quant\"+t+\"/\"+n}function mobileNetCheckpoint(e,t,n){var r={1:\"100\",.75:\"075\",.5:\"050\"},o=\"model-stride\"+e+\".json\";return 4===n?MOBILENET_BASE_URL+\"float/\"+r[t]+\"/\"+o:MOBILENET_BASE_URL+\"quant\"+n+\"/\"+r[t]+\"/\"+o}var imageNetMean=[-123.15,-115.9,-103.06],ResNet=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.preprocessInput=function(e){return add(e,imageNetMean)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1];return{offsets:e[2],heatmap:e[3],displacementFwd:t,displacementBwd:n}},t}(BaseModel);function eitherPointDoesntMeetConfidence(e,t,n){return e<n||t<n}function getAdjacentKeyPoints(e,t){return connectedPartIndices.reduce(function(n,r){var o=r[0],i=r[1];return eitherPointDoesntMeetConfidence(e[o].score,e[i].score,t)?n:(n.push([e[o],e[i]]),n)},[])}var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,POSITIVE_INFINITY=Number.POSITIVE_INFINITY;function getBoundingBox(e){return e.reduce(function(e,t){var n=e.maxX,r=e.maxY,o=e.minX,i=e.minY,s=t.position,u=s.x,a=s.y;return{maxX:Math.max(n,u),maxY:Math.max(r,a),minX:Math.min(o,u),minY:Math.min(i,a)}},{maxX:NEGATIVE_INFINITY,maxY:NEGATIVE_INFINITY,minX:POSITIVE_INFINITY,minY:POSITIVE_INFINITY})}function getBoundingBoxPoints(e){var t=getBoundingBox(e),n=t.minX,r=t.minY,o=t.maxX,i=t.maxY;return[{x:n,y:r},{x:o,y:r},{x:o,y:i},{x:n,y:i}]}function toTensorBuffers3D(e){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return[2,Promise.all(e.map(function(e){return e.buffer()}))]})})}function scalePose(e,t,n,r,o){return void 0===r&&(r=0),void 0===o&&(o=0),{score:e.score,keypoints:e.keypoints.map(function(e){var i=e.score,s=e.part,u=e.position;return{score:i,part:s,position:{x:u.x*n+o,y:u.y*t+r}}})}}function scalePoses(e,t,n,r,o){return void 0===r&&(r=0),void 0===o&&(o=0),1===n&&1===t&&0===r&&0===o?e:e.map(function(e){return scalePose(e,t,n,r,o)})}function flipPoseHorizontal(e,t){return{score:e.score,keypoints:e.keypoints.map(function(e){var n=e.score,r=e.part,o=e.position;return{score:n,part:r,position:{x:t-1-o.x,y:o.y}}})}}function flipPosesHorizontal(e,t){return t<=0?e:e.map(function(e){return flipPoseHorizontal(e,t)})}function toValidInputResolution(e,t){return isValidInputResolution(e,t)?e:Math.floor(e/t)*t+1}function validateInputResolution(e){util.assert(\"number\"==typeof e||\"object\"==typeof e,function(){return\"Invalid inputResolution \"+e+\". Should be a number or an object with width and height\"}),\"object\"==typeof e&&(util.assert(\"number\"==typeof e.width,function(){return\"inputResolution.width has a value of \"+e.width+\" which is invalid; it must be a number\"}),util.assert(\"number\"==typeof e.height,function(){return\"inputResolution.height has a value of \"+e.height+\" which is invalid; it must be a number\"}))}function getValidInputResolutionDimensions(e,t){return validateInputResolution(e),\"object\"==typeof e?[toValidInputResolution(e.height,t),toValidInputResolution(e.width,t)]:[toValidInputResolution(e,t),toValidInputResolution(e,t)]}var VALID_OUTPUT_STRIDES=[8,16,32];function assertValidOutputStride(e){util.assert(\"number\"==typeof e,function(){return\"outputStride is not a number\"}),util.assert(VALID_OUTPUT_STRIDES.indexOf(e)>=0,function(){return\"outputStride of \"+e+\" is invalid. It must be either 8, 16, or 32\"})}function isValidInputResolution(e,t){return(e-1)%t==0}function assertValidResolution(e,t){util.assert(\"number\"==typeof e[0]&&\"number\"==typeof e[1],function(){return\"both resolution values must be a number but had values \"+e}),util.assert(isValidInputResolution(e[0],t),function(){return\"height of \"+e[0]+\" is invalid for output stride \"+t+\".\"}),util.assert(isValidInputResolution(e[1],t),function(){return\"width of \"+e[1]+\" is invalid for output stride \"+t+\".\"})}function getInputTensorDimensions(e){return e instanceof Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function toInputTensor(e){return e instanceof Tensor?e:browser.fromPixels(e)}function padAndResizeTo(e,t){var n=t[0],r=t[1],o=getInputTensorDimensions(e),i=o[0],s=o[1],u=r/n,a=[0,0,0,0],l=a[0],p=a[1],c=a[2],d=a[3];return s/i<u?(l=0,p=0,c=Math.round(.5*(u*i-s)),d=Math.round(.5*(u*i-s))):(l=Math.round(.5*(1/u*s-i)),p=Math.round(.5*(1/u*s-i)),c=0,d=0),{resized:tidy(function(){var t=toInputTensor(e);return t=pad3d(t,[[l,p],[c,d],[0,0]]),image.resizeBilinear(t,[n,r])}),padding:{top:l,left:c,right:d,bottom:p}}}function scaleAndFlipPoses(e,t,n,r,o){var i=t[0],s=t[1],u=n[0],a=n[1],l=scalePoses(e,(i+r.top+r.bottom)/u,(s+r.left+r.right)/a,-r.top,-r.left);return o?flipPosesHorizontal(l,s):l}var MOBILENET_V1_CONFIG={architecture:\"MobileNetV1\",outputStride:16,multiplier:.75,inputResolution:257},VALID_ARCHITECTURE=[\"MobileNetV1\",\"ResNet50\"],VALID_STRIDE={MobileNetV1:[8,16,32],ResNet50:[32,16]},VALID_MULTIPLIER={MobileNetV1:[.5,.75,1],ResNet50:[1]},VALID_QUANT_BYTES=[1,2,4];function validateModelConfig(e){if(null==(e=e||MOBILENET_V1_CONFIG).architecture&&(e.architecture=\"MobileNetV1\"),VALID_ARCHITECTURE.indexOf(e.architecture)<0)throw new Error(\"Invalid architecture \"+e.architecture+\". Should be one of \"+VALID_ARCHITECTURE);if(null==e.inputResolution&&(e.inputResolution=257),validateInputResolution(e.inputResolution),null==e.outputStride&&(e.outputStride=16),VALID_STRIDE[e.architecture].indexOf(e.outputStride)<0)throw new Error(\"Invalid outputStride \"+e.outputStride+\". Should be one of \"+VALID_STRIDE[e.architecture]+\" for architecture \"+e.architecture+\".\");if(null==e.multiplier&&(e.multiplier=1),VALID_MULTIPLIER[e.architecture].indexOf(e.multiplier)<0)throw new Error(\"Invalid multiplier \"+e.multiplier+\". Should be one of \"+VALID_MULTIPLIER[e.architecture]+\" for architecture \"+e.architecture+\".\");if(null==e.quantBytes&&(e.quantBytes=4),VALID_QUANT_BYTES.indexOf(e.quantBytes)<0)throw new Error(\"Invalid quantBytes \"+e.quantBytes+\". Should be one of \"+VALID_QUANT_BYTES+\" for architecture \"+e.architecture+\".\");if(\"MobileNetV1\"===e.architecture&&32===e.outputStride&&1!==e.multiplier)throw new Error(\"When using an output stride of 32, you must select 1 as the multiplier.\");return e}var SINGLE_PERSON_INFERENCE_CONFIG={flipHorizontal:!1},MULTI_PERSON_INFERENCE_CONFIG={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};function validateMultiPersonInputConfig(e){var t=e.maxDetections,n=e.scoreThreshold,r=e.nmsRadius;if(t<=0)throw new Error(\"Invalid maxDetections \"+t+\". Should be > 0\");if(n<0||n>1)throw new Error(\"Invalid scoreThreshold \"+n+\". Should be in range [0.0, 1.0]\");if(r<=0)throw new Error(\"Invalid nmsRadius \"+r+\".\")}var PoseNet=function(){function e(e,t){assertValidOutputStride(e.outputStride),assertValidResolution(t,e.outputStride),this.baseModel=e,this.inputResolution=t}return e.prototype.estimateMultiplePoses=function(e,t){return void 0===t&&(t=MULTI_PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,s,u,a,l,p,c,d,f,h,m,g,_,I,v,y,E,b;return __generator(this,function(N){switch(N.label){case 0:return n=__assign({},MULTI_PERSON_INFERENCE_CONFIG,t),validateMultiPersonInputConfig(t),r=this.baseModel.outputStride,o=this.inputResolution,i=getInputTensorDimensions(e),s=i[0],u=i[1],a=padAndResizeTo(e,o),l=a.resized,p=a.padding,c=this.baseModel.predict(l),d=c.heatmapScores,f=c.offsets,h=c.displacementFwd,m=c.displacementBwd,[4,toTensorBuffers3D([d,f,h,m])];case 1:return g=N.sent(),_=g[0],I=g[1],v=g[2],y=g[3],[4,decodeMultiplePoses(_,I,v,y,r,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return E=N.sent(),b=scaleAndFlipPoses(E,[s,u],o,p,n.flipHorizontal),d.dispose(),f.dispose(),h.dispose(),m.dispose(),l.dispose(),[2,b]}})})},e.prototype.estimateSinglePose=function(e,t){return void 0===t&&(t=SINGLE_PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,s,u,a,l,p,c,d,f,h,m,g,_;return __generator(this,function(I){switch(I.label){case 0:return n=__assign({},SINGLE_PERSON_INFERENCE_CONFIG,t),r=this.baseModel.outputStride,o=this.inputResolution,i=getInputTensorDimensions(e),s=i[0],u=i[1],a=padAndResizeTo(e,o),l=a.resized,p=a.padding,c=this.baseModel.predict(l),d=c.heatmapScores,f=c.offsets,h=c.displacementFwd,m=c.displacementBwd,[4,decodeSinglePose(d,f,r)];case 1:return g=I.sent(),_=scaleAndFlipPoses([g],[s,u],o,p,n.flipHorizontal),d.dispose(),f.dispose(),h.dispose(),m.dispose(),l.dispose(),[2,_[0]]}})})},e.prototype.estimatePoses=function(e,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(n){switch(n.label){case 0:return\"single-person\"!==t.decodingMethod?[3,2]:[4,this.estimateSinglePose(e,t)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(e,t)]}})})},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function loadMobileNet(e){return __awaiter(this,void 0,void 0,function(){var t,n,r,o,i,s,u;return __generator(this,function(a){switch(a.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==tf)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return o=mobileNetCheckpoint(t,r,n),[4,loadGraphModel(e.modelUrl||o)];case 1:return i=a.sent(),s=new MobileNet(i,t),u=getValidInputResolutionDimensions(e.inputResolution,s.outputStride),[2,new PoseNet(s,u)]}})})}function loadResNet(e){return __awaiter(this,void 0,void 0,function(){var t,n,r,o,i,s;return __generator(this,function(u){switch(u.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==tf)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return r=resNet50Checkpoint(t,n),[4,loadGraphModel(e.modelUrl||r)];case 1:return o=u.sent(),i=new ResNet(o,t),s=getValidInputResolutionDimensions(e.inputResolution,i.outputStride),[2,new PoseNet(i,s)]}})})}function load(e){return void 0===e&&(e=MOBILENET_V1_CONFIG),__awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return\"ResNet50\"===(e=validateModelConfig(e)).architecture?[2,loadResNet(e)]:\"MobileNetV1\"===e.architecture?[2,loadMobileNet(e)]:[2,null]})})}var version=\"2.2.2\";export{decodeMultiplePoses,decodeSinglePose,MobileNet,partChannels,partIds,partNames,poseChain,load,PoseNet,getAdjacentKeyPoints,getBoundingBox,getBoundingBoxPoints,scaleAndFlipPoses,scalePose,version};\n//# sourceMappingURL=posenet.esm.js.map\n","import { legacy } from \"$common\";\nexport const info = {\n  \"id\": \"poseBody\",\n  \"name\": \"Body Pose Sensing\",\n  \"showStatusButton\": true,\n  \"blocks\": [\n    {\n      \"opcode\": \"goToPart\",\n      \"text\": \"go to [PART]\",\n      \"blockType\": \"command\",\n      \"isTerminal\": false,\n      \"arguments\": {\n        \"PART\": {\n          \"type\": \"string\",\n          \"defaultValue\": \"rightShoulder\",\n          \"menu\": \"PART\"\n        }\n      }\n    },\n    {\n      \"opcode\": \"videoToggle\",\n      \"text\": \"turn video [VIDEO_STATE]\",\n      \"arguments\": {\n        \"VIDEO_STATE\": {\n          \"type\": \"string\",\n          \"menu\": \"VIDEO_STATE\",\n          \"defaultValue\": \"off\"\n        }\n      },\n      \"blockType\": \"command\"\n    },\n    {\n      \"opcode\": \"setVideoTransparency\",\n      \"text\": \"set video transparency to [TRANSPARENCY]\",\n      \"arguments\": {\n        \"TRANSPARENCY\": {\n          \"type\": \"number\",\n          \"defaultValue\": 50\n        }\n      },\n      \"blockType\": \"command\"\n    }\n  ],\n  \"menus\": {\n    \"PART\": {\n      \"acceptReporters\": true,\n      \"items\": [\n        {\n          \"text\": \"nose\",\n          \"value\": \"nose\"\n        },\n        {\n          \"text\": \"right eye\",\n          \"value\": \"leftEye\"\n        },\n        {\n          \"text\": \"left eye\",\n          \"value\": \"rightEye\"\n        },\n        {\n          \"text\": \"right ear\",\n          \"value\": \"leftEar\"\n        },\n        {\n          \"text\": \"left ear\",\n          \"value\": \"rightEar\"\n        },\n        {\n          \"text\": \"right shoulder\",\n          \"value\": \"leftShoulder\"\n        },\n        {\n          \"text\": \"left shoulder\",\n          \"value\": \"rightShoulder\"\n        },\n        {\n          \"text\": \"right elbow\",\n          \"value\": \"leftElbow\"\n        },\n        {\n          \"text\": \"left elbow\",\n          \"value\": \"rightElbow\"\n        },\n        {\n          \"text\": \"right wrist\",\n          \"value\": \"leftWrist\"\n        },\n        {\n          \"text\": \"left wrist\",\n          \"value\": \"rightWrist\"\n        },\n        {\n          \"text\": \"right hip\",\n          \"value\": \"leftHip\"\n        },\n        {\n          \"text\": \"left hip\",\n          \"value\": \"rightHip\"\n        },\n        {\n          \"text\": \"right knee\",\n          \"value\": \"leftKnee\"\n        },\n        {\n          \"text\": \"left knee\",\n          \"value\": \"rightKnee\"\n        },\n        {\n          \"text\": \"right ankle\",\n          \"value\": \"leftAnkle\"\n        },\n        {\n          \"text\": \"left ankle\",\n          \"value\": \"rightAnkle\"\n        }\n      ]\n    },\n    \"ATTRIBUTE\": {\n      \"acceptReporters\": true,\n      \"items\": [\n        {\n          \"text\": \"motion\",\n          \"value\": \"motion\"\n        },\n        {\n          \"text\": \"direction\",\n          \"value\": \"direction\"\n        }\n      ]\n    },\n    \"SUBJECT\": {\n      \"acceptReporters\": true,\n      \"items\": [\n        {\n          \"text\": \"sprite\",\n          \"value\": \"this sprite\"\n        },\n        {\n          \"text\": \"stage\",\n          \"value\": \"Stage\"\n        }\n      ]\n    },\n    \"VIDEO_STATE\": {\n      \"acceptReporters\": true,\n      \"items\": [\n        {\n          \"text\": \"off\",\n          \"value\": \"off\"\n        },\n        {\n          \"text\": \"on\",\n          \"value\": \"on\"\n        },\n        {\n          \"text\": \"on flipped\",\n          \"value\": \"on-flipped\"\n        }\n      ]\n    }\n  }\n} as const;\nexport const legacyFullSupport = legacy(info);\nexport const legacyIncrementalSupport = legacy(info, {\"incrementalDevelopment\":true});","import { ArgumentType, BlockType, Extension, Block, DefineBlock, Environment, ExtensionMenuDisplayDetails, RuntimeEvent, ValueOf } from \"$common\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport * as posenet from '@tensorflow-models/posenet';\n\nimport { legacyFullSupport, info } from \"./legacy\";\n\nconst { legacyExtension, legacyDefinition } = legacyFullSupport.for<PoseBody>();\n\n// TODO: Implement extension health check (peripheral)\n\n/**\n * States what the video sensing activity can be set to.\n */\nconst VideoState = {\n  /** Video turned off. */\n  OFF: 'off',\n\n  /** Video turned on with default y axis mirroring. */\n  ON: 'on',\n\n  /** Video turned on without default y axis mirroring. */\n  ON_FLIPPED: 'on-flipped'\n} as const;\n\n/**\n * Contains descriptions of the blocks of the Body Sensing extension\n */\ntype Details = {\n  name: \"Body Sensing\",\n  description: \"Sense body position with the camera.\",\n  iconURL: \"pose-body.png\",\n  insetIconURL: \"pose-body-small.svg\",\n  tags: [\"Dancing with AI\", \"Made by PRG\"]\n};\n\n/**\n * Contains descriptions of the blocks of the Block Sensing extension\n */\ntype Blocks = {\n  goToPart(bodyPart: string): void;\n  // these video blocks are present in a few different extensions, perhaps making a file just for these?\n  videoToggle(state: string): void;\n  setVideoTransparency(transparency: number): void;\n};\n\n@legacyExtension()\nexport default class PoseBody extends Extension<Details, Blocks> {\n  /**\n   * The state of where the body and its parts are estimated to be\n   */\n  poseState;\n\n  /**\n   * The body model from posenet\n   */\n  private bodyModel;\n\n  /**\n   * The current video state\n   * @type {string}\n   */\n  globalVideoState: string;\n\n  /**\n   * The current transparency of the video\n   * @type {number}\n   */\n  globalVideoTransparency: number;\n\n  /**\n   * Dimensions of the video frame\n   */\n  DIMENSIONS = [480, 360];\n\n  /**\n   * Accessible body parts\n   */\n  bodyOptions = info.menus.PART.items;\n\n\n  /**\n   * Acts like class PoseBody's constructor (instead of a child class constructor)\n   * @param env \n   */\n  init(env: Environment) {\n    \n    if (this.runtime.ioDevices) {\n      this._loop();\n    }\n  }\n\n  /**\n   * Converts the coordinates from the body pose estimate to Scratch coordinates\n   * @param x \n   * @param y\n   * @param z\n   * @returns enum\n   */\n  tfCoordsToScratch({ x, y }) {\n    return { x: x - 250, y: 200 - y };\n  }\n\n  /**\n   * Get the latest values for video transparency and state,\n   * and set the video device to use them.\n   */\n  projectStarted() {\n    this.setTransparency(this.globalVideoTransparency);\n    this.toggleVideo(this.globalVideoState);\n  }\n\n  /**\n   * Checks if there is a body in the video frame that has a pose\n   * @returns {boolean} true if there is a body pose, false otherwise\n   */\n  hasPose() {\n    return this.poseState && this.poseState.keypoints && this.poseState.score > 0.01;\n  }\n\n  /**\n   * Runs for the entire time the extension is running. Gets information about the video frame.\n   * Estimates where the body is on the video frame. Creates a delay to prevent this function from constantly running,\n   * so as to prevent the entire program from slowing down.\n   */\n  async _loop() {\n    while (true) {\n      const frame = this.runtime.ioDevices.video.getFrame({\n        format: 'image-data',\n        dimensions: this.DIMENSIONS\n      });\n\n      const time = +new Date();\n      if (frame) {\n        this.poseState = await this.estimatePoseOnImage(frame);\n      }\n      const estimateThrottleTimeout = (+new Date() - time) / 4;\n      await new Promise(r => setTimeout(r, estimateThrottleTimeout));\n    }\n  }\n\n  /**\n   * Estimates where the body is on the video frame.\n   * @param imageElement\n   * @returns {Promise<AnnotatedPrediction[]>}\n   */\n  async estimatePoseOnImage(imageElement) {\n    // load the posenet model from a checkpoint\n    const bodyModel = await this.ensureBodyModelLoaded();\n    return await bodyModel.estimateSinglePose(imageElement, {\n      flipHorizontal: false\n    });\n  }\n\n  /**\n   * Gets the body model from posenet\n   * @returns \n   */\n  async ensureBodyModelLoaded() {\n\n    this.bodyModel ??= await posenet.load();\n    return this.bodyModel;\n  }\n\n  /**\n   * Turns the video camera off/on/on and flipped. This is called in the operation of videoToggleBlock\n   * @param state \n   */\n  toggleVideo(state: string) {\n    if (state === VideoState.OFF) return this.runtime.ioDevices.video.disableVideo();\n\n    this.runtime.ioDevices.video.enableVideo();\n    // Mirror if state is ON. Do not mirror if state is ON_FLIPPED.\n    this.runtime.ioDevices.video.mirror = (state === VideoState.ON);\n  }\n\n  /**\n   * Sets the video's transparency. This is called in the operation of setVideoTransparencyBlock\n   * @param transparency \n   */\n  setTransparency(transparency: number) {\n    const trans = Math.max(Math.min(transparency, 100), 0);\n    this.runtime.ioDevices.video.setPreviewGhost(trans);\n  }\n\n  /**\n   * Sets up the default settings for the extension. Gives information related to each of the extension's blocks\n   * @returns The extension's blocks\n   */\n  defineBlocks(): PoseBody[\"BlockDefinitions\"] {\n\n    /**\n     * Sets up the extension's default video settings\n     */\n    this.globalVideoState = VideoState.ON;\n    this.globalVideoTransparency = 50;\n    this.projectStarted();\n    this.bodyModel = null;\n\n    /**\n     * The options for each finger\n     * @type {Array}\n     */\n    const handlerOptions: Array<string> = this.bodyOptions.map(part => part.value);\n\n    const goToPart = legacyDefinition.goToPart({\n      operation: (bodyPart: string, util) => {\n\n        if (this.hasPose()) {\n          const { x, y } = this.tfCoordsToScratch(this.poseState.keypoints.find(point => point.part === bodyPart).position);\n          (util.target as any).setXY(x, y, false);\n        }\n      },\n      argumentMethods: {\n        0: {\n          handler: (bodyPart: string) => {\n            return handlerOptions.includes(bodyPart) ? bodyPart : 'nose';\n          }\n        }\n      }\n    });\n\n    const videoToggle = legacyDefinition.videoToggle({\n      operation: (video_state) => {\n        this.toggleVideo(video_state);\n      },\n      argumentMethods: {\n        0: {\n          handler: (video_state: string) => {\n            return ['on', 'off', 'on-flipped'].includes(video_state) ? video_state : VideoState.ON;\n          },\n        }\n      }\n    });\n\n    const setVideoTransparency = legacyDefinition.setVideoTransparency({\n      operation: (transparency: number) => {\n        this.setTransparency(transparency);\n      }\n    });\n\n    return {\n      goToPart,\n      videoToggle,\n      setVideoTransparency\n    }\n  }\n}"],"names":["poseBody","exports","$common","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","SuppressedError","DataStorage","constructor","backend","dataMover","this","data","WeakMap","dataIdsCount","get","dataId","has","moveData","set","delete","numDataIds","KernelBackend","time","f","notYetImplemented","read","readSync","disposeData","write","values","shape","dtype","move","memory","floatPrecision","epsilon","dispose","kernelName","Error","shuffle","array","counter","length","temp","index","Math","random","clamp","min","x","max","nearestLargerEven","val","sum","arr","i","assert","expr","msg","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertNonNull","a","flatten","skipTypedArray","Array","isArray","isTypedArray","push","sizeFromShape","size","n1","n2","isInt","sizeToSquarishShape","width","ceil","sqrt","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","setTimeout","inferFromImplicitShape","shapeProd","implicitIdx","newShape","slice","parseAxisParam","axis","rank","map","s","concat","every","ax","squeezeShape","keptDims","isEmptyArray","axes","sort","j","getTypedArrayFromDType","Float32Array","Int32Array","Uint8Array","getArrayFromDType","checkConversionForErrors","vals","num","isNaN","isFinite","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","bytes","forEach","isString","String","isBoolean","isNumber","inferDtype","isFunction","call","nearestDivisor","start","computeStrides","strides","createNestedArray","offset","ret","d","rest","len","reduce","acc","c","toNestedArray","makeOnesTypedArray","makeZerosTypedArray","assertNonNegativeIntegerDimensions","dimSize","Number","isInteger","locToIndex","locs","indexToLoc","floor","isPromise","object","TENSORFLOWJS_FLAGS_PREFIX","Environment","global","flags","flagRegistry","urlFlags","populateURLFlags","setPlatform","platformName","platform","console","warn","registerFlag","flagName","evaluationFn","setHook","flagValue","getAsync","evaluateFlag","getNumber","getBool","getFlags","features","setFlags","Object","assign","reset","location","search","urlParams","queryString","params","replace","t","name","decodeURIComponent","decodeParam","join","getQueryParams","split","keyValue","key","toLowerCase","parseValue","env","ENV","globalNameSpace","getGlobalNamespace","ns","window","process","self","getGlobal","init","globalMap","_tfGlobals","Map","getGlobalMap","singleton","Abs","Acos","Acosh","Add","AddN","All","Any","ArgMax","ArgMin","Asin","Asinh","Atan","Atanh","Atan2","AvgPool","AvgPoolGrad","AvgPool3D","AvgPool3DGrad","BatchMatMul","BatchToSpaceND","Bincount","Cast","Ceil","ClipByValue","Complex","ComplexAbs","Concat","Conv2D","Conv2DBackpropFilter","Conv2DBackpropInput","Conv3D","Conv3DBackpropFilterV2","Conv3DBackpropInputV2","Cos","Cosh","Cumsum","CropAndResize","DenseBincount","DepthToSpace","DepthwiseConv2dNative","DepthwiseConv2dNativeBackpropFilter","DepthwiseConv2dNativeBackpropInput","Diag","Dilation2D","RealDiv","Elu","EluGrad","Erf","Equal","Exp","ExpandDims","Expm1","FFT","Fill","FlipLeftRight","Floor","FloorDiv","FusedBatchNorm","GatherV2","GatherNd","Greater","GreaterEqual","Identity","IFFT","Imag","IsFinite","IsInf","IsNan","LeakyRelu","Less","LessEqual","LinSpace","Log","Log1p","LogicalAnd","LogicalNot","LogicalOr","LRN","LRNGrad","Max","Maximum","MaxPool","MaxPoolGrad","MaxPool3D","MaxPool3DGrad","MaxPoolWithArgmax","Mean","Min","Minimum","MirrorPad","Mod","Multinomial","Multiply","Neg","NotEqual","NonMaxSuppressionV3","NonMaxSuppressionV4","NonMaxSuppressionV5","OnesLike","OneHot","Pack","PadV2","Pow","Prelu","Prod","Range","Real","Reciprocal","Relu","Reshape","ResizeNearestNeighbor","ResizeNearestNeighborGrad","ResizeBilinear","ResizeBilinearGrad","Relu6","Reverse","Round","Rsqrt","ScatterNd","Select","Selu","Slice","Sin","Sinh","Sign","Sigmoid","Softplus","Sqrt","Sum","SpaceToBatchND","SplitV","Softmax","SquaredDifference","Square","Sub","SparseToDense","StridedSlice","Tan","Tanh","Tile","TopK","Transpose","Unique","Unpack","UnsortedSegmentSum","ZerosLike","Step","FromPixels","RotateWithOffset","_FusedMatMul","FusedConv2D","FusedDepthwiseConv2D","kernelRegistry","gradRegistry","getKernel","backendName","makeKey","getGradient","getKernelsForBackend","it","entries","config","registerKernel","createScalarValue","encodeString","toTypedArray","base","noConversionNeeded","bool","round","now","encoding","encode","decodeString","decode","util","freeze","__proto__","clamp$1","createShuffledIndices","n","shuffledIndices","Uint32Array","distSquared","b","diff","fetch","path","requestInits","isScalarShape","makeZerosNestedTypedArray","prev","curr","randUniform","r","sum$2","tanh","Infinity","e2x","exp","Profiler","backendTimer","logger","Logger","profileKernel","inputs","outputs","timer","holdResultWrapperFn","output","tensorVals","checkComputationForErrors","timeMs","timing","kernelMs","extraInfo","getExtraProfileInfo","logKernelProfile","kernelProfile","all","valueContainer","paddedName","toString","inputShapesDescription","input","inputShape","inputRank","log","FORMAT_LIMIT_NUM_VALS","FORMAT_NUM_FIRST_LAST_VALS","FORMAT_NUM_SIG_DIGITS","tensorToString","verbose","padPerCol","numCols","fill","valuesOrTuples","createComplexTuples","row","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","lines","l","pad","valStr","parseFloat","toFixed","boolNumToString","v","isLast","storagePerElement","firstValsSize","firstVals","from","lastVals","subshape","substrides","stride","end","sep","newLineSep","complexTuples","TensorBuffer","loc","toTensor","trackerFn","makeTensor","opHandler","Tensor","id","kept","isDisposedInternal","rankType","buffer","bufferSync","dataSync","arraySync","throwIfDisposed","_a","isDisposed","disposeTensor","print","clone","cast","variable","trainable","makeVariable","defineProperty","Symbol","hasInstance","instance","Variable","initialValue","tensorId","super","newValue","incRef","disposeVariable","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","Function","upcastTypeMap","float32","int32","complex64","upcastType","typeA","typeB","sumOutType","type","makeTypesMatch","assertTypesMatch","getTensorsInContainer","list","walkTensorContainer","Set","container","seen","obj","iterable","k","add","tensor_util","isTensorInList","tensor","tensorList","some","isRegisteredKernelInvocation","kernelInvocation","EngineState","registeredVariables","nextTapeNodeId","numBytes","numTensors","numStringTensors","numDataBuffers","gradientDepth","kernelDepth","scopeStack","numDataMovesStack","nextScopeId","tensorInfo","profiling","activeProfile","newBytes","newTensors","peakBytes","kernels","kernelNames","variableName","Engine","registry","registryFactory","pendingBackendInitId","state","ready","pendingBackendInit","backendInstance","sortedBackends","getSortedBackends","initializeBackend","success","setBackend","asyncInit","initializeBackendsAndReturnBest","backendNames","keys","findBackend","findBackendFactory","factory","registerBackend","priority","setupRegisteredKernels","profiler","kernel","setupFunc","disposeRegisteredKernels","disposeFunc","registryFactoryEntry","promiseId","catch","err","stack","message","removeBackend","info","srcBackend","shouldCheckForMemLeaks","tidy","nameOrFn","fn","scopedRun","startScope","endScope","error","res","ex","nextTensorId","nextVariableId","y","makeTensorFromDataId","addTapeNode","activeScope","dy","gradInputs","attrs","ENGINE","runKernel","runKernelFunc","checkKernelForMemLeak","numDataIdsBefore","outInfos","numDataIdsAfter","numOutputDataIds","numMoves","dataIdsLeaked","kernelParams","saved","isTapeOn","startingBytecount","startingNumTensors","kernelFunc","out","kernelOrScopeName","outTensors","outInfo","tensorsToSave","getTensorsForGradient","saveTensorsForBackwardMode","forwardFunc","saveFunc","tensors","keep","outs","backwardsFunc","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","outputShapes","item","kernelTimeMs","gradConfig","inputsToSave","outputsToSave","inputTensorsToSave","saveAllInputs","inputName","outputTensorsToSave","filter","_","backendVals","refCount","track","disposeVariables","varName","unreliable","reasons","profile","query","startBytes","startNumTensors","gradientsFunc","tapeNode","gradFunc","gradient","dys","activeTape","startTape","endTape","scopeInfo","tensorsToTrackInParent","tensorsToTrackInParentSet","oldScope","pop","scopeId","gradients","xs","allowNoGradients","filteredTape","tape","tensorsFromX","nodesFromX","node","nodeInputs","anyInputFromX","tensorsLeadToY","nodesToY","prunedInputs","nodeInput","prunedNode","getFilteredNodesXToY","accumulatedGradientMap","ones","tensorAccumulatedGradientMap","o","gradTensor","inputGradients","dx","curGradient","backpropagateGradients","grads","customGrad","inputMap","save","gradRes","gradMap","grad","timingInfo","wallMs","getOrMakeEngine","_tfengine","environment","isMobile","navigator","userAgent","vendor","opera","test","substr","isBrowser","document","WorkerGlobalScope","device_util","inferShape","firstElem","deepAssertShapeConsistency","indices","subShape","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","parseAsDtype","inferredDtype","indexOf","inferredShape","convertToTensorArray","arg","debugValue","versions","OP_SCOPE_SUFFIX","op","opName","endsWith","substring","f2","args","configurable","complex","complex_","real","imag","$real","$imag","providedSize","inferredSize","inferred","flatDimsDontMatch","DTYPE_VALUE_SIZE_MAP","float16","uint16","uint8","NUM_BYTES_STRING_LENGTH","decodeWeights","specs","float16Decode","spec","quantization","quantizationSizeFactor","byteBuffer","quantizedArray","Uint16Array","scale","undefined","getFloat16Decoder","byteLength","dtypeFactor","image","realTensor","imageTensor","concatenateTypedArrays","JSON","stringify","totalByteLength","normalizedXs","useNodeBuffer","Buffer","Blob","atob","btoa","stringByteLength","str","concatenateArrayBuffers","buffers","basename","trim","items","getModelArtifactsInfoForJSON","modelArtifacts","modelTopology","ArrayBuffer","dateSaved","Date","modelTopologyType","modelTopologyBytes","weightSpecsBytes","weightSpecs","weightDataBytes","weightData","mantisaTable","convertMantissa","m","computeFloat16MantisaTable","exponentTable","computeFloat16ExponentTable","offsetTable","computeFloat16OffsetTable","bufferUint32View","float16Bits","float32Bits","IORouterRegistry","saveRouters","loadRouters","getInstance","registerSaveRouter","saveRouter","registerLoadRouter","loadRouter","getSaveHandlers","url","getHandlers","getLoadHandlers","loadOptions","handlerType","validHandlers","router","handler","DATABASE_NAME","MODEL_STORE_NAME","INFO_STORE_NAME","getIndexedDBFactory","theWindow","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","setUpDatabase","openRequest","db","createObjectStore","keyPath","BrowserIndexedDB","modelPath","databaseAction","load","open","onupgradeneeded","onsuccess","modelTx","transaction","getRequest","objectStore","close","onerror","oncomplete","modelArtifactsInfo","infoTx","infoStore","putInfoRequest","put","putModelRequest","deleteInfoRequest","URL_SCHEME","indexedDBRouter","startsWith","BrowserIndexedDBManager","listModels","tx","getAllInfoRequest","getAll","removeModel","getInfoRequest","deleteModelData","deleteModelRequest","PATH_SEPARATOR","PATH_PREFIX","INFO_SUFFIX","MODEL_TOPOLOGY_SUFFIX","WEIGHT_SPECS_SUFFIX","WEIGHT_DATA_SUFFIX","MODEL_METADATA_SUFFIX","getModelKeys","topology","modelMetadata","getModelPathFromKey","BrowserLocalStorage","localStorage","LS","setItem","buf","fromCharCode","arrayBufferToBase64String","format","generatedBy","convertedBy","signature","userDefinedMetadata","modelInitializer","removeItem","parse","getItem","metadataString","metadata","weightDataBase64","byteOffset","charCodeAt","base64StringToArrayBuffer","localStorageRouter","BrowserLocalStorageManager","prefix","suffix","URL_SCHEME_SUFFIX","ModelStoreManagerRegistry","managers","registerManager","scheme","manager","getManager","getSchemes","parseURL","async","cloneModelInternal","sourceURL","destURL","deleteSource","loadHandlers","loadHandler","saveHandlers","saveHandler","sourceScheme","sourcePath","sameMedium","saveResult","PlatformBrowser","performance","text","textEncoder","TextEncoder","TextDecoder","getNodeFetch","importFetch","require","systemFetch","PlatformNode","hrtime","cast_","$x","clone_","defer","BrowserDownloads","fileNamePrefix","modelTopologyFileName","weightDataFileName","weightsURL","URL","createObjectURL","weightsManifest","paths","weights","modelTopologyAndWeightManifest","modelTopologyAndWeightManifestURL","jsonAnchor","createElement","download","href","dispatchEvent","MouseEvent","weightDataAnchor","BrowserFiles","files","jsonFile","weightFiles","jsonReader","FileReader","onload","event","modelJSON","target","pathToFile","checkManifestAndWeightFiles","perFileBuffers","weightsGroup","weightFileReader","readAsArrayBuffer","readAsText","manifest","basenames","fileNames","file","group","pathBasename","monitorPromisesProgress","promises","onProgress","startFraction","endFraction","checkPromises","checkFraction","resolvedPromise","promise","fraction","loadWeightsAsArrayBuffer","fetchURLs","fetchFunc","requests","fetchURL","requestInit","isBinary","bufferPromises","response","arrayBuffer","weightsLoaderFactory","fetchWeightsFunction","filePathPrefix","weightNames","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","weightsBytes","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","found","weightsNotFound","groupIndicesToFetch","accumulator","shouldFetch","fetchUrls","filepath","fetchUrl","weightsTensorMap","bufferIndexOffset","numBuffers","groupBytes","groupBuffer","groupByteBuffer","groupBufferOffset","nameToTensorMap","browserDownloads","HTTPRequest","DEFAULT_METHOD","weightPathPrefix","weightUrlConverter","body","method","FormData","append","ok","responses","status","modelConfigRequest","modelConfig","json","results","loadWeights","artifacts","initializer","weightPath","lastSlash","lastIndexOf","lastSearchParam","parseUrl","pathPrefix","entry","urlPromises","isHTTPScheme","match","URL_SCHEME_REGEX","httpRouter","isHTTP","urlItem","http","PassthroughLoader","PassthroughSaver","io","browserFiles","browserHTTPRequest","copyModel","encodeWeights","dataPromises","names","utf8bytes","totalNumBytes","p","bytesOfLength","fromMemory","trainingConfig","arguments","schemes","schemeOut","moveModel","loudRouter","schemeAndPath","withSaveHandler","matMul","matMul_","transposeA","transposeB","$a","$b","oneHot","oneHot_","depth","onValue","offValue","transpose","transpose_","perm","reverse","confusionMatrix","confusionMatrix_","labels","predictions","numClasses","$labels","$predictions","oneHotLabels","oneHotPredictions","oneHotLabelsT","product","math","tensor3d","fromPixels2DContext","fromPixels","fromPixels_","pixels","numChannels","isPixelData","isImageData","isVideo","isImage","isCanvasLike","isImageBitmap","ImageData","HTMLVideoElement","HTMLImageElement","getContext","ImageBitmap","HAVE_CURRENT_DATA_READY_STATE","readyState","height","videoWidth","videoHeight","getImageData","canvas","drawImage","numPixels","channel","browser","fromPixels$1","toPixels","img","$img","originalImgTensor","multiplier","Uint8ClampedArray","rgba","ctx","imageData","putImageData","prepareAndValidate","tensorRank","indicesRank","indicesShape","sliceRank","nResult","resultShape","sliceSize","gather_nd_util","validateUpdateShape","updates","sliceDim","batchDim","shapeError","validateInput","calculateShapes","totalNd","safeSliceDim","numUpdates","outputSize","scatter_nd_util","validateInput$1","assertParamsValid","begin","maskToAxes","mask","computeOutShape","stridesWithElidedDims","ellipsisInsertionIndex","numElidedAxes","newStrides","splice","unnormalizeAxis","normalizedAxis","getElidedAxes","elidedAxes","getNormalizedAxes","ellipsisAxes","numInterpolatedAxes","beginMask","endMask","ellipsisMask","normalizedBegin","normalizedEnd","normalizedStrides","fullIndex","startIndicesWithElidedDims","stopIndicesWithElidedDims","startForAxis","stopForAxis","stridesForAxis","originalBegin","newIndices","originalAxis","originalValue","originalEnd","MAX_SAFE_INTEGER","axisSize","startIndices","MIN_SAFE_INTEGER","stopIndices","stop","isSliceContinous","firstNonOneAxis","computeFlatOffset","flatOffset","parseSliceParams","begin_","xRank","size_","sliceInfo","xShape","newAxisMask","shrinkAxisMask","$begin","$end","$strides","expandAxes","shrinkAxes","outShape","nonStrided","slice_util","computeOutShape$2","Serializable","getClassName","className","fromConfig","cls","SerializationMap","classNameMap","getMap","register","registerClass","serialization","TEST_EPSILON_FLOAT32","TEST_EPSILON_FLOAT16","testEpsilon","expectArraysPredicate","actual","expected","predicate","checkClassType","aType","bType","actualShape","expectedShape","actualFlat","expectedFlat","areClose","abs","test_util","encodeStrings","expectArrayBuffersEqual","expect","toEqual","expectArraysClose","expectArraysEqual","expectNumbersClose","expectPromiseToFail","fail","expectValuesInRange","low","high","engine","add_","floorDiv","floorDiv_","div","div_","mul","mul_","abs_","acos","acos_","acosh","acosh_","addN","addN_","$tensors","firstTensor","all_","keepDims","any","any_","argMax","argMax_","argMin","argMin_","asin","asin_","asinh","asinh_","atan","atan_","atan2","atan2_","atanh","atanh_","computeDilation2DInfo","filterShape","dataFormat","dilations","computeConv2DInfo","convertConv2DDataFormat","computePool2DInfo","inShape","filterSize","roundingMode","filterHeight","filterWidth","parseTupleParam","computePool3DInfo","filterDepth","parse3TupleParam","$dataFormat","computeConv3DInfo","depthwise","batchSize","inHeight","inWidth","inChannels","filterChannels","strideHeight","strideWidth","dilationHeight","dilationWidth","effectiveFilterHeight","getEffectiveFilterSize","effectiveFilterWidth","padInfo","outHeight","outWidth","top","bottom","left","right","fieldSize","zeroPad","computeDefaultPad","inputRows","inputCols","outputRows","outputCols","computeOutputShape2D","padAlongHeight","padAlongWidth","getPadAndOutInfo","outChannels","inDepth","strideDepth","dilationDepth","effectiveFilterDepth","outDepth","front","back","inputDepth","outputDepths","computeOutputShape4D","padAlongDepth","get3DPadAndOutInfo","dilation","effectiveFieldSize","param","trunc","tupleValuesAreOne","dimA","dimB","dimC","eitherStridesOrDilationsAreOne","reshape","reshape_","avgPool","avgPool_","dimRoundingMode","conv_util","x4D","reshapedTo4D","avgPool3d","avgPool3d_","x5D","reshapedTo5D","concat_","attr","sigmoid","sigmoid_","slice_","tanh_","basicLSTMCell","basicLSTMCell_","forgetBias","lstmKernel","lstmBias","h","$forgetBias","$lstmKernel","$lstmBias","$data","$c","$h","combined","weighted","sliceCols","newC","batchToSpaceND","batchToSpaceND_","blockShape","crops","prod","batchNorm","batchNorm_","mean","variance","varianceEpsilon","$mean","$variance","$scale","$offset","xAs4D","batchNorm2d","batchNorm2d_","batchNorm3d","batchNorm3d_","batchNorm4d","batchNorm4d_","bincount","bincount_","$weights","broadcastTo","broadcastTo_","unshift","reps","ceil_","clipByValue","clipByValue_","clipValueMin","clipValueMax","concat1d","concat1d_","concat2d","concat2d_","concat3d","concat3d_","concat4d","concat4d_","conv2d","conv2d_","$filter","conv1d","conv1d_","x3D","reshapedTo3D","filter4D","input4D","conv2DBackpropInput","conv2DBackpropInput_","xShape4D","dy4D","conv2dTranspose","conv2dTranspose_","outputShape","conv3d","conv3d_","conv3DBackpropInput","conv3DBackpropInput_","xShape5D","dy5D","conv3dTranspose","conv3dTranspose_","cos","cos_","cosh","cosh_","cumsum","cumsum_","exclusive","denseBincount","denseBincount_","binaryOutput","depthToSpace","depthToSpace_","blockSize","inputHeight","inputWidth","depthwiseConv2d","depthwiseConv2d_","diag","diag_","dilation2d","dilation2d_","getBroadcastDims","inRank","dims","dim","getReductionAxes","inDim","outAxis","outDim","assertAndGetBroadcastShape","equal","equal_","where","where_","condition","$condition","broadcastShape","$broadcastedA","$broadcastedB","zerosLike","zerosLike_","divNoNan","divNoNan_","divResult","zeros","bEqualsZero","dot","dot_","t1","t2","$t1","$t2","t1Inner","t2Inner","t12D","t22D","t1t2","elu","elu_","erf","erf_","exp_","expandDims","expandDims_","expm1","expm1_","tile","tile_","eye","eye_","numRows","numColumns","batchShape","buff","floor_","gather","gather_","batchDims","greater","greater_","greaterEqual","greaterEqual_","imag_","isFinite_","isInf","isInf_","isNaN_","leakyRelu","leakyRelu_","alpha","less","less_","lessEqual","lessEqual_","linspace","localResponseNormalization","localResponseNormalization_","depthRadius","bias","beta","log_","log1p","log1p_","variableGrads","varList","specifiedVarList","specifiedNonTrainable","originalVarCount","g","namedGrads","checkGrads","neg","neg_","softplus","softplus_","logSigmoid","logSigmoid_","customOp","max_","reductionIndices","sub","sub_","sum_","logSoftmax","logSoftmax_","logits","$logits","xMax","shifted","softmax","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","outIdx","reduceIdx","computeOutAndReduceShapes","aShape","expandShapeToKeepDim","assertAxesAreInnerMostDims","getAxesPermutation","getUndoAxesPermutation","getInnerMostAxes","numAxes","logSumExp","logSumExp_","logicalAnd","logicalAnd_","logicalNot","logicalNot_","logicalOr","logicalOr_","logicalXor","logicalXor_","maxPool","maxPool_","maxPool3d","maxPool3d_","maxPoolWithArgmax","maxPoolWithArgmax_","includeBatchInIndex","indexes","maximum","maximum_","mean_","min_","minimum","minimum_","mirrorPad","mirrorPad_","paddings","mode","shapeOffset","mod","mod_","square","square_","moments","moments_","xMean","keepDimsShape","devSquared","multiRNNCell","multiRNNCell_","lstmCells","newStates","newH","multinomial","multinomial_","numSamples","seed","normalized","numOutcomes","origRank","notEqual","notEqual_","onesLike","onesLike_","outerProduct","outerProduct_","v1","v2","$v1","$v2","v12D","v22D","pad_","constantValue","pad1d","pad1d_","pad2d","pad2d_","pad3d","pad3d_","pad4d","pad4d_","spaceToBatchND","spaceToBatchND_","pool","pool_","windowShape","poolingType","convInfo","basePadding","dilatedFilterShape","padExtraShape","padExtraStart","padExtraEnd","withSpaceToBatchBasePaddings","isDilationOne","adjustedPadding","adjustedCrops","padStart","origPadEnd","fullInputShape","padEndExtra","padEnd","requiredSpaceToBatchPaddings","convertedPad","convertedX","pow","pow_","$base","$exp","prelu","prelu_","prod_","rand","rand_","randFunction","globalThis","module","define","Alea","me","mash","Mash","s0","s1","s2","copy","impl","opts","xg","prng","double","quick","alea","XorGen","strseed","z","w","xor128","xorwow","X","xorshift7","limit","xor4096","tychei","nodecrypto","rngname","startdenom","significance","overflow","seedrandom","options","callback","shortseed","mixkey","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","keylen","count","prop","typ","smear","stringseed","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","sr","MPRandGauss","stdDeviation","truncated","stdDev","nextVal","NaN","upper","lower","seedValue","nextValue","resultX","resultY","isValid","isValidTruncated","convertValue","RandGamma","randu","randn","x2","v0","u","UniformRandom","canReturnFloat","range","randomGamma","randomGamma_","rgamma","randomNormal","randomNormal_","randGauss","randomUniform","randomUniform_","minval","maxval","real_","reciprocal","reciprocal_","relu","relu_","relu6","relu6_","reverse_","reverse1d","reverse1d_","reverse2d","reverse2d_","reverse3d","reverse3d_","reverse4d","reverse4d_","round_","rsqrt","rsqrt_","scalar","selu","selu_","separableConv2d","separableConv2d_","depthwiseFilter","pointwiseFilter","$depthwiseFilter","$pointwiseFilter","channelMultiplier","setdiff1dAsync","$y","xVals","yVals","ySet","sign","sign_","sin","sin_","sinh","sinh_","slice1d","slice1d_","slice2d","slice2d_","slice3d","slice3d_","slice4d","slice4d_","softmax_","fft","fft_","ifft","ifft_","irfft","irfft_","innerDimensionSize","batch","complexInput","realInput","imagInput","realConjugate","imagConjugate","split_","numOrSizeSplits","rfft","rfft_","fftLength","adjustedInput","zerosShape","zerosInput","half","realValues","imagValues","realComplexConjugate","imagComplexConjugate","sqrt_","squaredDifference","squaredDifference_","squeeze","squeeze_","stack_","step_","stridedSlice","stridedSlice_","tan","tan_","tensor1d","tensor2d","tensor4d","tensor5d","tensor6d","topk","topk_","sorted","lastDim","truncatedNormal","truncatedNormal_","unique","unique_","unsortedSegmentSum","unsortedSegmentSum_","segmentIds","numSegments","$segmentIds","unstack","unstack_","whereImpl","condShape","condVals","inBuffer","whereAsync","booleanMaskAsync","$tensor","$mask","axisFrom","maskDim","tensorShape","leadingSize","targetTensorShape","reshapedTensor","reshapedMask","positivePositions","normImpl","norm","norm_","ord","axis_util","movingAverage","movingAverage_","decay","zeroDebias","$v","$decay","one","oneMinusDecay","update","$step","scatterND","scatterND_","$indices","$updates","sparseToDense","sparseToDense_","sparseIndices","sparseValues","defaultValue","$sparseIndices","$sparseValues","$defaultValue","defaultValues","numElems","numDims","numValues","sparse_to_dense","gatherND","gatherND_","dropout","dropout_","rate","noiseShape","$noiseShape","newDimension","getNoiseShape","keepProb","enclosingPowerOfTwo","cosineWindow","windowLength","even","newValues","cosArg","PI","inTopKAsync","targets","$targets","predictionsVals","targetsVals","precision","subarray","valAndInd","conv2DBackpropFilter","conv2DBackpropFilter_","getFusedDyActivation","activation","getFusedBiasGradient","dyActivation","reduceAxes","broadcast_util","applyActivation","preluActivationWeights","leakyreluAlpha","shouldFuse","fusedConv2d_","unfusedConv2d","$bias","$preluActivationWeights","der","biasDer","customOpWithBias","depthwiseConv2dNativeBackpropFilter","depthwiseConv2dNativeBackpropFilter_","depthwiseConv2dNativeBackpropInput","depthwiseConv2dNativeBackpropInput_","fusedDepthwiseConv2d_","unfusedDepthwiseConv2d","xDer","filterDer","fusedMatMul_","unfusedMatMul","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","a3D","b3D","aDer","bDer","fused_ops","conv2d$1","hammingWindow","hammingWindow_","hannWindow","hannWindow_","frame","frame_","signal","frameLength","frameStep","padValue","padLen","stft","stft_","windowFn","framedSignal","windowedSignal","cropAndResize","cropAndResize_","boxes","boxInd","cropSize","extrapolationValue","$image","$boxes","$boxInd","numBoxes","flipLeftRight","flipLeftRight_","rotateWithOffset","rotateWithOffset_","radians","fillValue","center","nonMaxSuppSanityCheck","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","NEGATIVE_INFINITY","nonMaxSuppression","nonMaxSuppression_","$scores","binaryInsert","element","comparator","middle","compareResult","binarySearch_","defaultComparator","binarySearch","insertionPoint","nonMaxSuppressionV3Impl","nonMaxSuppressionImpl_","nonMaxSuppressionV4Impl","padToMaxOutputSize","nonMaxSuppressionV5Impl","returnScoresTensor","returnValidOutputs","candidates","score","boxIndex","suppressBeginIndex","ascendingComparator","selectedIndices","selectedScores","candidate","originalScore","ignoreCandidate","iou","intersectionOverUnion","suppressWeight","validOutputs","elemsToPad","iCoord","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","weight","c1","c2","nonMaxSuppressionAsync","boxesAndScores","boxesVals","scoresVals","nonMaxSuppressionWithScore","nonMaxSuppressionWithScore_","nonMaxSuppressionWithScoreAsync","nonMaxSuppressionPadded","nonMaxSuppressionPadded_","nonMaxSuppressionPaddedAsync","$maxOutputSize","$iouThreshold","$scoreThreshold","resizeBilinear","resizeBilinear_","images","alignCorners","halfPixelCenters","$images","batchImages","resizeNearestNeighbor","resizeNearestNeighbor_","bandPart","bandPart_","numLower","numUpper","M","N","ij","inBand","zero","mat","gramSchmidt","gramSchmidt_","inputIsTensor2D","ys","xs1d","proj","qr2d","fullMatrices","q","one2D","iters","rTemp","wTemp","qTemp","rjEnd1","normX","rjj","u1","wPre","tau","rjEndAll","tauTimesW","wT","rTimesTau","tawTimesWT","qAllJEnd","qTimesTau","qr","qr_","outerDimsProd","x2ds","q2ds","r2ds","x2d","q2d","r2d","Reduction","computeWeightedLoss","computeWeightedLoss_","losses","reduction","SUM_BY_NONZERO_WEIGHTS","$losses","weightedLoss","NONE","SUM","MEAN","broadcastFactor","broadcastedWeights","numNonZeros","absoluteDifference","absoluteDifference_","cosineDistance","cosineDistance_","hingeLoss","hingeLoss_","huberLoss","huberLoss_","delta","deltaScalar","quadratic","linear","logLoss","logLoss_","epsilonScalar","l1","l2","meanSquaredError","meanSquaredError_","sigmoidCrossEntropy","sigmoidCrossEntropy_","multiClassLabels","labelSmoothing","$multiClassLabels","labelSmoothingScalar","maxOutput","outputXTarget","sigmoidOutput","sigmoidCrossEntropyWithLogits_","softmaxCrossEntropy","softmaxCrossEntropy_","onehotLabels","$onehotLabels","lse","logResult","costVector","dyShape","softmaxCrossEntropyWithLogits_","spectral","linalg","Optimizer","minimize","returnCost","computeGradients","gradArray","applyGradients","iterations","iterations_","incrementIterations","saveIterations","getWeights","setWeights","weightValues","extractIterations","AdadeltaOptimizer","learningRate","rho","accumulatedGrads","accumulatedUpdates","variableGradients","originalName","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","newAccumulatedUpdate","variables","variableCount","getConfig","AdagradOptimizer","initialAccumulatorValue","AdamOptimizer","beta1","beta2","accumulatedFirstMoment","accumulatedSecondMoment","accBeta1","accBeta2","varNames","oneMinusAccBeta1","oneMinusAccBeta2","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","AdamaxOptimizer","accumulatedWeightedInfNorm","iteration","variableNames","lr","weightedInfNorm","ut0","ut1","newWeightedInfNorm","SGDOptimizer","setLearningRate","MomentumOptimizer","momentum","useNesterov","accumulations","accumulation","newAccumulation","setMomentum","RMSPropOptimizer","centered","accumulatedMeanSquares","accumulatedMoments","accumulatedMeanGrads","accumulatedMeanSquare","newAccumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanGrad","gradContribution","newAccumulatedMoments","OptimizerConstructors","sgd","rmsprop","adam","adadelta","adamax","adagrad","train","delayCallback","requestAnimationFrame","setImmediate","assertParamsConsistent","shapes","firstShape","PARALLELIZE_THRESHOLD","computeOptimalWindowSize","inSize","getImageCenter","imageHeight","imageWidth","getReshaped","batchToSpace","reshaped","spatialLength","getPermuted","reshapedRank","blockShapeRank","permuted","permutedBeforeBatch","permutedAfterBatch","getReshapedPermuted","reshapedPermuted","getSliceBeginCoords","sliceBeginCoords","getSliceSize","uncroppedShape","SELU_SCALEALPHA","SELU_SCALE","ERF_P","ERF_A1","ERF_A2","ERF_A3","ERF_A4","ERF_A5","mergeRealAndImagArrays","prepareSplitSize","splitSizes","negIndex","total","segOpComputeOptimalWindowSize","collectGatherOpShapeInfo","outerSize","segment_util","fromUint8ToStringArray","fromStringArrayToUint8","strings","backend_util","assignToTypedArray","complexWithEvenIndex","complexWithOddIndex","computeOutShape$1","exponent","inverse","exponents","getBroadcastDims$1","getComplexWithIndex","splitRealAndImagArrays","kernel_impls","nonMaxSuppressionV3Impl$1","nonMaxSuppressionV4Impl$1","nonMaxSuppressionV5Impl$1","whereImpl$1","tf","BroadcastTo","Dilation2DBackpropFilter","Dilation2DBackpropInput","ENV$3","LogSoftmax","Pool","abs$1","acos$1","acosh$1","addN$1","all$1","any$1","argMax$1","argMin$1","asin$1","asinh$1","atan$1","atan2$1","atanh$1","avgPool$1","batchNorm$1","batchToSpaceND$1","bincount$1","cast$1","ceil$1","clipByValue$1","complex$1","concat$1","conv2d$2","copyRegisteredKernels","registeredBackendName","newBackendName","kernelConfig","cos$1","cosh$1","cumsum$1","denseBincount$1","deprecationWarn","depthToSpace$1","depthwiseConv2d$1","diag$1","disableDeprecationWarnings","elu$1","enableDebugMode","enableProdMode","equal$1","erf$1","exp$1","expandDims$1","expm1$1","fft$1","fill$1","floor$1","floorDiv$1","fused","gather_util","getBackend","$dy","$args","greater$1","greaterEqual$1","ifft$1","imag$1","image$1","isFinite$2","isInf$1","isNaN$2","leakyRelu$1","less$1","lessEqual$1","log$2","log1p$1","logicalAnd$1","logicalNot$1","logicalOr$1","matMul$1","max$1","maxPool$1","maxPool3d$1","maximum$1","min$1","minimum$1","mod$2","multinomial$1","neg$1","nextFrame","notEqual$1","oneHot$1","onesLike$1","pow$1","prelu$1","prod$1","range$1","real$1","reciprocal$1","registerGradient","relu$1","relu6$1","reshape$1","reverse$1","round$1","rsqrt$1","scatter_util","selu$1","sigmoid$1","sign$1","sin$1","sinh$1","slice$1","softmax$1","softplus$1","spaceToBatchND$1","sparseToDense$1","spectral$1","split$1","sqrt$1","square$1","squaredDifference$1","step$1","stridedSlice$1","sub$1","sum$1","tan$1","tanh$1","tile$1","transpose$1","unique$1","unregisterGradient","unregisterKernel","unsortedSegmentSum$1","valueAndGrad","valueAndGrads","version_core","zerosLike$1","contexts","WEBGL_ATTRIBUTES","antialias","premultipliedAlpha","preserveDrawingBuffer","stencil","failIfMajorPerformanceCaveat","getWebGLContext","webGLVersion","newCtx","OffscreenCanvas","createCanvas","addEventListener","ev","preventDefault","getWebGLRenderingContext","gl","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","PackingScheme","TextureUsage","PhysicalTextureType","getUnpackedMatrixTextureShapeWidthHeight","rows","columns","getDenseTexShape","getPackedMatrixTextureShapeWidthHeight","getTextureConfig","textureHalfFloatExtension","glany","internalFormatFloat","internalFormatHalfFloat","internalFormatPackedHalfFloat","internalFormatPackedFloat","textureFormatFloat","downloadTextureFormat","downloadUnpackNumChannels","defaultNumChannels","textureTypeHalfFloat","textureTypeFloat","R32F","R16F","RGBA16F","RGBA32F","RED","HALF_FLOAT","FLOAT","RGBA","HALF_FLOAT_OES","callAndCheck","func","returnValue","getError","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","getWebGLErrorMessage","checkWebGLError","canBeRepresented","getExtensionOrThrow","extensionName","throwIfNull","getExtension","createFragmentShader","fragmentShaderSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","lineNumberRegexResult","lineNumberRegex","exec","lineNumber","shaderLines","linesWithLineNumbers","line","maxLineLength","beforeErrorLines","errorLine","afterErrorLines","logShaderSourceAndInfoLog","getShaderInfoLog","validateProgram","program","getProgramParameter","VALIDATE_STATUS","getProgramInfoLog","bindVertexBufferToProgramAttribute","attribute","arrayEntriesPerItem","itemStrideInBytes","itemOffsetInBytes","getAttribLocation","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","bindTextureUnit","texture","textureUnit","maxTextureUnit","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glTextureUnit","TEXTURE0","validateTextureUnit","activeTexture","bindTexture","TEXTURE_2D","bindColorTextureToFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","unbindColorTextureFromFramebuffer","validateFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","getFramebufferErrorMessage","returnTOrNull","failureMessage","tOrNull","getBatchDim","dimsToSkip","getRowsCols","getShapeAs3D","shapeAs3D","isEven","isReshapeFree","shape1","shape2","shape1Cols","shape2Cols","MAX_TEXTURE_SIZE","MAX_TEXTURES_IN_SHADER","hasExtension","isWebGLVersionEnabled","isDownloadFloatTextureEnabled","createFloatTextureAndBindToFramebuffer","COLOR_BUFFER_HALF_FLOAT","texConfig","createTexture","texImage2D","frameBuffer","createFramebuffer","isFrameBufferComplete","deleteTexture","deleteFramebuffer","createHalfFloatTextureAndBindToFramebuffer","assertNotComplex","getGlslDifferences","version","varyingVs","varyingFs","texture2D","defineOutput","defineSpecialNaN","defineSpecialInf","defineRound","getLogicalCoordinatesFromFlatIndex","coords","getFlatIndexFrom3D","getParameter","getWebGLMaxTextureSize","MAX_TEXTURE_IMAGE_UNITS","getMaxTexturesInShader","queryTimerVersion","getWebGLDisjointQueryTimerVersion","isCapableOfRenderingToFloatTexture","isWebGLFenceEnabled","fenceSync","threshold","ENCODE_FLOAT_SNIPPET","DecodeMatrixProgram","packedInputs","packedOutput","outPackingScheme","DENSE","texShape","glsl","userCode","shader_util","DecodeMatrixPackedProgram","EncodeFloatProgram","outTexUsage","DOWNLOAD","EncodeFloatPackedProgram","EncodeMatrixProgram","inputIsUnsignedByte","EncodeMatrixPackedProgram","mainLoop","col","createVertexShader","vertexShaderSource","vertexShader","VERTEX_SHADER","webgl_util","createVertexBuffer","createBuffer","bufferData","STATIC_DRAW","createIndexBuffer","ELEMENT_ARRAY_BUFFER","createAndConfigureTexture","internalFormat","textureFormat","textureType","maxTextureSize","tex2d","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","getInternalFormatForFloat32MatrixTexture","textureConfig","getInternalFormatForFloat16MatrixTexture","getInternalFormatForUnsignedBytesMatrixTexture","getInternalFormatForPackedMatrixTexture","getInternalFormatForFloat16PackedMatrixTexture","downloadPackedMatrixFromBuffer","cols","physicalRows","physicalCols","gl2","downloadTarget","tex_util","PIXEL_PACK_BUFFER","getBufferSubData","GPGPUContext","outputTexture","disposed","vertexAttrsAreBound","itemsToPoll","glVersion","setWebGLContext","COLOR_BUFFER_FLOAT","TEXTURE_FLOAT","TEXTURE_HALF_FLOAT","textureFloatExtension","colorBufferFloatExtension","colorBufferHalfFloatExtension","vertexBuffer","gpgpu_util","indexBuffer","debug","finish","deleteBuffer","createFloat32MatrixTexture","createFloat16MatrixTexture","createUnsignedBytesMatrixTexture","UNSIGNED_BYTE","uploadPixelDataToTexture","uploadDenseMatrixToTexture","dataForUpload","texelDataType","createFloat16PackedMatrixTexture","createPackedMatrixTexture","deleteMatrixTexture","downloadByteEncodedFloatMatrixFromOutputTexture","downloadMatrixDriver","readPixels","downloadFloat32MatrixFromBuffer","createBufferFromTexture","bindTextureToFrameBuffer","bufferSizeBytes","bytesPerFloat","STREAM_READ","unbindTextureToFrameBuffer","createAndWaitForFence","fenceContext","createFence","pollFence","isFencePassed","sync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","beginQuery","endQuery","isQueryAvailable","downloadMatrixFromPackedTexture","packedRGBA","createProgram","attachShader","linkProgram","LINK_STATUS","setProgram","deleteProgram","useProgram","getUniformLocation","uniformName","shouldThrow","getAttributeLocation","getUniformLocationNoThrow","setInputMatrixTexture","inputMatrixTexture","uniformLocation","throwIfNoProgram","uniformSamplerLocation","uniform1i","setOutputMatrixTexture","outputMatrixTexture","setOutputMatrixTextureDriver","setOutputPackedMatrixTexture","outputPackedMatrixTexture","setOutputMatrixWriteRegion","startRow","startColumn","setOutputMatrixWriteRegionDriver","setOutputPackedMatrixWriteRegion","debugValidate","executeProgram","drawElements","TRIANGLES","UNSIGNED_SHORT","blockUntilAllProgramsCompleted","getQueryTimerExtension","disjointQueryTimerExtension","getQueryTimerExtensionWebGL2","getQueryTimerExtensionWebGL1","ext","createQuery","TIME_ELAPSED_EXT","createQueryEXT","beginQueryEXT","endQueryEXT","waitForQueryAndGetTime","getQueryTime","getQueryParameter","QUERY_RESULT","getQueryObjectEXT","QUERY_RESULT_EXT","available","QUERY_RESULT_AVAILABLE","disjoint","GPU_DISJOINT_EXT","QUERY_RESULT_AVAILABLE_EXT","addItemToPoll","pollItems","linearSearchLastTrue","isDoneFn","resolveFn","downloadAndDecode","outputMatrixTextureMaybePacked","viewport","scissor","makeShader","inputsInfo","usesPackedTextures","prefixSnippets","shapeInfo","logicalShape","isUniform","inputPrefixSnippet","inputSamplingSnippet","inInfo","outShapeInfo","getPackedSamplerFromInInfo","getSamplerFromInInfo","inputInfo","texName","texFuncSnippet","charAt","toUpperCase","funcName","outRank","broadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","unpackedCoordsSnippet","isInputScalar","outSize","isOutputScalar","getPackedSamplerAtOutputCoords","outTexShape","inTexShape","getSamplerAtOutputCoords","getInputSamplingSnippet","floatTextureSampleSnippet","getFloatTextureSampleSnippet","outputSamplingSnippet","floatTextureSetOutputSnippet","shaderPrefix","SHADER_PREFIX","SAMPLE_1D_SNIPPET","SAMPLE_2D_SNIPPET","SAMPLE_3D_SNIPPET","getShaderPrefix","isPacked","getOutputScalarCoords","packedTexShape","getOutputPacked1DCoords","texelsInLogicalRow","getOutputPacked2DCoords","texelsInBatch","getOutputPacked3DCoords","texelsInBatchN","batches","getOutputPackedNDCoords","getPackedOutputSamplingSnippet","getFloatTextureSetRGBASnippet","getOutput1DCoords","getOutput2DCoords","coordsFromIndexSnippet","getOutput3DCoords","getOutput4DCoords","getOutput5DCoords","getOutput6DCoords","getOutputSamplingSnippet","getFloatTextureSetRSnippet","SHADER_PACKED_PREFIX","texNumR","texNumC","tNumR","tNumC","getFlatOffsetUniformName","getSamplerScalar","getUniformSampler","getSampler1D","squeezedShape","squeezeInputInfo","getSqueezedParams","getSampler2D","stride0","stride1","getSampler3D","stride2","getSampler4D","stride3","getSampler5D","stride4","getSampler6D","getPackedSamplerScalar","getPackedSampler1D","valuesPerRow","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","newInputInfo","validateBinaryAndProgram","shapeInfos","texShapeA","texShapeB","texData","createSimpleBinaryKernelImpl","bShape","aVals","bVals","resultRank","resultStrides","aRank","bRank","aStrides","bStrides","aBroadcastDims","bBroadcastDims","aLoc","aIndex","bLoc","bIndex","addImpl","createSimpleUnaryImpl","ceilImpl","xi","expImpl","expm1Impl","floorImpl","greaterImpl","lessImpl","logImpl","maximumImpl","aValue","bValue","minimumImpl","multiplyImpl","notEqualImpl","rsqrtImpl","squaredDifferenceImpl","subImpl","shared","bincountImpl","weightsVals","weightsDtype","weightsShape","weightsSize","outVals","bincountReduceImpl","xBuf","weightsBuf","outBuf","concatImpl","simplyConcat","colOffset","decodedData","tIdx","resIdx","gatherV2Impl","indicesBuf","flattenOutputShape","originalLoc","batchIdx","indicesIdx","indicesIndex","originalIndex","linSpaceImpl","maxImpl","reduceSize","negImpl","xDtype","minusOne","prodImpl","reductionAxes","reduceShape","outDtype","rangeImpl","simpleAbsImpl","resultValues","sliceImpl","isContinous","xStrides","inBuf","outLoc","inLoc","idx","stridedSliceImpl","newLoc","tileImpl","topKImpl","allTopKVals","allTopKIndices","outOffset","topKVals","topKIndices","transposeImpl","xSize","uniqueImpl","$axis","uniqueElements","inputBuffer","uniqueIndices","is1DTensor","axisValues","uniqueIndex","outputTmpShape","outputBuffer","uniqueElementIndex","outputValues","addImplCPU","bincountImplCPU","bincountReduceImplCPU","ceilImplCPU","concatImplCPU","expImplCPU","expm1ImplCPU","floorImplCPU","gatherV2ImplCPU","greaterImplCPU","lessImplCPU","linSpaceImplCPU","logImplCPU","maxImplCPU","maximumImplCPU","minimumImplCPU","multiplyImplCPU","negImplCPU","prodImplCPU","rangeImplCPU","rsqrtImplCPU","simpleAbsImplCPU","sliceImplCPU","stridedSliceImplCPU","subImplCPU","tileImplCPU","topKImplCPU","transposeImplCPU","uniqueImplCPU","getVecChannels","getChannels","PackProgram","channels","outOfBoundsCondition","cond","getOutOfBoundsCondition","setup","innerDims","getSetup","sourceCoords","coord","getSourceCoordsArr","getOutput","ReshapePackedProgram","thisRC","TextureManager","gpgpu","numUsedTextures","numFreeTextures","_numBytesAllocated","_numBytesFree","freeTextures","logEnabled","usedTextures","acquireTexture","shapeRC","usage","physicalTexType","getPhysicalFromLogicalTextureType","shapeKey","getKeyFromTextureShape","texBytes","computeBytes","newTexture","shift","PACKED_2X2_FLOAT32","PACKED_2X2_FLOAT16","UNPACKED_FLOAT32","UNPACKED_FLOAT16","PACKED_4X1_UNSIGNED_BYTE","releaseTexture","logicalTexType","deleteTexThreshold","texList","texIndex","freeRatio","numBytesAllocated","numBytesFree","getNumUsedTextures","getNumFreeTextures","tex","internalFormatForPhysicalTexType","numElements","packedWidth","packedHeight","numBytesForInternalFormat","UPLOAD","RENDER","getPhysicalTextureForRendering","PIXELS","shapeRowsCol","UnaryOpProgram","opSnippet","CHECK_NAN_SNIPPET","LINEAR","ABS","ELU","RELU","RELU6","CLONE","UnaryOpPackedProgram","UnpackProgram","getSourceCoords","binaryCaches","MathBackendWebGL","pendingRead","pendingDisposal","WeakSet","dataRefCount","numBytesInGPU","uploadWaitMs","downloadWaitMs","warnedAboutMemory","warnedAboutCPUBackend","pendingDeletes","binaryCache","gpgpuCreatedLocally","textureManager","numMBBeforeWarning","devicePixelRatio","cpuBackend","checkNumericalProblems","complexParentRefCount","decRef","disposeIntermediateTensorInfo","textureData","complexTensorInfos","unary_op","runWebGLProgram","convertAndCacheOnCPU","shouldTimeProgram","activeTimers","getValuesFromTexture","subscribers","tmpDownloadTarget","tmpData","ps","dTypeVals","tmpTarget","shouldUsePackedProgram","oldActiveTimers","newActiveTimers","outerMostTime","programTimersStack","flattenedActiveTimerQueries","flattenedActiveTimerNames","ms","numBytesInGPUAllocated","numBytesInGPUFree","startTimer","startMs","endMs","endTimer","timerQuery","releaseGPUData","origDataId","getTexture","uploadToGPU","getDataInfo","getCPUBackend","shouldExecuteOnCPU","sizeThreshold","getGPGPUContext","packedUnaryOp","compileAndRun","outValues","makeOutput","makeTensorInfo","encodedValues","unpackTensor","packTensor","packedReshape","afterShape","input3DShape","input3D","afterShapeAs3D","outputDtype","customSetup","preventEagerUnpackingOfOutput","outData","texelShape","dataToDispose","inputsData","uniformValues","savedInput","targetShape","outputData","keyInputs","hasOffset","keyUserCode","gpgpu_math","binary","getAndSaveBinary","inputInfos","inShapeInfos","source","shader_compiler","webGLProgram","infLoc","nanLoc","uniformLocations","outTex","uniform1f","varLoc","varOffsetLoc","uniform1fv","unpacked","getBinary","getTextureManager","HTMLCanvasElement","remove","floatPrecisionValue","debugFlag","underflowCheckValue","logShape","maxTexSize","squeezeResult","isByteArray","tempDenseInputHandle","preventEagerUnpacking","encodedOutputTarget","outputTexData","float32Values","float32ToTypedArray","texType","mb","BinaryOpProgram","BinaryOpPackedProgram","checkOutOfBounds","supportsBroadcasting","checkOutOfBoundsString","identity","identityConfig","complexInfo","realTensorInfo","imagTensorInfo","complexConfig","LEAKYRELU","LEAKYRELU_PACKED","leakyReluConfig","$alpha","PRELU","PRELU_PACKED","preluConfig","CHECK_NAN_SNIPPET_UNARY","unaryKernelFunc","packedOpSnippet","cpuKernelImpl","webglBackend","$dtype","xData","binaryKernelFunc","supportsComplex","aData","bData","complexParts","aPart","bPart","aHandle","bHandle","complexOutput","mapActivationToShaderProgram","packed","unary_packed_op","MatMulPackedProgram","addBias","hasPreluActivation","hasLeakyreluActivation","sharedDim","sharedDimensionPacked","aSample","bSample","aSwizzle","bSwizzle","activationSnippet","applyActivationSnippet","addBiasSnippet","batchASnippet","batchBSnippet","COMPLEX_MULTIPLY","REAL","IMAG","BinaryOpComplexProgram","MUL","multiply","realProgram","binaryop_complex_gpu","imagProgram","realPart","imagPart","cpuMultiply","multiplyConfig","$shape","$xSize","xTexData","reshapeConfig","MeanProgram","reduceInfo","divisor","windowSize","windowSizeNearestVec4","windowSizeVec4Remainder","updateSnippet","denominator","toPrecision","ReduceProgram","reduceType","initializationValue","compareOp","vecType","reductionType","reductionStages","stages","getReductionStages","previousResult","TransposeProgram","newDim","switched","originalOrder","switchedCoords","getSwitchedCoords","TransposePackedProgram","outputOrder","switchedOrder","nextColumn","getc","origAxes","permutedAxes","sumInputIsTransposed","sumInput","sumOutShape","reshapedInput","reduced","sumImpl","sumConfig","cpuTranspose","transposeConfig","MATMUL_SHARED_DIM_THRESHOLD","batchMatMulImpl","a3dShape","b3dShape","a3d","b3d","intermediates","hasBias","hasPreluActivationWeights","hasLeakyreluAlpha","fusedActivation","aVec","bVec","shouldReshapeB","aVec3d","bVec3d","$leakyreluAlpha","outReshaped","_fusedMatMulConfig","absConfig","acosConfig","acoshConfig","ADD","addKernelFunc","cpuAdd","addConfig","AddNProgram","snippets","operation","AddNPackedProgram","addNConfig","midIndex","leftSide","rightSide","d1","d2","allConfig","permutedX","a2D","anyConfig","ArgMinMaxProgram","firstPass","compOp","indexSnippet","ArgMinMaxPackedProgram","sourceLocSetup","sourceRank","sourceLocDType","inChannel","intChannels","srcRCoords","srcGCoords","srcBCoords","srcACoords","fetchCandidateIdx","fetchValue","getBestIndicesAChannelSnippet","argReduce","bestIndicesA","argReducePacked","argMinMaxReduce","intermediateTensorInfos","argMaxConfig","argMinConfig","asinConfig","asinhConfig","atanConfig","CHECK_NAN_SNIPPET_BINARY","atan2Config","atanhConfig","Pool2DProgram","poolType","computePositions","flattenPositions","padTop","padLeft","isAvgPool","batchFlattenPositionStr","flattenPositionStr","filterWidthNearestVec4","filterWidthVec4Remainder","Pool3DProgram","padFront","avgPoolConfig","avgPoolProgram","avgPool3DConfig","AvgPool2DBackpropProgram","avgMultiplier","AvgPool3DBackpropProgram","avgPoolGrad3DConfig","avgPoolBackpropProgram","avgPoolGradConfig","batchMatMulConfig","BatchNormProgram","meanShape","varianceShape","offsetShape","scaleShape","offsetSnippet","scaleSnippet","BatchNormPackedProgram","batchNormConfig","finalInputs","SliceProgram","destSize","uniformPart","getCoords","getCustomSetupFunc","startLoc","uniform1iv","SlicePackedProgram","sourceLoc","getChannel","upperRow","lowerRow","$size","newTexData","shallowSlice","sliceConfig","batchToSpaceNDConfig","toDispose","reshapedIntermediate","transposedIntermediate","reshapedIntermediate2","sliced","bincountConfig","notEqualConfig","realConfig","TO_INT","castConfig","zerosTensor","floatX","int","zerosTensorInfo","CEIL","ceilConfig","ClipProgram","minLoc","maxLoc","ClipPackedProgram","clipByValueConfig","ComplexAbsProgram","makeComplexComponentTensorInfo","complexTensor","complexPart","complexAbsConfig","programInputs","ConcatProgram","offsets","lastIndex","lastShift","ConcatPackedProgram","lastChannels","allChannels","getValueSnippet","shiftedChannels","channelIdx","imagConfig","reals","imags","realConcated","imagConcated","tensors2D","computeTensors2D","inputsValShapes","finalOutShape","reshapedResult","$inputs","concatConfig","Conv2DProgram","inputDepthNearestVec4","inputDepthVec4Remainder","isChannelsLast","rowDim","colDim","channelDim","Conv3DProgram","Im2ColPackedProgram","itemsPerBlockRow","unrolled","conv2dByMatMul","sharedMatMulDim","outerShapeX","outerShapeFilter","batchMatMulWillBeUnpacked","reshapeWillBeExpensive","xReshaped","originalXTexDataShape","filterReshaped","pointwiseConv","pointwiseConvTexData","conv2dWithIm2Row","x2ColShape","xSqueezed","w2Row","im2ColProgram","im2Col","im2ColReshaped","matmulProgram","conv2DConfig","Conv2DDerFilterProgram","Conv2DDerInputProgram","Conv3DDerFilterProgram","Conv3DDerInputProgram","conv2DBackpropFilterConfig","conv2DBackpropInputConfig","conv3DConfig","conv3DBackpropFilterV2Config","conv3DBackpropInputConfig","cosConfig","coshConfig","CropAndResizeProgram","imageShape","boxShape","cropHeight","cropWidth","methodId","inputHeightFloat","inputWidthFloat","heightRatio","heightScale","inY","widthRatio","widthScale","inX","cropAndResizeConfig","CumSumProgram","idxString","getFinalCoord","cumsumConfig","permutation","permutedAxis","log2","prevResult","reverseTransposedResult","denseBincountConfig","DepthToSpaceProgram","getHeightCoordString","getWidthCoordString","getDepthCoordString","getOutputDepthSize","getInputSamplingString","depthToSpaceConfig","outputHeight","outputWidth","outputDepth","DepthwiseConv2DProgram","hasLeakyReluAlpha","xNumRows","xNumCols","channelMul","DepthwiseConvPacked2DProgram","texelsAcross","texelC","nextTexelOffset","depthwiseConv2dNativeConfig","$dilations","DepthwiseConv2DDerFilterProgram","DepthwiseConv2DDerInputProgram","depthwiseConv2dNativeBackpropFilterConfig","depthwiseConv2dNativeBackpropInputConfig","DiagProgram","diagConfig","flat","Dilation2DProgram","dilation2DConfig","eluConfig","eluGradConfig","equalConfig","erfConfig","EXP","expConfig","$dim","expandDimsConfig","EXPM1","expm1Config","FFTProgram","component","innerDim","exponentMultiplierSnippet","resultDenominator","opString","fftImpl","inputSize","complexOutputReshaped","fftConfig","FillProgram","valueLoc","fillConfig","FlipLeftRightProgram","flipLeftRightConfig","FLOOR","floorConfig","floorDivConfig","FromPixelsProgram","FromPixelsPackedProgram","fromPixelsConfig","tempPixelHandle","fusedConv2DConfig","fusedDepthwiseConv2DConfig","shouldPackDepthwiseConv","GatherNDProgram","stridesType","strideString","gatherNdConfig","numSlices","flattenIndices","flattenX","GatherProgram","currentCoords","gatherV2Config","indicesSize","flattenIndex","greaterConfig","greaterEqualConfig","ifftConfig","isFiniteConfig","isInfConfig","isNaNConfig","lessConfig","lessEqualConfig","linSpaceConfig","logConfig","log1pConfig","logicalAndConfig","logicalNotConfig","logicalOrConfig","LRNProgram","radius","rad","maxD","powOperator","basis","LRNPackedProgram","LRNConfig","LRNGradProgram","LRNGradConfig","maxInputIsTransposed","maxInput","maxInputValues","maxOutShape","reshapedOutput","maxConfig","CHECK_NAN_SNIPPET_PACKED","maximumConfig","maxPoolConfig","maxPoolProgram","maxPool3DConfig","MaxPool2DBackpropProgram","MaxPool3DBackpropProgram","maxPoolGrad3DConfig","maxPool3dPositionsProgram","maxPool3dPositions","maxPoolBackpropProgram","maxPoolGradConfig","maxPoolPositionsProgram","maxPoolPositions","maxPoolBackPropProgram","maxPoolWithArgmaxConfig","poolOutput","maxPoolWithArgmaxImpl","meanConfig","meanInputIsTransposed","meanInput","meanInputValues","meanOutShape","meanImpl","minConfig","minimumConfig","MirrorPadProgram","unpackedCoords","MirrorPadPackedProgram","cLimit","padSetup","mirrorPadConfig","mirrorPadKernelFunc","modConfig","MultinomialProgram","seedLoc","realDiv","realDivConfig","SUB","cpuSub","subConfig","maxLogit","expandedShape","maxLogitsReshaped","sumExp","sumExpReshaped","softmaxConfig","multinomialConfig","probs","NEG","negConfig","nonMaxSuppressionV3Config","nonMaxSuppressionV4Config","nonMaxSuppressionV5Config","maxOutputSizeVal","iouThresholdVal","scoreThresholdVal","softNmsSigmaVal","OneHotProgram","numIndices","oneHotConfig","zerosLikeConfig","onesLikeConfig","packConfig","expandedT","PadProgram","PadPackedProgram","componentSetup","paddingArea","padV2","padV2Config","powConfig","prodConfig","rangeConfig","reciprocalConfig","reluConfig","relu6Config","ResizeBilinearProgram","newHeight","newWidth","oldHeight","oldWidth","effectiveInSize","effectiveOutSize","sourceFracIndexRC","ResizeBilinearPackedProgram","resizeBilinearConfig","ResizeBilinearBackpropProgram","xHeight","xWidth","yHeight","yWidth","effectiveXSize","effectiveYSize","invHeightScale","invWidthScale","winHeight","winWidth","resizeBilinearGradConfig","ResizeNearestNeighborProgram","roundBase","resizeNearestNeighborConfig","ResizeNearestNeigborBackpropProgram","resizeNearestNeighborGradConfig","ReverseProgram","inCoords","getInCoord","ReversePackedProgram","nextRow","inCoordsArray","channels1","getR","getG","getB","getA","reverseConfig","$dims","RotateProgram","sinFactor","cosFactor","centerX","centerY","centerXString","centerYString","fillSnippet","rotateWithOffsetConfig","roundConfig","rsqrtConfig","ScatterProgram","updateSize","updatesRank","summingDupeIndex","indicesString","indicesSnippet","updatesString","updatesSnippet","scatterNdConfig","flattenShape","SelectProgram","cRank","cCoords","abCoords","cCoordVars","abCoordVars","selectConfig","seluConfig","sigmoidConfig","signConfig","sinConfig","sinhConfig","softplusConfig","spaceToBatchNDConfig","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","reshapedPaddedX","paddedXT","sparseToDenseConfig","splitVConfig","sliceT","sqrtConfig","squareConfig","SQUARED_DIFFERENCE","squaredDifferenceConfig","stepConfig","StridedSliceProgram","inputDtype","newCoords","outputAxis","stridedSliceConfig","resultReshaped","tanConfig","tanhConfig","TileProgram","tileConfig","topKConfig","uniqueConfig","unpackConfig","outIndex","SegmentOpProgram","segOpInfo","segOpType","checkValueOutOfBounds","checkSegmentIdOutOfBounds","unsortedSegmentSumConfig","outputDType","segOpCompute","rangeInfo","tileInfo","kernelConfigs","DataType","SaverDef","CheckpointFormatVersion","CUSTOM_OPS","getRegisteredOp","getParamValue","paramName","tensorMap","context","resourceManager","inputParam","inputParams","inputIndexStart","inputIndexEnd","getTensor","inputNames","attrParam","attrParams","tensorsMap","nodeName","parseNodeName","getHashTableHandleByName","contextId","currentContextIds","find","getNodeNameWithContextId","getNodeNameAndIndex","outputName","currentContextId","parts","getPadding","explicitPadding","cloneTensor","arithmetic","tfOpName","category","tfName","notSupported","basicMath","control","convolution","creation","dynamic","evaluation","graph","hashTable","logical","matrices","normalization","sliceJoin","sparse","string","transformation","tfDeprecatedName","OperationMapper","Instance","_instance","mappersJson","opMappers","mapper","transformGraph","tfNodes","placeholders","initNodes","nodes","mapNode","inputNodeNameToKey","outputNodeNameToKey","mapSignatureEntries","allNodes","inputNode","outputIndex","children","signatureKey","functions","library","function","mapFunction","newNode","rawAttrs","getStringParam","getStringArrayParam","getNumberParam","getNumericArrayParam","getBoolParam","getBoolArrayParam","getTensorShapeParam","getTensorShapeArrayParam","getDtypeParam","getDtypeArrayParam","getFuncParam","functionDef","nodeDef","inputArg","parseDtypeParam","returnNodeMap","outputArg","defaultOutput","mapArgsToSignature","methodName","mapArgToTensorInfo","nameMap","parseStringParam","keepCase","decodeBase64","def","parseInt","tensorflow","DT_FLOAT","DT_HALF","DT_INT32","DT_INT64","DT_INT8","DT_UINT8","DT_BOOL","DT_DOUBLE","DT_STRING","parseTensorShapeParam","unknownRank","NodeValueImpl","getInput","getAttr","tfOps","assertShapesMatchAllowUndefinedSize","dim0","dim1","fullDefinedShape","elementShape","inferElementShape","listElementShape","partialShape","mergeElementShape","notfullDefinedShape","elementShapeA","elementShapeB","TensorArray","maxSize","identicalElementShapes","dynamicSize","clearAfterRead","closed_","idTensor","closed","clearAndClose","keepIds","tensorWithState","cleared","readMany","written","writeMany","scatter","maxIndex","totalLength","cumulativeLengths","elementPerRow","sizes","TensorList","elementDtype","maxNumElements","outputElementShape","reshapedTensors","popBack","pushBack","resize","destTensorList","elementIndex","executeOp","thenFunc","elseFunc","functionMap","executeFunctionAsync","tensorArrayMap","tensorListMap","bodyFunc","condFunc","condResult","argIds","condValue","origResult","resultIds","pred","frameId","enterFrame","exitFrame","nextIteration","tensorArray","addTensorArray","writeTensor","writeTensorArray","getTensorArray","readId","readIndex","gatherId","gatherIndices","gatherDtype","scatterId","scatterIndices","scatterTensor","scatterTensorArray","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","splitTensorArray","sizeId","closeId","closeTensorArray","getTensorList","elementDType","addTensorList","numElementsParam","reserve","fromTensor","TypeError","fusedConvAndDepthWiseParams","extraOp","activationFunc","isBiasAdd","noBiasAdd","isPrelu","isBatchNorm","numArgs","biasArg","preluArg","nmsParams","HashTable","keyDType","valueDType","handle","clear","tensorSize","import","checkKeyAndValueTensor","$keys","$values","keysLength","valuesLength","findWithDefault","tfc","ops","kernelSize","randomStandardNormal","sortedSequence","lowerBound","upperBound","transforms","interpolation","fillMode","transform","summarize","prototype","einsum","euclideanNorm","cumprod","mapped","sameShape","outputIndices","emptyRowIndicator","reverseIndexMap","sparseFillEmptyRows","sparseReshape","sparseSegmentMean","sparseSegmentSum","nGrams","nGramsSplits","stringNGrams","stringSplit","stringToHashBucketFast","broadcastArgs","addHashTable","getHashTableById","opMapper","customExecutor","ExecutionContext","weightMap","rootContext","frameName","iterationId","lastId","generateCurrentContextIds","newFrame","currentContext","_currentContextIds","contextIdforContexts","getWeight","getExecutionSubgraph","usedNodes","missingInputs","dynamicNode","syncInputs","inputNodeNames","initNodeNames","frontier","isControlFlow","isDynamicShape","isHashTable","child","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","HASH_TABLE_OPS","GraphExecutor","parent","compiledMap","_weightMap","SEPERATOR","_functions","_functionExecutorMap","intermediateTensors","keepTensorForDebug","_outputs","_inputs","_initNodes","_signature","weightIds","_weightIds","functionExecutorMap","_resourceManager","inputNodes","outputNodes","getCompilationKey","sortedInputs","sortedOutputs","compile","executionInfo","outNames","inNames","orderedNodes","getNodesInTopologicalOrder","execute","mapInputs","checkInputs","checkInputShapeAndType","mapOutputs","checkOutputs","outputNodeNames","resetIntermediateTensors","compilationKey","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","checkTensorForDisposal","ids","outputNames","getTensorsForCurrentContenxt","executeAsync","_executeAsync","disposeIntermediateTensors","disposeTensorsMap","getIntermediateTensors","isFunctionExecution","executeWithControlFlow","outputIds","inputIds","mappedInputs","added","processStack","missingOutputs","alternativeMsg","processChildNodes","childNode","notInGraph","normalizedName","ResourceManager","hashTableNameToHandle","hashTableMap","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","GraphModel","modelUrl","tfio","modelVersion","executor","modelSignature","modelStructuredOutputKeys","structuredOutputKeys","findIOHandler","handlers","loadResult","loadSync","producer","minConsumer","convertTensorMapToTensorsMap","handlerOrURL","predict","outputTensors","outputTensorMap","outputTensor","normalizeInputs","normalizeOutputs","newMap","loadGraphModel","fromTFHub","getTFHubUrl","model","BaseModel","outputStride","preprocessInput","nameOutputResults","heatmapScores","heatmap","displacementFwd","displacementBwd","MobileNet","showStatusButton","blocks","opcode","blockType","isTerminal","PART","menu","VIDEO_STATE","TRANSPARENCY","menus","acceptReporters","ATTRIBUTE","SUBJECT","legacyFullSupport","legacy","incrementalDevelopment","legacyExtension","legacyDefinition","for","VideoState","_classDecorators","Extension","_classThis","_classSuper","DIMENSIONS","bodyOptions","runtime","ioDevices","_loop","tfCoordsToScratch","projectStarted","setTransparency","globalVideoTransparency","toggleVideo","globalVideoState","hasPose","poseState","keypoints","video","getFrame","dimensions","estimatePoseOnImage","estimateThrottleTimeout","imageElement","bodyModel","ensureBodyModelLoaded","estimateSinglePose","flipHorizontal","posenet.load","disableVideo","enableVideo","mirror","transparency","trans","setPreviewGhost","defineBlocks","handlerOptions","part","goToPart","bodyPart","point","position","setXY","argumentMethods","includes","videoToggle","video_state","setVideoTransparency","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","kind","descriptor","getOwnPropertyDescriptor","access","addInitializer","__esDecorate","_classDescriptor","_metadata","_classExtraInitializers","useValue","__runInitializers"],"mappings":"AAAA,IAAAA,SAAA,SAAAC,EAAAC,GAAA,aAkHO,SAASC,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAU,CAAC,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAU,CAAC,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,CAiMkD,mBAApBO,iBAAiCA,gBChRzD,MAAOC,EAIXC,WAAAA,CAAoBC,EAAgCC,GAAhCC,KAAAF,QAAAA,EAAgCE,KAAAD,UAAAA,EAH5CC,KAAAC,KAAO,IAAIC,QACXF,KAAAG,aAAe,CAEoD,CAE3EC,GAAAA,CAAIC,GAIF,OAHKL,KAAKC,KAAKK,IAAID,IACjBL,KAAKD,UAAUQ,SAASP,KAAKF,QAASO,GAEjCL,KAAKC,KAAKG,IAAIC,EACvB,CAEAG,GAAAA,CAAIH,EAAgBnB,GAClBc,KAAKG,eACLH,KAAKC,KAAKO,IAAIH,EAAQnB,EACxB,CAEAoB,GAAAA,CAAID,GACF,OAAOL,KAAKC,KAAKK,IAAID,EACvB,CAEAI,OAAOJ,GAEL,OADAL,KAAKG,eACEH,KAAKC,KAAKQ,OAAOJ,EAC1B,CAEAK,UAAAA,GACE,OAAOV,KAAKG,YACd,EAsBI,MAAOQ,EACXC,IAAAA,CAAKC,GACH,OAAOC,EAAkB,OAC3B,CACAC,IAAAA,CAAKV,GACH,OAAOS,EAAkB,OAC3B,CACAE,QAAAA,CAASX,GACP,OAAOS,EAAkB,WAC3B,CACAJ,UAAAA,GACE,OAAOI,EAAkB,aAC3B,CACAG,WAAAA,CAAYZ,GACV,OAAOS,EAAkB,cAC3B,CACAI,KAAAA,CAAMC,EAAuBC,EAAiBC,GAC5C,OAAOP,EAAkB,QAC3B,CACAQ,IAAAA,CAAKjB,EAAgBc,EAAuBC,EAAiBC,GAE3D,OAAOP,EAAkB,OAC3B,CACAS,MAAAA,GACE,OAAOT,EAAkB,SAC3B,CAEAU,cAAAA,GACE,OAAOV,EAAkB,iBAC3B,CAEAW,OAAAA,GACE,OAAiC,KAA1BzB,KAAKwB,iBA1Ge,KACA,IA0G7B,CACAE,OAAAA,GACE,OAAOZ,EAAkB,UAC3B,EAGF,SAASA,EAAkBa,GACzB,MAAM,IAAIC,MACN,IAAID,4HAEV;;;;;;;;;;;;;;;;GCxGM,SAAUE,EAAQC,GAEtB,IAAIC,EAAUD,EAAME,OAChBC,EAAO,EACPC,EAAQ,EAEZ,KAAOH,EAAU,GAEfG,EAASC,KAAKC,SAAWL,EAAW,EAEpCA,IAEAE,EAAOH,EAAMC,GACbD,EAAMC,GAAWD,EAAMI,GACvBJ,EAAMI,GAASD,CAEnB,CAGM,SAAUI,EAAMC,EAAaC,EAAWC,GAC5C,OAAOL,KAAKK,IAAIF,EAAKH,KAAKG,IAAIC,EAAGC,GACnC,CAEM,SAAUC,EAAkBC,GAChC,OAAOA,EAAM,GAAM,EAAIA,EAAMA,EAAM,CACrC,CAEM,SAAUC,EAAIC,GAClB,IAAID,EAAM,EACV,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAIZ,OAAQa,IAC9BF,GAAOC,EAAIC,GAEb,OAAOF,CACT,CAuCM,SAAUG,EAAOC,EAAeC,GACpC,IAAKD,EACH,MAAM,IAAInB,MAAqB,iBAARoB,EAAmBA,EAAMA,IAEpD,CAEM,SAAUC,EACZC,EAAkBC,EAAkBC,EAAqB,IAC3DN,EACIO,EAAYH,EAAQC,IACpB,IAAMC,EAAqB,WAAWF,SAAcC,gBAC1D,CAEM,SAAUG,EAAcC,GAC5BT,EACS,MAALS,GACA,IAAM,iEACZ,CAqBM,SACNC,EACIZ,EAA0BrD,EAAc,GAAIkE,GAAiB,GAI/D,GAHc,MAAVlE,IACFA,EAAS,IAEPmE,MAAMC,QAAQf,IAAQgB,EAAahB,KAASa,EAC9C,IAAK,IAAIZ,EAAI,EAAGA,EAAID,EAAIZ,SAAUa,EAChCW,EAAQZ,EAAIC,GAAItD,EAAQkE,QAG1BlE,EAAOsE,KAAKjB,GAEd,OAAOrD,CACT,CAaM,SAAUuE,EAAc1C,GAC5B,GAAqB,IAAjBA,EAAMY,OAER,OAAO,EAET,IAAI+B,EAAO3C,EAAM,GACjB,IAAK,IAAIyB,EAAI,EAAGA,EAAIzB,EAAMY,OAAQa,IAChCkB,GAAQ3C,EAAMyB,GAEhB,OAAOkB,CACT,CAMM,SAAUV,EAAYW,EAAgBC,GAC1C,GAAID,IAAOC,EACT,OAAO,EAET,GAAU,MAAND,GAAoB,MAANC,EAChB,OAAO,EAGT,GAAID,EAAGhC,SAAWiC,EAAGjC,OACnB,OAAO,EAET,IAAK,IAAIa,EAAI,EAAGA,EAAImB,EAAGhC,OAAQa,IAC7B,GAAImB,EAAGnB,KAAOoB,EAAGpB,GACf,OAAO,EAGX,OAAO,CACT,CAEM,SAAUqB,EAAMX,GACpB,OAAOA,EAAI,GAAM,CACnB,CAkBM,SAAUY,EAAoBJ,GAClC,MAAMK,EAAQjC,KAAKkC,KAAKlC,KAAKmC,KAAKP,IAClC,MAAO,CAACK,EAAOjC,KAAKkC,KAAKN,EAAOK,GAClC,CAuBM,SAAUG,EAAShB,EAAWQ,GAClC,OAAIA,GAAQR,EAAEvB,OACLuB,EAEFA,EAAI,IAAIiB,OAAOT,EAAOR,EAAEvB,OACjC,CAEM,SAAUyC,EACZC,EAAwBC,EAAW5C,IAAoB,GACvD6C,GACF,OAAO,IAAI9F,SAAc,CAACC,EAASC,KACjC,IAAI6F,EAAW,EAEf,MAAMC,EAAQA,KACZ,GAAIJ,IAEF,YADA3F,IAIF8F,IAEA,MAAME,EAAcJ,EAAQE,GAEV,MAAdD,GAAsBC,GAAYD,EACpC5F,IAGFgG,WAAWF,EAAOC,EAAY,EAGhCD,GAAO,GAEX,CAWM,SAAUG,EACZ7D,EAAiB2C,GACnB,IAAImB,EAAY,EACZC,GAAe,EAEnB,IAAK,IAAItC,EAAI,EAAGA,EAAIzB,EAAMY,SAAUa,EAClC,GAAIzB,EAAMyB,IAAM,EACdqC,GAAa9D,EAAMyB,QACd,IAAkB,IAAdzB,EAAMyB,GAAW,CAC1B,IAAqB,IAAjBsC,EACF,MAAMvD,MAEF,yDAAmBuD,aAAuBtC,KAEhDsC,EAActC,CACf,MAAM,GAAIzB,EAAMyB,GAAK,EACpB,MAAMjB,MAAM,gCAAgCR,EAAMyB,aAAaA,KAInE,IAAqB,IAAjBsC,EAAoB,CACtB,GAAIpB,EAAO,GAAKA,IAASmB,EACvB,MAAMtD,MAAM,QAAQmC,sCAAyC3C,KAE/D,OAAOA,EAGT,GAAkB,IAAd8D,EACF,MAAMtD,MACF,qCAAqCR,gCAG3C,GAAI2C,EAAOmB,GAAc,EACvB,MAAMtD,MAEF,wDAAOmC,OAAUmB,KAGvB,MAAME,EAAWhE,EAAMiE,QAEvB,OADAD,EAASD,GAAepB,EAAOmB,EACxBE,CACT,CAEM,SAAUE,EACZC,EAAuBnE,GACzB,MAAMoE,EAAOpE,EAAMY,OAmBnB,OAbAc,GAHAyC,EAAe,MAARA,EAAenE,EAAMqE,KAAI,CAACC,EAAG7C,IAAMA,IAAK,GAAG8C,OAAOJ,IAIhDK,OAAMC,GAAMA,IAAOL,GAAQK,EAAKL,KACrC,IACI,+CAA+CA,MAASA,mBAC5CD,MAGpBzC,EACIyC,EAAKK,OAAMC,GAAM3B,EAAM2B,MACvB,IACI,0DAAYN,MAGbA,EAAKE,KAAIlC,GAAKA,EAAI,EAAIiC,EAAOjC,EAAIA,GAC1C,CAGM,SAAUuC,EAAa1E,EAAiBmE,GAE5C,MAAMH,EAAqB,GACrBW,EAAqB,GACrBC,EAAuB,MAART,GAAgB7B,MAAMC,QAAQ4B,IAAyB,IAAhBA,EAAKvD,OAC3DiE,EAAgB,MAARV,GAAgBS,EAC1B,KACAV,EAAeC,EAAMnE,GAAO8E,OAChC,IAAIC,EAAI,EACR,IAAK,IAAItD,EAAI,EAAGA,EAAIzB,EAAMY,SAAUa,EAAG,CACrC,GAAY,MAARoD,EAAc,CAChB,GAAIA,EAAKE,KAAOtD,GAAkB,IAAbzB,EAAMyB,GACzB,MAAM,IAAIjB,MACN,sBAAsBiB,oBAAoBzB,EAAMyB,iBAEtC,MAAXoD,EAAKE,IAAcF,EAAKE,GAAKtD,IAAmB,IAAbzB,EAAMyB,KAC5CuC,EAASvB,KAAKzC,EAAMyB,IACpBkD,EAASlC,KAAKhB,IAEZoD,EAAKE,IAAMtD,GACbsD,IAGa,IAAb/E,EAAMyB,KACRuC,EAASvB,KAAKzC,EAAMyB,IACpBkD,EAASlC,KAAKhB,IAGlB,MAAO,CAACuC,WAAUW,WACpB,CAEM,SAAUK,EACZ/E,EAAU0C,GACZ,IAAI5C,EAAS,KACb,GAAa,MAATE,GAA2B,YAAVA,EACnBF,EAAS,IAAIkF,aAAatC,QACrB,GAAc,UAAV1C,EACTF,EAAS,IAAImF,WAAWvC,OACnB,IAAc,SAAV1C,EAGT,MAAM,IAAIO,MAAM,qBAAqBP,KAFrCF,EAAS,IAAIoF,WAAWxC,GAI1B,OAAO5C,CACT,CAEM,SAAUqF,EACZnF,EAAU0C,GACZ,IAAI5C,EAAS,KACb,GAAa,MAATE,GAA2B,YAAVA,EACnBF,EAAS,IAAIkF,aAAatC,QACrB,GAAc,UAAV1C,EACTF,EAAS,IAAImF,WAAWvC,QACnB,GAAc,SAAV1C,EACTF,EAAS,IAAIoF,WAAWxC,OACnB,IAAc,WAAV1C,EAGT,MAAM,IAAIO,MAAM,qBAAqBP,KAFrCF,EAAS,IAAIuC,MAAgBK,GAI/B,OAAO5C,CACT,CAEM,SAAUsF,EACZC,EAA+BrF,GACjC,IAAK,IAAIwB,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,IAAK,CACpC,MAAM8D,EAAMD,EAAK7D,GACjB,GAAI+D,MAAMD,KAASE,SAASF,GAC1B,MAAM/E,MAAM,oBAAoBP,6BAAiCsF,MAGvE,CAGM,SAAUG,EAAazF,GAC3B,MAAiB,SAAVA,GAA8B,cAAVA,GAAmC,YAAVA,GACtC,UAAVA,GAA+B,WAAVA,CAC3B,CAMM,SAAU0F,EAAgBC,EAAmBC,GACjD,MAAgB,cAAZA,KAGY,YAAZA,GAAqC,cAAZD,MAGb,UAAZC,GAAmC,YAAZD,GAAqC,cAAZA,KAGpC,SAAZC,GAAkC,SAAZD,IAI5B,CAEM,SAAUpD,EAAaL,GAC3B,OAAOA,aAAa8C,cAAgB9C,aAAa+C,YAC7C/C,aAAagD,UACnB,CAEM,SAAUW,EAAgB7F,GAC9B,GAAc,YAAVA,GAAiC,UAAVA,EACzB,OAAO,EACF,GAAc,cAAVA,EACT,OAAO,EACF,GAAc,SAAVA,EACT,OAAO,EAEP,MAAM,IAAIO,MAAM,iBAAiBP,IAErC,CAQM,SAAU8F,EAAqBvE,GACnC,GAAW,MAAPA,EACF,OAAO,EAET,IAAIwE,EAAQ,EAEZ,OADAxE,EAAIyE,SAAQ9E,GAAK6E,GAAS7E,EAAEP,SACrBoF,CACT,CAGM,SAAUE,EAASpI,GACvB,MAAwB,iBAAVA,GAAsBA,aAAiBqI,MACvD,CAEM,SAAUC,EAAUtI,GACxB,MAAwB,kBAAVA,CAChB,CAEM,SAAUuI,EAASvI,GACvB,MAAwB,iBAAVA,CAChB,CAEM,SAAUwI,EAAWvG,GACzB,OAAIuC,MAAMC,QAAQxC,GACTuG,EAAWvG,EAAO,IAEvBA,aAAkBkF,aACb,UACElF,aAAkBmF,YAAcnF,aAAkBoF,WACpD,QACEkB,EAAStG,GACX,UACEmG,EAASnG,GACX,SACEqG,EAAUrG,GACZ,OAEF,SACT,CAEM,SAAUwG,EAAW9G,GACzB,SAAUA,GAAKA,EAAEhB,aAAegB,EAAE+G,MAAQ/G,EAAEnB,MAC9C,CAEM,SAAUmI,EAAe9D,EAAc+D,GAC3C,IAAK,IAAIjF,EAAIiF,EAAOjF,EAAIkB,IAAQlB,EAC9B,GAAIkB,EAAOlB,GAAM,EACf,OAAOA,EAGX,OAAOkB,CACT,CAEM,SAAUgE,EAAe3G,GAC7B,MAAMoE,EAAOpE,EAAMY,OACnB,GAAIwD,EAAO,EACT,MAAO,GAKT,MAAMwC,EAAU,IAAItE,MAAM8B,EAAO,GACjCwC,EAAQxC,EAAO,GAAKpE,EAAMoE,EAAO,GACjC,IAAK,IAAI3C,EAAI2C,EAAO,EAAG3C,GAAK,IAAKA,EAC/BmF,EAAQnF,GAAKmF,EAAQnF,EAAI,GAAKzB,EAAMyB,EAAI,GAE1C,OAAOmF,CACT,CAEA,SAASC,EAAkBC,EAAgB9G,EAAiBmC,GAC1D,MAAM4E,EAAM,IAAIzE,MAChB,GAAqB,IAAjBtC,EAAMY,OAAc,CACtB,MAAMoG,EAAIhH,EAAM,GAChB,IAAK,IAAIyB,EAAI,EAAGA,EAAIuF,EAAGvF,IACrBsF,EAAItF,GAAKU,EAAE2E,EAASrF,OAEjB,CACL,MAAMuF,EAAIhH,EAAM,GACViH,EAAOjH,EAAMiE,MAAM,GACnBiD,EAAMD,EAAKE,QAAO,CAACC,EAAKC,IAAMD,EAAMC,IAC1C,IAAK,IAAI5F,EAAI,EAAGA,EAAIuF,EAAGvF,IACrBsF,EAAItF,GAAKoF,EAAkBC,EAASrF,EAAIyF,EAAKD,EAAM9E,GAGvD,OAAO4E,CACT,CAGM,SAAUO,EAActH,EAAiBmC,GAC7C,GAAqB,IAAjBnC,EAAMY,OAER,OAAOuB,EAAE,GAEX,MAAMQ,EAAO3C,EAAMmH,QAAO,CAACC,EAAKC,IAAMD,EAAMC,IAC5C,GAAa,IAAT1E,EAEF,MAAO,GAET,GAAIA,IAASR,EAAEvB,OACb,MAAM,IAAIJ,MAAM,IAAIR,oCAAwCmC,EAAEvB,WAGhE,OAAOiG,EAAkB,EAAG7G,EAAOmC,EACrC,CAEM,SAAUoF,EACZ5E,EAAc1C,GAChB,MAAMS,EAAQ8G,EAAoB7E,EAAM1C,GACxC,IAAK,IAAIwB,EAAI,EAAGA,EAAIf,EAAME,OAAQa,IAChCf,EAAMe,GAAK,EAEb,OAAOf,CACT,CAEM,SAAU8G,EACZ7E,EAAc1C,GAChB,GAAa,MAATA,GAA2B,YAAVA,GAAiC,cAAVA,EAC1C,OAAO,IAAIgF,aAAatC,GACnB,GAAc,UAAV1C,EACT,OAAO,IAAIiF,WAAWvC,GACjB,GAAc,SAAV1C,EACT,OAAO,IAAIkF,WAAWxC,GAEtB,MAAM,IAAInC,MAAM,qBAAqBP,IAEzC,CAqBM,SAAUwH,EAAmCzH,GACjDA,EAAMiG,SAAQyB,IACZhG,EACIiG,OAAOC,UAAUF,IAAYA,GAAW,GACxC,IAEI,0EAAU1H,OAAU,GAEhC,CAUM,SAAU6H,EACZC,EAAgB1D,EAAcwC,GAChC,GAAa,IAATxC,EACF,OAAO,EACF,GAAa,IAATA,EACT,OAAO0D,EAAK,GAEd,IAAIhH,EAAQgH,EAAKA,EAAKlH,OAAS,GAC/B,IAAK,IAAIa,EAAI,EAAGA,EAAIqG,EAAKlH,OAAS,IAAKa,EACrCX,GAAS8F,EAAQnF,GAAKqG,EAAKrG,GAE7B,OAAOX,CACT,CAUM,SAAUiH,EACZjH,EAAesD,EAAcwC,GAC/B,GAAa,IAATxC,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAACtD,GAEV,MAAMgH,EAAiB,IAAIxF,MAAM8B,GACjC,IAAK,IAAI3C,EAAI,EAAGA,EAAIqG,EAAKlH,OAAS,IAAKa,EACrCqG,EAAKrG,GAAKV,KAAKiH,MAAMlH,EAAQ8F,EAAQnF,IACrCX,GAASgH,EAAKrG,GAAKmF,EAAQnF,GAG7B,OADAqG,EAAKA,EAAKlH,OAAS,GAAKE,EACjBgH,CACT,CAOM,SAAUG,EAAUC,GAOxB,OAAOA,GAAUA,EAAO7J,MAA+B,mBAAhB6J,EAAO7J,IAChD;;;;;;;;;;;;;;;;GCtqBA,MAAM8J,EAA4B,YAmB5B,MAAOC,EAUX3J,WAAAA,CAAmB4J,GAAAzJ,KAAAyJ,OAAAA,EATXzJ,KAAA0J,MAAe,GACf1J,KAAA2J,aAAwD,GAExD3J,KAAA4J,SAAkB,GAOxB5J,KAAK6J,kBACP,CAEAC,WAAAA,CAAYC,EAAsBC,GACX,MAAjBhK,KAAKgK,UACPC,QAAQC,KACJ,YAAYlK,KAAK+J,oEACgBC,MAEvChK,KAAK+J,aAAeA,EACpB/J,KAAKgK,SAAWA,CAClB,CAEAG,YAAAA,CACIC,EAAkBC,EAClBC,GAKF,GAJAtK,KAAK2J,aAAaS,GAAY,CAACC,eAAcC,WAId,MAA3BtK,KAAK4J,SAASQ,GAAmB,CACnC,MAAMG,EAAYvK,KAAK4J,SAASQ,GAChCH,QAAQC,KACJ,qCAAqCE,MAAaG,MACtDvK,KAAKQ,IAAI4J,EAAUG,GAEvB,CAEA,cAAMC,CAASJ,GACb,OAAIA,KAAYpK,KAAK0J,QAIrB1J,KAAK0J,MAAMU,SAAkBpK,KAAKyK,aAAaL,IAHtCpK,KAAK0J,MAAMU,EAKtB,CAEAhK,GAAAA,CAAIgK,GACF,GAAIA,KAAYpK,KAAK0J,MACnB,OAAO1J,KAAK0J,MAAMU,GAGpB,MAAMG,EAAYvK,KAAKyK,aAAaL,GACpC,GAAIf,EAAUkB,GACZ,MAAM,IAAI3I,MACN,QAAQwI,uEAMd,OAFApK,KAAK0J,MAAMU,GAAYG,EAEhBvK,KAAK0J,MAAMU,EACpB,CAEAM,SAAAA,CAAUN,GACR,OAAOpK,KAAKI,IAAIgK,EAClB,CAEAO,OAAAA,CAAQP,GACN,OAAOpK,KAAKI,IAAIgK,EAClB,CAEAQ,QAAAA,GACE,OAAO5K,KAAK0J,KACd,CAEA,YAAImB,GACF,OAAO7K,KAAK0J,KACd,CAEAlJ,GAAAA,CAAI4J,EAAkBlL,GACpB,GAAmC,MAA/Bc,KAAK2J,aAAaS,GACpB,MAAM,IAAIxI,MACN,mBAAmBwI,oCAEzBpK,KAAK0J,MAAMU,GAAYlL,EACoB,MAAvCc,KAAK2J,aAAaS,GAAUE,SAC9BtK,KAAK2J,aAAaS,GAAUE,QAAQpL,EAExC,CAEQuL,YAAAA,CAAaL,GACnB,GAAmC,MAA/BpK,KAAK2J,aAAaS,GACpB,MAAM,IAAIxI,MACN,yBAAyBwI,qCAE/B,OAAOpK,KAAK2J,aAAaS,GAAUC,cACrC,CAEAS,QAAAA,CAASpB,GACP1J,KAAK0J,MAAQqB,OAAOC,OAAO,CAAE,EAAEtB,EACjC,CAEAuB,KAAAA,GACEjL,KAAK0J,MAAQ,GACb1J,KAAK4J,SAAW,GAChB5J,KAAK6J,kBACP,CAEQA,gBAAAA,GACN,QAA2B,IAAhB7J,KAAKyJ,aACoB,IAAzBzJ,KAAKyJ,OAAOyB,eACoB,IAAhClL,KAAKyJ,OAAOyB,SAASC,OAC9B,OAGF,MAAMC,EAWJ,SAAyBC,GAC7B,MAAMC,EAAS,CAAA,EAKf,OAJAD,EAAYE,QAAQ,+BAA+B,CAAC7F,KAAM8F,KAO5D,SACIF,EAAiCG,EAAcvM,GACjDoM,EAAOI,mBAAmBD,IAASC,mBAAmBxM,GAAS,GACjE,CATIyM,CAAYL,EAAQE,EAAE,GAAIA,EAAE,IACrBA,EAAEI,KAAK,QAETN,CACT,CAlBsBO,CAAe7L,KAAKyJ,OAAOyB,SAASC,QACtD,GAAI5B,KAA6B6B,EAAW,CACxBA,EAAU7B,GAA2BuC,MAAM,KACnDzE,SAAQ0E,IAChB,MAAOC,EAAK9M,GAAS6M,EAASD,MAAM,KACpC9L,KAAK4J,SAASoC,GAoBtB,SAAoB5B,EAAkBlL,GAEpC,GAAc,UADdA,EAAQA,EAAM+M,gBACoB,UAAV/M,EACtB,MAAiB,SAAVA,EACF,GAAI,KAAKA,IAAYA,EAC1B,OAAQA,EAEV,MAAM,IAAI0C,MACN,oCAAoC1C,cAAkBkL,KAC5D,CA7B6B8B,CAAWF,EAAK9M,EAAM,IAGjD,EAoCI,SAAUiN,IACd,OAAOC,CACT,CAEO,ICxLHC,EDwLOD,EAAmB,KCtLxB,SAAUE,IACd,GAAuB,MAAnBD,EAAyB,CAE3B,IAAIE,EACJ,GAAwB,oBAAZC,OACVD,EAAKC,YACA,GAAwB,oBAAZ/C,OACjB8C,EAAK9C,YACA,GAAyB,oBAAbgD,QACjBF,EAAKE,YACA,IAAsB,oBAAVC,KAGjB,MAAM,IAAI9K,MAAM,kCAFhB2K,EAAKG,KAIPL,EAAkBE,EAEpB,OAAOF,CACT,CAkBM,SAAUM,EAAaX,EAAaY,GACxC,MAAMC,EAhBR,WACE,MAAMN,EAAKD,IAIX,OAHqB,MAAjBC,EAAGO,aACLP,EAAGO,WAAa,IAAIC,KAEfR,EAAGO,UACZ,CAUoBE,GAClB,GAAIH,EAAUvM,IAAI0L,GAChB,OAAOa,EAAUzM,IAAI4L,GAChB,CACL,MAAMiB,EAAYL,IAElB,OADAC,EAAUrM,IAAIwL,EAAKiB,GACZJ,EAAUzM,IAAI4L,GAEzB,CC3CO,MAAMkB,EAAM,MAGNC,GAAO,OAGPC,GAAQ,QAGRC,GAAM,MAGNC,GAAO,OAGPC,GAAM,MAONC,GAAM,MAONC,GAAS,SAMTC,GAAS,SAMTC,GAAO,OAGPC,GAAQ,QAGRC,GAAO,OAGPC,GAAQ,QAGRC,GAAQ,QAGRC,GAAU,UASVC,GAAc,cAQdC,GAAY,YAUZC,GAAgB,gBAShBC,GAAc,cAOdC,GAAiB,iBASjBC,GAAW,WAaXC,GAAO,OAMPC,GAAO,OAGPC,GAAc,cAOdC,GAAU,UAGVC,GAAa,aAGbC,GAAS,SAMTC,GAAS,SAUTC,GAAuB,uBAUvBC,GAAsB,sBAUtBC,GAAS,SASTC,GAAyB,yBASzBC,GAAwB,wBASxBC,GAAM,MAGNC,GAAO,OAGPC,GAAS,SAQTC,GAAgB,gBAShBC,GAAgB,gBAOhBC,GAAe,eAOfC,GAAwB,wBAWxBC,GACT,sCAWSC,GACT,qCAWSC,GAAO,OAGPC,GAAa,aAgBbC,GAAU,UAGVC,GAAM,MAGNC,GAAU,UAGVC,GAAM,MAGNC,GAAQ,QAGRC,GAAM,MAGNC,GAAa,aAMbC,GAAQ,QAGRC,GAAM,MAGNC,GAAO,OAOPC,GAAgB,gBAGhBC,GAAQ,QAGRC,GAAW,WAGXC,GAAiB,iBAOjBC,GAAW,WAOXC,GAAW,WAGXC,GAAU,UAGVC,GAAe,eAGfC,GAAW,WAGXC,GAAO,OAGPC,GAAO,OAGPC,GAAW,WAGXC,GAAQ,QAGRC,GAAQ,QAGRC,GAAY,YAMZC,GAAO,OAGPC,GAAY,YAGZC,GAAW,WAMXC,GAAM,MAGNC,GAAQ,QAGRC,GAAa,aAGbC,GAAa,aAGbC,GAAY,YASZC,GAAM,MASNC,GAAU,UASVC,GAAM,MAONC,GAAU,UAGVC,GAAU,UASVC,GAAc,cASdC,GAAY,YAUZC,GAAgB,gBAUhBC,GAAoB,oBASpBC,GAAO,OAOPC,GAAM,MAONC,GAAU,UAGVC,GAAY,YAOZC,GAAM,MAGNC,GAAc,cAQdC,GAAW,WAGXC,GAAM,MAGNC,GAAW,WAGXC,GAAsB,sBAStBC,GAAsB,sBAUtBC,GAAsB,sBAUtBC,GAAW,WAGXC,GAAS,SAQTC,GAAO,OAMPC,GAAQ,QAURC,GAAM,MAGNC,GAAQ,QAGRC,GAAO,OAOPC,GAAQ,QAQRC,GAAO,OAGPC,GAAa,aAGbC,GAAO,OAGPC,GAAU,UAMVC,GAAwB,wBAQxBC,GAA4B,4BAK5BC,GAAiB,iBAQjBC,GAAqB,qBAIrBC,GAAQ,QAGRC,GAAU,UAMVC,GAAQ,QAGRC,GAAQ,QAGRC,GAAY,YAMZC,GAAS,SAGTC,GAAO,OAGPC,GAAQ,QAMRC,GAAM,MAGNC,GAAO,OAGPC,GAAO,OAGPC,GAAU,UAGVC,GAAW,WAGXC,GAAO,OAGPC,GAAM,MAONC,GAAiB,iBAOjBC,GAAS,SAOTC,GAAU,UAMVC,GAAoB,oBAGpBC,GAAS,SAGTC,GAAM,MAGNC,GAAgB,gBAOhBC,GAAe,eAafC,GAAM,MAGNC,GAAO,OAGPC,GAAO,OAMPC,GAAO,OAOPC,GAAY,YAMZC,GAAS,SAQTC,GAAS,SAMTC,GAAqB,qBAOrBC,GAAY,YAMZC,GAAO,OAMPC,GAAa,aASbC,GAAmB,mBAQnBC,GAAe,eAgBfC,GAAc,cAiBdC,GAAuB,uBC52B9BC,GACF/J,EAAU,kBAAkB,IAAM,IAAII,MACpC4J,GACFhK,EAAU,gBAAgB,IAAM,IAAII,MAoElC,SAAU6J,GACZjV,EAAoBkV,GACtB,MAAM7K,EAAM8K,GAAQnV,EAAYkV,GAChC,OAAOH,GAAetW,IAAI4L,EAC5B,CAMM,SAAU+K,GAAYpV,GAC1B,OAAOgV,GAAavW,IAAIuB,EAC1B,CAEM,SAAUqV,GAAqBH,GACnC,MAAMI,EAAKP,GAAeQ,UACpB3X,EAAyB,GAE/B,OAAa,CACX,MAAMC,KAACA,EAAIN,MAAEA,GAAS+X,EAAG7X,OACzB,GAAII,EACF,MAEF,MAAOwM,EAAKmL,GAAUjY,GACfY,GAAakM,EAAIF,MAAM,KAC1BhM,IAAY+W,GACdtX,EAAOsE,KAAKsT,GAGhB,OAAO5X,CACT,CAaM,SAAU6X,GAAeD,GAC7B,MAAMxV,WAACA,EAAUkV,YAAEA,GAAeM,EAC5BnL,EAAM8K,GAAQnV,EAAYkV,GAC5BH,GAAepW,IAAI0L,IACrB/B,QAAQC,KACJ,eAAevI,mBACXkV,4BAEVH,GAAelW,IAAIwL,EAAKmL,EAC1B,CAkEA,SAASL,GAAQnV,EAAoBkV,GACnC,MAAO,GAAGA,KAAelV,GAC3B;;;;;;;;;;;;;;;;GC7LM,SAAU0V,GACZnY,EAAiBmC,GACnB,MAAc,WAAVA,EACKiW,GAAapY,GAGfqY,GAAa,CAACrY,GAAQmC,EAC/B,CAQM,SAAUkW,GAAahU,EAAelC,GAC1C,GAAc,WAAVA,EACF,MAAM,IAAIO,MAAM,6CASlB,GAPI8B,MAAMC,QAAQJ,KAChBA,EAAIiU,EAAajU,IAGf4I,IAAMxB,QAAQ,UAChB6M,EAA8BjU,EAAelC,GAfjD,SAA4BkC,EAAelC,GACzC,OAAQkC,aAAa8C,cAA0B,YAAVhF,GAChCkC,aAAa+C,YAAwB,UAAVjF,GAC3BkC,aAAagD,YAAwB,SAAVlF,CAClC,CAaMoW,CAAmBlU,EAAGlC,GACxB,OAAOkC,EAET,GAAa,MAATlC,GAA2B,YAAVA,GAAiC,cAAVA,EAC1C,OAAO,IAAIgF,aAAa9C,GACnB,GAAc,UAAVlC,EACT,OAAO,IAAIiF,WAAW/C,GACjB,GAAc,SAAVlC,EAAkB,CAC3B,MAAMqW,EAAO,IAAInR,WAAYhD,EAAevB,QAC5C,IAAK,IAAIa,EAAI,EAAGA,EAAI6U,EAAK1V,SAAUa,EACM,IAAnCV,KAAKwV,MAAOpU,EAAeV,MAC7B6U,EAAK7U,GAAK,GAGd,OAAO6U,EAEP,MAAM,IAAI9V,MAAM,qBAAqBP,IAEzC,CAaM,SAAUuW,KACd,OAAOzL,IAAMnC,SAAS4N,KACxB,CA+BM,SAAUN,GAAa5R,EAAWmS,EAAW,SAEjD,OADAA,EAAWA,GAAY,QAChB1L,IAAMnC,SAAS8N,OAAOpS,EAAGmS,EAClC,CAUM,SAAUE,GAAa3Q,EAAmByQ,EAAW,SAEzD,OADAA,EAAWA,GAAY,QAChB1L,IAAMnC,SAASgO,OAAO5Q,EAAOyQ,EACtC,CCnIA,IAAAI,GAAAlN,OAAAmN,OAAA,CAAAC,UAAA,KAAA9U,YAAAA,EAAAP,OAAAA,EAAA+F,mCAAAA,EAAAvF,cAAAA,EAAAL,kBAAAA,EAAAkE,qBAAAA,EAAAD,gBAAAA,EAAAT,yBAAAA,EAAApE,MAAA+V,EAAArQ,eAAAA,EAAAsP,kBAAAA,GAAAgB,sBNkPM,SAAgCC,GACpC,MAAMC,EAAkB,IAAIC,YAAYF,GACxC,IAAK,IAAIzV,EAAI,EAAGA,EAAIyV,IAAKzV,EACvB0V,EAAgB1V,GAAKA,EAGvB,OADAhB,EAAQ0W,GACDA,CACT,EMzPAR,aAAAA,GAAAU,YNiFM,SAAsBlV,EAAemV,GACzC,IAAInZ,EAAS,EACb,IAAK,IAAIsD,EAAI,EAAGA,EAAIU,EAAEvB,OAAQa,IAAK,CACjC,MAAM8V,EAAO5P,OAAOxF,EAAEV,IAAMkG,OAAO2P,EAAE7V,IACrCtD,GAAUoZ,EAAOA,EAEnB,OAAOpZ,CACT,EMxFA+X,aAAAA,GAAAsB,MDsGM,SACFC,EAAcC,GAChB,OAAO3M,IAAMnC,SAAS4O,MAAMC,EAAMC,EACpC,ECzGAtV,QAAAA,EAAAgD,kBAAAA,EAAAJ,uBAAAA,EAAAW,gBAAAA,EAAAoC,WAAAA,EAAAzB,WAAAA,EAAAzC,uBAAAA,EAAAuC,UAAAA,EAAAG,WAAAA,EAAAzD,MAAAA,EAAAuD,SAAAA,EAAA4B,UAAAA,EAAA0P,cNsLM,SAAwB3X,GAC5B,OAAwB,IAAjBA,EAAMY,MACf,EMxLAsF,SAAAA,EAAA1D,aAAAA,EAAAkD,aAAAA,EAAAmC,WAAAA,EAAAN,mBAAAA,EAAAqQ,0BNwmBM,SACF5X,EAAiBC,GACnB,MAAM0C,EAAO3C,EAAMmH,QAAO,CAAC0Q,EAAMC,IAASD,EAAOC,GAAM,GACvD,GAAa,MAAT7X,GAA2B,YAAVA,EACnB,OAAOqH,EAActH,EAAO,IAAIiF,aAAatC,IACxC,GAAc,UAAV1C,EACT,OAAOqH,EAActH,EAAO,IAAIkF,WAAWvC,IACtC,GAAc,SAAV1C,EACT,OAAOqH,EAActH,EAAO,IAAImF,WAAWxC,IAE3C,MAAM,IAAInC,MAAM,qBAAqBP,IAEzC,EMpnBAuH,oBAAAA,EAAAf,eAAAA,EAAApF,kBAAAA,EAAAmV,IAAAA,GAAAtS,eAAAA,EAAA6T,YN2EM,SAAsB5V,EAAWmV,GACrC,MAAMU,EAAIjX,KAAKC,SACf,OAAQsW,EAAIU,GAAM,EAAIA,GAAK7V,CAC7B,EM9EAkB,YAAAA,EAAAF,SAAAA,EAAA1C,QAAAA,EAAAiC,cAAAA,EAAAK,oBAAAA,EAAA2B,aAAAA,EAAAnD,IAAA0W,EAAAC,KNiNM,SAAe/W,GAEnB,GAA0B,MAArBJ,KAAamX,KAEhB,OAAQnX,KAAamX,KAAK/W,GAE5B,GAAIA,IAAMgX,IACR,OAAO,EACF,GAAIhX,KAAOgX,IAChB,OAAQ,EACH,CACL,MAAMC,EAAMrX,KAAKsX,IAAI,EAAIlX,GACzB,OAAQiX,EAAM,IAAMA,EAAM,GAE9B,EM/NA9Q,cAAAA,EAAA6O,aAAAA;;;;;;;;;;;;;;;;GAgCM,MAAOmC,GACX7Z,WAAAA,CAAoB8Z,EAAoCC,GAApC5Z,KAAA2Z,aAAAA,EAAoC3Z,KAAA4Z,OAAAA,EACxC,MAAVA,IACF5Z,KAAK4Z,OAAS,IAAIC,GAEtB,CAEAC,aAAAA,CAAcnY,EAAoBoY,EAAwBlZ,GAExD,IAAImZ,EACJ,MAGMC,EAAQja,KAAK2Z,aAAa/Y,MAHJsZ,KAC1BF,EAAUnZ,GAAG,IAIf,GAAIsL,IAAMxB,QAAQ,gCAChB,IAAK,IAAI9H,EAAI,EAAGA,EAAImX,EAAQhY,OAAQa,IAAK,CACvC,MAAMsX,EAASH,EAAQnX,GAGvBsX,EAAOla,OAAOR,MAAK2a,IACjBC,GAA0BD,EAAYD,EAAO9Y,MAAOM,EAAW,IAerE,MAVsB,CACpBA,aACAqY,UACAD,SACAO,OAAQL,EAAMxa,MAAK8a,GAAUA,EAAOC,WACpCC,UAAWR,EAAMxa,MACb8a,GAAwC,MAA9BA,EAAOG,oBACbH,EAAOG,sBACP,KAGZ,CAEAC,gBAAAA,CAAiBC,GACf,MAAMjZ,WAACA,EAAUqY,QAAEA,EAAOM,OAAEA,EAAMP,OAAEA,EAAMU,UAAEA,GAAaG,EAEzDZ,EAAQ3S,SAAQ9H,IACdT,QAAQ+b,IAAI,CAACtb,EAAOU,OAAQqa,EAAQG,IAAYhb,MAAKqb,IACnD9a,KAAK4Z,OAAOe,iBACRhZ,EAAYpC,EAAQub,EAAe,GAAIA,EAAe,GAAIf,EAC1De,EAAe,GAAG,GACtB,GAEN,EAGI,SAAUT,GACZ3T,EAAsBrF,EAAUM,GAClC,GAAc,YAAVN,EAEF,OAAO,EAET,IAAK,IAAIwB,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,IAAK,CACpC,MAAM8D,EAAMD,EAAK7D,GACjB,GAAI+D,MAAMD,KAASE,SAASF,GAG1B,OADAsD,QAAQC,KAAK,SAASvD,uBAAyBhF,OACxC,EAGX,OAAO,CACT,CAEM,MAAOkY,GACXc,gBAAAA,CACIlP,EAAclM,EAAgBmH,EAC9B4T,EAAgCP,EAChCU,GACF,MAAM7Z,EAAyB,iBAAX0Z,EAAsBrC,EAAc,GAAGqC,MAAY,GAC7BA,EAAc,MAClDS,EAAa9C,EAAcxM,EAAM,IACjCjG,EAAOjG,EAAOiG,KACdzB,EAAOxE,EAAOwE,KACd3C,EAAQ6W,EAAc1Y,EAAO6B,MAAM4Z,WAAY,IACrD,IAAIC,EAAyB,GAE7B,IAAK,MAAMxP,KAAQsO,EAAQ,CACzB,MAAMmB,EAAQnB,EAAOtO,GACrB,GAAa,MAATyP,EAAe,CAGjB,MAAMC,EAAaD,EAAM9Z,OAAS7B,EAAO6B,MACnCga,EAAYD,EAAWnZ,OAC7BiZ,GACI,GAAGxP,MAAS2P,MAAcA,EAAY,EAAID,EAAa,OAI/DlR,QAAQoR,IACJ,KAAKN,QAAiBna,QAAW4E,MAASpE,QAAY2C,QAClDkX,QAA6BR,IACjC,mBAAoB,YAAa,aAAc,gBAC/C,eAAgB,mBACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GF,MAAMa,GAAwB,GAExBC,GAA6B,EAE7BC,GAAwB,EAExB,SAAUC,GACZ/U,EAA2BtF,EAAiBC,EAC5Cqa,GACF,MAAM1T,EAAUD,EAAe3G,GACzBua,EAcR,SACIjV,EAA2BtF,EAAiBC,EAC5C2G,GACF,MAAMsQ,EAAIxU,EAAc1C,GAClBwa,EAAU5T,EAAQA,EAAQhG,OAAS,GACnC2Z,EAAY,IAAIjY,MAAMkY,GAASC,KAAK,GACpCrW,EAAOpE,EAAMY,OACb8Z,EACQ,cAAVza,EAAwB0a,GAAoBrV,GAAQA,EAExD,GAAIlB,EAAO,EACT,IAAK,IAAIwW,EAAM,EAAGA,EAAM1D,EAAIsD,EAASI,IAAO,CAC1C,MAAM9T,EAAS8T,EAAMJ,EACrB,IAAK,IAAIzV,EAAI,EAAGA,EAAIyV,EAASzV,IAC3BwV,EAAUxV,GAAKhE,KAAKK,IAChBmZ,EAAUxV,GACV8V,GAAYH,EAAe5T,EAAS/B,GAAI,EAAG9E,GAAOW,QAI5D,OAAO2Z,CACT,CAnCoBO,CAAwBxV,EAAMtF,EAAOC,EAAO2G,GACxDxC,EAAOpE,EAAMY,OACbma,EAAYC,GAAkB1V,EAAMtF,EAAOC,EAAO2G,EAAS2T,GAC3DU,EAAQ,CAAC,UAQf,OAPIX,IACFW,EAAMxY,KAAK,YAAYxC,KACvBgb,EAAMxY,KAAK,WAAW2B,KACtB6W,EAAMxY,KAAK,aAAazC,MACxBib,EAAMxY,KAAK,cAEbwY,EAAMxY,KAAKsY,EAAU1W,KAAI6W,GAAK,OAASA,IAAG1Q,KAAK,OACxCyQ,EAAMzQ,KAAK,KACpB,CAyBA,SAASqQ,GACLvZ,EAAqC6Z,EAAalb,GACpD,IAAImb,EAYJ,OAVEA,EADE9Y,MAAMC,QAAQjB,GACP,GAAG+Z,WAAW/Z,EAAI,GAAGga,QAAQlB,UAC/BiB,WAAW/Z,EAAI,GAAGga,QAAQlB,QACxBlU,EAAS5E,GACT,IAAIA,KACM,SAAVrB,EACAsb,GAAgBja,GAEhB+Z,WAAW/Z,EAAIga,QAAQlB,KAAwBR,WAGnDzW,EAASiY,EAAQD,EAC1B,CAEA,SAASI,GAAgBC,GACvB,OAAa,IAANA,EAAU,QAAU,MAC7B,CAEA,SAASR,GACL1V,EAA2BtF,EAAiBC,EAC5C2G,EAAmB2T,EAAqBkB,GAAS,GACnD,MAAMC,EAA8B,cAAVzb,EAAwB,EAAI,EAEhD0C,EAAO3C,EAAM,GACboE,EAAOpE,EAAMY,OACnB,GAAa,IAATwD,EAAY,CACd,GAAc,cAAVnE,EAAuB,CAEzB,MAAO,CAAC4a,GADaF,GAAoBrV,GACR,GAAI,EAAGrF,IAE1C,MAAc,SAAVA,EACK,CAACsb,GAAgBjW,EAAK,KAExB,CAACA,EAAK,GAAGsU,YAGlB,GAAa,IAATxV,EAAY,CACd,GAAIzB,EAAOuX,GAAuB,CAChC,MAAMyB,EAAgBxB,GAA6BuB,EAEnD,IAAIE,EAAYtZ,MAAMuZ,KAClBvW,EAAKrB,MAAM,EAAG0X,IACdG,EAAWxZ,MAAMuZ,KAAqCvW,EAAKrB,OAC1DtB,EAAOwX,IAA8BuB,EACtC/Y,EAAO+Y,IAKX,MAJc,cAAVzb,IACF2b,EAAYjB,GAAoBiB,GAChCE,EAAWnB,GAAoBmB,IAE1B,CACL,IACAF,EAAUvX,KAAI,CAAClD,EAAGM,IAAMoZ,GAAY1Z,EAAGoZ,EAAU9Y,GAAIxB,KAChDuK,KAAK,MACV,UACAsR,EACKzX,KACG,CAAClD,EAAGM,IAAMoZ,GACN1Z,EAAGoZ,EAAU5X,EAAOwX,GAA6B1Y,GAAIxB,KAC5DuK,KAAK,MACV,KAOJ,MAAO,CACL,KAJY,cAAVvK,EAAwB0a,GAAoBrV,GACpBhD,MAAMuZ,KAAoBvW,IAIxCjB,KAAI,CAAClD,EAAGM,IAAMoZ,GAAY1Z,EAAGoZ,EAAU9Y,GAAIxB,KAClDuK,KAAK,MACV,KAKJ,MAAMuR,EAAW/b,EAAMiE,MAAM,GACvB+X,EAAapV,EAAQ3C,MAAM,GAC3BgY,EAASrV,EAAQ,GAAK8U,EACtBT,EAAkB,GACxB,GAAItY,EAAOuX,GAAuB,CAChC,IAAK,IAAIzY,EAAI,EAAGA,EAAI0Y,GAA4B1Y,IAAK,CACnD,MAAMiF,EAAQjF,EAAIwa,EACZC,EAAMxV,EAAQuV,EACpBhB,EAAMxY,QAAQuY,GACV1V,EAAKrB,MAAMyC,EAAOwV,GAAMH,EAAU9b,EAAO+b,EAAYzB,GACrD,IAENU,EAAMxY,KAAK,OACX,IAAK,IAAIhB,EAAIkB,EAAOwX,GAA4B1Y,EAAIkB,EAAMlB,IAAK,CAC7D,MAAMiF,EAAQjF,EAAIwa,EACZC,EAAMxV,EAAQuV,EACpBhB,EAAMxY,QAAQuY,GACV1V,EAAKrB,MAAMyC,EAAOwV,GAAMH,EAAU9b,EAAO+b,EAAYzB,EACrD9Y,IAAMkB,EAAO,UAGnB,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAMlB,IAAK,CAC7B,MAAMiF,EAAQjF,EAAIwa,EACZC,EAAMxV,EAAQuV,EACpBhB,EAAMxY,QAAQuY,GACV1V,EAAKrB,MAAMyC,EAAOwV,GAAMH,EAAU9b,EAAO+b,EAAYzB,EACrD9Y,IAAMkB,EAAO,IAGrB,MAAMwZ,EAAe,IAAT/X,EAAa,IAAM,GAC/B6W,EAAM,GAAK,IAAMA,EAAM,GAAKkB,EAC5B,IAAK,IAAI1a,EAAI,EAAGA,EAAIwZ,EAAMra,OAAS,EAAGa,IACpCwZ,EAAMxZ,GAAK,IAAMwZ,EAAMxZ,GAAK0a,EAE9B,IAAIC,EAAa,MACjB,IAAK,IAAI3a,EAAI,EAAGA,EAAI2C,EAAM3C,IACxB2a,GAAc,KAIhB,OAFAnB,EAAMA,EAAMra,OAAS,GACjB,IAAMqa,EAAMA,EAAMra,OAAS,GAAK,KAAO6a,EAAS,GAAKW,GAClDnB,CACT,CAEA,SAASN,GAAoBrV,GAE3B,MAAM+W,EAAyC,GAC/C,IAAK,IAAI5a,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,GAAK,EACpC4a,EAAc5Z,KAAK,CAAC6C,EAAK7D,GAAI6D,EAAK7D,EAAI,KAExC,OAAO4a,CACT;;;;;;;;;;;;;;;;GC5JM,MAAOC,GAMX7d,WAAAA,CAAYuB,EAA2BC,EAAUF,GAI/C,GAJqCnB,KAAAqB,MAAAA,EACrCrB,KAAKoB,MAAQA,EAAMiE,QACnBrF,KAAK+D,KAAOkU,EAAmB7W,GAEjB,MAAVD,EAAgB,CAClB,MAAMmX,EAAInX,EAAOa,OACjBiW,EACIK,IAAMtY,KAAK+D,MACX,IAAM,qBAAqBuU,qDACGtY,KAAK+D,WAEzC,GAAc,cAAV1C,EACF,MAAM,IAAIO,MACN,8JAIN5B,KAAKmB,OAASA,GAAU8W,EAAuB5W,EAAOrB,KAAK+D,MAC3D/D,KAAKgI,QAAUD,EAAe3G,EAChC,CAUAZ,GAAAA,CAAItB,KAA6BgK,GACX,IAAhBA,EAAKlH,SACPkH,EAAO,CAAC,IAEV+O,EACI/O,EAAKlH,SAAWhC,KAAKwF,MACrB,IAAM,uCAAuC0D,EAAKlH,gCAC3BhC,KAAKwF,UAEhC,MAAMtD,EAAQlC,KAAKiJ,WAAWC,GAC9BlJ,KAAKmB,OAAOe,GAAShD,CACvB,CASAkB,GAAAA,IAAO8I,GACe,IAAhBA,EAAKlH,SACPkH,EAAO,CAAC,IAEV,IAAIrG,EAAI,EACR,IAAK,MAAM8a,KAAOzU,EAAM,CACtB,GAAIyU,EAAM,GAAKA,GAAO3d,KAAKoB,MAAMyB,GAAI,CACnC,MAAMG,EAAM,qCAAqCkG,qBAC3BlJ,KAAKoB,QAC3B,MAAM,IAAIQ,MAAMoB,GAElBH,IAEF,IAAIX,EAAQgH,EAAKA,EAAKlH,OAAS,GAC/B,IAAK,IAAIa,EAAI,EAAGA,EAAIqG,EAAKlH,OAAS,IAAKa,EACrCX,GAASlC,KAAKgI,QAAQnF,GAAKqG,EAAKrG,GAElC,OAAO7C,KAAKmB,OAAOe,EACrB,CAEA+G,UAAAA,CAAWC,GACT,GAAkB,IAAdlJ,KAAKwF,KACP,OAAO,EACF,GAAkB,IAAdxF,KAAKwF,KACd,OAAO0D,EAAK,GAEd,IAAIhH,EAAQgH,EAAKA,EAAKlH,OAAS,GAC/B,IAAK,IAAIa,EAAI,EAAGA,EAAIqG,EAAKlH,OAAS,IAAKa,EACrCX,GAASlC,KAAKgI,QAAQnF,GAAKqG,EAAKrG,GAElC,OAAOX,CACT,CAEAiH,UAAAA,CAAWjH,GACT,GAAkB,IAAdlC,KAAKwF,KACP,MAAO,GACF,GAAkB,IAAdxF,KAAKwF,KACd,MAAO,CAACtD,GAEV,MAAMgH,EAAiB,IAAIxF,MAAM1D,KAAKoB,MAAMY,QAC5C,IAAK,IAAIa,EAAI,EAAGA,EAAIqG,EAAKlH,OAAS,IAAKa,EACrCqG,EAAKrG,GAAKV,KAAKiH,MAAMlH,EAAQlC,KAAKgI,QAAQnF,IAC1CX,GAASgH,EAAKrG,GAAK7C,KAAKgI,QAAQnF,GAGlC,OADAqG,EAAKA,EAAKlH,OAAS,GAAKE,EACjBgH,CACT,CAEA,QAAI1D,GACF,OAAOxF,KAAKoB,MAAMY,MACpB,CAOA4b,QAAAA,GACE,OAAOC,KAAYC,WAAW9d,KAAKmB,OAAQnB,KAAKoB,MAAOpB,KAAKqB,MAE9D,EA+BF,IAAIwc,GAAiC,KAEjCE,GAAuB,KAsDrB,MAAOC,GA6BXne,WAAAA,CAAYuB,EAAoBC,EAAiBhB,EAAgB4d,GAXjEje,KAAAke,MAAO,EAoIGle,KAAAme,oBAAqB,EAxH7Bne,KAAKoB,MAAQA,EAAMiE,QACnBrF,KAAKqB,MAAQA,GAAS,UACtBrB,KAAK+D,KAAOkU,EAAmB7W,GAC/BpB,KAAKgI,QAAUD,EAAe3G,GAC9BpB,KAAKK,OAASA,EACdL,KAAKie,GAAKA,EACVje,KAAKoe,SAAYpe,KAAKwF,KAAO,EAAIxF,KAAKwF,KAAKwV,WAAa,QAC1D,CAEA,QAAIxV,GACF,OAAOxF,KAAKoB,MAAMY,MACpB,CAOA,YAAMqc,GACJ,MAAM3X,QAAa1G,KAAKC,OACxB,OAAO8d,GAAUM,OAAOre,KAAKoB,MAAOpB,KAAKqB,MAAYqF,EACvD,CAMA4X,UAAAA,GACE,OAAOP,GAAUM,OAAOre,KAAKoB,MAAOpB,KAAKqB,MAAYrB,KAAKue,WAC5D,CAQA,WAAMzc,GACJ,MAAM4E,QAAa1G,KAAKC,OACxB,OAAOyI,EAAc1I,KAAKoB,MAAOsF,EACnC,CAQA8X,SAAAA,GACE,OAAO9V,EAAc1I,KAAKoB,MAAOpB,KAAKue,WACxC,CAQA,UAAMte,GACJD,KAAKye,kBACL,MAAMxe,EAAO4d,KAAY9c,KAAKf,KAAKK,QACnC,GAAmB,WAAfL,KAAKqB,MAAoB,CAC3B,MAAM+F,QAAcnH,EACpB,IACE,OAAOmH,EAAM3B,KAAIiT,GAAKT,GAAkBS,IACzC,CAAC,MAAAgG,GACA,MAAM,IAAI9c,MACN,kGAIR,OAAO3B,CACT,CAQAse,QAAAA,GACEve,KAAKye,kBACL,MAAMxe,EAAO4d,KAAY7c,SAAShB,KAAKK,QACvC,GAAmB,WAAfL,KAAKqB,MACP,IACE,OAAQpB,EAAsBwF,KAAIiT,GAAKT,GAAkBS,IAE1D,CAAC,MAAAgG,GACA,MAAM,IAAI9c,MACN,iGAIR,OAAO3B,CACT,CAGA,WAAMmH,GACJpH,KAAKye,kBACL,MAAMxe,QAAa4d,KAAY9c,KAAKf,KAAKK,QACzC,MAAmB,WAAfL,KAAKqB,MACApB,EAEA,IAAIsG,WAAYtG,EAAoBoe,OAE/C,CAOA3c,OAAAA,GACM1B,KAAK2e,aAGTd,KAAYe,cAAc5e,MAC1BA,KAAKme,oBAAqB,EAC5B,CAGA,cAAIQ,GACF,OAAO3e,KAAKme,kBACd,CAEAM,eAAAA,GACE,GAAIze,KAAK2e,WACP,MAAM,IAAI/c,MAAM,sBAEpB,CAUAid,KAAAA,CAAMnD,GAAU,GACd,OAAOqC,GAAUc,MAAM7e,KAAM0b,EAC/B,CAMAoD,KAAAA,GAEE,OADA9e,KAAKye,kBACEV,GAAUe,MAAM9e,KACzB,CAOAgb,QAAAA,CAASU,GAAU,GAEjB,OAAOD,GADMzb,KAAKue,WACUve,KAAKoB,MAAOpB,KAAKqB,MAAOqa,EACtD,CAEAqD,IAAAA,CAAqB1d,GAEnB,OADArB,KAAKye,kBACEV,GAAUgB,KAAK/e,KAAWqB,EACnC,CACA2d,QAAAA,CAASC,GAAY,EAAMxT,EAAepK,GAExC,OADArB,KAAKye,kBACEZ,KAAYqB,aAAalf,KAAMif,EAAWxT,EAAMpK,EAEzD,EAEF0J,OAAOoU,eAAenB,GAAQoB,OAAOC,YAAa,CAChDngB,MAAQogB,KAMGA,GAA6B,MAAjBA,EAASrf,MAAqC,MAArBqf,EAASf,UACvB,MAA5Be,EAASb,kBAQR9R,EAAU,UAAU,IAClBqR,KAuCL,MAAOuB,WAAwCvB,GAGnDne,WAAAA,CACI2f,EAAgCP,EAAoBxT,EACpDgU,GACFC,MACIF,EAAape,MAAOoe,EAAane,MAAOme,EAAanf,OAAQof,GAH/Bzf,KAAAif,UAAAA,EAIlCjf,KAAKyL,KAAOA,CACd,CAUAT,MAAAA,CAAO2U,GACL,GAAIA,EAASte,QAAUrB,KAAKqB,MAC1B,MAAM,IAAIO,MACN,2BAA2B+d,EAASte,8BACjBrB,KAAKqB,qBAE9B,IAAK4W,EAAiB0H,EAASve,MAAOpB,KAAKoB,OACzC,MAAM,IAAIQ,MACN,2BAA2B+d,EAASve,8BACjBpB,KAAKoB,qBAE9Byc,KAAYe,cAAc5e,MAC1BA,KAAKK,OAASsf,EAAStf,OACvBwd,KAAY+B,OAAO5f,KAAM,KAC3B,CAEA0B,OAAAA,GACEmc,KAAYgC,gBAAgB7f,MAC5BA,KAAKme,oBAAqB,CAC5B;;;;;;;;;;;;;;;;;AC1dF,IAAY2B,GAqBPC,GAOAC,GAOAC,GAOAC,GDmbLnV,OAAOoU,eAAeI,GAAUH,OAAOC,YAAa,CAClDngB,MAAQogB,GACCA,aAAoBtB,IAA6B,MAAnBsB,EAAStU,QAC1CsU,EAAStU,kBAAkBmV,WChenC,SAAYL,GACVA,EAAS,GAAA,KACTA,EAAS,GAAA,KACTA,EAAS,GAAA,KACTA,EAAS,GAAA,KACTA,EAAS,GAAA,KACTA,EAAS,GAAA,KACTA,EAAS,GAAA,IACV,CARD,CAAYA,KAAAA,GAAI,CAAA,IAqBhB,SAAKC,GACHA,EAAqB,QAAA,UACrBA,EAAiB,MAAA,QACjBA,EAAgB,KAAA,QAChBA,EAAyB,UAAA,WAC1B,CALD,CAAKA,KAAAA,GAAiB,CAAA,IAOtB,SAAKC,GACHA,EAAqB,QAAA,UACrBA,EAAiB,MAAA,QACjBA,EAAe,KAAA,OACfA,EAAyB,UAAA,WAC1B,CALD,CAAKA,KAAAA,GAAgB,CAAA,IAOrB,SAAKC,GACHA,EAAqB,QAAA,UACrBA,EAAmB,MAAA,UACnBA,EAAkB,KAAA,UAClBA,EAAyB,UAAA,WAC1B,CALD,CAAKA,KAAAA,GAAmB,CAAA,IAOxB,SAAKC,GACHA,EAAuB,QAAA,YACvBA,EAAqB,MAAA,YACrBA,EAAoB,KAAA,YACpBA,EAAyB,UAAA,WAC1B,CALD,CAAKA,KAAAA,GAAqB,CAAA,IAO1B,MAAME,GAAgB,CACpBC,QAAWJ,GACXK,MAASP,GACTrI,KAAQsI,GACRO,UAAaL,IAGT,SAAUM,GAAWC,EAAiBC,GAC1C,GAAc,WAAVD,GAAgC,WAAVC,EAAoB,CAC5C,GAAc,WAAVD,GAAgC,WAAVC,EACxB,MAAO,SAET,MAAM,IAAI9e,MAAM,kBAAkB6e,UAAcC,KAElD,OAAON,GAAcK,GAAOC,EAC9B,CAGM,SAAUC,GAAWC,GACzB,OAAOJ,GAAWI,EAAM,QAC1B;;;;;;;;;;;;;;;;GC/GM,SAAUC,GAAiCtd,EAAMmV,GACrD,GAAInV,EAAElC,QAAUqX,EAAErX,MAChB,MAAO,CAACkC,EAAGmV,GAEb,MAAMrX,EAAQmf,GAAWjd,EAAElC,MAAOqX,EAAErX,OACpC,MAAO,CAACkC,EAAEwb,KAAK1d,GAAQqX,EAAEqG,KAAK1d,GAChC,CAEM,SAAUyf,GAAiBvd,EAAWmV,GAC1C5V,EACIS,EAAElC,QAAUqX,EAAErX,OACd,IAAM,2BAA2BkC,EAAElC,qBACpBqX,EAAErX,2BACvB,CAkBM,SAAU0f,GAAsBxhB,GACpC,MAAMyhB,EAAiB,GAGvB,OADAC,GAAoB1hB,EAAQyhB,EADf,IAAIE,KAEVF,CACT,CAEA,SAASC,GACLE,EAA4BH,EAAgBI,GAC9C,GAAiB,MAAbD,EACF,OAEF,GAAIA,aAAqBnD,GAEvB,YADAgD,EAAKnd,KAAKsd,GAGZ,GAekBE,EAfFF,GAgBTzd,MAAMC,QAAQ0d,IAAuB,iBAARA,EAflC,OAcJ,IAAoBA,EAXlB,MAAMC,EAAWH,EACjB,IAAK,MAAMI,KAAKD,EAAU,CACxB,MAAM5e,EAAM4e,EAASC,GAChBH,EAAK9gB,IAAIoC,KACZ0e,EAAKI,IAAI9e,GACTue,GAAoBve,EAAKse,EAAMI,IAGrC,CCjFA,IAAAK,GAAA1W,OAAAmN,OAAA,CAAAC,UAAA,KAAA2I,iBAAAA,GAAAC,sBAAAA,GAAAW,eDqCM,SAAyBC,EAAgBC,GAC7C,OAAOA,EAAWC,MAAKtf,GAAKA,EAAE0b,KAAO0D,EAAO1D,IAC9C,ECvCA4C,eAAAA;;;;;;;;;;;;;;;;GAoGA,SAASiB,GAELC,GAGF,OAAyE,MAAjEA,EAAmDpgB,UAC7D,CAEA,MAAMqgB,GAANniB,WAAAA,GAEEG,KAAAiiB,oBAAwC,GAExCjiB,KAAAkiB,eAAiB,EACjBliB,KAAAmiB,SAAW,EACXniB,KAAAoiB,WAAa,EACbpiB,KAAAqiB,iBAAmB,EACnBriB,KAAAsiB,eAAiB,EAMjBtiB,KAAAuiB,cAAgB,EAGhBviB,KAAAwiB,YAAc,EAIdxiB,KAAAyiB,WAA2B,GAK3BziB,KAAA0iB,kBAA8B,GAC9B1iB,KAAA2iB,YAAc,EAEd3iB,KAAA4iB,WAAa,IAAI1iB,QAQjBF,KAAA6iB,WAAY,EACZ7iB,KAAA8iB,cAA6B,CAC3BC,SAAU,EACVC,WAAY,EACZC,UAAW,EACXC,QAAS,GACT3jB,OAAQ,KACR,eAAI4jB,GACF,OAAOzf,MAAMuZ,KAAK,IAAIiE,IAAIlhB,KAAKkjB,QAAQzd,KAAI8b,GAAKA,EAAE9V,QACpD,EAQJ,CALE/J,OAAAA,GACE,IAAK,MAAM0hB,KAAgBpjB,KAAKiiB,oBAC9BjiB,KAAKiiB,oBAAoBmB,GAAc1hB,SAE3C,EAGI,MAAO2hB,GAgBXxjB,WAAAA,CAAmBuM,GAAApM,KAAAoM,IAAAA,EAbnBpM,KAAAsjB,SAA0C,GAC1CtjB,KAAAujB,gBAKI,GAKIvjB,KAAAwjB,qBAAuB,EAG7BxjB,KAAKyjB,MAAQ,IAAIzB,EACnB,CAEA,WAAM0B,GACJ,GAA+B,MAA3B1jB,KAAK2jB,mBACP,OAAO3jB,KAAK2jB,mBAAmBlkB,MAAK,SAEtC,GAA4B,MAAxBO,KAAK4jB,gBACP,OAEF,MAAMC,EAAiB7jB,KAAK8jB,oBAE5B,IAAK,IAAIjhB,EAAI,EAAGA,EAAIghB,EAAe7hB,OAAQa,IAAK,CAC9C,MAAMgU,EAAcgN,EAAehhB,GAEnC,SADsB7C,KAAK+jB,kBAAkBlN,GAAamN,QAGxD,kBADMhkB,KAAKikB,WAAWpN,GAK1B,MAAM,IAAIjV,MACN,yEAEN,CAEA,WAAI9B,GACF,GAA+B,MAA3BE,KAAK2jB,mBACP,MAAM,IAAI/hB,MACN,YAAY5B,KAAK6W,kIAIvB,GAA4B,MAAxB7W,KAAK4jB,gBAAyB,CAChC,MAAMnY,KAACA,EAAIyY,UAAEA,GAAalkB,KAAKmkB,kCAC/B,GAAID,EACF,MAAM,IAAItiB,MACN,iCAAiC6J,wHAIvCzL,KAAKikB,WAAWxY,GAElB,OAAOzL,KAAK4jB,eACd,CAEAQ,YAAAA,GACE,OAAOrZ,OAAOsZ,KAAKrkB,KAAKujB,gBAC1B,CAEAe,WAAAA,CAAYzN,GACV,KAAMA,KAAe7W,KAAKsjB,UAAW,CAGnC,KAAIzM,KAAe7W,KAAKujB,iBAOtB,OAAO,KAPgC,CACvC,MAAMW,UAACA,GAAalkB,KAAK+jB,kBAAkBlN,GAC3C,GAAIqN,EAEF,OAAO,MAMb,OAAOlkB,KAAKsjB,SAASzM,EACvB,CAEA0N,kBAAAA,CAAmB1N,GAEjB,OAAMA,KAAe7W,KAAKujB,gBAGnBvjB,KAAKujB,gBAAgB1M,GAAa2N,QAFhC,IAGX,CAEAC,eAAAA,CACI5N,EACA2N,EACAE,EAAW,GACb,OAAI7N,KAAe7W,KAAKujB,iBACtBtZ,QAAQC,KACJ,GAAG2M,wEAEA,IAET7W,KAAKujB,gBAAgB1M,GAAe,CAAC2N,UAASE,aACvC,EACT,CAEA,gBAAMT,CAAWpN,GACf,GAAyC,MAArC7W,KAAKujB,gBAAgB1M,GACvB,MAAM,IAAIjV,MAAM,iBAAiBiV,4BAGnC,GADA7W,KAAK6W,YAAcA,EACe,MAA9B7W,KAAKsjB,SAASzM,GAAsB,CACtC7W,KAAK4jB,gBAAkB,KACvB,MAAMI,QAACA,EAAOE,UAAEA,GAAalkB,KAAK+jB,kBAAkBlN,GAEpD,KADeqN,QAAkBF,EAAUA,GAEzC,OAAO,EAQX,OALAhkB,KAAK4jB,gBAAkB5jB,KAAKsjB,SAASzM,GACrC7W,KAAK2kB,yBAEL3kB,KAAK4kB,SAAW,IAAIlL,GAAS1Z,KAAK4jB,kBAE3B,CACT,CAEQe,sBAAAA,GACU3N,GAAqBhX,KAAK6W,aAClCxP,SAAQwd,IACU,MAApBA,EAAOC,WACTD,EAAOC,UAAU9kB,KAAK4jB,mBAG5B,CAEQmB,wBAAAA,CAAyBlO,GACfG,GAAqBH,GAC7BxP,SAAQwd,IACY,MAAtBA,EAAOG,aACTH,EAAOG,YAAYhlB,KAAKsjB,SAASzM,MAGvC,CAQQkN,iBAAAA,CAAkBlN,GAExB,MAAMoO,EAAuBjlB,KAAKujB,gBAAgB1M,GAClD,GAA4B,MAAxBoO,EACF,MAAM,IAAIrjB,MACN,6BAA6BiV,6BAGnC,IACE,MAAM/W,EAAUmlB,EAAqBT,UAMrC,IAAI1kB,GAAaA,aAAmBa,GACR,mBAAjBb,EAAQL,KA4BjB,OADAO,KAAKsjB,SAASzM,GAAe/W,EACtB,CAACkkB,SAAS,EAAME,WAAW,GA5BI,CACtC,MAAMgB,IAAcllB,KAAKwjB,qBACnBQ,EACFlkB,EACKL,MAAKmkB,KAEAsB,EAAYllB,KAAKwjB,wBAGrBxjB,KAAKsjB,SAASzM,GAAe+M,EAC7B5jB,KAAK2jB,mBAAqB,MACnB,KAERwB,OAAMC,IAEDF,EAAYllB,KAAKwjB,uBAGrBxjB,KAAK2jB,mBAAqB,KAC1B1Z,QAAQC,KACJ,6BAA6B2M,YACjC5M,QAAQC,KAAKkb,EAAIC,OAASD,EAAIE,WALrB,KASnB,OADAtlB,KAAK2jB,mBAAqBK,EACnB,CAACA,UAASE,WAAW,GAK/B,CAAC,MAAOkB,GAGP,OAFAnb,QAAQC,KAAK,6BAA6B2M,YAC1C5M,QAAQC,KAAKkb,EAAIC,OAASD,EAAIE,SACvB,CAACtB,SAAS,EAAOE,WAAW,GAEvC,CAEAqB,aAAAA,CAAc1O,GACZ,KAAMA,KAAe7W,KAAKujB,iBACxB,MAAM,IAAI3hB,MAAM,GAAGiV,mCAEjB7W,KAAK6W,cAAgBA,GAA0C,MAA3B7W,KAAK2jB,oBAG3C3jB,KAAKwjB,uBAGH3M,KAAe7W,KAAKsjB,WACtBtjB,KAAK+kB,yBAAyBlO,GAC9B7W,KAAKsjB,SAASzM,GAAanV,iBACpB1B,KAAKsjB,SAASzM,WAGhB7W,KAAKujB,gBAAgB1M,GAGxB7W,KAAK6W,cAAgBA,IACvB7W,KAAK2jB,mBAAqB,KAC1B3jB,KAAK6W,YAAc,KACnB7W,KAAK4jB,gBAAkB,KAE3B,CAEQE,iBAAAA,GACN,GAAiD,IAA7C/Y,OAAOsZ,KAAKrkB,KAAKujB,iBAAiBvhB,OACpC,MAAM,IAAIJ,MAAM,iCAElB,OAAOmJ,OAAOsZ,KAAKrkB,KAAKujB,iBAAiBrd,MAAK,CAAC3C,EAAWmV,IAEjD1Y,KAAKujB,gBAAgB7K,GAAGgM,SAC3B1kB,KAAKujB,gBAAgBhgB,GAAGmhB,UAEhC,CAEQP,+BAAAA,GAEN,MAAMN,EAAiB7jB,KAAK8jB,oBAE5B,IAAK,IAAIjhB,EAAI,EAAGA,EAAIghB,EAAe7hB,OAAQa,IAAK,CAC9C,MAAMgU,EAAcgN,EAAehhB,IAC7BmhB,QAACA,EAAOE,UAAEA,GAAalkB,KAAK+jB,kBAAkBlN,GACpD,GAAIqN,GAAaF,EACf,MAAO,CAACvY,KAAMoL,EAAaqN,aAG/B,MAAM,IAAItiB,MACN,yEAEN,CAEArB,QAAAA,CAAST,EAAwBO,GAC/B,MAAMmlB,EAAOxlB,KAAKyjB,MAAMb,WAAWxiB,IAAIC,GACjColB,EAAaD,EAAK1lB,QAClBqB,EAASnB,KAAKgB,SAASX,GAG7BolB,EAAWxkB,YAAYZ,GACvBmlB,EAAK1lB,QAAUA,EACfA,EAAQwB,KAAKjB,EAAQc,EAAQqkB,EAAKpkB,MAAOokB,EAAKnkB,OAC1CrB,KAAK0lB,0BAGP1lB,KAAKyjB,MAAMf,kBAAkB1iB,KAAKyjB,MAAMf,kBAAkB1gB,OAAS,IAEvE,CAEA2jB,IAAAA,CAAgCC,EAA6BC,GAE3D,IAuBItmB,EAvBAkM,EAAe,KACnB,GAAU,MAANoa,EAAY,CAEd,GAAwB,mBAAbD,EACT,MAAM,IAAIhkB,MAAM,uCAElBikB,EAAKD,MACA,CAEL,GAAwB,iBAAbA,KAA2BA,aAAoBre,QACxD,MAAM,IAAI3F,MACN,kFAGN,GAAkB,mBAAPikB,EACT,MAAM,IAAIjkB,MACN,kFAGN6J,EAAOma,EAKT,OAAO5lB,KAAK8lB,WACR,IAAM9lB,KAAK+lB,WAAWta,KAAO,IAAMzL,KAAKgmB,SAASzmB,KAAS,KACxDA,EAASsmB,IACLtmB,aAAkBT,SACpBmL,QAAQgc,MAAM,2CAET1mB,IAEf,CAEQumB,SAAAA,CAAahe,EAAmBwV,EAAiBzc,GACvDiH,IACA,IACE,MAAMoe,EAAMrlB,IAEZ,OADAyc,IACO4I,CACR,CAAC,MAAOC,GAEP,MADA7I,IACM6I,EAEV,CAGQC,YAAAA,GACN,OAAO/C,GAAO+C,cAChB,CAGQC,cAAAA,GACN,OAAOhD,GAAOgD,gBAChB,CAQQvH,KAAAA,CAAMvc,GACZ,MAAM+jB,EAAItmB,KAAKumB,qBAAqBhkB,EAAElC,OAAQkC,EAAEnB,MAAOmB,EAAElB,OACnD0Y,EAAS,CAACxX,KAehB,OADAvC,KAAKwmB,YAAYxmB,KAAKyjB,MAAMgD,YAAYhb,KAAMsO,EAAQ,CAACuM,IAbzCI,IAAgB,CAC5BnkB,EAAGA,KACD,MACMokB,EAAa,CAACpkB,EAAGmkB,GACjBE,EAAQ,CAACvlB,MAFD,WAId,OAAOwlB,GAAOC,UACHvY,GAAMoY,EAENC,EAAsC,KAG7B,GACgD,CAAE,GACnEN,CACT,CAeAQ,SAAAA,CACInlB,EAAoBoY,EAAwB6M,GAE9C,KAD6D,MAA3ChQ,GAAUjV,EAAY3B,KAAK6W,cAE3C,MAAM,IAAIjV,MAAM,WAAWD,kCACvB3B,KAAK6W,gBAEX,OAAO7W,KAAK+mB,cAAc,CAACplB,aAAYoY,SAAQ6M,SACjD,CAEQlB,sBAAAA,GACN,OAAO1lB,KAAKoM,IAAIzB,QAAQ,UAC1B,CAEQqc,qBAAAA,CACJrlB,EAAoBslB,EACpBC,GACF,MAAMC,EAAkBnnB,KAAKF,QAAQY,aAGrC,IAAI0mB,EAAmB,EACvBF,EAAS7f,SAAQme,IAGf4B,GAAoC,cAAf5B,EAAKnkB,MAAwB,EAAI,CAAE,IAQ1D,MAAMgmB,EACFrnB,KAAKyjB,MAAMf,kBAAkB1iB,KAAKyjB,MAAMf,kBAAkB1gB,OAAS,GACjEslB,EACFH,EAAkBF,EAAmBG,EAAmBC,EAC5D,GAAIC,EAAgB,EAClB,MAAM,IAAI1lB,MACN,YAAY5B,KAAK6W,6CACbyQ,8BAA0C3lB,KAEtD,CAOQolB,aAAAA,CACJQ,GAEF,IAAIvN,EACAwN,EAAkB,GACtB,MAAMC,EAAWznB,KAAKynB,WAEhBC,EAAoB1nB,KAAKyjB,MAAMtB,SAC/BwF,EAAqB3nB,KAAKyjB,MAAMrB,WAMtC,IAAIwF,EAUAC,EAdA7nB,KAAK0lB,0BACP1lB,KAAKyjB,MAAMf,kBAAkB7e,KAAK,GAIZ,MAApB7D,KAAK6W,aAMP7W,KAAKF,QAKP,MAAMgoB,EAAoBhG,GAA6ByF,GACnDA,EAAa5lB,WACa,MAA1B3B,KAAKyjB,MAAMgD,YAAsBzmB,KAAKyjB,MAAMgD,YAAYhb,KAAO,GAMnE,GAAIqW,GAA6ByF,GAAe,CAC9C,MAAM5lB,WAACA,EAAUoY,OAAEA,EAAM6M,MAAEA,GAASW,EACZ,MAApBvnB,KAAK6W,aAMP7W,KAAKF,QAEP,MAAM+kB,EAASjO,GAAUjV,EAAY3B,KAAK6W,aAC1CoB,EACc,MAAV4M,GACA,IAAM,kCAAkCljB,mBACpC3B,KAAK6W,iBAEb+Q,EAAaA,KACX,MAAMX,EAAmBjnB,KAAKF,QAAQY,aACtCmnB,EAAMhD,EAAO+C,WAAW,CAAC7N,SAAQ6M,QAAO9mB,QAASE,KAAKF,UACtD,MAAMonB,EAAWxjB,MAAMC,QAAQkkB,GAAOA,EAAM,CAACA,GACzC7nB,KAAK0lB,0BACP1lB,KAAKgnB,sBAAsBrlB,EAAYslB,EAAkBC,GAG3D,MAAMa,EAAab,EAASzhB,KAAKuiB,IAI/B,GAAgC,MAA3BA,EAAmBxiB,KACtB,OAAOwiB,EAET,MAAM3nB,OAACA,EAAMe,MAAEA,EAAKC,MAAEA,GAAS2mB,EAC/B,OAAOhoB,KAAKumB,qBAAqBlmB,EAAQe,EAAOC,EAAM,IAQxD,GAAIomB,EAAU,CACZ,MAAMQ,EACFjoB,KAAKkoB,sBAAsBvmB,EAAYoY,EAAQgO,GACnDP,EAAQxnB,KAAKmoB,2BAA2BF,GAE1C,OAAOF,CAAU,MAEd,CACL,MAAMK,YAACA,GAAeb,EAEhBc,EAA0BC,IAIzBb,IAGLD,EAAQc,EAAQ7iB,KAAIkc,GAAU3hB,KAAKuoB,KAAKvoB,KAAK8e,MAAM6C,MAAS,EAG9DiG,EAAaA,KACX,MAAMX,EAAmBjnB,KAAKF,QAAQY,aACtCmnB,EAAM7nB,KAAK2lB,MAAK,IAAMyC,EAAYpoB,KAAKF,QAASuoB,KAChD,MAAMG,EAAQ9kB,MAAMC,QAAQkkB,GAAOA,EAAM,CAACA,GAK1C,OAJI7nB,KAAK0lB,0BAEP1lB,KAAKgnB,sBAAsBc,EAAmBb,EAAkBuB,GAE3DA,CAAI,EAOf,MAAMzO,OAACA,EAAM6M,MAAEA,GAASW,EAClBkB,EAAgB3G,GAA6ByF,GAC/C,KACAA,EAAakB,cAEjB,IAAI7N,EAmCJ,OAlCA5a,KAAK8lB,WAED,IAAM9lB,KAAKyjB,MAAMjB,gBAAe,IAAMxiB,KAAKyjB,MAAMjB,gBAAe,KACzDxiB,KAAKoM,IAAIzB,QAAQ,UAAa3K,KAAKyjB,MAAMZ,WAG5CjI,EAAgB5a,KAAK4kB,SAAS9K,cAC1BgO,EAAmB/N,GAAQ,IAAM6N,MACjC5nB,KAAKoM,IAAIzB,QAAQ,UACnB3K,KAAK4kB,SAASjK,iBAAiBC,GAEjCZ,EAAUY,EAAcZ,SAPxBA,EAAU4N,OAWdH,GACFznB,KAAKwmB,YACDsB,EAAmB/N,EAAQC,EAASyO,EAAejB,EAAOZ,GAG5D5mB,KAAKyjB,MAAMZ,WACb7iB,KAAKyjB,MAAMX,cAAcI,QAAQrf,KAAK,CACpC4H,KAAMqc,EACNY,WAAY1oB,KAAKyjB,MAAMtB,SAAWuF,EAClCiB,mBAAoB3oB,KAAKyjB,MAAMtB,SAC/ByG,aAAc5oB,KAAKyjB,MAAMrB,WAAauF,EACtCkB,qBAAsB7oB,KAAKyjB,MAAMrB,WACjC0G,YAAa/d,OAAOsZ,KAAKtK,GAAQtU,KAC7BuG,GAAsB,MAAf+N,EAAO/N,GAAe+N,EAAO/N,GAAK5K,MAAQ,OACrD2nB,aAAc/O,EAAQvU,KAAIujB,GAAQA,EAAK5nB,QACvC6nB,aAAcrO,EAAcN,OAC5BG,UAAWG,EAAcH,YAGrB/W,MAAMC,QAAQkkB,GAAO7N,EAAUA,EAAQ,EACjD,CAOQmO,0BAAAA,CAA2BG,GACjC,MAAMd,EAAQc,EAAQ7iB,KAAIkc,GAAU3hB,KAAKuoB,KAAKvoB,KAAK8e,MAAM6C,MACzD,OAAO6F,CACT,CASQU,qBAAAA,CACJvmB,EAAoBoY,EACpBC,GACF,MAAMkP,EAAanS,GAAYpV,GAC/B,GAAkB,MAAdunB,EAAoB,CACtB,MAAMC,EAAyBD,EAAWC,cAAgB,GACpDC,EAA2BF,EAAWE,eAAiB,GAI7D,IAAIC,EACAH,EAAWI,eACbrR,EACIvU,MAAMC,QAAQoW,IACd,IAAM,2DAEVsP,EAAqBte,OAAOsZ,KAAKtK,GAAQtU,KAAKuG,GAAQ+N,EAAO/N,MAE7Dqd,EAAqBF,EAAa1jB,KAAK8jB,GAAcxP,EAAOwP,KAG9D,MAAMC,EACFxP,EAAQyP,QAAO,CAACC,EAAG7mB,IAAMumB,EAAcvmB,KAE3C,OAAOwmB,EAAmB1jB,OAAO6jB,GAQnC,MAAO,EACT,CAOA1L,UAAAA,CACI3c,EAAoBC,EAAiBC,EACrCvB,GACF,GAAc,MAAVqB,EACF,MAAM,IAAIS,MAAM,iDAElBP,EAAQA,GAAS,UACjBvB,EAAUA,GAAWE,KAAKF,QAC1B,IAAI6pB,EAAcxoB,EACJ,WAAVE,GAAsB4W,EAAc9W,EAAO,MAC7CwoB,EAAexoB,EAAoBsE,KAAI2C,GAAK6P,GAAkB7P,MAEhE,MAAM/H,EAASP,EAAQoB,MAAMyoB,EAAavoB,EAAOC,GAC3CmK,EAAI,IAAIwS,GAAO5c,EAAOC,EAAOhB,EAAQL,KAAKomB,gBAIhD,GAHApmB,KAAK4f,OAAOpU,EAAG1L,GAGD,WAAVuB,EAAoB,CACtB,MAAMmkB,EAAOxlB,KAAKyjB,MAAMb,WAAWxiB,IAAIC,GACjC0iB,EAAW5b,EAAqBwiB,GACtC3pB,KAAKyjB,MAAMtB,UAAYY,EAAWyC,EAAKpe,MACvCoe,EAAKpe,MAAQ2b,EAEf,OAAOvX,CACT,CAOA+a,oBAAAA,CACIlmB,EAAgBe,EAAiBC,EACjCvB,GAEF,MAAM0L,EAAI,IAAIwS,GAAO5c,EADrBC,EAAQA,GAAS,UACkBhB,EAAQL,KAAKomB,gBAEhD,OADApmB,KAAK4f,OAAOpU,EAAG1L,GACR0L,CACT,CAEA0T,YAAAA,CACIM,EAAsBP,GAAY,EAAMxT,EACxCpK,GACFoK,EAAOA,GAAQzL,KAAKqmB,iBAAiBrL,WACxB,MAAT3Z,GAAiBA,IAAUme,EAAane,QAC1Cme,EAAeA,EAAaT,KAAK1d,IAEnC,MAAMub,EAAI,IAAI2C,GAASC,EAAcP,EAAWxT,EAAMzL,KAAKomB,gBAC3D,GAA8C,MAA1CpmB,KAAKyjB,MAAMxB,oBAAoBrF,EAAEnR,MACnC,MAAM,IAAI7J,MAAM,sBAAsBgb,EAAEnR,+BAI1C,OAFAzL,KAAKyjB,MAAMxB,oBAAoBrF,EAAEnR,MAAQmR,EACzC5c,KAAK4f,OAAOhD,EAAG5c,KAAKF,SACb8c,CACT,CAEAgD,MAAAA,CAAOrc,EAAWzD,GAChB,MAAM8pB,EAAW5pB,KAAKyjB,MAAMb,WAAWtiB,IAAIiD,EAAElD,QACzCL,KAAKyjB,MAAMb,WAAWxiB,IAAImD,EAAElD,QAAQupB,SACpC,EAKJ,GAJA5pB,KAAKyjB,MAAMrB,aACK,WAAZ7e,EAAElC,OACJrB,KAAKyjB,MAAMpB,mBAEI,IAAbuH,EAAgB,CAClB5pB,KAAKyjB,MAAMnB,iBAIX,IAAIlb,EAAQ,EACI,cAAZ7D,EAAElC,OAAqC,WAAZkC,EAAElC,QAC/B+F,EAAQ7D,EAAEQ,KAAOkU,EAAqB1U,EAAElC,QAE1CrB,KAAKyjB,MAAMb,WAAWpiB,IAAI+C,EAAElD,OAAQ,CAClCP,QAASA,GAAWE,KAAKF,QACzBuB,MAAOkC,EAAElC,MACTD,MAAOmC,EAAEnC,MACTgG,QACAwiB,SAAU,IAEZ5pB,KAAKyjB,MAAMtB,UAAY/a,EAGzBpH,KAAKyjB,MAAMb,WAAWxiB,IAAImD,EAAElD,QAAQupB,WAE9BrmB,aAAagc,IACjBvf,KAAK6pB,MAAMtmB,EAEf,CAEAqb,aAAAA,CAAcrb,GACZ,IAAKvD,KAAKyjB,MAAMb,WAAWtiB,IAAIiD,EAAElD,QAC/B,OAGFL,KAAKyjB,MAAMrB,aACK,WAAZ7e,EAAElC,OACJrB,KAAKyjB,MAAMpB,mBAEb,MAAMmD,EAAOxlB,KAAKyjB,MAAMb,WAAWxiB,IAAImD,EAAElD,QACxBmlB,EAAKoE,UAEN,GAGE,cAAZrmB,EAAElC,QACJrB,KAAKyjB,MAAMtB,UAAYqD,EAAKpe,OAE9BpH,KAAKyjB,MAAMnB,iBAEXkD,EAAK1lB,QAAQmB,YAAYsC,EAAElD,QAC3BL,KAAKyjB,MAAMb,WAAWniB,OAAO8C,EAAElD,SAE/BL,KAAKyjB,MAAMb,WAAWxiB,IAAImD,EAAElD,QAAQupB,UAKxC,CAEAE,gBAAAA,GACE,IAAK,MAAMC,KAAW/pB,KAAKyjB,MAAMxB,oBAAqB,CACpD,MAAMrF,EAAI5c,KAAKyjB,MAAMxB,oBAAoB8H,GACzC/pB,KAAK6f,gBAAgBjD,GAEzB,CAEAiD,eAAAA,CAAgBjD,GACd5c,KAAK4e,cAAchC,GAC2B,MAA1C5c,KAAKyjB,MAAMxB,oBAAoBrF,EAAEnR,cAC5BzL,KAAKyjB,MAAMxB,oBAAoBrF,EAAEnR,KAE5C,CAEAlK,MAAAA,GACE,MAAMikB,EAAOxlB,KAAKF,QAAQyB,SAa1B,OAZAikB,EAAKpD,WAAapiB,KAAKyjB,MAAMrB,WAC7BoD,EAAKlD,eAAiBtiB,KAAKyjB,MAAMnB,eACjCkD,EAAKrD,SAAWniB,KAAKyjB,MAAMtB,SACvBniB,KAAKyjB,MAAMpB,iBAAmB,IAChCmD,EAAKwE,YAAa,EACE,MAAhBxE,EAAKyE,UACPzE,EAAKyE,QAAU,IAEjBzE,EAAKyE,QAAQpmB,KACT,0EAGC2hB,CACT,CAEA,aAAM0E,CAAQC,GAEZnqB,KAAKyjB,MAAMZ,WAAY,EAEvB,MAAMuH,EAAapqB,KAAKyjB,MAAMtB,SACxBkI,EAAkBrqB,KAAKyjB,MAAMrB,WAEnCpiB,KAAKyjB,MAAMX,cAAcI,QAAU,GACnCljB,KAAKyjB,MAAMX,cAAcvjB,aAAe4qB,IAExCnqB,KAAKyjB,MAAMZ,WAAY,EAEvB7iB,KAAKyjB,MAAMX,cAAcG,UAAY9gB,KAAKK,OACnCxC,KAAKyjB,MAAMX,cAAcI,QAAQzd,KAAI2C,GAAKA,EAAEugB,sBACnD3oB,KAAKyjB,MAAMX,cAAcC,SAAW/iB,KAAKyjB,MAAMtB,SAAWiI,EAC1DpqB,KAAKyjB,MAAMX,cAAcE,WACrBhjB,KAAKyjB,MAAMrB,WAAaiI,EAC5B,IAAK,MAAMxF,KAAU7kB,KAAKyjB,MAAMX,cAAcI,QAC5C2B,EAAOoE,mBAAqBpE,EAAOoE,aACnCpE,EAAOpK,gBAAkBoK,EAAOpK,UAElC,OAAOza,KAAKyjB,MAAMX,aACpB,CAEA2E,QAAAA,GACE,OAAOznB,KAAKyjB,MAAMlB,cAAgB,GAAgC,IAA3BviB,KAAKyjB,MAAMjB,WACpD,CAEQgE,WAAAA,CACJ7kB,EAAoBoY,EAAwBC,EAC5CsQ,EAAyB9C,EAAiBZ,GAC5C,MAAM2D,EACF,CAACtM,GAAIje,KAAKyjB,MAAMvB,iBAAkBvgB,aAAYoY,SAAQC,UAASwN,SAE7D0B,EAAanS,GAAYpV,GACb,MAAdunB,IACFoB,EAAgBpB,EAAWsB,UAER,MAAjBF,IACFC,EAASE,SAAYC,IAGnBA,EAAMA,EAAIjlB,KAAI,CAACihB,EAAI7jB,KACjB,GAAU,MAAN6jB,EAAY,CACd,MAAMvM,EAASH,EAAQnX,GACjB6D,EAAOuR,EAAyBkC,EAAOpW,KAAMoW,EAAO9Y,OAC1D,OAAOrB,KAAK8d,WAAWpX,EAAMyT,EAAO/Y,MAAO+Y,EAAO9Y,OAEpD,OAAOqlB,CAAE,IAIJ4D,EAAcI,EAAI1oB,OAAS,EAAI0oB,EAAMA,EAAI,GAAIlD,EAAOZ,KAG/D5mB,KAAKyjB,MAAMkH,WAAW9mB,KAAK0mB,EAC7B,CAEAhC,IAAAA,CAAuBhpB,GAErB,OADAA,EAAO2e,MAAO,EACP3e,CACT,CAEQqrB,SAAAA,GAC2B,IAA7B5qB,KAAKyjB,MAAMlB,gBACbviB,KAAKyjB,MAAMkH,WAAa,IAE1B3qB,KAAKyjB,MAAMlB,eACb,CAEQsI,OAAAA,GACN7qB,KAAKyjB,MAAMlB,eACb,CAMAwD,UAAAA,CAAWta,GACT,MAAMqf,EAAwB,CAC5BjB,MAAO,GACPpe,KAAM,gBACNwS,GAAIje,KAAKyjB,MAAMd,eAEblX,IACFqf,EAAUrf,KAAOA,GAEnBzL,KAAKyjB,MAAMhB,WAAW5e,KAAKinB,GAC3B9qB,KAAKyjB,MAAMgD,YAAcqE,CAC3B,CAMA9E,QAAAA,CAASzmB,GACP,MAAMwrB,EAAyBhK,GAAsBxhB,GAC/CyrB,EACF,IAAI9J,IAAI6J,EAAuBtlB,KAAI+F,GAAKA,EAAEyS,MAG9C,IAAK,IAAIpb,EAAI,EAAGA,EAAI7C,KAAKyjB,MAAMgD,YAAYoD,MAAM7nB,OAAQa,IAAK,CAC5D,MAAM8e,EAAS3hB,KAAKyjB,MAAMgD,YAAYoD,MAAMhnB,GACvC8e,EAAOzD,MAAS8M,EAA0B1qB,IAAIqhB,EAAO1D,KACxD0D,EAAOjgB,UAIX,MAAMupB,EAAWjrB,KAAKyjB,MAAMhB,WAAWyI,MACvClrB,KAAKyjB,MAAMgD,YAA+C,IAAjCzmB,KAAKyjB,MAAMhB,WAAWzgB,OAC3C,KACAhC,KAAKyjB,MAAMhB,WAAWziB,KAAKyjB,MAAMhB,WAAWzgB,OAAS,GAGzD+oB,EAAuB1jB,SAAQsa,IAGxBA,EAAOzD,MAAQyD,EAAOwJ,UAAYF,EAAShN,IAC9Cje,KAAK6pB,MAAMlI,KAGjB,CAQAyJ,SAAAA,CACIvqB,EAAYwqB,EAAc3E,EAC1B4E,GAAmB,GAGrB,GAFArT,EACIoT,EAAGrpB,OAAS,GAAG,IAAM,8CACf,MAAN0kB,GAA2B,YAAbA,EAAGrlB,MACnB,MAAM,IAAIO,MAAM,0CAA0C8kB,EAAGrlB,UAG/D,MAAMilB,EAAItmB,KAAK8lB,WACX,IAAM9lB,KAAK4qB,cAAa,IAAM5qB,KAAK6qB,YACnC,IAAM7qB,KAAK2lB,KAAK,UAAW9kB,KAE/BoX,EACIqO,aAAatI,IACb,IAAM,mDAEV,MAAMuN,ECrhCJ,SACFC,EAAkBH,EAAc/E,GAGlC,MAAMmF,EAA8C,CAAA,EAC9CC,EAA0C,CAAA,EAChD,IAAK,IAAI7oB,EAAI,EAAGA,EAAIwoB,EAAGrpB,OAAQa,IAC7B4oB,EAAaJ,EAAGxoB,GAAGob,KAAM,EAG3B,IAAK,IAAIpb,EAAI,EAAGA,EAAI2oB,EAAKxpB,OAAQa,IAAK,CACpC,MAAM8oB,EAAOH,EAAK3oB,GACZ+oB,EAAaD,EAAK5R,OACxB,IAAK,MAAMwP,KAAaqC,EAAY,CAClC,MAAM1Q,EAAQ0Q,EAAWrC,GAEzB,IAAIsC,GAAgB,EACpB,IAAK,IAAI1lB,EAAI,EAAGA,EAAIklB,EAAGrpB,OAAQmE,IAC7B,GAAIslB,EAAavQ,EAAM+C,IAAK,CAC1B0N,EAAK3R,QAAQ3S,SAAQ8S,GAAUsR,EAAatR,EAAO8D,KAAM,IACzD4N,GAAgB,EAChBH,EAAWC,EAAK1N,KAAM,EACtB,MAIJ,GAAI4N,EACF,OAMN,MAAMC,EAAgD,CAAA,EACtDA,EAAexF,EAAErI,KAAM,EACvB,MAAM8N,EAAwC,CAAA,EAE9C,IAAK,IAAIlpB,EAAI2oB,EAAKxpB,OAAS,EAAGa,GAAK,EAAGA,IAAK,CACzC,MAAM8oB,EAAOH,EAAK3oB,GACZ+oB,EAAaD,EAAK5R,OAGxB,IAAK,IAAI5T,EAAI,EAAGA,EAAIwlB,EAAK3R,QAAQhY,OAAQmE,IACvC,GAAI2lB,EAAeH,EAAK3R,QAAQ7T,GAAG8X,IAAK,CACtC,IAAK,MAAMsL,KAAaqC,EACtBE,EAAeF,EAAWrC,GAAWtL,KAAM,EAC3C8N,EAASJ,EAAK1N,KAAM,EAEtB,OAMN,MAAMsN,EAA2B,GACjC,IAAK,IAAI1oB,EAAI,EAAGA,EAAI2oB,EAAKxpB,OAAQa,IAAK,CACpC,MAAM8oB,EAAOH,EAAK3oB,GAElB,GAAI6oB,EAAWC,EAAK1N,KAAO8N,EAASJ,EAAK1N,IAAK,CAE5C,MAAM+N,EAA8C,CAAA,EACpD,IAAK,MAAMzC,KAAaoC,EAAK5R,OAAQ,CACnC,MAAMkS,EAAYN,EAAK5R,OAAOwP,GAC1BkC,EAAaQ,EAAUhO,MACzB+N,EAAazC,GAAa0C,GAK9B,MAAMC,EAAanhB,OAAOC,OAAO,CAAE,EAAE2gB,GACrCO,EAAWnS,OAASiS,EACpBE,EAAWlS,QAAU2R,EAAK3R,QAE1BuR,EAAa1nB,KAAKqoB,IAItB,OAAOX,CACT,CDu8ByBY,CAAqBnsB,KAAKyjB,MAAMkH,WAAYU,EAAI/E,GACrE,IAAKgF,GAA4C,IAAxBC,EAAavpB,QAAgBqpB,EAAGrpB,OAAS,EAChE,MAAM,IAAIJ,MACN,uIAKN,OAAO5B,KAAK2lB,KAAK,YAAY,KAC3B,MAAMyG,EAAuD,CAAA,EAC7DA,EAAuB9F,EAAErI,IAAa,MAANyI,EAkJtC,SAActlB,GACZ,MAAMD,EAASwH,EAAmB7E,EAAc1C,GAAQ,WACxD,OAAOylB,GAAO/I,WAAW3c,EAAQC,EAAO,UAC1C,CArJoDirB,CAAK/F,EAAEllB,OAASslB,ECx8B9D,SACF4F,EACAf,EAA0B5F,EAC1BnE,GAEF,IAAK,IAAI3e,EAAI0oB,EAAavpB,OAAS,EAAGa,GAAK,EAAGA,IAAK,CACjD,MAAM8oB,EAAOJ,EAAa1oB,GAEpB6nB,EAAgB,GAYtB,GAXAiB,EAAK3R,QAAQ3S,SAAQklB,IACnB,MAAMC,EAAaF,EAA6BC,EAAEtO,IAChC,MAAduO,EACF9B,EAAI7mB,KAAK2oB,GAIT9B,EAAI7mB,KAAK,SAIQ,MAAjB8nB,EAAKlB,SACP,MAAM,IAAI7oB,MAEN,4DAAO+pB,EAAKhqB,eAIlB,MAAM8qB,EAAiBd,EAAKlB,SAASC,GAErC,IAAK,MAAMnB,KAAaoC,EAAK5R,OAAQ,CACnC,KAAMwP,KAAakD,GACjB,MAAM,IAAI7qB,MACN,iCAAiC2nB,iCACHxe,OAAOsZ,KAAKoI,OAIhD,MAAMC,EAAK/G,GAAK,IAAM8G,EAAelD,OACrC,GAAiB,YAAbmD,EAAGrrB,MACL,MAAM,IAAIO,MACN,4BACI+pB,EAAKhqB,qCACN4nB,yCAAiDmD,EAAGrrB,UAE7D,MAAMkB,EAAIopB,EAAK5R,OAAOwP,GACtB,IAAKtR,EAAiByU,EAAGtrB,MAAOmB,EAAEnB,OAChC,MAAM,IAAIQ,MACN,4BACI+pB,EAAKhqB,sCACL4nB,iBAAyBmD,EAAGtrB,wDACLmB,EAAEnB,UAGnC,GAA0C,MAAtCkrB,EAA6B/pB,EAAE0b,IACjCqO,EAA6B/pB,EAAE0b,IAAMyO,MAChC,CACL,MAAMC,EAAcL,EAA6B/pB,EAAE0b,IACnDqO,EAA6B/pB,EAAE0b,IAAMuD,EAAImL,EAAaD,GACtDC,EAAYjrB,YAIpB,CD64BMkrB,CACIR,EAAwBb,GAExB1qB,GAAKb,KAAK2lB,KAAK9kB,IAEf2gB,IACJ,MAAMqL,EAAQxB,EAAG5lB,KAAIlD,GAAK6pB,EAAuB7pB,EAAE0b,MAYnD,OAViC,IAA7Bje,KAAKyjB,MAAMlB,gBAGbviB,KAAKyjB,MAAMkH,WAAWtjB,SAAQskB,IAC5B,IAAK,MAAMhK,KAAUgK,EAAKnE,MACxB7F,EAAOjgB,aAGX1B,KAAKyjB,MAAMkH,WAAa,MAEnB,CAACzrB,MAAOonB,EAAGuG,QAAM,GAE5B,CAEAC,UAAAA,CAA6BjsB,GAK3B,OAHAoX,EACIA,EAAgBpX,IAChB,IAAM,sDACH,IAAIkZ,KAMT,IAAImM,EALJjO,EACI8B,EAAOnU,OAAM4F,GAAKA,aAAawS,MAC/B,IAAM,qEAOV,MAAM+O,EAA2B,CAAA,EACjChT,EAAO1S,SAAQ,CAAC6T,EAAOrY,KACrBkqB,EAASlqB,GAAKqY,CAAK,IAoCrB,OAAOlb,KAAK+mB,cAAc,CACxBqB,YAlCkCA,CAACsB,EAAGsD,KACtC9G,EAAMrlB,KAASkZ,EAAQiT,GACvB/U,EACIiO,EAAIhnB,iBAAiB8e,IACrB,IAAM,+FAEV/F,EACIA,EAAgBiO,EAAIsE,WACpB,IAAM,qGAEHtE,EAAIhnB,OAyBXupB,cAtBoBA,CAAC/B,EAAOc,KAC5B,MAAMyF,EAAU/G,EAAIsE,SAAS9D,EAAIc,GAC3BqF,EAAkBnpB,MAAMC,QAAQspB,GAAWA,EAAU,CAACA,GAC5DhV,EACI4U,EAAM7qB,SAAW+X,EAAO/X,QACxB,IAAM,wKAGViW,EACI4U,EAAMjnB,OAAM4F,GAAKA,aAAawS,MAC9B,IAAM,yIAGV,MAAMkP,EAAyC,CAAA,EAI/C,OAHAL,EAAMxlB,SAAQ,CAAC8lB,EAAMtqB,KACnBqqB,EAAQrqB,GAAK,IAAMsqB,CAAI,IAElBD,CAAO,EAMdnT,OAAQgT,GACR,CAEN,CAEA/rB,QAAAA,CAASX,GAGP,OADaL,KAAKyjB,MAAMb,WAAWxiB,IAAIC,GAC3BP,QAAQkB,SAASX,EAC/B,CACAU,IAAAA,CAAKV,GAGH,OADaL,KAAKyjB,MAAMb,WAAWxiB,IAAIC,GAC3BP,QAAQiB,KAAKV,EAC3B,CAEA,UAAMO,CAAKupB,GACT,MAAMriB,EAAQ8P,KACRwV,QAAmBptB,KAAKF,QAAQc,KAAKupB,GAE3C,OADAiD,EAAWC,OAASzV,KAAQ9P,EACrBslB,CACT,CAQQvD,KAAAA,CAAwBtqB,GAM9B,OAL8B,MAA1BS,KAAKyjB,MAAMgD,cACblnB,EAAO4rB,QAAUnrB,KAAKyjB,MAAMgD,YAAYxI,GACxCje,KAAKyjB,MAAMgD,YAAYoD,MAAMhmB,KAAKtE,IAG7BA,CACT,CAEA,uBAAI0iB,GACF,OAAOjiB,KAAKyjB,MAAMxB,mBACpB,CAMAhX,KAAAA,GAEEjL,KAAKwjB,uBAELxjB,KAAKyjB,MAAM/hB,UACX1B,KAAKoM,IAAInB,QACTjL,KAAKyjB,MAAQ,IAAIzB,GAEjB,IAAK,MAAMnL,KAAe7W,KAAKsjB,SAC7BtjB,KAAK+kB,yBAAyBlO,GAC9B7W,KAAKsjB,SAASzM,GAAanV,iBACpB1B,KAAKsjB,SAASzM,GAEvB7W,KAAK6W,YAAc,KACnB7W,KAAK4jB,gBAAkB,KACvB5jB,KAAK2jB,mBAAqB,IAC5B,EAQI,SAAU2J,KACd,MAAM/gB,EAAKD,IACX,GAAoB,MAAhBC,EAAGghB,UAAmB,CACxB,MAAMC,EAAc,IAAIhkB,EAAY+C,GACpCA,EAAGghB,UAAY,IAAIlK,GAAOmK,GVvhCxB,IAA+BA;;;;;;;;;;;;;;;;GU8hCnC,OV9hCmCA,EUyhCdjhB,EAAGghB,UAAUnhB,IVxhClCA,EAAMohB,EOLN3P,GGiiCiB,IAAMtR,EAAGghB,UACnBhhB,EAAGghB,SACZ,CAxwBiBlK,GAAA+C,aAAe,EAKf/C,GAAAgD,eAAiB,EAqwB3B,MAAMQ,GAASyG,KAQhB,SAAU9L,GAAIje,EAAWmV,GAE7B,MAAMqB,EAAS,CAACxW,IAAGmV,KACnB,OAAOmO,GAAOC,UAAUzZ,GAAK0M,EAC/B;;;;;;;;;;;;;;;;GEruCM,SAAU0T,KACd,GAJ4B,oBAAdC,WAA0C,MAAbA,UAIhB,CAEzB,MAAMnqB,EAAImqB,UAAUC,WAAaD,UAAUE,QAAWphB,OAAeqhB,MAErE,MAAO,2TACKC,KAAKvqB,IAEb,0kDACKuqB,KAAKvqB,EAAEwqB,OAAO,EAAG,IAE5B,OAAO,CACT,CAEM,SAAUC,KACd,MAA0B,oBAAXxhB,QAA6C,MAAnBA,OAAOyhB,UAEd,oBAAtBC,iBACd,CCxCA,IAAAC,GAAApjB,OAAAmN,OAAA,CAAAC,UAAA,KAAA6V,UAAAA,GAAAP,SAAAA;;;;;;;;;;;;;;;;GAqBA,MAAMrhB,GAAMD;;;;;;;;;;;;;;;;;ACEN,SAAUiiB,GAAW1rB,EAAiBrB,GAC1C,IAAIgtB,EAAwB3rB,EAE5B,GAAIkB,EAAalB,GACf,MAAiB,WAAVrB,EAAqB,GAAK,CAACqB,EAAIV,QAExC,IAAK0B,MAAMC,QAAQjB,GACjB,MAAO,GAET,MAAMtB,EAAkB,GAExB,KAAOsC,MAAMC,QAAQ0qB,IACdzqB,EAAayqB,IAAwB,WAAVhtB,GAChCD,EAAMyC,KAAKwqB,EAAUrsB,QACrBqsB,EAAYA,EAAU,GAOxB,OALI3qB,MAAMC,QAAQjB,IACdyJ,IAAMxB,QAAQ,uCAChB2jB,GAA2B5rB,EAAKtB,EAAO,IAGlCA,CACT,CAEA,SAASktB,GACL5rB,EAAiBtB,EAAiBmtB,GAEpC,GADAA,EAAUA,GAAW,IACf7qB,MAAMC,QAAQjB,KAAUkB,EAAalB,GAKzC,YAJAI,EACqB,IAAjB1B,EAAMY,QACN,IAAM,eAAeusB,EAAQ3iB,KAAK,+DACUxK,EAAM,gBAGxD0B,EACI1B,EAAMY,OAAS,GACf,IAAM,eAAeusB,EAAQ3iB,KAAK,oDACRlJ,EAAIV,oBAClCc,EACIJ,EAAIV,SAAWZ,EAAM,IACrB,IAAM,eAAemtB,EAAQ3iB,KAAK,sBAAsBxK,EAAM,wBACrCsB,EAAIV,oBACjC,MAAMwsB,EAAWptB,EAAMiE,MAAM,GAC7B,IAAK,IAAIxC,EAAI,EAAGA,EAAIH,EAAIV,SAAUa,EAChCyrB,GAA2B5rB,EAAIG,GAAI2rB,EAAUD,EAAQ5oB,OAAO9C,GAEhE,CAEA,SAAS4rB,GACLC,EACAC,EAAuBC,EAAiBC,GAC1C,GAAsB,sBAAlBH,EAAJ,CAGA,GAAqB,MAAjBA,EACF,MAAM,IAAI9sB,MAAM,kCAElB,GAAsB,YAAlB8sB,GAA+BA,IAAkBC,GAC/B,YAAlBD,GAA+C,WAAhBC,EACjC,MAAM,IAAI/sB,MACN,aAAagtB,iBAAuBC,cAC9BH,qBAAiCC,YAE/C,CAEM,SAAUG,GACZvsB,EAAiBqsB,EAAiBC,EAClCE,EAAuD,WACzD,GAAIxsB,aAAayb,GAEf,OADAyQ,GAAYM,EAAcxsB,EAAElB,MAAOutB,EAASC,GACrCtsB,EAET,IAAIysB,EAAgBtnB,EAAWnF,GAS/B,GANsB,WAAlBysB,GACA,CAAC,OAAQ,QAAS,WAAWC,QAAQF,IAAiB,IACxDC,EAAgBD,GAElBN,GAAYM,EAAcC,EAAeJ,EAASC,GAExC,MAALtsB,IACCqB,EAAarB,KAAOmB,MAAMC,QAAQpB,IAAmB,iBAANA,GACnC,kBAANA,GAAgC,iBAANA,EAAiB,CACrD,MAAMqe,EAAY,MAALre,EAAY,OAAUA,EAAS1C,YAAY4L,KACxD,MAAM,IAAI7J,MACN,aAAagtB,iBAAuBC,+CACFjO,MAExC,MAAMsO,EAAgBd,GAAW7rB,EAAGysB,GAC/BprB,EAAarB,IAAOmB,MAAMC,QAAQpB,KACrCA,EAAI,CAACA,IAEP,MACMpB,EAA2B,WAAlB6tB,EACXzX,GAAahV,EAAGysB,GAChBxrB,EAAQjB,EAAe,IAHJ,GAIvB,OAAOskB,GAAO/I,WAAW3c,EAAQ+tB,EAAeF,EAClD,CAEM,SAAUG,GACZC,EAA0BR,EAAiBC,EAC3CE,EAAuD,WACzD,IAAKrrB,MAAMC,QAAQyrB,GACjB,MAAM,IAAIxtB,MACN,YAAYgtB,eAAqBC,gDAIvC,OADgBO,EACD3pB,KACX,CAAC+F,EAAG3I,IACAisB,GAAgBtjB,EAAG,GAAGojB,KAAW/rB,KAAMgsB,EAAcE,IAC/D;;;;;;;;;;;;;;;;GD3GA3iB,GAAIjC,aAAa,SAAS,KAAM,IAAOklB,IACjCA,GACFplB,QAAQC,KACJ,kJAORkC,GAAIjC,aAAa,cAAc,IAAMgkB,OAGrC/hB,GAAIjC,aACA,WACA,IAA0B,oBAAZsC,cACmB,IAArBA,QAAQ6iB,eACkB,IAA1B7iB,QAAQ6iB,SAAS3D,OAGjCvf,GAAIjC,aACA,aACA,IAA2B,oBAAdujB,WAA0C,MAAbA,WACf,MAAvBA,UAAUC,WAAqB,SAASG,KAAKJ,UAAUC,YACvD,aAAaG,KAAKJ,UAAUE,UAMpCxhB,GAAIjC,aAAa,QAAQ,KAAM,IAM/BiC,GAAIjC,aACA,sCAAsC,IAAMiC,GAAIzB,QAAQ,WAG5DyB,GAAIjC,aAAa,gCAAgC,KAAM,IAGvDiC,GAAIjC,aAAa,WAAW,KAAM,IAGlCiC,GAAIjC,aAAa,gCAAgC,KAAM,IEvDhD,MAAMolB,GAAkB,OAOzB,SAAUC,GAAuB3uB,GACrC,MAAMwjB,EAAOtZ,OAAOsZ,KAAKxjB,GACzB,GAAoB,IAAhBwjB,EAAKriB,OACP,MAAM,IAAIJ,MAGN,yGAAGyiB,EAAKriB,gBAGd,IAAIytB,EAASpL,EAAK,GAClB,MAAMwB,EAAKhlB,EAAE4uB,GAGTA,EAAOC,SAAS,OAClBD,EAASA,EAAOE,UAAU,EAAGF,EAAOztB,OAAS,IAI/CytB,GAAkBF,GAGlB,MAAMK,EAAKA,IAAIC,KACbhJ,GAAOd,WAAW0J,GAClB,IACE,MAAMlwB,EAASsmB,KAAMgK,GAKrB,OAJIxmB,EAAU9J,IACZ0K,QAAQgc,MAAM,2CAEhBY,GAAOb,SAASzmB,GACTA,CACR,CAAC,MAAO4mB,GAEP,MADAU,GAAOb,SAAS,MACVG,IAMV,OAHApb,OAAOoU,eAAeyQ,EAAI,OAAQ,CAAC1wB,MAAOuwB,EAAQK,cAAc,IAGzDF,CACT;;;;;;;;;;;;;;;;GCPO,MAAMG,GAAUP,GAAG,CAACQ,SAZ3B,SAAoCC,EAAoBC,GACtD,MAAMC,EAAQrB,GAAgBmB,EAAM,OAAQ,WACtCG,EAAQtB,GAAgBoB,EAAM,OAAQ,WAC5CjY,EACIkY,EAAM/uB,MAAOgvB,EAAMhvB,MACnB,yBAAyB+uB,EAAM/uB,aAAagvB,EAAMhvB,8CAGtD,MAAM2Y,EAAwB,CAACkW,KAAME,EAAOD,KAAME,GAClD,OAAOvJ,GAAOC,UAAUpY,GAASqL,EACnC;;;;;;;;;;;;;;;;GChCM,SAAU+D,GACZ3c,EAAoBC,EAAiB8tB,EACrC7tB,GAIF,GAHa,MAATA,IACFA,EAAQqG,EAAWvG,IAEP,cAAVE,EACF,MAAM,IAAIO,MACN,oFAGN,IAAKgC,EAAazC,KAAYuC,MAAMC,QAAQxC,IACtB,iBAAXA,GAAyC,kBAAXA,GACnB,iBAAXA,EACT,MAAM,IAAIS,MACN,4HAGN,GAAa,MAATR,EAAe,CACjByH,EAAmCzH,GAEnC,MAAMivB,EAAevsB,EAAc1C,GAC7BkvB,EAAexsB,EAAcorB,GACnCpsB,EACIutB,IAAiBC,GACjB,IACI,iCAAiClvB,8BAC9BivB,oBAA+BC,MAE1C,IAAK,IAAIztB,EAAI,EAAGA,EAAIqsB,EAAcltB,SAAUa,EAAG,CAC7C,MAAM0tB,EAAWrB,EAAcrsB,GACzB2tB,EAAoB3tB,IAAMqsB,EAAcltB,OAAS,GACnDuuB,IAAazsB,EAAc1C,EAAMiE,MAAMxC,IAE3CC,EACIosB,EAAcrsB,KAAOzB,EAAMyB,KAAO2tB,GAClC,IACI,gDAAItB,yCACM9tB,UAYtB,OARKwC,EAAazC,IAAYuC,MAAMC,QAAQxC,KAC1CA,EAAS,CAACA,IAGZC,EAAQA,GAAS8tB,EACjB/tB,EAAmB,WAAVE,EACLkW,GAAapW,EAAQE,GACrBmC,EAAQrC,EAAoB,IAAI,GAC7B0lB,GAAO/I,WAAW3c,EAAsBC,EAAOC,EACxD;;;;;;;;;;;;;;;;GCvBM,SAAUsgB,GACZxgB,EAAoBC,EAAqBC,GAE3C,OAAOyc,GAAW3c,EAAQC,EADJgtB,GAAWjtB,EAAQE,GACOA,EAClD;;;;;;;;;;;;;;;;GClCO,MAAMovB,GAAkD,CAC7DpQ,QAAW,EACXqQ,QAAW,EACXpQ,MAAS,EACTqQ,OAAU,EACVC,MAAS,EACTlZ,KAAQ,EACR6I,UAAa,GCFTsQ,GAA0B;;;;;;;;;;;;;;;;GAqF1B,SAAUC,GACZzS,EAAqB0S,GAEvB,MAAMlJ,EAAsB,CAAA,EAC5B,IAAImJ,EACA9oB,EAAS,EACb,IAAK,MAAM+oB,KAAQF,EAAO,CACxB,MAAMtlB,EAAOwlB,EAAKxlB,KACZpK,EAAQ4vB,EAAK5vB,MACbD,EAAQ6vB,EAAK7vB,MACb2C,EAAOD,EAAc1C,GAC3B,IAAID,EAEJ,GAAI,iBAAkB8vB,EAAM,CAC1B,MAAMC,EAAeD,EAAKC,aAC1B,GAA2B,UAAvBA,EAAa7vB,OAA4C,WAAvB6vB,EAAa7vB,OACjD,KAAM,QAAS6vB,MAAgB,UAAWA,GACxC,MAAM,IAAItvB,MACN,UAAUqvB,EAAKxlB,0BAA0BylB,EAAa7vB,gEAGvD,IAA2B,YAAvB6vB,EAAa7vB,MAOtB,MAAM,IAAIO,MACN,UAAUqvB,EAAKxlB,uCACOylB,EAAa7vB,+EARvC,GAAc,YAAVA,EACF,MAAM,IAAIO,MACN,UAAUqvB,EAAKxlB,0BAA0BylB,EAAa7vB,yDACHA,MAS3D,MAAM8vB,EAAyBV,GAAqBS,EAAa7vB,OAC3D+vB,EACF/S,EAAOhZ,MAAM6C,EAAQA,EAASnE,EAAOotB,GACnCE,EAAyC,UAAvBH,EAAa7vB,MACjC,IAAIkF,WAAW6qB,GACf,IAAIE,YAAYF,GACpB,GAAc,YAAV/vB,EACF,GAA2B,UAAvB6vB,EAAa7vB,OAA4C,WAAvB6vB,EAAa7vB,MAAoB,CACrEF,EAAS,IAAIkF,aAAagrB,EAAervB,QACzC,IAAK,IAAIa,EAAI,EAAGA,EAAIwuB,EAAervB,OAAQa,IAAK,CAC9C,MAAM+Z,EAAIyU,EAAexuB,GACzB1B,EAAO0B,GAAK+Z,EAAIsU,EAAaK,MAAQL,EAAa5uB,IAErD,KAAM,IAA2B,YAAvB4uB,EAAa7vB,MAMtB,MAAM,IAAIO,MACN,iCAAiCsvB,EAAa7vB,uCAN5BmwB,IAAlBR,IACFA,EAAgBS,MAElBtwB,EAAS6vB,EAAcK,OAMpB,IAAc,UAAVhwB,EAYT,MAAM,IAAIO,MAAM,gCAAgC6J,OAAUpK,KAX1D,GAA2B,UAAvB6vB,EAAa7vB,OAA4C,WAAvB6vB,EAAa7vB,MACjD,MAAM,IAAIO,MACN,iCAAiCsvB,EAAa7vB,gCAGpDF,EAAS,IAAImF,WAAW+qB,EAAervB,QACvC,IAAK,IAAIa,EAAI,EAAGA,EAAIwuB,EAAervB,OAAQa,IAAK,CAC9C,MAAM+Z,EAAIyU,EAAexuB,GACzB1B,EAAO0B,GAAKV,KAAKwV,MAAMiF,EAAIsU,EAAaK,MAAQL,EAAa5uB,MAKjE4F,GAAUnE,EAAOotB,CAClB,MAAM,GAAc,WAAV9vB,EAAoB,CAC7B,MAAM0C,EAAOD,EAAcmtB,EAAK7vB,OAChCD,EAAS,GACT,IAAK,IAAI0B,EAAI,EAAGA,EAAIkB,EAAMlB,IAAK,CAC7B,MAAM6uB,EAAa,IAAIlZ,YACnB6F,EAAOhZ,MAAM6C,EAAQA,EAAS2oB,KAA0B,GAC5D3oB,GAAU2oB,GACV,MAAMzpB,EAAQ,IAAIb,WAAW8X,EAAOhZ,MAAM6C,EAAQA,EAASwpB,IAC1DvwB,EAAwB0C,KAAKuD,GAC9Bc,GAAUwpB,OAEP,CACL,MAAMC,EAAclB,GAAqBpvB,GACnC+vB,EAAa/S,EAAOhZ,MAAM6C,EAAQA,EAASnE,EAAO4tB,GAExD,GAAc,YAAVtwB,EACFF,EAAS,IAAIkF,aAAa+qB,QACrB,GAAc,UAAV/vB,EACTF,EAAS,IAAImF,WAAW8qB,QACnB,GAAc,SAAV/vB,EACTF,EAAS,IAAIoF,WAAW6qB,OACnB,IAAc,cAAV/vB,EAcT,MAAM,IAAIO,MAAM,gCAAgC6J,OAAUpK,KAd1B,CAChCF,EAAS,IAAIkF,aAAa+qB,GAC1B,MAAMnB,EAAO,IAAI5pB,aAAalF,EAAOa,OAAS,GACxC4vB,EAAQ,IAAIvrB,aAAalF,EAAOa,OAAS,GAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIotB,EAAKjuB,OAAQa,IAC/BotB,EAAKptB,GAAK1B,EAAW,EAAJ0B,GACjB+uB,EAAM/uB,GAAK1B,EAAW,EAAJ0B,EAAQ,GAE5B,MAAMgvB,EAAalQ,GAAOsO,EAAM7uB,EAAO,WACjC0wB,EAAcnQ,GAAOiQ,EAAOxwB,EAAO,WACzCymB,EAAIpc,GAAQskB,GAAQ8B,EAAYC,GAChCD,EAAWnwB,UACXowB,EAAYpwB,WAIdwG,GAAUnE,EAAO4tB,EAEL,cAAVtwB,IACFwmB,EAAIpc,GAAQkW,GAAOxgB,EAAQC,EAAOC,IAGtC,OAAOwmB,CACT,CAKM,SAAUkK,GAAuB1G,GAErC,GAAW,OAAPA,EACF,MAAM,IAAIzpB,MAAM,wBAAwBowB,KAAKC,UAAU5G,MAGzD,IAAI6G,EAAkB,EAStB,MAAMC,EAA6B,GACnC9G,EAAGhkB,SAAS9E,IAMV,GALA2vB,GAAmB3vB,EAAEmvB,WAErBS,EAAatuB,KACTtB,EAAEmvB,aAAenvB,EAAE8b,OAAOqT,WAAanvB,EACA,IAAKA,EAAE1C,YAAoB0C,MAChEA,aAAoB8D,cAAgB9D,aAAoB+D,YACxD/D,aAAoBgE,YACxB,MAAM,IAAI3E,MAAM,mCAAmCW,EAAE1C,YAAY4L,WAKrE,MAAM6a,EAAI,IAAI/f,WAAW2rB,GACzB,IAAIhqB,EAAS,EAMb,OALAiqB,EAAa9qB,SAAS9E,IACpB+jB,EAAE9lB,IAAI,IAAI+F,WAAWhE,EAAE8b,QAASnW,GAChCA,GAAU3F,EAAEmvB,UAAU,IAGjBpL,EAAEjI,MACX,CAGA,MAAM+T,GAAkC,oBAAXC,SACR,oBAATC,MAAwC,oBAATC,MACtB,oBAATC,MAWN,SAAUC,GAAiBC,GAC/B,OAAIN,GACKC,OAAOX,WAAWgB,GAEpB,IAAIJ,KAAK,CAACI,IAAM3uB,IACzB,CA6CM,SAAU4uB,GAAwBC,GACtC,GAAuB,IAAnBA,EAAQ5wB,OACV,OAAO4wB,EAAQ,GAGjB,IAAIV,EAAkB,EACtBU,EAAQvrB,SAASgX,IACf6T,GAAmB7T,EAAOqT,UAAU,IAGtC,MAAMzvB,EAAO,IAAIsE,WAAW2rB,GAC5B,IAAIhqB,EAAS,EAKb,OAJA0qB,EAAQvrB,SAASgX,IACfpc,EAAKzB,IAAI,IAAI+F,WAAW8X,GAASnW,GACjCA,GAAUmW,EAAOqT,UAAU,IAEtBzvB,EAAKoc,MACd,CASM,SAAUwU,GAASha,GAGvB,IADAA,EAAOA,EAAKia,OACLja,EAAK6W,SAFM,MAGhB7W,EAAOA,EAAKxT,MAAM,EAAGwT,EAAK7W,OAAS,GAErC,MAAM+wB,EAAQla,EAAK/M,MALD,KAMlB,OAAOinB,EAAMA,EAAM/wB,OAAS,EAC9B,CAOM,SAAUgxB,GAA6BC,GAE3C,GAAIA,EAAeC,yBAAyBC,YAC1C,MAAM,IAAIvxB,MAAM,uDAGlB,MAAO,CACLwxB,UAAW,IAAIC,KACfC,kBAAmB,OACnBC,mBAAoD,MAAhCN,EAAeC,cAC/B,EACAT,GAAiBT,KAAKC,UAAUgB,EAAeC,gBACnDM,iBAAgD,MAA9BP,EAAeQ,YAC7B,EACAhB,GAAiBT,KAAKC,UAAUgB,EAAeQ,cACnDC,gBAA8C,MAA7BT,EAAeU,WAC5B,EACAV,EAAeU,WAAWjC,WAElC,CAmFM,SAAUD,KAKd,MAAMmC,EAhFR,WACE,MAAMC,EAAmBhxB,IACvB,IAAIixB,EAAIjxB,GAAK,GACTxD,EAAI,EAER,OAAY,QAAJy0B,IACNz0B,GAAK,QACLy0B,IAAM,EAKR,OAHAA,IAAK,QACLz0B,GAAK,UAEEy0B,EAAIz0B,CAAC,EAGRu0B,EAAe,IAAIpb,YAAY,MAErCob,EAAa,GAAK,EAClB,IAAK,IAAI/wB,EAAI,EAAGA,EAAI,KAAMA,IACxB+wB,EAAa/wB,GAAKgxB,EAAgBhxB,GAEpC,IAAK,IAAIA,EAAI,KAAMA,EAAI,KAAMA,IAC3B+wB,EAAa/wB,GAAK,WAAeA,EAAI,MAAS,IAGhD,OAAO+wB,CACT,CAsDuBG,GACfC,EA/CR,WACE,MAAMA,EAAgB,IAAIxb,YAAY,IAEtCwb,EAAc,GAAK,EACnBA,EAAc,IAAM,WACpBA,EAAc,IAAM,WACpBA,EAAc,IAAM,WACpB,IAAK,IAAInxB,EAAI,EAAGA,EAAI,GAAIA,IACtBmxB,EAAcnxB,GAAKA,GAAK,GAE1B,IAAK,IAAIA,EAAI,GAAIA,EAAI,GAAIA,IACvBmxB,EAAcnxB,GAAK,YAAeA,EAAI,IAAO,IAG/C,OAAOmxB,CACT,CAgCwBC,GAChBC,EAzBR,WACE,MAAMA,EAAc,IAAI1b,YAAY,IAEpC,IAAK,IAAI3V,EAAI,EAAGA,EAAI,GAAIA,IACtBqxB,EAAYrxB,GAAK,KAInB,OAFAqxB,EAAY,GAAKA,EAAY,IAAM,EAE5BA,CACT,CAgBsBC,GAEpB,OAAQ9C,IACN,MAAMhT,EAAS,IAAI8U,YAAY,EAAI9B,EAAervB,QAC5CoyB,EAAmB,IAAI5b,YAAY6F,GACzC,IAAK,IAAInc,EAAQ,EAAGA,EAAQmvB,EAAervB,OAAQE,IAAS,CAC1D,MAAMmyB,EAAchD,EAAenvB,GAC7BoyB,EACFV,EAAaM,EAAYG,GAAe,KAAqB,KAAdA,IAC/CL,EAAcK,GAAe,IACjCD,EAAiBlyB,GAASoyB,EAE5B,OAAO,IAAIjuB,aAAagY,EAAO,CAEnC;;;;;;;;;;;;;;;;GC9dM,MAAOkW,GAOX10B,WAAAA,GACEG,KAAKw0B,YAAc,GACnBx0B,KAAKy0B,YAAc,EACrB,CAEQ,kBAAOC,GAIb,OAHiC,MAA7BH,GAAiBjV,WACnBiV,GAAiBjV,SAAW,IAAIiV,IAE3BA,GAAiBjV,QAC1B,CAQA,yBAAOqV,CAAmBC,GACxBL,GAAiBG,cAAcF,YAAY3wB,KAAK+wB,EAClD,CAQA,yBAAOC,CAAmBC,GACxBP,GAAiBG,cAAcD,YAAY5wB,KAAKixB,EAClD,CAUA,sBAAOC,CAAgBC,GACrB,OAAOT,GAAiBU,YAAYD,EAAK,OAC3C,CAUA,sBAAOE,CAAgBF,EAAsBG,GAE3C,OAAOZ,GAAiBU,YAAYD,EAAK,OAAQG,EACnD,CAEQ,kBAAOF,CACXD,EAAsBI,EACtBD,GACF,MAAME,EAA6B,GAUnC,OATgC,SAAhBD,EACZb,GAAiBG,cAAcD,YAC/BF,GAAiBG,cAAcF,aAC3BntB,SAAQiuB,IACd,MAAMC,EAAUD,EAAON,EAAKG,GACZ,OAAZI,GACFF,EAAcxxB,KAAK0xB,MAGhBF,CACT,EAGK,MC9EDG,GAAgB,eAMhBC,GAAmB,eAInBC,GAAkB,mBAexB,SAASC,KACP,IAAKxpB,IAAMxB,QAAQ,cAIjB,MAAM,IAAI/I,MACN,2FAIN,MAAMg0B,EAAmC,oBAAXppB,OAAyBE,KAAOF,OACxDgY,EAAUoR,EAAUC,WAAaD,EAAUE,cAC7CF,EAAUG,iBAAmBH,EAAUI,aACvCJ,EAAUK,cACd,GAAe,MAAXzR,EACF,MAAM,IAAI5iB,MACN,6DAEN,OAAO4iB,CACT,CAEA,SAAS0R,GAAcC,GACrB,MAAMC,EAAKD,EAAY52B,OACvB62B,EAAGC,kBAAkBZ,GAAkB,CAACa,QAAS,cACjDF,EAAGC,kBAAkBX,GAAiB,CAACY,QAAS,aAClD,CAOM,MAAOC,GAMX12B,WAAAA,CAAY22B,GAGV,GAFAx2B,KAAK61B,UAAYF,KAEA,MAAba,IAAsBA,EACxB,MAAM,IAAI50B,MACN,kEAEN5B,KAAKw2B,UAAYA,CACnB,CAEA,UAAMxJ,CAAKiG,GAET,GAAIA,EAAeC,yBAAyBC,YAC1C,MAAM,IAAIvxB,MACN,4FAIN,OAAO5B,KAAKy2B,eAAez2B,KAAKw2B,UAAWvD,EAE7C,CAEA,UAAMyD,GACJ,OAAO12B,KAAKy2B,eAAez2B,KAAKw2B,UAClC,CAgBQC,cAAAA,CAAeD,EAAmBvD,GAExC,OAAO,IAAIn0B,SAAmC,CAACC,EAASC,KACtD,MAAMm3B,EAAcn2B,KAAK61B,UAAUc,KAAKnB,GAzGrB,GA0GnBW,EAAYS,gBAAkB,IAAMV,GAAcC,GAElDA,EAAYU,UAAY,KACtB,MAAMT,EAAKD,EAAY52B,OAEvB,GAAsB,MAAlB0zB,EAAwB,CAE1B,MAAM6D,EAAUV,EAAGW,YAAYtB,GAAkB,YAE3CuB,EADaF,EAAQG,YAAYxB,IACTr1B,IAAIJ,KAAKw2B,WACvCQ,EAAWH,UAAY,KACrB,GAAyB,MAArBG,EAAWz3B,OAEb,OADA62B,EAAGc,QACIl4B,EAAO,IAAI4C,MACd,gCAAgC5B,KAAKw2B,6BAGzCz3B,EAAQi4B,EAAWz3B,OAAO0zB,iBAG9B+D,EAAWG,QAAUlR,IACnBmQ,EAAGc,QACIl4B,EAAOg4B,EAAW/Q,QAE3B6Q,EAAQM,WAAa,IAAMhB,EAAGc,YACzB,CAEL,MAAMG,EACFrE,GAA6BC,GAE3BqE,EAASlB,EAAGW,YAAYrB,GAAiB,aAC/C,IAAI6B,EAAYD,EAAOL,YAAYvB,IACnC,MAAM8B,EACFD,EAAUE,IAAI,CAACjB,UAAWx2B,KAAKw2B,UAAWa,uBAC9C,IAAIP,EACJU,EAAeX,UAAY,KAEzBC,EAAUV,EAAGW,YAAYtB,GAAkB,aAC3C,MACMiC,EADaZ,EAAQG,YAAYxB,IACJgC,IAAI,CACrCjB,UAAWx2B,KAAKw2B,UAChBvD,iBACAoE,uBAEFK,EAAgBb,UAAY,IAAM93B,EAAQ,CAACs4B,uBAC3CK,EAAgBP,QAAUlR,IAGxBsR,EAAYD,EAAOL,YAAYvB,IAC/B,MAAMiC,EAAoBJ,EAAU92B,OAAOT,KAAKw2B,WAChDmB,EAAkBd,UAAY,KAC5BT,EAAGc,QACIl4B,EAAO04B,EAAgBzR,QAEhC0R,EAAkBR,QAAUlR,IAC1BmQ,EAAGc,QACIl4B,EAAO04B,EAAgBzR,OAC/B,CACF,EAEHuR,EAAeL,QAAUlR,IACvBmQ,EAAGc,QACIl4B,EAAOw4B,EAAevR,QAE/BqR,EAAOF,WAAa,KACH,MAAXN,EACFV,EAAGc,QAEHJ,EAAQM,WAAa,IAAMhB,EAAGc,WAKtCf,EAAYgB,QAAUlR,GAASjnB,EAAOm3B,EAAYlQ,MAAM,GAE5D,EAzHgBsQ,GAAAqB,WAAa,eA4HxB,MAAMC,GAA6B7C,IACxC,OAAK7oB,IAAMxB,QAAQ,gBAGZjH,MAAMC,QAAQqxB,IAAQA,EAAI8C,WAAWvB,GAAiBqB,aA2B9BpB,EA1BHxB,EAAI3vB,MAAMkxB,GAAiBqB,WAAW51B,QA2B3D,IAAIu0B,GAAiBC,IA9BnB,KA6BL,IAA2BA,GApBjCjC,GAAiBI,mBAAmBkD,IACpCtD,GAAiBM,mBAAmBgD,IA6B9B,MAAOE,GAGXl4B,WAAAA,GACEG,KAAK61B,UAAYF,IACnB,CAEA,gBAAMqC,GACJ,OAAO,IAAIl5B,SACP,CAACC,EAASC,KACR,MAAMm3B,EACFn2B,KAAK61B,UAAUc,KAAKnB,GA5OT,GA6OfW,EAAYS,gBAAkB,IAAMV,GAAcC,GAElDA,EAAYU,UAAY,KACtB,MAAMT,EAAKD,EAAY52B,OACjB04B,EAAK7B,EAAGW,YAAYrB,GAAiB,YAUrCwC,EATQD,EAAGhB,YAAYvB,IASYyC,SACzCD,EAAkBrB,UAAY,KAC5B,MAAMhP,EAA4C,CAAA,EAClD,IAAK,MAAMmB,KAAQkP,EAAkB34B,OACnCsoB,EAAImB,EAAKwN,WAAaxN,EAAKqO,mBAE7Bt4B,EAAQ8oB,EAAI,EAEdqQ,EAAkBf,QAAUlR,IAC1BmQ,EAAGc,QACIl4B,EAAOk5B,EAAkBjS,QAElCgS,EAAGb,WAAa,IAAMhB,EAAGc,OAAO,EAElCf,EAAYgB,QAAUlR,GAASjnB,EAAOm3B,EAAYlQ,MAAM,GAEhE,CAEA,iBAAMmS,CAAYvf,GAlDpB,IAA0B7M,EAoDtB,OADA6M,GAnDsB7M,EAmDE6M,GAlDfif,WAAWvB,GAAiBqB,YACnC5rB,EAAI3G,MAAMkxB,GAAiBqB,WAAW51B,QACtCgK,EAiDK,IAAIlN,SAA4B,CAACC,EAASC,KAC/C,MAAMm3B,EAAcn2B,KAAK61B,UAAUc,KAAKnB,GAhRrB,GAiRnBW,EAAYS,gBAAkB,IAAMV,GAAcC,GAElDA,EAAYU,UAAY,KACtB,MAAMT,EAAKD,EAAY52B,OACjB+3B,EAASlB,EAAGW,YAAYrB,GAAiB,aACzC6B,EAAYD,EAAOL,YAAYvB,IAE/B2C,EAAiBd,EAAUn3B,IAAIyY,GACrC,IAAIie,EACJuB,EAAexB,UAAY,KACzB,GAA6B,MAAzBwB,EAAe94B,OAEjB,OADA62B,EAAGc,QACIl4B,EAAO,IAAI4C,MACd,gCAAgCiX,qBAE/B,CAEL,MAAM8e,EAAoBJ,EAAU92B,OAAOoY,GACrCyf,EAAkBA,KAEtBxB,EAAUV,EAAGW,YAAYtB,GAAkB,aAC3C,MACM8C,EADazB,EAAQG,YAAYxB,IACDh1B,OAAOoY,GAC7C0f,EAAmB1B,UAAY,IAC3B93B,EAAQs5B,EAAe94B,OAAO83B,oBAClCkB,EAAmBpB,QAAUlR,GACzBjnB,EAAOq5B,EAAepS,MAAM,EAIlC0R,EAAkBd,UAAYyB,EAC9BX,EAAkBR,QAAUlR,IAC1BqS,IACAlC,EAAGc,QACIl4B,EAAOq5B,EAAepS,UAInCoS,EAAelB,QAAUlR,IACvBmQ,EAAGc,QACIl4B,EAAOq5B,EAAepS,QAG/BqR,EAAOF,WAAa,KACH,MAAXN,EACFV,EAAGc,QAEHJ,EAAQM,WAAa,IAAMhB,EAAGc,QAEjC,EAEHf,EAAYgB,QAAUlR,GAASjnB,EAAOm3B,EAAYlQ,MAAM,GAE5D;;;;;;;;;;;;;;;;GCvUF,MAAMuS,GAAiB,IACjBC,GAAc,sBACdC,GAAc,OACdC,GAAwB,iBACxBC,GAAsB,eACtBC,GAAqB,cACrBC,GAAwB,iBA8B9B,SAASC,GAAalgB,GAOpB,MAAO,CACL2M,KAAM,CAACiT,GAAa5f,EAAM6f,IAAa9sB,KAAK4sB,IAC5CQ,SAAU,CAACP,GAAa5f,EAAM8f,IAAuB/sB,KAAK4sB,IAC1D/E,YAAa,CAACgF,GAAa5f,EAAM+f,IAAqBhtB,KAAK4sB,IAC3D7E,WAAY,CAAC8E,GAAa5f,EAAMggB,IAAoBjtB,KAAK4sB,IACzDS,cACI,CAACR,GAAa5f,EAAMigB,IAAuBltB,KAAK4sB,IAExD,CASA,SAASU,GAAoBltB,GAC3B,MAAM+mB,EAAQ/mB,EAAIF,MAAM0sB,IACxB,GAAIzF,EAAM/wB,OAAS,EACjB,MAAM,IAAIJ,MAAM,uBAAuBoK,KAEzC,OAAO+mB,EAAM1tB,MAAM,EAAG0tB,EAAM/wB,OAAS,GAAG4J,KAAK4sB,GAC/C,CAqBM,MAAOW,GAOXt5B,WAAAA,CAAY22B,GACV,IAAKrqB,IAAMxB,QAAQ,eAAmC,oBAAX6B,aACR,IAAxBA,OAAO4sB,aAKhB,MAAM,IAAIx3B,MACN,2DAIN,GAFA5B,KAAKq5B,GAAK7sB,OAAO4sB,aAEA,MAAb5C,IAAsBA,EACxB,MAAM,IAAI50B,MACN,sEAEN5B,KAAKw2B,UAAYA,EACjBx2B,KAAKqkB,KAAO0U,GAAa/4B,KAAKw2B,UAChC,CAWA,UAAMxJ,CAAKiG,GACT,GAAIA,EAAeC,yBAAyBC,YAC1C,MAAM,IAAIvxB,MACN,4FAEC,CACL,MAAMo3B,EAAWhH,KAAKC,UAAUgB,EAAeC,eACzCO,EAAczB,KAAKC,UAAUgB,EAAeQ,aAE5C4D,EACFrE,GAA6BC,GAEjC,IACEjzB,KAAKq5B,GAAGC,QAAQt5B,KAAKqkB,KAAKmB,KAAMwM,KAAKC,UAAUoF,IAC/Cr3B,KAAKq5B,GAAGC,QAAQt5B,KAAKqkB,KAAK2U,SAAUA,GACpCh5B,KAAKq5B,GAAGC,QAAQt5B,KAAKqkB,KAAKoP,YAAaA,GACvCzzB,KAAKq5B,GAAGC,QACJt5B,KAAKqkB,KAAKsP,WHsIhB,SAAoCtV,GACxC,GAAI+T,GACF,OAAOC,OAAOpV,KAAKoB,GAAQrD,SAAS,UAEtC,MAAMue,EAAM,IAAIhzB,WAAW8X,GAC3B,IAAI3Y,EAAI,GACR,IAAK,IAAI7C,EAAI,EAAGyZ,EAAIid,EAAIv3B,OAAQa,EAAIyZ,EAAGzZ,IACrC6C,GAAK6B,OAAOiyB,aAAaD,EAAI12B,IAE/B,OAAO2vB,KAAK9sB,EACd,CG/IY+zB,CAA0BxG,EAAeU,aAC7C,MAAMp0B,EAAyB,CAC7Bm6B,OAAQzG,EAAeyG,OACvBC,YAAa1G,EAAe0G,YAC5BC,YAAa3G,EAAe2G,aAa9B,OAXgC,MAA5B3G,EAAe4G,YACjBt6B,EAAOs6B,UAAY5G,EAAe4G,WAEM,MAAtC5G,EAAe6G,sBACjBv6B,EAAOu6B,oBAAsB7G,EAAe6G,qBAEP,MAAnC7G,EAAe8G,mBACjBx6B,EAAOw6B,iBAAmB9G,EAAe8G,kBAE3C/5B,KAAKq5B,GAAGC,QAAQt5B,KAAKqkB,KAAK4U,cAAejH,KAAKC,UAAU1yB,IAEjD,CAAC83B,qBACT,CAAC,MAAOjS,GAQP,MANAplB,KAAKq5B,GAAGW,WAAWh6B,KAAKqkB,KAAKmB,MAC7BxlB,KAAKq5B,GAAGW,WAAWh6B,KAAKqkB,KAAK2U,UAC7Bh5B,KAAKq5B,GAAGW,WAAWh6B,KAAKqkB,KAAKoP,aAC7BzzB,KAAKq5B,GAAGW,WAAWh6B,KAAKqkB,KAAKsP,YAC7B3zB,KAAKq5B,GAAGW,WAAWh6B,KAAKqkB,KAAK4U,eAEvB,IAAIr3B,MACN,yBAAyB5B,KAAKw2B,kHAERa,EAAmB9D,wCACrB8D,EAAmB7D,qCACpB6D,EAAmB3D,qBAGhD,CAUA,UAAMgD,GACJ,MAAMlR,EACFwM,KAAKiI,MAAMj6B,KAAKq5B,GAAGa,QAAQl6B,KAAKqkB,KAAKmB,OACzC,GAAY,MAARA,EACF,MAAM,IAAI5jB,MACN,kDAAkD5B,KAAKw2B,cAG7D,GAA+B,SAA3BhR,EAAK8N,kBACP,MAAM,IAAI1xB,MACN,6EAIN,MAAMimB,EAAsB,CAAA,EAGtBmR,EAAWhH,KAAKiI,MAAMj6B,KAAKq5B,GAAGa,QAAQl6B,KAAKqkB,KAAK2U,WACtD,GAAgB,MAAZA,EACF,MAAM,IAAIp3B,MACN,4CAA4C5B,KAAKw2B,0BAGvD3O,EAAIqL,cAAgB8F,EAGpB,MAAMvF,EAAczB,KAAKiI,MAAMj6B,KAAKq5B,GAAGa,QAAQl6B,KAAKqkB,KAAKoP,cACzD,GAAmB,MAAfA,EACF,MAAM,IAAI7xB,MACN,gDAAgD5B,KAAKw2B,2BAG3D3O,EAAI4L,YAAcA,EAGlB,MAAM0G,EAAiBn6B,KAAKq5B,GAAGa,QAAQl6B,KAAKqkB,KAAK4U,eACjD,GAAsB,MAAlBkB,EAAwB,CAC1B,MAAMC,EAAWpI,KAAKiI,MAAME,GAC5BtS,EAAI6R,OAASU,EAAiB,OAC9BvS,EAAI8R,YAAcS,EAAsB,YACxCvS,EAAI+R,YAAcQ,EAAsB,YACX,MAAzBA,EAAoB,YACtBvS,EAAIgS,UAAYO,EAAoB,WAEC,MAAnCA,EAA8B,sBAChCvS,EAAIiS,oBAAsBM,EAA8B,qBAEtB,MAAhCA,EAA2B,mBAC7BvS,EAAIkS,iBAAmBK,EAA2B,kBAKtD,MAAMC,EAAmBr6B,KAAKq5B,GAAGa,QAAQl6B,KAAKqkB,KAAKsP,YACnD,GAAwB,MAApB0G,EACF,MAAM,IAAIz4B,MAEN,wDAAI5B,KAAKw2B,2BAIf,OAFA3O,EAAI8L,WHgDF,SAAoCjB,GACxC,GAAIN,GAAe,CACjB,MAAMmH,EAAMlH,OAAOpV,KAAKyV,EAAK,UAC7B,OAAO6G,EAAIlb,OAAOhZ,MAAMk0B,EAAIe,WAAYf,EAAIe,WAAaf,EAAI7H,YAE/D,MAAMhsB,EAAI6sB,KAAKG,GACTrU,EAAS,IAAI9X,WAAWb,EAAE1D,QAChC,IAAK,IAAIa,EAAI,EAAGA,EAAI6C,EAAE1D,SAAUa,EAC9Bwb,EAAO7d,IAAI,CAACkF,EAAE60B,WAAW13B,IAAKA,GAEhC,OAAOwb,EAAOA,MAChB,CG3DqBmc,CAA0BH,GAEpCxS,CACT,EA3JgBsR,GAAAvB,WAAa,kBA8JxB,MAAM6C,GAAgCzF,IAC3C,OAAK7oB,IAAMxB,QAAQ,gBAGZjH,MAAMC,QAAQqxB,IAAQA,EAAI8C,WAAWqB,GAAoBvB,aAmC9BpB,EAjC1BxB,EAAI3vB,MAAM8zB,GAAoBvB,WAAW51B,QAkC1C,IAAIm3B,GAAoB3C,IAtCtB,KAqCL,IAA8BA,GA3BpCjC,GAAiBI,mBAAmB8F,IACpClG,GAAiBM,mBAAmB4F,IA8B9B,MAAOC,GAGX76B,WAAAA,GACEiD,EACIqJ,IAAMxB,QAAQ,eACd,IAAM,6CACV7H,EACsB,oBAAX0J,aAC4B,IAAxBA,OAAO4sB,cAClB,IAAM,4DACVp5B,KAAKq5B,GAAK7sB,OAAO4sB,YACnB,CAEA,gBAAMpB,GACJ,MAAMnQ,EAA4C,CAAA,EAC5C8S,EAASlC,GAAcD,GACvBoC,EAASpC,GAAiBE,GAChC,IAAK,IAAI71B,EAAI,EAAGA,EAAI7C,KAAKq5B,GAAGr3B,SAAUa,EAAG,CACvC,MAAMmJ,EAAMhM,KAAKq5B,GAAGrtB,IAAInJ,GACxB,GAAImJ,EAAI8rB,WAAW6C,IAAW3uB,EAAI0jB,SAASkL,GAAS,CAElD/S,EADkBqR,GAAoBltB,IACrBgmB,KAAKiI,MAAMj6B,KAAKq5B,GAAGa,QAAQluB,KAGhD,OAAO6b,CACT,CAEA,iBAAMuQ,CAAYvf,GA7PpB,IAA0B7M,EA+PtB,MAAMqY,EAAO0U,GADblgB,GA9PsB7M,EA8PE6M,GA7Pfif,WAAWqB,GAAoBvB,YACtC5rB,EAAI3G,MAAM8zB,GAAoBvB,WAAW51B,QACzCgK,GA6PF,GAAkC,MAA9BhM,KAAKq5B,GAAGa,QAAQ7V,EAAKmB,MACvB,MAAM,IAAI5jB,MAAM,8BAA8BiX,MAEhD,MAAM2M,EAAOwM,KAAKiI,MAAMj6B,KAAKq5B,GAAGa,QAAQ7V,EAAKmB,OAM7C,OAJAxlB,KAAKq5B,GAAGW,WAAW3V,EAAKmB,MACxBxlB,KAAKq5B,GAAGW,WAAW3V,EAAK2U,UACxBh5B,KAAKq5B,GAAGW,WAAW3V,EAAKoP,aACxBzzB,KAAKq5B,GAAGW,WAAW3V,EAAKsP,YACjBnO,CACT;;;;;;;;;;;;;;;;GCtUF,MAAMqV,GAAoB,MAEpB,MAAOC,GAMXj7B,WAAAA,GACEG,KAAK+6B,SAAW,EAClB,CAEQ,kBAAOrG,GAIb,OAH0C,MAAtCoG,GAA0Bxb,WAC5Bwb,GAA0Bxb,SAAW,IAAIwb,IAEpCA,GAA0Bxb,QACnC,CAQA,sBAAO0b,CAAgBC,EAAgBC,GACrCp4B,EAAiB,MAAVm4B,GAAgB,IAAM,0CACzBA,EAAOvL,SAASmL,MAClBI,EAASA,EAAO51B,MAAM,EAAG41B,EAAOhM,QAAQ4L,MAE1C/3B,EAAOm4B,EAAOj5B,OAAS,GAAG,IAAM,wCAChC,MAAMshB,EAAWwX,GAA0BpG,cAC3C5xB,EACiC,MAA7BwgB,EAASyX,SAASE,IAClB,IAAM,2DACFA,QACR3X,EAASyX,SAASE,GAAUC,CAC9B,CAEA,iBAAOC,CAAWF,GAChB,MAAMC,EAAUl7B,KAAK00B,cAAcqG,SAASE,GAC5C,GAAe,MAAXC,EACF,MAAM,IAAIt5B,MAAM,yCAAyCq5B,MAE3D,OAAOC,CACT,CAEA,iBAAOE,GACL,OAAOrwB,OAAOsZ,KAAKrkB,KAAK00B,cAAcqG,SACxC,EAWF,SAASM,GAASrG,GAChB,IAAwC,IAApCA,EAAI/F,QAAQ4L,IACd,MAAM,IAAIj5B,MAGN,6EAAGk5B,GAA0BM,aAAaxvB,KAAK,QAErD,MAAO,CACLqvB,OAAQjG,EAAIlpB,MAAM+uB,IAAmB,GACrChiB,KAAMmc,EAAIlpB,MAAM+uB,IAAmB,GAEvC,CAEAS,eAAeC,GACXC,EAAmBC,EACnBC,GAAe,GACjB54B,EACI04B,IAAcC,GACd,IAAM,wCAAwCD,OAElD,MAAMG,EAAepH,GAAiBW,gBAAgBsG,GACtD14B,EACI64B,EAAa35B,OAAS,GACtB,IAAM,kEACFw5B,OACR14B,EACI64B,EAAa35B,OAAS,GACtB,IAAM,yCAAyC25B,EAAa35B,wCACxBw5B,OACxC,MAAMI,EAAcD,EAAa,GAE3BE,EAAetH,GAAiBQ,gBAAgB0G,GACtD34B,EACI+4B,EAAa75B,OAAS,GACtB,IACI,uEAAOy5B,OACf34B,EACI+4B,EAAa75B,OAAS,GACtB,IAAM,yCAAyC25B,EAAa35B,6CACnBy5B,OAC7C,MAAMK,EAAcD,EAAa,GAE3BE,EAAeV,GAASG,GAAWP,OACnCe,EAAaX,GAASG,GAAW3iB,KACjCojB,EAAaF,IAAiBV,GAASG,GAAWP,OAElDhI,QAAuB2I,EAAYlF,OAKrCgF,GAAgBO,SACZnB,GAA0BK,WAAWY,GACtC3D,YAAY4D,GAGnB,MAAME,QAAmBJ,EAAY9O,KAAKiG,GAU1C,OALIyI,IAAiBO,SACbnB,GAA0BK,WAAWY,GACtC3D,YAAY4D,GAGZE,EAAW7E,kBACpB;;;;;;;;;;;;;;;;;ACtIM,MAAO8E,GAKXvjB,KAAAA,CAAMC,EAAcjM,GAClB,OAAOgM,MAAMC,EAAMjM,EACrB,CAEAgL,GAAAA,GACE,OAAOwkB,YAAYxkB,KACrB,CAEAE,MAAAA,CAAOukB,EAAcxkB,GACnB,GAAiB,UAAbA,GAAqC,SAAbA,EAC1B,MAAM,IAAIjW,MACN,kDAAkDiW,KAKxD,OAHwB,MAApB7X,KAAKs8B,cACPt8B,KAAKs8B,YAAc,IAAIC,aAElBv8B,KAAKs8B,YAAYxkB,OAAOukB,EACjC,CACArkB,MAAAA,CAAO5Q,EAAmByQ,GACxB,OAAO,IAAI2kB,YAAY3kB,GAAUG,OAAO5Q,EAC1C,EAGF,GAAI+E,IAAM/L,IAAI,cAAe,CAC3B+L,IAAMrC,YAAY,UAAW,IAAIqyB,IAGjC,IACErB,GAA0BE,gBACtB7B,GAAoBvB,WAAY,IAAI8C,IACxC,MAAOtV,IAIT,IACE0V,GAA0BE,gBACtBzE,GAAiBqB,WAAY,IAAIG,IACrC,MAAO3S;;;;;;;;;;;;;;;;GC/CJ,MAAMqX,GAEEC,IAAMC,QAAQ,cAI7B,IAAIC,GAaE,MAAOC,GAKXh9B,WAAAA,GAEEG,KAAKiY,KAAO0kB,QAAQ,QAGpB38B,KAAKs8B,YAAc,IAAIt8B,KAAKiY,KAAKskB,WACnC,CAEA3jB,KAAAA,CAAMC,EAAcC,GAClB,OAA0B,MAAtB3M,IAAM1C,OAAOmP,MACRzM,IAAM1C,OAAOmP,MAAMC,EAAMC,IAGf,MAAf8jB,KACFA,GAAcH,MAETG,GAAY/jB,EAAMC,GAC3B,CAEAlB,GAAAA,GACE,MAAMhX,EAAO6L,QAAQqwB,SACrB,OAAiB,IAAVl8B,EAAK,GAAYA,EAAK,GAAK,GACpC,CAEAkX,MAAAA,CAAOukB,EAAcxkB,GACnB,GAAiB,UAAbA,GAAqC,SAAbA,EAC1B,MAAM,IAAIjW,MACN,sDAAsDiW,KAE5D,OAAO7X,KAAKs8B,YAAYxkB,OAAOukB,EACjC,CACArkB,MAAAA,CAAO5Q,EAAmByQ,GACxB,OAAqB,IAAjBzQ,EAAMpF,OACD,GAEF,IAAIhC,KAAKiY,KAAKukB,YAAY3kB,GAAUG,OAAO5Q,EACpD;;;;;;;;;;;;;;;;;AClCI,SAAUiX,GACZjd,EAAoBC,EAAW,UAC/BF,GAGF,OAFAE,EAAQA,GAAS,UACjB4W,EAAwC7W,GACjC,IAAIsc,GAAmBtc,EAAOC,EAAOF,EAC9C;;;;;;;;;;;;;;;;GD+BIgL,IAAM/L,IAAI,YACZ+L,IAAMrC,YAAY,OAAQ,IAAI+yB,IE3BzB,MAAM9d,GAAOyQ,GAAG,CAACuN,MAnBxB,SAAiCx6B,EAAiBlB,GAChD,MAAM27B,EAAKlO,GAAgBvsB,EAAG,IAAK,QAGnC,IAAK0V,EAAkB5W,GACrB,MAAM,IAAIO,MAAM,mCAAmCP,KAErD,GAAc,WAAVA,GAAmC,WAAb27B,EAAG37B,OACf,WAAVA,GAAmC,WAAb27B,EAAG37B,MAC3B,MAAM,IAAIO,MAAM,yCAGlB,MAAMmY,EAAqB,CAACxX,EAAGy6B,GACzBpW,EAAmB,CAACvlB,SAE1B,OAAOwlB,GAAOC,UACVvY,GAAMwL,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GCPO,MAAM9H,GAAQ0Q,GAAG,CAACyN,OATzB,SAAkC16B,GAChC,MACMwX,EAAyB,CAACxX,EADrBusB,GAAgBvsB,EAAG,IAAK,QAAS,sBAK5C,OAAOskB,GAAOC,UAAU9V,GAAU+I,EACpC;;;;;;;;;;;;;;;;GCfM,SAAU8E,GAAwBtc,EAAMmZ,GAAU,GACtDzR,QAAQoR,IAAI9Y,EAAEyY,SAASU,GACzB;;;;;;;;;;;;;;;;GCbA4R,KxB8LEvP,GwBhL2B,CAC3BM,eACAU,GACAD,SACAD,UCNF,SAASqe,GAASr8B,GAChB,OAAO,IAAI/B,SAAQC,GAAWiG,WAAWjG,KAAUU,KAAKoB,EAC1D,CAEM,MAAOs8B,GAQXt9B,WAAAA,CAAYu9B,GACV,IAAKjxB,IAAMxB,QAAQ,cAGjB,MAAM,IAAI/I,MACN,uFAIFw7B,EAAetF,WAAWqF,GAAiBvF,cAC7CwF,EAAiBA,EAAe/3B,MAAM83B,GAAiBvF,WAAW51B,SAE9C,MAAlBo7B,GAAoD,IAA1BA,EAAep7B,SAC3Co7B,EA7B2B,SAgC7Bp9B,KAAKq9B,sBAAwBD,EA/BG,QAgChCp9B,KAAKs9B,mBACDF,EAhCmC,cAiCzC,CAEA,UAAMpQ,CAAKiG,GACT,GAA0B,oBAAdhF,SACV,MAAM,IAAIrsB,MACN,2FAGN,MAAM27B,EAAa/wB,OAAOgxB,IAAIC,gBAAgB,IAAInL,KAC9C,CAACW,EAAeU,YAAa,CAAC/S,KAAM,8BAExC,GAAIqS,EAAeC,yBAAyBC,YAC1C,MAAM,IAAIvxB,MACN,yFAEC,CACL,MAAM87B,EAAyC,CAAC,CAC9CC,MAAO,CAAC,KAAO39B,KAAKs9B,oBACpBM,QAAS3K,EAAeQ,cAEpBoK,EAA4C,CAChD3K,cAAeD,EAAeC,cAC9BwG,OAAQzG,EAAeyG,OACvBC,YAAa1G,EAAe0G,YAC5BC,YAAa3G,EAAe2G,YAC5B8D,mBAE8B,MAA5BzK,EAAe4G,YACjBgE,EAA+BhE,UAAY5G,EAAe4G,WAElB,MAAtC5G,EAAe6G,sBACjB+D,EAA+B/D,oBAC3B7G,EAAe6G,qBAEkB,MAAnC7G,EAAe8G,mBACjB8D,EAA+B9D,iBAC3B9G,EAAe8G,kBAErB,MAAM+D,EACFtxB,OAAOgxB,IAAIC,gBAAgB,IAAInL,KAC3B,CAACN,KAAKC,UAAU4L,IAChB,CAACjd,KAAM,sBAITmd,EAAgC,MAAnB/9B,KAAK+9B,WAAqB9P,SAAS+P,cAAc,KACvBh+B,KAAK+9B,WAQlD,GAPAA,EAAWE,SAAWj+B,KAAKq9B,sBAC3BU,EAAWG,KAAOJ,QAIZZ,IAAM,IAAMa,EAAWI,cAAc,IAAIC,WAAW,YAEzB,MAA7BnL,EAAeU,WAAoB,CACrC,MAAM0K,EAA4C,MAAzBr+B,KAAKq+B,iBAC1BpQ,SAAS+P,cAAc,KACvBh+B,KAAKq+B,iBACTA,EAAiBJ,SAAWj+B,KAAKs9B,mBACjCe,EAAiBH,KAAOX,QAClBL,IACF,IAAMmB,EAAiBF,cAAc,IAAIC,WAAW,YAG1D,MAAO,CAAC/G,mBAAoBrE,GAA6BC,IAE7D,EAvFgBkK,GAAAvF,WAAa,eA0F/B,MAAM0G,GAGJz+B,WAAAA,CAAY0+B,GACV,GAAa,MAATA,GAAiBA,EAAMv8B,OAAS,EAClC,MAAM,IAAIJ,MAEN,wEAAgB28B,KAEtBv+B,KAAKu+B,MAAQA,CACf,CAEA,UAAM7H,GACJ,MAAM8H,EAAWx+B,KAAKu+B,MAAM,GACtBE,EAAcz+B,KAAKu+B,MAAMl5B,MAAM,GAErC,OAAO,IAAIvG,SAAwB,CAACC,EAASC,KAC3C,MAAM0/B,EAAa,IAAIC,WACvBD,EAAWE,OAAUC,IAEnB,MAAMC,EAAY9M,KAAKiI,MAAO4E,EAAME,OAAex/B,QAC7C2zB,EAAgB4L,EAAU5L,cAChC,GAAqB,MAAjBA,EAGF,YAFAl0B,EAAO,IAAI4C,MACP,4CAA4C48B,EAAS/yB,SAIhC,IAAvBgzB,EAAYz8B,QACdjD,EAAQ,CAACm0B,kBAGX,MAAMwK,EAAkBoB,EAAUpB,gBAClC,GAAuB,MAAnBA,EAGF,YAFA1+B,EAAO,IAAI4C,MACP,6CAA6C48B,EAAS/yB,SAI5D,IAAIuzB,EACJ,IACEA,EACIh/B,KAAKi/B,4BAA4BvB,EAAiBe,EACvD,CAAC,MAAOrZ,GAEP,YADApmB,EAAOomB,GAIT,MAAMqO,EAAsC,GACtCkK,EAAkB,GAClBuB,EAAgC,GACtCxB,EAAgBr2B,SAAQ83B,IACtBA,EAAaxB,MAAMt2B,SAAQwR,IACzB8kB,EAAM95B,KAAKgV,GACXqmB,EAAer7B,KAAK,KAAK,IAE3B4vB,EAAY5vB,QAAQs7B,EAAavB,QAAQ,IAG3CF,EAAgBr2B,SAAQ83B,IACtBA,EAAaxB,MAAMt2B,SAAQwR,IACzB,MAAMumB,EAAmB,IAAIT,WAC7BS,EAAiBR,OAAUC,IAEzB,MAAMlL,EAAckL,EAAME,OAAex/B,OACnC2C,EAAQy7B,EAAM1O,QAAQpW,GAE5B,GADAqmB,EAAeh9B,GAASyxB,GACc,IAAlCuL,EAAejQ,QAAQ,MAAc,CACvC,MAAM1vB,EAAyB,CAC7B2zB,gBACAO,cACAE,WAAYhB,GAAwBuM,GACpCxF,OAAQoF,EAAUpF,OAClBC,YAAamF,EAAUnF,YACvBC,YAAakF,EAAUlF,aAEE,MAAvBkF,EAAUjF,YACZt6B,EAAOs6B,UAAYiF,EAAUjF,WAEM,MAAjCiF,EAAUhF,sBACZv6B,EAAOu6B,oBAAsBgF,EAAUhF,qBAEP,MAA9BgF,EAAU/E,mBACZx6B,EAAOw6B,iBAAmB+E,EAAU/E,kBAEtCh7B,EAAQQ,KAGZ6/B,EAAiBjI,QAAUlR,GACvBjnB,EAAO,6CAA6C6Z,OACxDumB,EAAiBC,kBAAkBL,EAAWnmB,GAAM,GACpD,GACF,EAEJ6lB,EAAWvH,QAAUlR,GAASjnB,EAE1B,sEAAcw/B,EAAS/yB,6EAE3BizB,EAAWY,WAAWd,EAAS,GAEnC,CAKQS,2BAAAA,CACJM,EAAiChB,GACnC,MAAMiB,EAAsB,GACtBC,EAAYlB,EAAM94B,KAAIi6B,GAAQ7M,GAAS6M,EAAKj0B,QAC5CuzB,EAAqC,CAAA,EAC3C,IAAK,MAAMW,KAASJ,EAClBI,EAAMhC,MAAMt2B,SAAQwR,IAClB,MAAM+mB,EAAe/M,GAASha,GAC9B,IAAyC,IAArC2mB,EAAUvQ,QAAQ2Q,GACpB,MAAM,IAAIh+B,MAEN,uDAAIg+B,MAGV,GADAJ,EAAU37B,KAAK+7B,IAC0B,IAArCH,EAAUxQ,QAAQ2Q,GACpB,MAAM,IAAIh+B,MACN,8BAA8Bg+B,uBAElCZ,EAAWnmB,GAAQ0lB,EAAMkB,EAAUxQ,QAAQ2Q,OAKjD,GAAIJ,EAAUx9B,SAAWu8B,EAAMv8B,OAC7B,MAAM,IAAIJ,MAEN,wDAAI49B,EAAUx9B,oDACVu8B,EAAMv8B,YAEhB,OAAOg9B,CACT;;;;;;;;;;;;;;;;;AC/OI,SAAUa,GACZC,EAAmCC,EACnCC,EAAwBC,IAkB1B,SAAuBH,GACrBh9B,EACgB,MAAZg9B,GAAoBp8B,MAAMC,QAAQm8B,IAAaA,EAAS99B,OAAS,GACjE,IAAM,uCACZ,CArBAk+B,CAAcJ,GAuBd,SAAuBE,EAAuBC,GAC5Cn9B,EACIk9B,GAAiB,GAAKA,GAAiB,GACvC,IACI,oEAAqBA,MAC7Bl9B,EACIm9B,GAAe,GAAKA,GAAe,GACnC,IACI,kEAAmBA,MAC3Bn9B,EACIm9B,GAAeD,GACf,IACI,yEAAqBA,qBAClBC,KACb,CAlCAE,CAFAH,EAAiC,MAAjBA,EAAwB,EAAIA,EAC5CC,EAA6B,MAAfA,EAAsB,EAAIA,GAExC,IAAIG,EAAkB,EAmCtB,OAAOthC,QAAQ+b,IAAIilB,EAASr6B,KAjCH46B,IACvBA,EAAQ5gC,MAAKP,IACX,MAAMohC,EAAWN,KACXI,EAAkBN,EAAS99B,QAAUi+B,EAAcD,GAGzD,OADAD,EAAWO,GACJphC,CAAK,IAEPmhC,KA0BX;;;;;;;;;;;;;;;;GCpCO/E,eAAeiF,GAClBC,EAAqBrL,GACJ,MAAfA,IACFA,EAAc,CAAA,GAGhB,MAAMsL,EAAqC,MAAzBtL,EAAYsL,UAAoBt0B,IAAMnC,SAAS4O,MACfuc,EAAYsL,UAGxDC,EAAWF,EAAU/6B,KACvBk7B,GACIF,EAAUE,EAAUxL,EAAYyL,YAAa,CAACC,UAAU,MAW1DC,GANsC,MAA1B3L,EAAY4K,iBACpBjhC,QAAQ+b,IAAI6lB,SACZb,GACFa,EAAUvL,EAAY4K,WANH,EACF,KAQQt6B,KAAIs7B,GAAYA,EAASC,gBAU1D,OAL0C,MAA1B7L,EAAY4K,iBAClBjhC,QAAQ+b,IAAIimB,SACZjB,GACFiB,EAAgB3L,EAAY4K,WANR,GACF,EAQ5B,CAoDM,SAAUkB,GACZC,GAGF,OAAO5F,MACIiE,EAAiC4B,EAAiB,GAClDC,KAGT,MAAMC,EAAyB9B,EAAS95B,KAAI,KAAM,IAC5C67B,EAKF,CAAA,EACEC,EACa,MAAfH,EAAsBA,EAAY37B,KAAI,KAAM,IAAS,GACnD+7B,EAAmC,GAwCzC,GAvCAjC,EAASl4B,SAAQ,CAACo6B,EAAqBC,KACrC,IAAIC,EAAc,EAClBF,EAAoB7D,QAAQv2B,SAAQu6B,IAClC,MAAMC,EAAY,iBAAkBD,EAChCA,EAAa1Q,aAAa7vB,MAC1BugC,EAAavgC,MAEXygC,EAAerR,GAAqBoR,GACtC5pB,EAAmB2pB,EAAaxgC,OAE9B2gC,EAA8BA,KAClCV,EAAuBK,IAAc,EACE,MAAnCJ,EAAoBI,KACtBJ,EAAoBI,GAAc,IAGpCJ,EAAoBI,GAAY79B,KAAK,CACnCm+B,cAAeJ,EACfD,cACAM,UAAWH,GACX,EAGe,MAAfV,EACFA,EAAY/5B,SAAQ,CAAC66B,EAAYC,KAC3BD,IAAeN,EAAan2B,OAC9Bs2B,IACAR,EAAaY,IAAe,MAIhCJ,IAGFP,EAAuB39B,KAAK+9B,EAAan2B,MACzCk2B,GAAeG,CAAY,GAC3B,KAGCP,EAAa37B,OAAMw8B,GAASA,IAAQ,CACvC,MAAMC,EAAkBjB,EAAY3X,QAAO,CAACC,EAAG7mB,KAAO0+B,EAAa1+B,KACnE,MAAM,IAAIjB,MAEN,kDAAGygC,EAAgBz2B,KAAK,kDAErB41B,EAAuB51B,KAAK,UAKrC,MAAM02B,EACFjB,EAAuB94B,QAAO,CAACg6B,EAAaC,EAAa3/B,KACnD2/B,GACFD,EAAY1+B,KAAKhB,GAEZ0/B,IACN,IAEDE,EAAsB,GAC5BH,EAAoBj7B,SAAQxE,IAC1B08B,EAAS18B,GAAG86B,MAAMt2B,SAAQq7B,IACxB,MAAMC,EAAWxB,GACXA,EAAezR,SAAS,KAAa,GAAN,KAAYgT,EACjDD,EAAU5+B,KAAK8+B,EAAS,GACxB,IAEJ,MAAM/P,QAAgBsO,EAAqBuB,GAErCG,EAAmC,CAAA,EACzC,IAAIC,EAAoB,EAkCxB,OAjCAP,EAAoBj7B,SAAQxE,IAC1B,MAAMigC,EAAavD,EAAS18B,GAAG86B,MAAM37B,OAErC,IAAI+gC,EAAa,EACjB,IAAK,IAAIlgC,EAAI,EAAGA,EAAIigC,EAAYjgC,IAC9BkgC,GAAcnQ,EAAQiQ,EAAoBhgC,GAAG6uB,WAI/C,MAAMsR,EAAc,IAAI7P,YAAY4P,GAC9BE,EAAkB,IAAI18B,WAAWy8B,GACvC,IAAIE,EAAoB,EACxB,IAAK,IAAIrgC,EAAI,EAAGA,EAAIigC,EAAYjgC,IAAK,CACnC,MAAMwb,EAAS,IAAI9X,WAAWqsB,EAAQiQ,EAAoBhgC,IAC1DogC,EAAgBziC,IAAI6d,EAAQ6kB,GAC5BA,GAAqB7kB,EAAOqT,WAGP4P,EAAoBz+B,GAC5BwE,SAAQu6B,IACrB,MAGMuB,EACFrS,GAJekS,EAAY39B,MAC3Bu8B,EAAaD,YACbC,EAAaD,YAAcC,EAAaK,WAEd,CAACL,EAAaI,gBAC5C,IAAK,MAAMv2B,KAAQ03B,EACjBP,EAAiBn3B,GAAQ03B,EAAgB13B,MAI7Co3B,GAAqBC,CAAU,IAG1BF,CAAgB,CAE3B;;;;;;;;;;;;;;;;GFoCArO,GAAiBI,oBAXgCK,GAC1C7oB,IAAMxB,QAAQ,gBAGZjH,MAAMC,QAAQqxB,IAAQA,EAAI8C,WAAWqF,GAAiBvF,YAgDzD,SAA2BwF,EAAiB,SAChD,OAAO,IAAID,GAAiBC,EAC9B,CAjDagG,CAAiBpO,EAAI3vB,MAAM83B,GAAiBvF,WAAW51B,SAHzD,OGhPL,MAAOqhC,GAcXxjC,WAAAA,CAAYgZ,EAAcsc,GAgCxB,GAvCOn1B,KAAAsjC,eAAiB,OAQL,MAAfnO,IACFA,EAAc,CAAA,GAEhBn1B,KAAKujC,iBAAmBpO,EAAYoO,iBACpCvjC,KAAK+/B,WAAa5K,EAAY4K,WAC9B//B,KAAKwjC,mBAAqBrO,EAAYqO,mBAET,MAAzBrO,EAAYsL,WACd39B,EACqC,mBAA1BqyB,EAAYsL,WACnB,IAAM,gIAGVzgC,KAAK4Y,MAAQuc,EAAYsL,WAEzBzgC,KAAK4Y,MAAQzM,IAAMnC,SAAS4O,MAG9B9V,EACY,MAAR+V,GAAgBA,EAAK7W,OAAS,GAC9B,IAAM,4DAGN0B,MAAMC,QAAQkV,IAChB/V,EACoB,IAAhB+V,EAAK7W,QACL,IACI,iEAAqB6W,EAAK7W,aAEpChC,KAAK6Y,KAAOA,EAEmB,MAA3Bsc,EAAYyL,aACoB,MAAhCzL,EAAYyL,YAAY6C,KAC1B,MAAM,IAAI7hC,MACN,sEAEN5B,KAAK4gC,YAAczL,EAAYyL,aAAe,CAAA,CAChD,CAEA,UAAM5T,CAAKiG,GACT,GAAIA,EAAeC,yBAAyBC,YAC1C,MAAM,IAAIvxB,MACN,2FAIN,MAAMgL,EAAO7B,OAAOC,OAAO,CAAC04B,OAAQ1jC,KAAKsjC,gBAAiBtjC,KAAK4gC,aAC/Dh0B,EAAK62B,KAAO,IAAIE,SAEhB,MAAMjG,EAAyC,CAAC,CAC9CC,MAAO,CAAC,uBACRC,QAAS3K,EAAeQ,cAEpBoK,EAA4C,CAChD3K,cAAeD,EAAeC,cAC9BwG,OAAQzG,EAAeyG,OACvBC,YAAa1G,EAAe0G,YAC5BC,YAAa3G,EAAe2G,YAC5B8D,mBAE8B,MAA5BzK,EAAe4G,YACjBgE,EAA+BhE,UAAY5G,EAAe4G,WAElB,MAAtC5G,EAAe6G,sBACjB+D,EAA+B/D,oBAC3B7G,EAAe6G,qBAEkB,MAAnC7G,EAAe8G,mBACjB8D,EAA+B9D,iBAC3B9G,EAAe8G,kBAGrBntB,EAAK62B,KAAKG,OACN,aACA,IAAItR,KACA,CAACN,KAAKC,UAAU4L,IAChB,CAACjd,KA5FK,qBA6FV,cAE6B,MAA7BqS,EAAeU,YACjB/mB,EAAK62B,KAAKG,OACN,oBACA,IAAItR,KAAK,CAACW,EAAeU,YAAa,CAAC/S,KAnGlB,6BAoGrB,qBAGN,MAAMmgB,QAAiB/gC,KAAK4Y,MAAM5Y,KAAK6Y,KAAMjM,GAE7C,GAAIm0B,EAAS8C,GACX,MAAO,CACLxM,mBAAoBrE,GAA6BC,GACjD6Q,UAAW,CAAC/C,IAGd,MAAM,IAAIn/B,MAEN,gEAAGm/B,EAASgD,UAEpB,CAUA,UAAMrN,GACJ,MAAMsN,QAA2BhkC,KAAK4Y,MAAM5Y,KAAK6Y,KAAM7Y,KAAK4gC,aAE5D,IAAKoD,EAAmBH,GACtB,MAAM,IAAIjiC,MACN,cAAc5B,KAAK6Y,gCAChBmrB,EAAmBD,iFAG5B,IAAIE,EACJ,IACEA,QAAoBD,EAAmBE,MACxC,CAAC,MAAO7kC,GACP,IAAIimB,EAAU,+CAA+CtlB,KAAK6Y,QAclE,MAXI7Y,KAAK6Y,KAAK6W,SAAS,OACrBpK,GAAW,+UAOXA,GAAW,uEAGP,IAAI1jB,MAAM0jB,GAElB,MAAM4N,EAAgB+Q,EAAY/Q,cAC5BwK,EAAkBuG,EAAYvG,gBAC9B/D,EAAcsK,EAAYtK,YAC1BC,EAAcqK,EAAYrK,YAC1BF,EAASuK,EAAYvK,OACrBG,EAAYoK,EAAYpK,UACxBC,EAAsBmK,EAAYnK,oBAGxC,GAAqB,MAAjB5G,GAA4C,MAAnBwK,EAC3B,MAAM,IAAI97B,MACN,2BAA2B5B,KAAK6Y,iEAItC,IAAI4a,EACAE,EACJ,GAAuB,MAAnB+J,EAAyB,CAC3B,MAAMyG,QAAgBnkC,KAAKokC,YAAY1G,IACtCjK,EAAaE,GAAcwQ,EAG9B,MAAME,EAA4B,CAChCnR,gBACAO,cACAE,aACAgG,cACAC,cACAF,UAGe,MAAbG,IACFwK,EAAUxK,UAAYA,GAEG,MAAvBC,IACFuK,EAAUvK,oBAAsBA,GAGlC,MAAMwK,EAAcL,EAAYlK,iBAKhC,OAJIuK,IACFD,EAAUtK,iBAAmBuK,GAGxBD,CACT,CAEQ,iBAAMD,CAAY1G,GAExB,MAAM6G,EAAa7gC,MAAMC,QAAQ3D,KAAK6Y,MAAQ7Y,KAAK6Y,KAAK,GAAK7Y,KAAK6Y,MAC3D8hB,EAAQC,GA4Cb,SAAmB5F,GACvB,MAAMwP,EAAYxP,EAAIyP,YAAY,KAC5BC,EAAkB1P,EAAIyP,YAAY,KAClC9J,EAAS3F,EAAIrF,UAAU,EAAG6U,GAC1B5J,EACF8J,EAAkBF,EAAYxP,EAAIrF,UAAU+U,GAAmB,GACnE,MAAO,CAAC/J,EAAS,IAAKC,EACxB,CAnD6B+J,CAASJ,GAC5BK,EAAa5kC,KAAKujC,kBAAoB5I,EAEtClH,EAAc,GACpB,IAAK,MAAMoR,KAASnH,EAClBjK,EAAY5vB,QAAQghC,EAAMjH,SAG5B,MAAM4C,EAAsB,GACtBsE,EAAsC,GAC5C,IAAK,MAAM3F,KAAgBzB,EACzB,IAAK,MAAM7kB,KAAQsmB,EAAaxB,MACC,MAA3B39B,KAAKwjC,mBACPsB,EAAYjhC,KAAK7D,KAAKwjC,mBAAmB3qB,IAEzC2nB,EAAU38B,KAAK+gC,EAAa/rB,EAAO+hB,GAKrC56B,KAAKwjC,oBACPhD,EAAU38B,cAAc/E,QAAQ+b,IAAIiqB,IAQtC,MAAO,CAACrR,EAAad,SALC4N,GAAyBC,EAAW,CACxDI,YAAa5gC,KAAK4gC,YAClBH,UAAWzgC,KAAK4Y,MAChBmnB,WAAY//B,KAAK+/B,cAGrB,EAuBI,SAAUgF,GAAa/P,GAC3B,OAAkD,MAA3CA,EAAIgQ,MAAM3B,GAAY4B,iBAC/B,CAvPkB5B,GAAA4B,iBAAmB,eAyP9B,MAAMC,GACTA,CAAClQ,EAAaG,KACZ,GAAqB,oBAAVvc,QACS,MAAfuc,GAAgD,MAAzBA,EAAYsL,WAItC,OAAO,KACF,CACL,IAAI0E,GAAS,EAMb,GAJEA,EADEzhC,MAAMC,QAAQqxB,GACPA,EAAIpvB,OAAMw/B,GAAWL,GAAaK,KAElCL,GAAa/P,GAEpBmQ,EACF,OAAOE,GAAKrQ,EAAKG,GAGrB,OAAO,IAAI,EA2EX,SAAUkQ,GAAKxsB,EAAcsc,GACjC,OAAO,IAAIkO,GAAYxqB,EAAMsc,EAC/B,CA3EAZ,GAAiBI,mBAAmBuQ,IACpC3Q,GAAiBM,mBAAmBqQ;;;;;;;;;;;;;;;;;AClSpC,MAAMI,GACJzlC,WAAAA,CAA6BozB,GAAAjzB,KAAAizB,eAAAA,CAAkC,CAE/D,UAAMyD,GACJ,OAAO12B,KAAKizB,cACd,EAGF,MAAMsS,GACJ1lC,WAAAA,CACqBi8B,GAAA97B,KAAA87B,YAAAA,CACwC,CAE7D,UAAM9O,CAAKiG,GACT,OAAOjzB,KAAK87B,YAAY7I,EAC1B;;;;;;;;;;;;;;;;;ACtCF,IAAAuS,GAAAz6B,OAAAmN,OAAA,CAAAC,UAAA,KAAAstB,aL+WM,SAAuBlH,GAC3B,OAAO,IAAID,GAAaC,EAC1B,EKjXAmH,mBF0YM,SACF7sB,EAAcsc,GAChB,OAAOkQ,GAAKxsB,EAAMsc,EACpB,EE7YAxC,wBAAAA,GAAAgT,UbySArK,eACIE,EAAmBC,GAErB,OAAOF,GAAmBC,EAAWC,GADhB,EAEvB,Ea7SA3K,cAAAA,GAAA8U,cjB8COtK,eACHhT,EAAuCqX,GAGzC,MAAM5O,EAAgC,GAChC8U,EAA2C,GAE3CC,EAAkBpiC,MAAMC,QAAQ2kB,GAClCA,EAAQ7iB,KAAIkc,GAAUA,EAAOlW,OAC7BV,OAAOsZ,KAAKiE,GAEhB,IAAK,IAAIzlB,EAAI,EAAGA,EAAIijC,EAAM9jC,SAAUa,EAAG,CACrC,MAAM4I,EAAOq6B,EAAMjjC,GACb2I,EAAI9H,MAAMC,QAAQ2kB,GAAWA,EAAQzlB,GAAG8e,OAAS2G,EAAQ7c,GAC/D,GAAgB,YAAZD,EAAEnK,OAAmC,UAAZmK,EAAEnK,OAAiC,SAAZmK,EAAEnK,OACtC,WAAZmK,EAAEnK,OAAkC,cAAZmK,EAAEnK,MAC5B,MAAM,IAAIO,MAAM,gCAAgC6J,OAAUD,EAAEnK,SAE9D,MAAM4vB,EAA6B,CAACxlB,OAAMrK,MAAOoK,EAAEpK,MAAOC,MAAOmK,EAAEnK,OACnE,GAAgB,WAAZmK,EAAEnK,MAAoB,CACxB,MAAM0kC,EAAY,IAAIjnC,SAAoBw8B,UACxC,MAAM50B,QAAa8E,EAAEpE,QACf4+B,EAAgBt/B,EAAK6B,QAAO,CAAC09B,EAAGx9B,IAAMw9B,EAAIx9B,EAAEzG,QAAQ,GACtD6uB,GAA0BnqB,EAAK1E,OAC7BoF,EAAQ,IAAIb,WAAWy/B,GAC7B,IAAI99B,EAAS,EACb,IAAK,IAAIrF,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,IAAK,CACpC,MAAMH,EAAMgE,EAAK7D,GACXqjC,EACF,IAAI3/B,WAAW,IAAIiS,YAAY,CAAC9V,EAAIV,SAASqc,QACjDjX,EAAM5G,IAAI0lC,EAAeh+B,GACzBA,GAAU2oB,GACVzpB,EAAM5G,IAAIkC,EAAKwF,GACfA,GAAUxF,EAAIV,OAEhBjD,EAAQqI,EAAM,IAEhBy+B,EAAahiC,KAAKkiC,QAElBF,EAAahiC,KAAK2H,EAAEvL,QAET,MAAT0/B,IACF1O,EAAK0O,MAAQA,GAEf5O,EAAMltB,KAAKotB,GAIb,MAAO,CAAChxB,KAAM8xB,SADajzB,QAAQ+b,IAAIgrB,IACa9U,QACtD,EiB/FAoV,WD8DM,SACFlT,EAAmCQ,EACnCE,EAA0ByS,GAC5B,GAAyB,IAArBC,UAAUrkC,OAAc,CAI1B,OAFwD,MAAnDixB,EAAkCC,eACe,MAAjDD,EAAkCQ,YAE9B,IAAI6R,GAAkBrS,IAI7BhpB,QAAQC,KACJ,yNAIG,IAAIo7B,GAAkB,CAACpS,cAAeD,KAU/C,OALAhpB,QAAQC,KACJ,yNAIG,IAAIo7B,GAAkB,CAC3BpS,cAAeD,EACfQ,cACAE,aACAyS,kBAGN,EChGAlR,gBhB8GIA,CAACF,EAAsBG,IACnBZ,GAAiBW,gBAAgBF,EAAKG;;;;;;;;;;;;;;;;IgB/G9CnC,6BAAAA,GAAA+B,gBhB2GgCC,GAC5BT,GAAiBQ,gBAAgBC,GgB5GrCqQ,KAAAA,GAAAN,aAAAA,GAAA/M,WbqMAsD,iBACE,MAAMgL,EAAUxL,GAA0BM,aACpCvT,EAA2C,CAAA,EACjD,IAAK,MAAMoT,KAAUqL,EAAS,CAC5B,MAAMC,QACIzL,GAA0BK,WAAWF,GAAQjD,aACvD,IAAK,MAAMnf,KAAQ0tB,EAAW,CAE5B1e,EADYoT,EAASJ,GAAoBhiB,GAC9B0tB,EAAU1tB,IAGzB,OAAOgP,CACT,EajNAuc,YHiFO9I,eACHiE,EAAiC4B,EAAiB,GAClDC,EACAR,GAWF,OAFoBK,IAFEwB,GAClBlC,GAAyBkC,EAAW,CAAC7B,iBAGlCwD,CAAY7E,EAAU4B,EAAgBC,EAC/C,EGhGAoF,Ub6VAlL,eACIE,EAAmBC,GAErB,OAAOF,GAAmBC,EAAWC,GADhB,EAEvB,EajWA5G,mBhByGmC4R,GAC/BlS,GAAiBM,mBAAmB4R,GgB1GxC9R,mBhBuGmC8R,GAC/BlS,GAAiBI,mBAAmB8R,GgBxGxCrO,YboPAkD,eAA2BtG,GACzB,MAAM0R,EAAgBrL,GAASrG,GAE/B,OADgB8F,GAA0BK,WAAWuL,EAAczL,QACpD7C,YAAYsO,EAAc7tB,KAC3C,EaxPAooB,qBAAAA,GAAA0F,gBDiHM,SACF7K,GAEF,OAAO,IAAIyJ,GAAiBzJ,EAC9B;;;;;;;;;;;;;;;;GC5DO,MAAM8K,GAASpX,GAAG,CAACqX,QAd1B,SACItjC,EAAsBmV,EAAsBouB,GAAa,EACzDC,GAAa,GACf,IAAIC,EAAKlY,GAAgBvrB,EAAG,IAAK,UAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,WAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAA4B,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GACvCrgB,EAA0B,CAACkgB,aAAYC,cAE7C,OAAOlgB,GAAOC,UACV1Y,GAAa2L,EAAgC6M,EACnD;;;;;;;;;;;;;;;;GCOO,MAAMsgB,GAAS1X,GAAG,CAAC2X,QAhB1B,SACI5Y,EAA4B6Y,EAAeC,EAAU,EACrDC,EAAW,GACb,GAAIF,EAAQ,EACV,MAAM,IAAIxlC,MAAM,iDAAiDwlC,KAEnE,MAEMrtB,EAAuB,CAACwU,QAFbO,GAAgBP,EAAS,UAAW,SAAU,UAGzD3H,EAAqB,CAACwgB,QAAOC,UAASC,YAE5C,OAAOzgB,GAAOC,UACVzT,GAAQ0G,EACR6M,EACN;;;;;;;;;;;;;;;;GCeO,MAAM2gB,GAAY/X,GAAG,CAACgY,WA5B7B,SAAsCjlC,EAAiBklC,GACrD,MAAMzK,EAAKlO,GAAgBvsB,EAAG,IAAK,aAgBnC,GAdY,MAARklC,IACFA,EAAOzK,EAAG57B,MAAMqE,KAAI,CAACC,EAAG7C,IAAMA,IAAG6kC,WAEnCzvB,EACI+kB,EAAGx3B,OAASiiC,EAAKzlC,QACjB,IAAM,qCAAqCg7B,EAAGx3B,kCACbiiC,OACrCA,EAAKpgC,SAAQ9B,IACX0S,EACI1S,GAAQ,GAAKA,EAAOy3B,EAAGx3B,MACvB,IAAM,gDAA+Cw3B,EAAGx3B,KAAO,GAC3D,YAAYiiC,KAAO,IAGzBzK,EAAGx3B,MAAQ,EACb,OAAOw3B,EAAGle,QAGZ,MAAM/E,EAA0B,CAACxX,EAAGy6B,GAC9BpW,EAAwB,CAAC6gB,QAE/B,OAAO5gB,GAAOC,UACV/Q,GAAWgE,EAAgC6M,EACjD;;;;;;;;;;;;;;;;GCsBO,MAAM+gB,GAAkBnY,GAAG,CAACoY,iBAtC7B,SACFC,EAA6BC,EAC7BC,GACF,MAAMC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,mBAC5CI,EACFnZ,GAAgBgZ,EAAa,cAAe,mBAEhD7vB,EACkB,MAAd8vB,GAAsBA,EAAa,GAAKh/B,OAAOC,UAAU++B,IACzD,IACI,+DAAWA,MACnB9vB,EACqB,IAAjB+vB,EAAQxiC,MACR,IAAM,gDAAgDwiC,EAAQxiC,SAClEyS,EAC0B,IAAtBgwB,EAAaziC,MACb,IACI,qDAAWyiC,EAAaziC,SAChCyS,EACI+vB,EAAQ5mC,MAAM,KAAO6mC,EAAa7mC,MAAM,IACxC,IACI,uCAAG4mC,EAAQ5mC,MAAM,UAAU6mC,EAAa7mC,MAAM,wEAEtD6W,EACI8vB,EAAa,GAAKh/B,OAAOC,UAAU++B,IACnC,IACI,4DAAGA,MAIX,MAAMG,EAAehB,GAAOnoB,GAAKipB,EAAS,SAAUD,GAC9CI,EACFjB,GAAOnoB,GAAKkpB,EAAc,SAAUF,GAClCK,EAA0Bb,GAAUW,GACpCG,EAAoBzB,GAAOwB,EAAeD,GAChD,OAAOppB,GAAKspB,EAAS,QACvB;;;;;;;;;;;;;;;;GC7FA,IAAAC,GAAAv9B,OAAAmN,OAAA,CAAAC,UAAA,KAAAwvB,gBAAAA;;;;;;;;;;;;;;;;GA+CM,SAAUY,GACZpnC,EAAsBC,EACtBC,GAEF,GADAiC,EAAcnC,GACD,MAATC,GAAkC,IAAjBA,EAAMY,OACzB,MAAM,IAAIJ,MAAM,mDAElB,MAAMstB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,QAAyC,IAAzBktB,EAAcltB,OAC9C,MAAM,IAAIJ,MACN,oEAEN,GAA6B,IAAzBstB,EAAcltB,QAAyB,MAATZ,EAChC,MAAM,IAAIQ,MACN,2EAGN,OAAOkc,GAAW3c,EAAQC,EAAO8tB,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GCpCA,IAAImnC,GAyOG,MAAMC,GAAajZ,GAAG,CAACkZ,YAhN9B,SACIC,EAEAC,EAAc,GAEhB,GAAIA,EAAc,EAChB,MAAM,IAAIhnC,MACN,kEAEN,GAAc,MAAV+mC,EACF,MAAM,IAAI/mC,MAAM,4DAElB,IAAIinC,GAAc,EACdC,GAAc,EACdC,GAAU,EACVC,GAAU,EACVC,GAAe,EACfC,GAAgB,EACpB,GAAKP,EAAqB1oC,gBAAgBsG,WACxCsiC,GAAc,OACT,GACoB,oBAAfM,WAA8BR,aAAkBQ,UAC1DL,GAAc,OACT,GAC2B,oBAAtBM,kBACRT,aAAkBS,iBACpBL,GAAU,OACL,GAC2B,oBAAtBM,kBACRV,aAAkBU,iBACpBL,GAAU,OAEL,GAAkC,MAA7BL,EAAeW,WACzBL,GAAe,MACV,MACsB,oBAAjBM,aACRZ,aAAkBY,aAGpB,MAAM,IAAI3nC,MAKN,qPAAY+mC,EAAc9oC,YAAY4L,QAP1Cy9B,GAAgB,EASlB,GAAIH,EAAS,CACX,MAAMS,EAAgC,EACtC,GAAIT,GACCJ,EAA4Bc,WACzBD,EACN,MAAM,IAAI5nC,MACN,yGAOR,GAAc,MADCgV,GAAUP,GAAYwQ,GAAOhQ,aACxB,CAClB,MAAMkD,EAA2B,CAAC4uB,UAC5B/hB,EAAyB,CAACgiB,eAChC,OAAO/hB,GAAOC,UACVzQ,GAAY0D,EACZ6M,GAGN,MAAOxiB,EAAOslC,GAAUX,EACpB,CACGJ,EAA4BgB,WAC5BhB,EAA4BiB,aAE/B,CAACjB,EAAOvkC,MAAOukC,EAAOe,QAC1B,IAAIhjC,EAkBAvF,EACJ,GAjBI8nC,EACFviC,EAEKiiC,EAAeW,WAAW,MAAMO,aAAa,EAAG,EAAGzlC,EAAOslC,GAAQzpC,KAC9D6oC,GAAeD,EACxBniC,EAAQiiC,EAAiC1oC,MAChC+oC,GAAWD,GAAWG,KACJ,MAAvBV,KACFA,GAAsBva,SAAS+P,cAAc,UAAUsL,WAAW,OAEpEd,GAAoBsB,OAAO1lC,MAAQA,EACnCokC,GAAoBsB,OAAOJ,OAASA,EACpClB,GAAoBuB,UAChBpB,EAA4B,EAAG,EAAGvkC,EAAOslC,GAC7ChjC,EAAO8hC,GAAoBqB,aAAa,EAAG,EAAGzlC,EAAOslC,GAAQzpC,MAG3C,IAAhB2oC,EACFznC,EAAS,IAAImF,WAAWI,OACnB,CACL,MAAMsjC,EAAY5lC,EAAQslC,EAC1BvoC,EAAS,IAAImF,WAAW0jC,EAAYpB,GACpC,IAAK,IAAI/lC,EAAI,EAAGA,EAAImnC,EAAWnnC,IAC7B,IAAK,IAAIonC,EAAU,EAAGA,EAAUrB,IAAeqB,EAC7C9oC,EAAO0B,EAAI+lC,EAAcqB,GAAWvjC,EAAS,EAAJ7D,EAAQonC,GAKvD,OAAO1B,GAASpnC,EAD2B,CAACuoC,EAAQtlC,EAAOwkC,GACzB,QACpC,IC5IA,IAAAsB,GAAAn/B,OAAAmN,OAAA,CAAAC,UAAA,KAAAswB,WAAA0B,GAAAC,SDiKO9O,eACH+O,EACAP,GACF,IAAIQ,EAAOxb,GAAgBub,EAAK,MAAO,YACvC,KAAMA,aAAersB,IAAS,CAE5B,MAAMusB,EAAoBD,EAC1BA,EAAOvrB,GAAKwrB,EAAmB,SAC/BA,EAAkB7oC,UAEpB,GAAkB,IAAd4oC,EAAK9kC,MAA4B,IAAd8kC,EAAK9kC,KAC1B,MAAM,IAAI5D,MACN,wDAAwD0oC,EAAK9kC,SAEnE,MAAOkkC,EAAQtlC,GAASkmC,EAAKlpC,MAAMiE,MAAM,EAAG,GACtC+hC,EAAsB,IAAdkD,EAAK9kC,KAAa,EAAI8kC,EAAKlpC,MAAM,GAE/C,GAAIgmC,EAAQ,GAAe,IAAVA,EACf,MAAM,IAAIxlC,MAEN,0DAAqBwlC,KAG3B,GAAmB,YAAfkD,EAAKjpC,OAAsC,UAAfipC,EAAKjpC,MACnC,MAAM,IAAIO,MACN,kCAAkC0oC,EAAKjpC,+CAI7C,MAAMpB,QAAaqqC,EAAKrqC,OAClBuqC,EAA4B,YAAfF,EAAKjpC,MAAsB,IAAM,EAC9C+F,EAAQ,IAAIqjC,kBAAkBrmC,EAAQslC,EAAS,GAErD,IAAK,IAAI7mC,EAAI,EAAGA,EAAI6mC,EAAStlC,IAASvB,EAAG,CACvC,MAAM6nC,EAAO,CAAC,EAAG,EAAG,EAAG,KAEvB,IAAK,IAAItiC,EAAI,EAAGA,EAAIg/B,EAAOh/B,IAAK,CAC9B,MAAMlJ,EAAQe,EAAK4C,EAAIukC,EAAQh/B,GAE/B,GAAmB,YAAfkiC,EAAKjpC,OACP,GAAInC,EAAQ,GAAKA,EAAQ,EACvB,MAAM,IAAI0C,MAEN,mFAAiC1C,WAElC,GAAmB,UAAforC,EAAKjpC,QACVnC,EAAQ,GAAKA,EAAQ,KACvB,MAAM,IAAI0C,MAEN,mFAAmC1C,MAI7B,IAAVkoC,GACFsD,EAAK,GAAKxrC,EAAQsrC,EAClBE,EAAK,GAAKxrC,EAAQsrC,EAClBE,EAAK,GAAKxrC,EAAQsrC,GAElBE,EAAKtiC,GAAKlJ,EAAQsrC,EAItB,MAAMrkC,EAAQ,EAAJtD,EACVuE,EAAMjB,EAAI,GAAKhE,KAAKwV,MAAM+yB,EAAK,IAC/BtjC,EAAMjB,EAAI,GAAKhE,KAAKwV,MAAM+yB,EAAK,IAC/BtjC,EAAMjB,EAAI,GAAKhE,KAAKwV,MAAM+yB,EAAK,IAC/BtjC,EAAMjB,EAAI,GAAKhE,KAAKwV,MAAM+yB,EAAK,IAGjC,GAAc,MAAVZ,EAAgB,CAClBA,EAAO1lC,MAAQA,EACf0lC,EAAOJ,OAASA,EAChB,MAAMiB,EAAMb,EAAOR,WAAW,MACxBsB,EAAY,IAAIzB,UAAU/hC,EAAOhD,EAAOslC,GAC9CiB,EAAIE,aAAaD,EAAW,EAAG,GAKjC,OAHIN,IAASD,GACXC,EAAK5oC,UAEA0F,CACT,ICzOM,SAAU0jC,GAAmBnpB,EAAoB4M,GAErD,MAAMwc,EAAappB,EAAOvgB,MAAMY,OAC1BgpC,EAAczc,EAAQntB,MAAMY,OAClC,GAAI+oC,EAAa,EACf,MAAM,IAAInpC,MAEN,4EAAqBmpC,MAE3B,GAAIC,EAAc,EAChB,MAAM,IAAIppC,MAEN,8EAAqBopC,MAE3B,GAAsB,UAAlBzc,EAAQltB,MACV,MAAM,IAAIO,MAEN,yEAAsB2sB,EAAQltB,UAEpC,GAAIktB,EAAQntB,MAAM4pC,EAAc,GAAKD,EACnC,MAAM,IAAInpC,MAEN,iEAAG2sB,EAAQntB,MAAM4pC,EAAc,UAAUD,KAG/C,GAAoC,IAAhCjnC,EAAc6d,EAAOvgB,OACvB,MAAM,IAAIQ,MAEN,mEAAiB+f,EAAOvgB,UAG9B,MAAM6pC,EAAe1c,EAAQntB,MACvB8pC,EAAYD,EAAaA,EAAajpC,OAAS,GAIrD,IAAImpC,EAAU,EACd,IAAK,IAAItoC,EAAI,EAAGA,EAAIooC,EAAajpC,OAAS,IAAKa,EAC7CsoC,GAAWF,EAAapoC,GAG1B,MAAMsY,EAAawG,EAAOvgB,MAEpBgqC,EAAcH,EAAa5lC,QACjC+lC,EAAYlgB,MAEZ,IAAImgB,EAAY,EAChB,IAAK,IAAIxoC,EAAIqoC,EAAWroC,EAAIkoC,IAAcloC,EACxCwoC,GAAalwB,EAAWtY,GACxBuoC,EAAYvnC,KAAKsX,EAAWtY,IAG9B,MAAMmF,EACF,IAAID,EAAe4Z,EAAOvgB,OAAOqE,KAAI4X,GAAUA,EAASguB,IACvD,GAAGhmC,MAAM,EAAG6lC,GAEjB,MAAO,CAACE,EAAaD,EAASE,EAAWrjC,EAC3C,CChEA,IAAAsjC,GAAAvgC,OAAAmN,OAAA,CAAAC,UAAA,KAAA2yB,mBAAAA,KAMM,SAAUS,GACZnqC,EAAiBmtB,EAAiBid,GACpC,MAAMC,EAAYld,EAAQ/oB,KAAO,EAAK+oB,EAAQntB,MAAMmtB,EAAQ/oB,KAAO,GAAK,EAClEkmC,EAAYnd,EAAQ/oB,KAAO,EAAK+oB,EAAQ/oB,KAAO,EAAI,EAEnDmmC,EACF,6FAAwCH,EAAQpqC,yBAC5BmtB,EAAQntB,iBAAiBA,gBAC9BqqC,oBAA2BC,KAE9C,GAAIF,EAAQhmC,KAAOkmC,EACjB,MAAM,IAAI9pC,MAAM+pC,EAAa,kBAAkBD,OAEjD,GAAItqC,EAAMY,OAASypC,GAAYD,EAAQhmC,KAAOkmC,GAC5C,MAAM,IAAI9pC,MACN+pC,EACA,0BAA0BF,GAAYD,EAAQhmC,KAAOkmC,MAE3D,GAAIF,EAAQhmC,OAASkmC,EAAWtqC,EAAMY,OAASypC,EAC7C,MAAM,IAAI7pC,MACN+pC,EAAa,oBAAmBD,EAAWtqC,EAAMY,OAASypC,IAEhE,IAAK,IAAIrjC,EAAI,EAAGA,EAAIsjC,IAAYtjC,EAC9B,GAAIojC,EAAQpqC,MAAMgH,KAAOmmB,EAAQntB,MAAMgH,GACrC,MAAM,IAAIxG,MACN+pC,EACA,kBAAkBvjC,OAAOojC,EAAQpqC,MAAMgH,wBAAwBA,OAC3DmmB,EAAQntB,MAAMgH,QAG1B,IAAK,IAAIA,EAAI,EAAGA,EAAIojC,EAAQhmC,KAAOkmC,IAAYtjC,EAC7C,GAAIojC,EAAQpqC,MAAMgH,EAAIsjC,KAActqC,EAAMgH,EAAIqjC,GAC5C,MAAM,IAAI7pC,MACN+pC,EACA,kBAAkBvjC,EAAIsjC,OAClBF,EAAQpqC,MAAMgH,EAAIsjC,gBAAuBtjC,EAAIsjC,OAC7CtqC,EAAMgH,EAAIsjC,MAGxB,CAgBM,SAAUE,GACZJ,EAAiBjd,EAAiBntB,GACpC,GAAImtB,EAAQ/oB,KAAO,EACjB,MAAM,IAAI5D,MAEN,+EAAqB2sB,EAAQ/oB,SAEnC,GAAIgmC,EAAQhmC,KAAO,EACjB,MAAM,IAAI5D,MAEN,+EAAqB4pC,EAAQhmC,SAEnC,GAAsB,UAAlB+oB,EAAQltB,MACV,MAAM,IAAIO,MAAM,0DACZ2sB,EAAQltB,SAEd,GAAID,EAAMY,OAAS,EACjB,MAAM,IAAIJ,MACN,6DAA6DR,KAGnE,GAAqB,IAAjBA,EAAMY,OAAc,CACtB,GAAqB,IAAjBusB,EAAQxqB,KACV,MAAM,IAAInC,MAAM,sDACZ2sB,EAAQntB,SAEd,GAAqB,IAAjBoqC,EAAQznC,KACV,MAAM,IAAInC,MAAM,sDACZ4pC,EAAQpqC,SAIhBmqC,GAAoBnqC,EAAOmtB,EAASid,EACtC,CAWM,SAAUK,GACZL,EAAqBjd,EACrBntB,GAEF,MAAM4pC,EAAczc,EAAQntB,MAAMY,OAC5BkpC,EAAaF,EAAc,EAAKzc,EAAQntB,MAAM4pC,EAAc,GAAK,EAKjEc,EAAU1qC,EAAMY,OAEtB,IAAIqpC,EAAY,EAChB,IAAK,IAAIxoC,EAAIqoC,EAAWroC,EAAIipC,IAAWjpC,EACrCwoC,GAAajqC,EAAMyB,GAGrB,MAAMkpC,EAAgBb,EAAY,EAAK,EAAIA,EAK3C,MAAO,CAACA,YAAWc,WAJAloC,EAAcyqB,EAAQntB,OAAS2qC,EAInBV,YAAWrjC,QAF1B,IAAID,EAAe3G,EAAMiE,MAAM,EAAG6lC,IAAa,GAEZe,WADhCnoC,EAAc1C,GAEnC,CCpJA,IAAA8qC,GAAAnhC,OAAAmN,OAAA,CAAAC,UAAA,KAAA0zB,gBAAAA,GAAAD,cAAAO,GAAAZ,oBAAAA;;;;;;;;;;;;;;;;GA8BM,SAAUa,GACZlxB,EAAmBmxB,EAAiBtoC,GACtC,MAAMqX,EAAYF,EAAM9Z,MAAMY,OAC9BiW,EACImD,IAAcixB,EAAMrqC,QACpB,IAAM,iBAAiBoZ,uBAA+BixB,uCAClBjxB,QACxCnD,EACImD,IAAcrX,EAAK/B,QACnB,IAAM,iBAAiBoZ,sBAA8BrX,uCACjBqX,QAExC,IAAK,IAAIvY,EAAI,EAAGA,EAAIuY,IAAavY,EAC/BoV,EACIo0B,EAAMxpC,GAAKkB,EAAKlB,IAAMqY,EAAM9Z,MAAMyB,IAClC,IAAM,iBAAiBuY,aAAqBvY,aAAaA,OACjDwpC,EAAMxpC,GAAKkB,EAAKlB,kCAAkCA,OAChDqY,EAAM9Z,MAAMyB,OAE9B,CAGM,SAAUypC,GAAWC,GACzB,MAAMtmC,EAAO,GACb,IAAIV,EAAO,EACX,KAAOgnC,EAAO,GACD,EAAPA,GACFtmC,EAAKpC,KAAK0B,GAEZgnC,GAAQ,EACRhnC,IAEF,OAAOU,CACT,CAGM,SAAUumC,GACZH,EAAiB/uB,EAAetV,GAClC,MAAMjE,EAAO,GACb,IAAK,IAAIwB,EAAO,EAAGA,EAAO8mC,EAAMrqC,OAAQuD,IACtCxB,EAAKwB,GAAQpD,KAAKkC,MAAMiZ,EAAI/X,GAAQ8mC,EAAM9mC,IAASyC,EAAQzC,IAE7D,OAAOxB,CACT,CAIM,SAAU0oC,GACZzkC,EAAmB0kC,EAAgCC,EACnDxxB,GACF,MAAMyxB,EAAa,IAAI5kC,GACvB,IAAK,IAAInF,EAAI+pC,EAAW5qC,OAAQa,EAAIsY,EAAWnZ,OAAQa,IACrD+pC,EAAW/oC,KAAK,GAElB,IAAK,IAAIhB,EAAI,EAAGA,EAAI8pC,EAAe9pC,IACvB,IAANA,EACF+pC,EAAWF,GAA0B,GAErCE,EAAWC,OACPH,EAAwB,EACxB,GACJE,EAAW1hB,OAGf,OAAO0hB,CACT,CAEA,SAASE,GACLJ,EAAgCC,EAChCI,GACF,OAAIA,GAAkBL,EACbK,EAGFA,GAAkBJ,EAAgB,EAC3C,CAEA,SAASK,GAAcL,EAAuBD,GAC5C,MAAMO,EAAa,GACnB,IAAK,IAAIpqC,EAAI,EAAGA,EAAI8pC,EAAe9pC,IACjCoqC,EAAWppC,KAAK6oC,EAAyB7pC,GAE3C,OAAOoqC,CACT,CAGM,SAAUC,GACZ/xB,EAAsBgyB,EAAwBC,EAC9Cf,EAAiB/uB,EAAetV,EAAmBqlC,EACnDC,EACAC,GACF,MAAMnyB,EAAYD,EAAWnZ,OAC7B,IAAIwrC,EAAkB,IAAI9pC,MAAM0X,GAC5BqyB,EAAgB,IAAI/pC,MAAM0X,GAC1BsyB,EAAoB,IAAIhqC,MAAM0X,GAClC,GAAI+xB,EAAanrC,QAAUorC,EAAsB,EAAG,CAClD,MAAMO,EAAYR,EAAa,GAIzBR,EAAgBS,EAAsB,EAC5CI,EAAkBI,GACdP,EAAWM,EAAWhB,EAAeN,EAAOlxB,GAChDsyB,EAAgBI,GACZP,EAASK,EAAWhB,EAAervB,EAAKnC,GAC5CuyB,EACIjB,GAAsBzkC,EAAS2lC,EAAWhB,EAAexxB,QAE7D,IAAK,IAAI5V,EAAO,EAAGA,EAAO6V,EAAW7V,IACnCioC,EAAgBjoC,GAAQuoC,GACpBT,EAAWhB,EAAOrkC,EAASmT,EAAY5V,EAAMgoC,GACjDE,EAAcloC,GACVwoC,GAAYT,EAAShwB,EAAKtV,EAASmT,EAAY5V,EAAMgoC,GACzDG,EAAkBnoC,GAAQyoC,GAAehmC,EAASzC,EAAMgoC,GAI5D,MAAO,CACLlB,MAAOmB,EACPlwB,IAAKmwB,EACLzlC,QAAS0lC,EAEb,CAIM,SAAUE,GACZP,EAAmBX,EAAgCC,EACnDsB,EAAyB9yB,GAC3B,MAAM+yB,EAAa,IAAI/yB,GACjB8xB,EAAaD,GAAcL,EAAeD,GAEhD,IAAK,IAAInnC,EAAO,EAAGA,EAAO2oC,EAAWlsC,OAAQuD,IAC3C,GAAI0nC,EAAWhe,QAAQ1pB,IAAS,EAC9B2oC,EAAW3oC,GAAQ,MACd,CACL,MAAM4oC,EACFrB,GAAgBJ,EAAwBC,EAAepnC,GAC3D,IAAI6oC,EAAgBH,EAAcE,GAC9Bd,EAAY,GAAKc,IACnBC,EAAgB,GAGlBF,EAAW3oC,GAAQ6oC,EAGvB,OAAOF,CACT,CAIM,SAAUL,GACZP,EAAiBZ,EAAgCC,EACjD0B,EAAuBlzB,GACzB,MAAM+yB,EAAa,IAAI/yB,GACjB8xB,EAAaD,GAAcL,EAAeD,GAEhD,IAAK,IAAInnC,EAAO,EAAGA,EAAO2oC,EAAWlsC,OAAQuD,IAC3C,GAAI0nC,EAAWhe,QAAQ1pB,IAAS,EAC9B2oC,EAAW3oC,GAAQwD,OAAOulC,qBACrB,CACL,MAAMH,EACFrB,GAAgBJ,EAAwBC,EAAepnC,GAC3D,IAAI6oC,EAAgBC,EAAYF,GAC5Bb,EAAU,GAAKa,IACjBC,EAAgBrlC,OAAOulC,kBAEzBJ,EAAW3oC,GAAQ6oC,EAIvB,IAAK,IAAIvrC,EAAI,EAAGA,EAAIqrC,EAAWlsC,OAAQa,IAAK,CAE1C,MAAM0rC,EAAWpzB,EAAWtY,GACxBqrC,EAAWrrC,GAAK,IAClBqrC,EAAWrrC,IAAM0rC,GAEnBL,EAAWrrC,GAAKoV,EAAW,EAAGi2B,EAAWrrC,GAAIsY,EAAWtY,IAE1D,OAAOqrC,CACT,CAEM,SAAUF,GACZhmC,EAAmBzC,EAAcgoC,GACnC,IAAIlwB,EAASrV,EAAQzC,GAKrB,OAJIgoC,EAAgB,GAAKhoC,GAAmB,MAAV8X,KAChCA,EAAS,GAGJA,CACT,CAEM,SAAUywB,GACZT,EAAmBmB,EAAwBxmC,EAC3CmT,EAAsB5V,EAAcgoC,GAEtC,IAAIzlC,EAAQ0mC,EAAajpC,GACzB,MAAM8X,EAASrV,EAAQzC,IAAS,GAI5B8nC,EAAY,GAAK9nC,GAAQgoC,EAAe,GAAKhoC,GAAiB,MAATuC,KAKrDA,EAJEuV,EAAS,EAIHtU,OAAO0lC,iBAGP1lC,OAAOulC,kBAKnB,MAAMC,EAAWpzB,EAAW5V,GAQ5B,OAPIuC,EAAQ,IACVA,GAASymC,GAIXzmC,EAAQmQ,EAAW,EAAGnQ,EAAOymC,EAAW,GAEjCzmC,CACT,CAEM,SAAUimC,GACZT,EAAiBoB,EAAuB1mC,EACxCmT,EAAsB5V,EAAcgoC,GAEtC,IAAIoB,EAAOD,EAAYnpC,GACvB,MAAM8X,EAASrV,EAAQzC,IAAS,GAI5B+nC,EAAW,GAAK/nC,GAASgoC,EAAgB,GAAKhoC,GAAiB,MAARopC,KAIvDA,EAHEtxB,EAAS,EAGJtU,OAAOulC,iBAGPvlC,OAAO0lC,kBAKlB,MAAMF,EAAWpzB,EAAW5V,GAgB5B,OAfIopC,EAAO,IACTA,GAAQJ,GAQRI,EAFEtxB,EAAS,EAEJpF,EAAW,EAAG02B,EAAMJ,GAGpBt2B,GAAY,EAAG02B,EAAMJ,EAAW,GAGlCI,CACT,CAMM,SAAUC,GACZxtC,EAAiBirC,EAAiBtoC,GAEpC,IAAI8qC,EAAkB9qC,EAAK/B,OAC3B,IAAK,IAAIa,EAAI,EAAGA,EAAIkB,EAAK/B,OAAQa,IAC/B,GAAIkB,EAAKlB,GAAK,EAAG,CACfgsC,EAAkBhsC,EAClB,MAIJ,IAAK,IAAIA,EAAIgsC,EAAkB,EAAGhsC,EAAIkB,EAAK/B,OAAQa,IACjD,GAAIwpC,EAAMxpC,GAAK,GAAKkB,EAAKlB,KAAOzB,EAAMyB,GACpC,OAAO,EAGX,OAAO,CACT,CAEM,SAAUisC,GAAkBzC,EAAiBrkC,GACjD,IAAI+mC,EAAa1C,EAAMrqC,OAAS,EAAIqqC,EAAMA,EAAMrqC,OAAS,GAAK,EAC9D,IAAK,IAAIa,EAAI,EAAGA,EAAIwpC,EAAMrqC,OAAS,EAAGa,IACpCksC,GAAc1C,EAAMxpC,GAAKmF,EAAQnF,GAEnC,OAAOksC,CACT,CAEM,SAAUC,GACZzsC,EAAe8pC,EAAwBtoC,GAEzC,IAAIkrC,EACJ,MAAMC,EAAQ3sC,EAAEnB,MAAMY,OAYtB,IAAImtC,EAqBJ,OA/BEF,EADmB,iBAAV5C,EACA,CAACA,KAAU,IAAI3oC,MAAMwrC,EAAQ,GAAGrzB,KAAK,IACrCwwB,EAAMrqC,OAASktC,EACf7C,EAAM1mC,OAAO,IAAIjC,MAAMwrC,EAAQ7C,EAAMrqC,QAAQ6Z,KAAK,IAElDwwB,EAAMhnC,QAEjB4pC,EAAO5nC,SAAQe,IACb6P,GACW,IAAP7P,GAAU,IAAM,qDAAoD,IAIxE+mC,EADU,MAARprC,EACM,IAAIL,MAAMwrC,GAAOrzB,MAAM,GACN,iBAAT9X,EACR,CAACA,KAAS,IAAIL,MAAMwrC,EAAQ,GAAGrzB,MAAM,IACpC9X,EAAK/B,OAASktC,EACfnrC,EAAK4B,OAAO,IAAIjC,MAAMwrC,EAAQnrC,EAAK/B,QAAQ6Z,MAAM,IAEjD9X,EAEVorC,EAAQA,EAAM1pC,KAAI,CAAC2C,EAAGvF,IAChBuF,GAAK,EACAA,GAEP6P,GACW,IAAP7P,GACA,IACI,qDAAGA,mCAAmCvF,OACvCN,EAAEnB,MAAMyB,GAAKosC,EAAOpsC,MAGxB,CAACosC,EAAQE,EAClB,CAEM,SAAUC,GACZC,EAAkBhD,EAAiB/uB,EAAetV,EAClDqlC,EAAmBC,EAAiBC,EACpC+B,EAAqBC,GAEvB,IAAIC,EAASnD,EAAMhnC,QACfoqC,EAAOnyB,EAAIjY,QACXqqC,EAAW1nC,EAEA,MAAXA,IACF0nC,EAAW,IAAIhsC,MAAM8rC,EAAOxtC,SAG9B,MAAMmrC,EAAeb,GAAWiB,GAChC,GAAIJ,EAAanrC,OAAS,EACxB,MAAM,IAAIJ,MAAM,8CAGlB,GAAqB,IAAjB2rC,GAAsC,IAAhB+B,EACxB,MAAM,IAAI1tC,MACN,iEAGN,GAAqB,IAAjB2rC,GAAyC,IAAnBgC,EACxB,MAAM,IAAI3tC,MACN,oEAGN,MAAMwrC,EAAsBiC,EAAOrtC,OAASwtC,EAAOxtC,OAG7C2tC,EAAarD,GAAWgD,GACxBlqC,EAAWiqC,EAAOhqC,QACxBsqC,EAAWtoC,SAAQ9B,IACjBiqC,EAAOjqC,GAAQ,EACfkqC,EAAKlqC,GAAQ,EACbH,EAASynC,OAAOtnC,EAAM,EAAG,EAAE,IAG7B,MACE8mC,MAAOmB,EACPlwB,IAAKmwB,EACLzlC,QAAS0lC,GAEPR,GACI9nC,EAAU+nC,EAAcC,EAAqBoC,EAAQC,EAAMC,EAC3DrC,EAAWC,EAASC,GAC5BiC,EAAShC,EACTiC,EAAOhC,EACPiC,EAAWhC,EAEX,MAAMkC,EAAatD,GAAWiD,GAE9BK,EAAWvoC,SAAQ9B,IACjBkqC,EAAKlqC,GAAQiqC,EAAOjqC,GAAQ,EAC5BmqC,EAASnqC,GAAQ,CAAC,IAIpB,MAAMxB,EAAOyoC,GAAgBgD,EAAQC,EAAMC,GAErCG,EAAW9rC,EAAK0lB,QAAO,CAACC,EAAGnkB,KAAuC,IAA9BqqC,EAAW3gB,QAAQ1pB,KAI7D,MAAO,CAACuqC,WAFWJ,EAAS9pC,OAAMgX,GAAW,IAANA,IAEnB4yB,SAAQC,OAAMC,WAAU3rC,OAAMqB,WAAUyqC,WAC9D,CChbA,IAAAE,GAAAhlC,OAAAmN,OAAA,CAAAC,UAAA,KAAAi0B,kBAAAA,GAAA0C,kBAAAA,GAAAtC,gBAAAwD,GAAA9C,kBAAAA,GAAA0B,iBAAAA,GAAAtC,WAAAA,GAAA0C,iBAAAA,GAAAI,UAAAA,GAAAtB,aAAAA,GAAAF,2BAAAA,GAAAG,YAAAA,GAAAF,0BAAAA,GAAAG,eAAAA,GAAAvB,sBAAAA;;;;;;;;;;;;;;;;GA8DM,MAAgBwD,GAYpBC,YAAAA,GACE,OAAQlwC,KAAKH,YACRswC,SACP,CAgBA,iBAAOC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EAAIl5B,EACjB,EAUI,MAAOm5B,GAOXzwC,WAAAA,GACEG,KAAKuwC,aAAe,EACtB,CAKA,aAAOC,GAIL,OAHiC,MAA7BF,GAAiBhxB,WACnBgxB,GAAiBhxB,SAAW,IAAIgxB,IAE3BA,GAAiBhxB,QAC1B,CAKA,eAAOmxB,CAAiCJ,GACtCC,GAAiBE,SAASD,aAAaF,EAAIF,WACvC,CAACE,EAAKA,EAAID,WAChB,EA2BI,SAAUM,GACZL,GACFvtC,EACqB,MAAjButC,EAAIF,WACJ,IAAM,gFAEVrtC,EAC6B,iBAAlButC,EAAIF,WACX,IAAM,6DACKE,EAAIF,YACnBrtC,EACIutC,EAAIF,UAAUnuC,OAAS,GACvB,IAAM,sFAGVsuC,GAAiBG,SAASJ,EAC5B,CChLA,IAAAM,GAAA5lC,OAAAmN,OAAA,CAAAC,UAAA,KAAA83B,aAAAA,GAAAK,iBAAAA,GAAAI,cAAAA;;;;;;;;;;;;;;;;GAsBA,MAAME,GAAuB,KAChBC,GAAuB,GAY9B,SAAUC,KACd,OAA2C,KAApCjqB,GAAO/mB,QAAQ0B,iBAA0BovC,GACAC,EAClD,CAEA,SAASE,GACLC,EAAoBC,EACpBC,GACF,IAAIC,GAAiB,EAOrB,IANIvtC,EAAaotC,IAAWptC,EAAaqtC,MACvCE,GAAiB,GAEfvtC,EAAaotC,IAAWptC,EAAaqtC,KACvCE,GAAiB,GAEfA,EAAgB,CAClB,MAAMC,EAAQJ,EAAOnxC,YAAY4L,KAC3B4lC,EAAQJ,EAASpxC,YAAY4L,KAEnC,GAAI2lC,IAAUC,EACZ,MAAM,IAAIzvC,MACN,yCAAyCwvC,gBAC5BC,KAIrB,GAAI3tC,MAAMC,QAAQqtC,IAAWttC,MAAMC,QAAQstC,GAAW,CACpD,MAAMK,EAAcljB,GAAW4iB,GACzBO,EAAgBnjB,GAAW6iB,GACjC,IAAK5tC,EAAYiuC,EAAaC,GAC5B,MAAM,IAAI3vC,MAEN,0CAAY0vC,kBAA4BC,MAIhD,MAAMC,EACF5tC,EAAaotC,GAAUA,EAASxtC,EAAQwtC,GACtCS,EAAe7tC,EAAaqtC,GAC9BA,EACAztC,EAAQytC,GAEZ,GAAIO,EAAWxvC,SAAWyvC,EAAazvC,OACrC,MAAM,IAAIJ,MACN,yCAAyC4vC,EAAWxvC,uBACvCyvC,EAAazvC,sBACbwvC,iBACAC,MAEnB,IAAK,IAAI5uC,EAAI,EAAGA,EAAI4uC,EAAazvC,SAAUa,EAAG,CAC5C,MAAMU,EAAIiuC,EAAW3uC,GACfxD,EAAIoyC,EAAa5uC,GAEvB,IAAKquC,EAAU3tC,EAAGlE,GAChB,MAAM,IAAIuC,MACN,yBAAyBiB,QAAQU,eAAeV,QAAQxD,iBAC3CmyC,iBACAC,MAGvB,CAkCA,SAASC,GAASnuC,EAAWlE,EAAWoC,GACtC,OAAKoF,SAAStD,KAAOsD,SAASxH,MAG1BuH,MAAMrD,IAAMqD,MAAMvH,IAAM8C,KAAKwvC,IAAIpuC,EAAIlE,GAAKoC,EAIhD,CCzIA,IAAAmwC,GAAA7mC,OAAAmN,OAAA,CAAAC,UAAA,KAAA04B,qBAAAA,GAAAgB,cD6JM,SAAUA,EAActuC,GAE5B,IAAK,IAAIV,EAAI,EAAGA,EAAKU,EAAgBvB,OAAQa,IAAK,CAChD,MAAMH,EAAMa,EAAEV,GACVa,MAAMC,QAAQjB,GAChBmvC,EAAcnvC,GAEda,EAAEV,GAAKyU,GAAa5U,GAGxB,OAAOa,CACT,ECxKAuuC,wBDqJM,SACFd,EAAqBC,GAGvBc,OAAO,IAAI1rC,aAAa2qC,IAASgB,QAAQ,IAAI3rC,aAAa4qC,GAC5D,EC1JAgB,kBDyBM,SACFjB,EACAC,EAAoDxvC,GAItD,OAHe,MAAXA,IACFA,EAAUqvC,MAELC,GACHC,EAAQC,GAAU,CAAC1tC,EAAGmV,IAAMg5B,GAASnuC,EAAamV,EAAajX,IACrE,ECjCAywC,kBD0GM,SAA4BlB,EAAoBC,GACpD,MAAMx3B,EAA0B,iBAAbw3B,GAA6C,iBAAbA,GACvB,kBAAbA,EACX,CAACA,GACDA,EACJ,OAAI3pC,EAAS0pC,IAAW1pC,EAAU0pC,EAAoB,KAClD1pC,EAAS2pC,IAAa3pC,EAAU2pC,EAAsB,IAEjDF,GAAsBC,EAAQv3B,GAAK,CAAClW,EAAGmV,IAAMnV,GAAKmV,IAEpDq4B,GACHC,EAAQC,GAAU,CAAC1tC,EAAGmV,IAAMg5B,GAASnuC,EAAamV,EAAa,IACrE,ECtHAy5B,mBDwHM,SAA6B5uC,EAAWlE,EAAWoC,GAIvD,GAHe,MAAXA,IACFA,EAAUqvC,OAEPY,GAASnuC,EAAGlE,EAAGoC,GAClB,MAAM,IAAIG,MAAM,8BAA8B2B,mBAAmBlE,IAErE,EC/HA+yC,oBDsGM,SAA8BvsB,EAAuBrmB,GACzDqmB,IAAKpmB,MAAK,IAAMD,EAAK6yC,SAAQ,IAAM7yC,KACrC,ECxGA8yC,oBD2IM,SACFtB,EAA6BuB,EAAaC,GAC5C,IAAK,IAAI3vC,EAAI,EAAGA,EAAImuC,EAAOhvC,OAAQa,IACjC,GAAImuC,EAAOnuC,GAAK0vC,GAAOvB,EAAOnuC,GAAK2vC,EACjC,MAAM,IAAI5wC,MACN,sBAAsBovC,EAAOnuC,WAAW0vC,YAAcC,IAGhE,ECnJA1B,YAAAA,0CCoFM,SAAU2B,KACd,OAAO5rB,EACT,CAuGM,SAAUlB,GACZC,EAA6BC,GAC/B,OAAOgB,GAAOlB,KAAKC,EAAUC,EAC/B,CAaM,SAAUnkB,GAAQyf,GACNJ,GAAsBI,GAC9B9Z,SAAQsa,GAAUA,EAAOjgB,WACnC,CAkCM,SAAU6mB,GAAuBhpB,GACrC,OAAOsnB,GAAO0B,KAAKhpB,EACrB,CAiHM,SAAUklB,GACZhZ,EAAc+Y,EACdE,EAAW,GACb,OAAOmC,GAAOpC,gBAAgBhZ,EAAM+Y,EAASE,EAC/C,CC9SO,MAAMlD,GAAMgO,GAAG,CAACkjB;;;;;;;;;;;;;;;;;AAVvB,SAAgCnvC,EAAsBmV,GACpD,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,QAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAoB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAErC,OAAOpgB,GAAOC,UAAUzZ,GAAK0M,EAC/B;;;;;;;;;;;;;;;;GCOO,MAAM44B,GAAWnjB,GAAG,CAACojB,UAX5B,SACIrvC,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,YAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,aAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAyB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE1C,OAAOpgB,GAAOC,UAAUpW,GAAUqJ,EACpC;;;;;;;;;;;;;;;;GCMO,MAAM84B,GAAMrjB,GAAG,CAACsjB,KAhBvB,SAAgCvvC,EAAsBmV,GACpD,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,OAGjC,IAFCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAEb,UAAbD,EAAG3lC,OAAkC,UAAb4lC,EAAG5lC,MAC7B,OAAOsxC,GAAS3L,EAAIC,GAGtB,MAAMltB,EAAwB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAIzC,OAAOpgB,GAAOC,UAAUhX,GAASiK,EAHnB,CAAA,EAIhB;;;;;;;;;;;;;;;;GCLO,MAAMg5B,GAAMvjB,GAAG,CAACwjB,KATvB,SAAgCzvC,EAAsBmV,GACpD,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,QAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAyB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE1C,OAAOpgB,GAAOC,UAAUhU,GAAUiH,EACpC;;;;;;;;;;;;;;;;GCVO,MAAM43B,GAAMniB,GAAG,CAACyjB,KAZvB,SAAgC1wC,GAC9B,MAAMy6B,EAAKlO,GAAgBvsB,EAAG,IAAK,OAEnC,GAAiB,cAAby6B,EAAG37B,MAAuB,CAC5B,MAAM0Y,EAA2B,CAACxX,EAAGy6B,GACrC,OAAOnW,GAAOC,UAAUnY,GAAYoL,GAC/B,CACL,MAAMA,EAAoB,CAACxX,EAAGy6B,GAC9B,OAAOnW,GAAOC,UAAU5Z,EAAK6M,GAEjC;;;;;;;;;;;;;;;;GCNO,MAAMm5B,GAAO1jB,GAAG,CAAC2jB,MANxB,SAAiC5wC,GAC/B,MACMwX,EAAqB,CAACxX,EADjBusB,GAAgBvsB,EAAG,IAAK,SAGnC,OAAOskB,GAAOC,UAAU3Z,GAAM4M,EAChC;;;;;;;;;;;;;;;;GCIO,MAAMq5B,GAAQ5jB,GAAG,CAAC6jB,OANzB,SAAkC9wC,GAChC,MACMwX,EAAsB,CAACxX,EADlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAU1Z,GAAO2M,EACjC;;;;;;;;;;;;;;;;GC2BO,MAAMu5B,GAAO9jB,GAAG,CAAC+jB,MAhCxB,SAAiCjrB,GAC/BrQ,EACIvU,MAAMC,QAAQ2kB,IACd,IAAM,+DACVrQ,EACIqQ,EAAQtmB,QAAU,GAClB,IACI,uDAAGsmB,EAAQtmB,WAEnB,MAAMwxC,EACFlrB,EAAQ7iB,KAAI,CAAC+F,EAAG3I,IAAMisB,GAAgBtjB,EAAG,UAAU3I,IAAK,UAEtD4wC,EAAcD,EAAS,GAC7BA,EAASnsC,SAAQmE,IACf,GAAIA,EAAEnK,QAAUoyC,EAAYpyC,MAC1B,MAAM,IAAIO,MACN,+DAIR4xC,EAASnsC,SAAQmE,IACf,IAAKyM,EAAiBzM,EAAEpK,MAAOqyC,EAAYryC,OACzC,MAAM,IAAIQ,MACN,+DAIR,MAAMmY,EAAqBy5B,EAE3B,OAAO3sB,GAAOC,UAAUxZ,GAAMyM,EAChC;;;;;;;;;;;;;;;;GCFO,MAAMc,GAAM2U,GAAG,CAACkkB,KAXvB,SACInxC,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAEM55B,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,MAAO,SAGpCqkB,EAAkB,CAACrhB,OAAMouC,YAE/B,OAAO9sB,GAAOC,UACVvZ,GAAKwM,EAAgC6M,EAC3C;;;;;;;;;;;;;;;;GCGO,MAAMgtB,GAAMpkB,GAAG,CAACqkB,KAZvB,SACItxC,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAEM55B,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,MAAO,SAGpCqkB,EAAkB,CAACrhB,OAAMouC,YAE/B,OAAO9sB,GAAOC,UACVtZ,GAAKuM,EAAgC6M,EAC3C;;;;;;;;;;;;;;;;GCJO,MAAMktB,GAAStkB,GAAG,CAACukB,QAV1B,SAAmCxxC,EAAsBgD,EAAO,GAC9D,MAEMwU,EAAuB,CAACxX,EAFnBusB,GAAgBvsB,EAAG,IAAK,WAG7BqkB,EAAqB,CAACrhB,QAE5B,OAAOshB,GAAOC,UACVrZ,GAAQsM,EAAgC6M,EAC9C;;;;;;;;;;;;;;;;GCEO,MAAMotB,GAASxkB,GAAG,CAACykB,QAV1B,SAAmC1xC,EAAsBgD,EAAO,GAC9D,MAEMwU,EAAuB,CAACxX,EAFnBusB,GAAgBvsB,EAAG,IAAK,WAG7BqkB,EAAqB,CAACrhB,QAE5B,OAAOshB,GAAOC,UACVpZ,GAAQqM,EAAgC6M,EAC9C;;;;;;;;;;;;;;;;GChBO,MAAMstB,GAAO1kB,GAAG,CAAC2kB,MANxB,SAAiC5xC,GAC/B,MACMwX,EAAqB,CAACxX,EADjBusB,GAAgBvsB,EAAG,IAAK,SAGnC,OAAOskB,GAAOC,UAAUnZ,GAAMoM,EAChC;;;;;;;;;;;;;;;;GCIO,MAAMq6B,GAAQ5kB,GAAG,CAAC6kB,OAPzB,SAAkC9xC,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAInC,OAAOskB,GAAOC,UAAUlZ,GAAOmM,EACjC;;;;;;;;;;;;;;;;GCAO,MAAMu6B,GAAO9kB,GAAG,CAAC+kB,MAPxB,SAAiChyC,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAUjZ,GAAMkM,EAChC;;;;;;;;;;;;;;;;GCUO,MAAMy6B,GAAQhlB,GAAG,CAACilB,OAXzB,SACIlxC,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,SAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,UAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAsB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEvC,OAAOpgB,GAAOC,UAAU/Y,GAAOgM,EACjC;;;;;;;;;;;;;;;;GCNO,MAAM26B,GAAQllB,GAAG,CAACmlB,OAPzB,SAAkCpyC,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAInC,OAAOskB,GAAOC,UAAUhZ,GAAOiM,EACjC;;;;;;;;;;;;;;;;GCoDM,SAAU66B,GACZz5B,EACA05B,EAAuC7sC,EACvCuU,EAA4Bu4B,EAAqB,OACjDC,GAUF,OAAOC,GACH75B,EAJA,IAAI05B,EAFc15B,EAAW,IAMHnT,EAAS+sC,EAAWx4B,EAC9C,KAAyB,KAJT04B,GAAwBH,GAK9C,CAEM,SAAUI,GACZC,EACAC,EAAqCptC,EACrC+sC,EAAoCx4B,EACpC84B,EACAP,EAA6C,gBAC/C,MAAOQ,EAAcC,GAAeC,GAAgBJ,GAEpD,IAAIP,EACJ,GAAmB,iBAAfC,EACFD,EAAc,CAACS,EAAcC,EAAaJ,EAAQ,GAAIA,EAAQ,QACzD,IAAmB,kBAAfL,EAGT,MAAM,IAAIlzC,MAAM,sBAAsBkzC,KAFtCD,EAAc,CAACS,EAAcC,EAAaJ,EAAQ,GAAIA,EAAQ,IAKhE,OAAOH,GACHG,EAASN,EAAa7sC,EAAS+sC,EAAWx4B,EAAK84B,GAAc,EAC7DP,EACN,CAKM,SAAUW,GACZN,EACAC,EACAptC,EACA+sC,EAA4Cx4B,EAC5C84B,EACAP,EAA8B,SAChC,MAAOY,EAAaJ,EAAcC,GAAeI,GAAiBP,GAElE,IAAIP,EACAe,EACJ,GAAmB,UAAfd,EACFc,EAAc,eACdf,EACI,CAACa,EAAaJ,EAAcC,EAAaJ,EAAQ,GAAIA,EAAQ,QAC5D,IAAmB,UAAfL,EAKT,MAAM,IAAIlzC,MAAM,sBAAsBkzC,KAJtCc,EAAc,gBACdf,EACI,CAACa,EAAaJ,EAAcC,EAAaJ,EAAQ,GAAIA,EAAQ,IAKnE,OAAOU,GACHV,EAASN,EAAa7sC,EAAS+sC,EAAWx4B,GAAK,EAAOq5B,EACtDP,EACN,CAMM,SAAUL,GACZG,EACAN,EACA7sC,EAAkC+sC,EAClCx4B,EACA84B,EAAuCS,GAAY,EACnDhB,EAA6C,gBAC/C,IAAKiB,EAAWC,EAAUC,EAASC,GAAc,EAAE,GAAI,GAAI,GAAI,GAC/D,GAAmB,iBAAfpB,GACDiB,EAAWC,EAAUC,EAASC,GAAcf,MACxC,IAAmB,kBAAfL,EAGT,MAAM,IAAIlzC,MAAM,sBAAsBkzC,MAFrCiB,EAAWG,EAAYF,EAAUC,GAAWd,EAK/C,MAAOG,EAAcC,GAAeY,GAAkBtB,GAC/CuB,EAAcC,GAAeb,GAAgBxtC,IAC7CsuC,EAAgBC,GAAiBf,GAAgBT,GAElDyB,EACFC,GAAuBnB,EAAcgB,GACnCI,EACFD,GAAuBlB,EAAagB,IAClCI,QAACA,EAAOC,UAAEA,EAASC,SAAEA,GAqO7B,SACIt6B,EAA4Cy5B,EAC5CC,EAAiBG,EAAsBC,EACvCf,EAAsBC,EACtBF,EACAP,GAEF,IAAI6B,EACAC,EACAC,EAEJ,GAAmB,iBAARt6B,EAAkB,CAE3Bo6B,EAAU,CAACG,IAAKv6B,EAAKw6B,OAAQx6B,EAAKy6B,KAAMz6B,EAAK06B,MAAO16B,EAAKqE,KADhC,IAARrE,EAAa,QAAU,UAExC,MAAMszB,EA9FV,SACIsF,EAA2B+B,EAAmB75B,EAC9C85B,EAAkB9B,GACL,MAAX8B,IACFA,EAAUC,GAAkBjC,EAAS+B,EAAW75B,IAElD,MAAMg6B,EAAYlC,EAAQ,GACpBmC,EAAYnC,EAAQ,GAEpBoC,EACF5/B,IAAO0/B,EAAYH,EAAY,EAAIC,GAAW95B,EAAS,EAAGg4B,GACxDmC,EACF7/B,IAAO2/B,EAAYJ,EAAY,EAAIC,GAAW95B,EAAS,EAAGg4B,GAE9D,MAAO,CAACkC,EAAYC,EACtB,CA+EqBC,CACb,CAACzB,EAAUC,GAAUX,EAAcc,EAAc75B,EAAK84B,GAC1DuB,EAAY/G,EAAS,GACrBgH,EAAWhH,EAAS,EACrB,MAAM,GAAY,SAARtzB,EAAgB,CACzBq6B,EAAYz0C,KAAKkC,KAAK2xC,EAAWI,GACjCS,EAAW10C,KAAKkC,KAAK4xC,EAAUI,GAC/B,MAAMqB,EACFv1C,KAAKK,IAAI,GAAIo0C,EAAY,GAAKR,EAAed,EAAeU,GAC1D2B,EACFx1C,KAAKK,IAAI,GAAIq0C,EAAW,GAAKR,EAAcd,EAAcU,GACvDa,EAAM30C,KAAKiH,MAAMsuC,EAAiB,GAClCX,EAASW,EAAiBZ,EAC1BE,EAAO70C,KAAKiH,MAAMuuC,EAAgB,GAExChB,EAAU,CAACG,MAAKC,SAAQC,OAAMC,MADhBU,EAAgBX,EACOp2B,KAAM,OAC5C,MAAM,GAAY,UAARrE,EACTo6B,EAAU,CAACG,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGr2B,KAAM,SACvDg2B,EAAYz0C,KAAKkC,MAAM2xC,EAAWV,EAAe,GAAKc,GACtDS,EAAW10C,KAAKkC,MAAM4xC,EAAUV,EAAc,GAAKc,OAC9C,IAAmB,iBAAR95B,EAehB,MAAM3a,MAAM,8BAA8B2a,KAfR,CAClC,MAAMu6B,EAAqB,iBAAfhC,EAAgCv4B,EAAI,GAAG,GAAKA,EAAI,GAAG,GACzDw6B,EAAwB,iBAAfjC,EAAgCv4B,EAAI,GAAG,GAAKA,EAAI,GAAG,GAC5Dy6B,EAAsB,iBAAflC,EAAgCv4B,EAAI,GAAG,GAAKA,EAAI,GAAG,GAC1D06B,EAAuB,iBAAfnC,EAAgCv4B,EAAI,GAAG,GAAKA,EAAI,GAAG,GAIjEo6B,EAAU,CAACG,MAAKC,SAAQC,OAAMC,QAAOr2B,KAHZ,IAARk2B,GAAwB,IAAXC,GAAyB,IAATC,GAAwB,IAAVC,EACxD,QACA,YAEJL,EAAYj/B,IACPq+B,EAAWV,EAAewB,EAAMC,GAAUX,EAAe,EAC1Df,GACJwB,EAAWl/B,IACNs+B,EAAUV,EAAcyB,EAAOC,GAASZ,EAAc,EAAGhB,IAIhE,MAAO,CAACsB,UAASC,YAAWC,WAC9B,CAzRyCe,CACnCr7B,EAAKy5B,EAAUC,EAASG,EAAcC,EAAaG,EACnDE,EAAsBrB,EAAcP,GAElC+C,EAAc/B,EAAYK,EAAiBD,EAAaC,EAE9D,IAAItG,EAOJ,MANmB,kBAAfiF,EACFjF,EAAW,CAACkG,EAAW8B,EAAajB,EAAWC,GACvB,iBAAf/B,IACTjF,EAAW,CAACkG,EAAWa,EAAWC,EAAUgB,IAGvC,CACL9B,YACAjB,aACAkB,WACAC,UACAC,aACAU,YACAC,WACAgB,cACAlB,UACAP,eACAC,cACAf,eACAC,cACAiB,wBACAE,uBACAJ,iBACAC,gBACApB,UACAtF,WACAgF,cAEJ,CAwCM,SAAUgB,GACZV,EACAN,EACA7sC,EACA+sC,EAA4Cx4B,EAC5Cu5B,GAAY,EACZhB,EAA6C,eAC7CO,GACF,IAAKU,EAAW+B,EAAS9B,EAAUC,EAASC,GACxC,EAAE,GAAI,GAAI,GAAI,GAAI,GACtB,GAAmB,iBAAfpB,GACDiB,EAAW+B,EAAS9B,EAAUC,EAASC,GAAcf,MACjD,IAAmB,kBAAfL,EAGT,MAAM,IAAIlzC,MAAM,sBAAsBkzC,MAFrCiB,EAAWG,EAAY4B,EAAS9B,EAAUC,GAAWd,EAKxD,MAAOO,EAAaJ,EAAcC,EAAW,CAAIY,GAC7CtB,GACGkD,EAAa3B,EAAcC,GAAeV,GAAiB3tC,IAC3DgwC,EAAe1B,EAAgBC,GAClCZ,GAAiBZ,GAEfkD,EACFxB,GAAuBf,EAAasC,GAClCxB,EACFC,GAAuBnB,EAAcgB,GACnCI,EACFD,GAAuBlB,EAAagB,IAClCI,QAACA,EAAOuB,SAAEA,EAAQtB,UAAEA,EAASC,SAAEA,GAkLvC,SACIt6B,EAA4Bu7B,EAAiB9B,EAC7CC,EAAiB8B,EAAqB3B,EACtCC,EAAqBX,EAAqBJ,EAC1CC,EAAqBF,GAMvB,IAAIsB,EACAuB,EACAtB,EACAC,EAEJ,GAAmB,iBAARt6B,EAAkB,CAE3Bo6B,EAAU,CACRG,IAAKv6B,EACLw6B,OAAQx6B,EACRy6B,KAAMz6B,EACN06B,MAAO16B,EACP47B,MAAO57B,EACP67B,KAAM77B,EACNqE,KARuB,IAARrE,EAAa,QAAU,UAUxC,MAAMszB,EA/IV,SACIsF,EAA2C+B,EAC3CW,EAAqBx6B,EAAgB85B,EACrC9B,GACa,MAAX8B,IACFA,EAAUC,GAAkBjC,EAAS+B,EAAW75B,IAElD,MAAMg7B,EAAalD,EAAQ,GACrBkC,EAAYlC,EAAQ,GACpBmC,EAAYnC,EAAQ,GAEpBmD,EACF3gC,IAAO0gC,EAAanB,EAAY,EAAIC,GAAW95B,EAAS,EAAGg4B,GACzDkC,EACF5/B,IAAO0/B,EAAYH,EAAY,EAAIC,GAAW95B,EAAS,EAAGg4B,GACxDmC,EACF7/B,IAAO2/B,EAAYJ,EAAY,EAAIC,GAAW95B,EAAS,EAAGg4B,GAE9D,MAAO,CAACiD,EAAcf,EAAYC,EAAYK,EAChD,CA4HqBU,CACb,CAACT,EAAS9B,EAAUC,EAAS,GAAIP,EAAa,EAAGqC,EAAax7B,EAC9D84B,GACJ6C,EAAWrI,EAAS,GACpB+G,EAAY/G,EAAS,GACrBgH,EAAWhH,EAAS,EACrB,MAAM,GAAY,SAARtzB,EAAgB,CACzB27B,EAAW/1C,KAAKkC,KAAKyzC,EAAUC,GAC/BnB,EAAYz0C,KAAKkC,KAAK2xC,EAAWI,GACjCS,EAAW10C,KAAKkC,KAAK4xC,EAAUI,GAC/B,MAAMmC,GAAiBN,EAAW,GAAKH,EAAcrC,EAAcoC,EAC7DJ,GACDd,EAAY,GAAKR,EAAed,EAAeU,EAC9C2B,GAAiBd,EAAW,GAAKR,EAAcd,EAAcU,EAC7DkC,EAAQh2C,KAAKiH,MAAMovC,EAAgB,GACnCJ,EAAOI,EAAgBL,EACvBrB,EAAM30C,KAAKiH,MAAMsuC,EAAiB,GAClCX,EAASW,EAAiBZ,EAC1BE,EAAO70C,KAAKiH,MAAMuuC,EAAgB,GAGxChB,EAAU,CAACG,MAAKC,SAAQC,OAAMC,MAFhBU,EAAgBX,EAEOmB,QAAOC,OAAMx3B,KAAM,OACzD,KAAM,IAAY,UAARrE,EAcT,MAAM3a,MAAM,8BAA8B2a,KAb1Co6B,EAAU,CACRG,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPkB,MAAO,EACPC,KAAM,EACNx3B,KAAM,SAERs3B,EAAW/1C,KAAKkC,MAAMyzC,EAAUpC,EAAc,GAAKqC,GACnDnB,EAAYz0C,KAAKkC,MAAM2xC,EAAWV,EAAe,GAAKc,GACtDS,EAAW10C,KAAKkC,MAAM4xC,EAAUV,EAAc,GAAKc,GAIrD,MAAO,CAACM,UAASuB,WAAUtB,YAAWC,WACxC,CAnPmD4B,CAC7Cl8B,EAAKu7B,EAAS9B,EAAUC,EAAS8B,EAAa3B,EAAcC,EAC5D4B,EAAsBzB,EAAuBE,EAC7CrB,GAEEwC,EAAc/B,EAAYK,EAAiBD,EAAaC,EAE9D,IAAItG,EAOJ,MANmB,kBAAfiF,EACFjF,EAAW,CAACkG,EAAW8B,EAAaK,EAAUtB,EAAWC,GACjC,iBAAf/B,IACTjF,EAAW,CAACkG,EAAWmC,EAAUtB,EAAWC,EAAUgB,IAGjD,CACL9B,YACAjB,aACAgD,UACA9B,WACAC,UACAC,aACAgC,WACAtB,YACAC,WACAgB,cACAlB,UACAoB,cACA3B,eACAC,cACAX,cACAJ,eACAC,cACA0C,uBACAzB,wBACAE,uBACAsB,gBACA1B,iBACAC,gBACApB,UACAtF,WACAgF,cAEJ,CAwCM,SAAUuC,GACZj8B,EACA+7B,EAAmB75B,EAAgBq7B,EAAW,GAChD,MAAMC,EAAqBlC,GAAuBS,EAAWwB,GAC7D,OAAOv2C,KAAKiH,OACP+R,EAAW,IAAMkC,EAAS,GAAKA,EAASs7B,GAAsB,EACrE,CAEA,SAASnD,GAAgBoD,GACvB,MAAqB,iBAAVA,EACF,CAACA,EAAOA,EAAOA,GAEH,IAAjBA,EAAM52C,OACD,CAAC42C,EAAM,GAAIA,EAAM,GAAI,GAEvBA,CACT,CAEA,SAASjD,GAAiBiD,GAExB,MAAwB,iBAAVA,EAAqB,CAACA,EAAOA,EAAOA,GAASA,CAC7D,CAaA,SAASnC,GAAuBrB,EAAoBsD,GAClD,OAAIA,GAAY,EACPtD,EAGFA,GAAcA,EAAa,IAAMsD,EAAW,EACrD,CAiIA,SAAS/gC,GAAMzY,EAAem2C,GAC5B,IAAKA,EACH,OAAOlzC,KAAK02C,MAAM35C,GAEpB,OAAQm2C,GACN,IAAK,QAEH,OAAOlzC,KAAKwV,MAAMzY,GACpB,IAAK,OAEH,OAAOiD,KAAKkC,KAAKnF,GACnB,IAAK,QACH,OAAOiD,KAAKiH,MAAMlK,GACpB,QACE,MAAM,IAAI0C,MAAM,wBAAwByzC,KAE9C,CAEM,SAAUyD,GAAkBF,GAChC,MAAOG,EAAMC,EAAMC,GAAQzD,GAAgBoD,GAC3C,OAAgB,IAATG,GAAuB,IAATC,GAAuB,IAATC,CACrC,CAEM,SAAUC,GACZlxC,EAA0B+sC,GAC5B,OAAO+D,GAAkB9wC,IAAY8wC,GAAkB/D,EACzD,CASM,SAAUE,GAAwBH,GAEtC,GAAmB,SAAfA,EACF,MAAO,eACF,GAAmB,SAAfA,EACT,MAAO,gBAEP,MAAM,IAAIlzC,MAAM,sBAAsBkzC,IAE1C;;;;;;;;;;;;;;;;GCvhBO,MAAMqE,GAAU3pB,GAAG,CAAC4pB,SAT3B,SACI72C,EAAsBnB,GACxB,MAEM2Y,EAAwB,CAACxX,EAFpBusB,GAAgBvsB,EAAG,IAAK,UAAW,sBAGxCqkB,EAAsB,CAACxlB,SAC7B,OAAOylB,GAAOC,UACV/S,GAASgG,EAAgC6M,EAC/C;;;;;;;;;;;;;;;;GCsCO,MAAMyyB,GAAU7pB,GAAG,CAAC8pB,SAhD3B,SACI/2C,EAAiB6yC,EACjBptC,EAAkCuU,EAClCg9B,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,UAAW,WAG9C0V,EACIuhC,GAAyCxxC,EAH3B,IAId,IACI,wEAAeA,wBAEvB,IAAIyxC,EAAMzc,EACN0c,GAAe,EACH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IAAM,mDAAmDi0C,EAAIj0C,UAE1C,MAAnB+zC,GACFthC,EACIA,EAAWsE,IACX,IACI,wEAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAAwB,CAACxX,EAAGk3C,GAE5B7yB,EAAsB,CAACwuB,aAAYptC,UAASuU,MAAKg9B,mBAGvD,IAAIrzB,EAAMW,GAAOC,UACH9Y,GAAS+L,EACT6M,GAId,OAFAV,EAAMnH,GAAKmH,EAAK8W,EAAG37B,OAEfq4C,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAGtD8kB,CACT;;;;;;;;;;;;;;;;GCmBO,MAAMyzB,GAAYnqB,GAAG,CAACoqB,WAlD7B,SACIr3C,EAAiB6yC,EACjBptC,EAA0CuU,EAC1Cg9B,EACAzE,EAA8B,SAChC,MAAM9X,EAAKlO,GAAgBvsB,EAAG,IAAK,YAAa,WAEhD,IAAIs3C,EAAM7c,EACN8c,GAAe,EACH,IAAZ9c,EAAGx3B,OACLs0C,GAAe,EACfD,EAAMV,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAGxE6W,EACiB,IAAb4hC,EAAIr0C,MACJ,IAAM,qDAAqDq0C,EAAIr0C,UACnEyS,EACmB,UAAf68B,GACA,IACI,gFAAyBA,MAEV,MAAnByE,GACFthC,EACIA,EAAWsE,IACX,IACI,0EAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAA0B,CAACxX,EAAGs3C,GAE9BjzB,EACe,CAACwuB,aAAYptC,UAASuU,MAAKg9B,kBAAiBzE,cAGjE,IAAI5uB,EAAMW,GAAOC,UACH5Y,GAAW6L,EACX6M,GAId,OAFAV,EAAMnH,GAAKmH,EAAK2zB,EAAIx4C,OAEhBy4C,EACKX,GACIjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAIhE8kB,CACT;;;;;;;;;;;;;;;;GCpBO,MAAMvgB,GAAS6pB,GAAG,CAACuqB,QA1B1B,SAAmCzxB,EAA8B/iB,EAAO,GACtEzC,EAAOwlB,EAAQtmB,QAAU,GAAG,IAAM,uCAElC,MAAMwxC,EACFrkB,GAAqB7G,EAAS,UAAW,SAAU,qBAWvD,GAT0B,cAAtBkrB,EAAS,GAAGnyC,OACdmyC,EAASnsC,SAAQsa,IACf,GAAqB,cAAjBA,EAAOtgB,MACT,MAAM,IAAIO,MAAM,4EACD+f,EAAOtgB,cAKJ,IAApBmyC,EAASxxC,OACX,OAAO8c,GAAM00B,EAAS,IAGxB,MAAMz5B,EAAuBy5B,EACvBwG,EAAoB,CAACz0C,QAE3B,OAAOshB,GAAOC,UACVlY,GAAQmL,EAAgCigC,EAC9C;;;;;;;;;;;;;;;;GC/CO,MAAMC,GAAUzqB,GAAG,CAAC0qB,SAP3B,SAAoC33C,GAClC,MAEMwX,EAAwB,CAACxX,EAFpBusB,GAAgBvsB,EAAG,IAAK,YAInC,OAAOskB,GAAOC,UAAU/R,GAASgF,EACnC;;;;;;;;;;;;;;;;GCgCO,MAAM1U,GAAQmqB,GAAG,CAAC2qB,OAfzB,SACI53C,EAAiB8pC,EAAwBtoC,GAC3C,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,QAAS,qBAE5C,GAAgB,IAAZy6B,EAAGx3B,KACL,MAAM,IAAI5D,MAAM,kCAGlB,MAAMmY,EAAsB,CAACxX,EAAGy6B,GAC1BpW,EAAoB,CAACylB,QAAOtoC,QAElC,OAAO8iB,GAAOC,UACVnS,GAAOoF,EAAgC6M,EAC7C;;;;;;;;;;;;;;;;GC7BO,MAAMtN,GAAOkW,GAAG,CAAC4qB,MAPxB,SAAiC73C,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAUlR,GAAMmE,EAChC;;;;;;;;;;;;;;;;GCmCO,MAAMsgC,GAAgB7qB,GAAG,CAAC8qB,eAjCjC,SACIC,EAA+BC,EAC/BC,EAA+Bx6C,EAC/BwI,EAAwBiyC,GAC1B,MAAMC,EACF7rB,GAAgByrB,EAAY,aAAc,iBACxCK,EACF9rB,GAAgB0rB,EAAY,aAAc,iBACxCK,EAAY/rB,GAAgB2rB,EAAU,WAAY,iBAClDK,EAAQhsB,GAAgB7uB,EAAM,OAAQ,iBACtC86C,EAAKjsB,GAAgBrmB,EAAG,IAAK,iBAC7BuyC,EAAKlsB,GAAgB4rB,EAAG,IAAK,iBAE7BO,EAAWt1C,GAAO,CAACm1C,EAAOE,GAAK,GAC/BE,EAAWtU,GAAOqU,EAAUL,GAC5B10B,EAAgB1E,GAAI05B,EAAUL,GAG9B9E,EAAY7vB,EAAI9kB,MAAM,GACtB+5C,EAAYj1B,EAAI9kB,MAAM,GAAK,EAC3BiqC,EAA8B,CAAC0K,EAAWoF,GAC1Ct4C,EAAIwC,GAAM6gB,EAAK,CAAC,EAAG,GAAImlB,GACvBllC,EAAId,GAAM6gB,EAAK,CAAC,EAAGi1B,GAAY9P,GAC/BxqC,EAAIwE,GAAM6gB,EAAK,CAAC,EAAe,EAAZi1B,GAAgB9P,GACnC9e,EAAIlnB,GAAM6gB,EAAK,CAAC,EAAe,EAAZi1B,GAAgB9P,GAEnC+P,EACF55B,GAAIuxB,GAAIkH,GAAQp3C,GAAIyW,GAAKnT,IACrB4sC,GAAIgI,EAAId,GAAQz4B,GAAIm5B,EAAa95C,MAEzC,MAAO,CAACu6C,EADerI,GAAIz5B,GAAK8hC,GAAOnB,GAAQ1tB,IAEjD;;;;;;;;;;;;;;;;GC6BO,MAAM8uB,GAAiB7rB,GAAG,CAAC8rB,gBA9BlC,SACI/4C,EAAiBg5C,EAAsBC,GACzC,MAAMxe,EAAKlO,GAAgBvsB,EAAG,IAAK,kBAC7Bk5C,EAAOF,EAAWhzC,QAAO,CAAChF,EAAGmV,IAAMnV,EAAImV,IAE7CT,EACI+kB,EAAGx3B,MAAQ,EAAI+1C,EAAWv5C,QAC1B,IAAM,iBAAiBg7B,EAAGx3B,+CACtB+1C,EAAWv5C,WAEnBiW,EACIujC,EAAMx5C,SAAWu5C,EAAWv5C,QAC5B,IAAM,mBACFw5C,EAAMx5C,oDACNu5C,EAAWv5C,WAEnBiW,EACI+kB,EAAG57B,MAAM,GAAKq6C,GAAS,GACvB,IAAM,yBACIze,EAAG57B,MAAM,wEACem6C,EAAW3vC,KAAK,cAAc6vC,MAEpE,MAAM1hC,EAA+B,CAACxX,EAAGy6B,GACnCpW,EAA6B,CAAC20B,aAAYC,SAEhD,OAAO30B,GAAOC,UACVzY,GAAgB0L,EAChB6M,EACN,ICMO,MAAM80B,GAAYlsB,GAAG,CAACmsB;;;;;;;;;;;;;;;;;AAtD7B,SACIp5C,EAAyBq5C,EACzBC,EACA3zC,EACAqpB,EACAuqB,GACqB,MAAnBA,IACFA,EAAkB,MAEpB,MAAM9e,EAAKlO,GAAgBvsB,EAAG,IAAK,aAC7Bw5C,EAAQjtB,GAAgB8sB,EAAM,OAAQ,aACtCI,EAAYltB,GAAgB+sB,EAAU,WAAY,aACxD,IAAII,EAIAC,EAHS,MAAT3qB,IACF0qB,EAASntB,GAAgByC,EAAO,QAAS,cAG7B,MAAVrpB,IACFg0C,EAAUptB,GAAgB5mB,EAAQ,SAAU,cAG9C+P,EACI8jC,EAAMv2C,OAASw2C,EAAUx2C,MACzB,IAAM,iFAEVyS,EACe,MAAXikC,GAAmBH,EAAMv2C,OAAS02C,EAAQ12C,MAC1C,IAAM,+EAEVyS,EACc,MAAVgkC,GAAkBF,EAAMv2C,OAASy2C,EAAOz2C,MACxC,IAAM,8EAGV,MAEMuU,EAA+B,CACnCxX,ECzEE,SAAgCA,GACpC,IAAIk3C,EAWJ,OATEA,EADa,IAAXl3C,EAAEiD,MAAyB,IAAXjD,EAAEiD,KACd2zC,GAAQ52C,EAAG,CAAC,EAAG,EAAG,EAAGA,EAAEwB,OACT,IAAXxB,EAAEiD,KACL2zC,GAAQ52C,EAAG,CAAC,EAAG,EAAGA,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,KACxB,IAAXmB,EAAEiD,KACL2zC,GAAQ52C,EAAG,CAAC,EAAGA,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,KAE/CmB,EAGDk3C,CACT,CDyDwB0C,CAAMnf,GAI1BzL,MAAO0qB,EACP/zC,OAAQg0C,EACRN,KAAMG,EACNF,SAAUG,GAGNp1B,EAA6B,CAACk1B,mBAG9B51B,EAAMW,GAAOC,UACHnW,GAAgBoJ,EAChB6M,GAEhB,OAAOuyB,GAAQjzB,EAAK8W,EAAG57B,MACzB,IE7BO,MAAMg7C,GAAc5sB,GAAG,CAAC6sB,aA5C/B,SACI95C,EAAwBq5C,EACxBC,EACA3zC,EAAuCqpB,EACvCuqB,GACF,MAAM9e,EAAKlO,GAAgBvsB,EAAG,IAAK,aAC7Bw5C,EAAQjtB,GAAgB8sB,EAAM,OAAQ,aACtCI,EAAYltB,GAAgB+sB,EAAU,WAAY,aACxD,IAAII,EAIAC,EA6BJ,OAhCa,MAAT3qB,IACF0qB,EAASntB,GAAgByC,EAAO,QAAS,cAG7B,MAAVrpB,IACFg0C,EAAUptB,GAAgB5mB,EAAQ,SAAU,cAE9C+P,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,uDAAGw3B,EAAGx3B,UACdyS,EACmB,IAAf8jC,EAAMv2C,MAA6B,IAAfu2C,EAAMv2C,MAC1B,IACI,oEAAYu2C,EAAMv2C,UAC1ByS,EACuB,IAAnB+jC,EAAUx2C,MAAiC,IAAnBw2C,EAAUx2C,MAClC,IACI,wEAAgBw2C,EAAUx2C,UACpB,MAAVy2C,GACFhkC,EACoB,IAAhBgkC,EAAOz2C,MAA8B,IAAhBy2C,EAAOz2C,MAC5B,IACI,qEAAgBy2C,EAAOz2C,UAElB,MAAX02C,GACFjkC,EACqB,IAAjBikC,EAAQ12C,MAA+B,IAAjB02C,EAAQ12C,MAC9B,IACI,sEAAgB02C,EAAQ12C,UAG3Bk2C,GAAU1e,EAAI+e,EAAOC,EAAWE,EAASD,EAAQH,EAC1D,ICEO,MAAMQ,GAAc9sB,GAAG,CAAC+sB,aA5C/B,SACIh6C,EAAwBq5C,EACxBC,EACA3zC,EAAuCqpB,EACvCuqB,GACF,MAAM9e,EAAKlO,GAAgBvsB,EAAG,IAAK,aAC7Bw5C,EAAQjtB,GAAgB8sB,EAAM,OAAQ,aACtCI,EAAYltB,GAAgB+sB,EAAU,WAAY,aACxD,IAAII,EAIAC,EA6BJ,OAhCa,MAAT3qB,IACF0qB,EAASntB,GAAgByC,EAAO,QAAS,cAG7B,MAAVrpB,IACFg0C,EAAUptB,GAAgB5mB,EAAQ,SAAU,cAE9C+P,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,uDAAGw3B,EAAGx3B,UACdyS,EACmB,IAAf8jC,EAAMv2C,MAA6B,IAAfu2C,EAAMv2C,MAC1B,IACI,oEAAYu2C,EAAMv2C,UAC1ByS,EACuB,IAAnB+jC,EAAUx2C,MAAiC,IAAnBw2C,EAAUx2C,MAClC,IACI,wEAAgBw2C,EAAUx2C,UACpB,MAAVy2C,GACFhkC,EACoB,IAAhBgkC,EAAOz2C,MAA8B,IAAhBy2C,EAAOz2C,MAC5B,IACI,qEAAgBy2C,EAAOz2C,UAElB,MAAX02C,GACFjkC,EACqB,IAAjBikC,EAAQ12C,MAA+B,IAAjB02C,EAAQ12C,MAC9B,IACI,sEAAgB02C,EAAQ12C,UAG3Bk2C,GAAU1e,EAAI+e,EAAOC,EAAWE,EAASD,EAAQH,EAC1D,ICCO,MAAMU,GAAchtB,GAAG,CAACitB,aA3C/B,SACIl6C,EAAwBq5C,EACxBC,EACA3zC,EAAuCqpB,EACvCuqB,GACF,MAAM9e,EAAKlO,GAAgBvsB,EAAG,IAAK,aAC7Bw5C,EAAQjtB,GAAgB8sB,EAAM,OAAQ,aACtCI,EAAYltB,GAAgB+sB,EAAU,WAAY,aACxD,IAAII,EAIAC,EA4BJ,OA/Ba,MAAT3qB,IACF0qB,EAASntB,GAAgByC,EAAO,QAAS,cAG7B,MAAVrpB,IACFg0C,EAAUptB,GAAgB5mB,EAAQ,SAAU,cAE9C+P,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,uDAAGw3B,EAAGx3B,UACdyS,EACmB,IAAf8jC,EAAMv2C,MAA6B,IAAfu2C,EAAMv2C,MAC1B,IACI,oEAAYu2C,EAAMv2C,UAC1ByS,EACuB,IAAnB+jC,EAAUx2C,MAAiC,IAAnBw2C,EAAUx2C,MAClC,IACI,wEAAgBw2C,EAAUx2C,UACpB,MAAVy2C,GACFhkC,EACoB,IAAhBgkC,EAAOz2C,MAA8B,IAAhBy2C,EAAOz2C,MAC5B,IACI,qEAAgBy2C,EAAOz2C,UAElB,MAAX02C,GACFjkC,EACqB,IAAjBikC,EAAQ12C,MAA+B,IAAjB02C,EAAQ12C,MAC9B,IACI,sEAAgB02C,EAAQ12C,UAE3Bk2C,GAAU1e,EAAI+e,EAAOC,EAAWE,EAASD,EAAQH,EAC1D;;;;;;;;;;;;;;;;GCRO,MAAMY,GAAWltB,GAAG,CAACmtB,UAvB5B,SACIp6C,EAAiBq7B,EAAuB75B,GAC1C,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,YAC7Bq6C,EAAW9tB,GAAgB8O,EAAS,UAAW,YAErD3lB,EACiB,UAAb+kB,EAAG37B,OACH,IACI,yDAAgC27B,EAAG37B,UAC3C4W,EAAYlU,GAAQ,GAAG,IAAM,sCAAsCA,OACnEkU,EACI2kC,EAAS74C,OAASi5B,EAAGj5B,MAA0B,IAAlB64C,EAAS74C,MACtC,IACI,gGAAkCi5B,EAAG57B,yBAClCw7C,EAASx7C,WAEpB,MAAM2Y,EAAyB,CAACxX,EAAGy6B,EAAIY,QAASgf,GAC1Ch2B,EAAuB,CAAC7iB,QAE9B,OAAO8iB,GAAOC,UACVxY,GAAUyL,EAAgC6M,EAChD;;;;;;;;;;;;;;;;GCsBO,MAAMi2B,GAAcrtB,GAAG,CAACstB,aA7C/B,SACIv6C,EAAsBnB,GACxB,IAAI8Z,EAAQ4T,GAAgBvsB,EAAG,cAAe,KAC9C,MAAM8sC,EAASn0B,EAAM9Z,MAErB,GAAIA,EAAMygB,MAAKzZ,KAAOA,EAAI,IAAMA,EAAI,GAAM,IACxC,MAAM,IAAIxG,MAAM,2CAA2CR,OAG7D,GAAIA,EAAMY,OAASkZ,EAAM1V,KACvB,MAAM,IAAI5D,MAAM,+BAA+BR,EAAMY,uBACjDkZ,EAAM1V,SAGZ,GAAIpE,EAAMY,OAASkZ,EAAM1V,KAAM,CAC7B,MAAMJ,EAAW8V,EAAM9Z,MAAMiE,QAC7B,KAAOD,EAASpD,OAASZ,EAAMY,QAC7BoD,EAAS23C,QAAQ,GAEnB7hC,EAAQi+B,GAAQj+B,EAAO9V,GAGzB,MAAM+V,EAAaD,EAAM9Z,MACnB47C,EAAiBt5C,MAAMuZ,KAAK7b,GAClC,IAAK,IAAIyB,EAAIzB,EAAMY,OAAS,EAAGa,GAAK,EAAGA,IACrC,GAAIsY,EAAWtY,KAAOzB,EAAMyB,GAC1Bm6C,EAAKn6C,GAAK,OACL,GAAuB,IAAnBqY,EAAM9Z,MAAMyB,GACrB,MAAM,IAAIjB,MACN,mBAAmBytC,8BAAmCjuC,OAK9D,GAAoB,IAFP47C,EAAKv3C,KAAI,CAAC6S,EAAGzV,IAAMyV,EAAI,EAAIzV,GAAK,IAAG4mB,QAAO5mB,GAAKA,GAAK,IAExDb,OACP,OAAO8c,GAAM5D,GAIf,MAAMnB,EAAqB,CAACxX,EAAG2Y,GACzB0L,EAAmB,CAACo2B,QAC1B,OAAOn2B,GAAOC,UACVjR,GAAMkE,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GC1CO,MAAMviB,GAAOmrB,GAAG,CAACytB,MANxB,SAAiC16C,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAGnC,OAAOskB,GAAOC,UAAUtY,GAAMuL,EAChC;;;;;;;;;;;;;;;;GCaO,MAAMmjC,GAAc1tB,GAAG,CAAC2tB,aAf/B,SACI56C,EAAiB66C,EAAsBC,GACzC,MAAMrgB,EAAKlO,GAAgBvsB,EAAG,IAAK,eACnC0V,EACKmlC,GAAgBC,GACjB,IAAM,uBAAuBD,yCACKC,QAEtC,MAAMtjC,EAA4B,CAACxX,EAAGy6B,GAChCpW,EAA0B,CAACw2B,eAAcC,gBAE/C,OAAOx2B,GAAOC,UACVrY,GAAasL,EAAgC6M,EACnD,ICjBO,MAAM02B,GAAW9tB,GAAG,CAAC+tB,UAJ5B,SAAmBj1B,GACjB,OAAO3iB,GAAO2iB,EAAS,EACzB,ICmBO,MAAMk1B,GAAWhuB,GAAG,CAACiuB,UAL5B,SACIn1B,EAAqC/iB,GACvC,OAAOI,GAAO2iB,EAAS/iB,EACzB,ICMO,MAAMm4C,GAAWluB,GAAG,CAACmuB,UAL5B,SACIr1B,EAAqC/iB,GACvC,OAAOI,GAAO2iB,EAAS/iB,EACzB,ICrBO,MAAMq4C,GAAWpuB,GAAG,CAACquB,UAL5B,SACIv1B,EAAqC/iB,GACvC,OAAOI,GAAO2iB,EAAS/iB,EACzB;;;;;;;;;;;;;;;;GCqFO,MAAMu4C,GAAStuB,GAAG,CAACuuB,QAzD1B,SACIx7C,EAAiBknB,EACjBzhB,EACAuU,EACAu4B,EAA4B,OAC5BC,EAAqC,CAAC,EAAG,GACzCwE,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,UAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,UAElD,IAAIgwB,EAAMzc,EACN0c,GAAe,EAEH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IAAM,uDAAuDi0C,EAAIj0C,UACrEyS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,wDAAGw4C,EAAQx4C,UACI,MAAnB+zC,GACFthC,EACIA,EAAWsE,IACX,IACI,uEAAmBg9B,iBAA+Bh9B,OAG5D,MAAMu7B,EAAyB,SAAfhD,EAAwB2E,EAAIr4C,MAAM,GAAKq4C,EAAIr4C,MAAM,GACjE6W,EACI6/B,IAAYkG,EAAQ58C,MAAM,IAC1B,IAAM,oCAAoC02C,wCACZkG,EAAQ58C,MAAM,QAChD6W,EACIuhC,GAAyCxxC,EAAS+sC,IAClD,IACI,uEAAe/sC,oBAA0B+sC,OAEjD,MAAMh7B,EAAuB,CAACxX,EAAGk3C,EAAKhwB,OAAQu0B,GACxCp3B,EACY,CAAC5e,UAASuU,MAAKu4B,aAAYC,YAAWwE,mBAGlDrzB,EAAMW,GAAOC,UACHjY,GAAQkL,EACR6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT,ICDO,MAAM+3B,GAASzuB,GAAG,CAAC0uB,QA7D1B,SACI37C,EAAiBknB,EAA6BpM,EAC9Cd,EACAu4B,EAA0B,MAAO4D,EAAW,EAC5Ca,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,UAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,UAElD,IAAI00B,EAAMnhB,EACNohB,GAAe,EACH,IAAZphB,EAAGx3B,OACL44C,GAAe,EACfD,EAAMhF,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG9C6W,EACiB,IAAbkmC,EAAI34C,MACJ,IAAM,uDAAuD24C,EAAI34C,UACrEyS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,wDAAGw4C,EAAQx4C,UACI,MAAnB+zC,GACFthC,EACIA,EAAWsE,IACX,IACI,uEAAmBg9B,iBAA+Bh9B,OAG5DtE,EACIkmC,EAAI/8C,MAAM,KAAO48C,EAAQ58C,MAAM,IAC/B,IAAM,oCAAoC+8C,EAAI/8C,MAAM,yCACtB48C,EAAQ58C,MAAM,QAChD6W,EACIuhC,GAAyCn8B,EAAQq7B,IACjD,IACI,oEAAcr7B,mBAAwBq7B,OAC9CzgC,EACmB,QAAf68B,GACA,IAAM,sCACFA,2CAER,MAAMuJ,EAAWlF,GACb6E,EAAS,CAAC,EAAGA,EAAQ58C,MAAM,GAAI48C,EAAQ58C,MAAM,GAAI48C,EAAQ58C,MAAM,KAC7Dk9C,EAAUnF,GAAQgF,EAAK,CAACA,EAAI/8C,MAAM,GAAI,EAAG+8C,EAAI/8C,MAAM,GAAI+8C,EAAI/8C,MAAM,KAMjE8kB,EAAM43B,GACPQ,EAAuBD,EANM,CAAC,EAAGhhC,GAMsBd,EAHnC,OAFW,CAAC,EAAGm8B,GAMPa,GAEjC,OACSJ,GAAQjzB,EADbk4B,EACkB,CAACl4B,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,IAG3B,CAAC8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,IAC7D;;;;;;;;;;;;;;;;GCIO,MAAMm9C,GAAsB/uB,GAAG,CAACgvB,qBAlEvC,SACInP,EAAmE3oB,EACnE+C,EAAkBzhB,EAClBuU,EACAu4B,EAA4B,OAC5ByE,GACFthC,EACIo3B,EAAOrtC,SAAW0kB,EAAGlhB,MACrB,IACI,sBAAI6pC,EAAOrtC,2BAA2B0kB,EAAGlhB,qBAEjD,IAAIi5C,EAAWpP,EACXqP,EAAOh4B,EACPgzB,GAAe,EACH,IAAZhzB,EAAGlhB,OACLk0C,GAAe,EACfgF,EAAOvF,GAAQzyB,EAAI,CAAC,EAAGA,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,KAC1Dq9C,EAAW,CAAC,EAAGpP,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAG9Cp3B,EACwB,IAApBwmC,EAASz8C,QACT,IAEI,qEAAGy8C,EAASz8C,YACpBiW,EACkB,IAAdymC,EAAKl5C,MACL,IACI,4DAAQk5C,EAAKl5C,SACrByS,EACoB,IAAhBwR,EAAOjkB,MACP,IACI,gEAAQikB,EAAOjkB,SACvB,MAAMsyC,EAAyB,SAAfhD,EAAwB2J,EAAS,GAAKA,EAAS,GACzDvG,EAA0B,SAAfpD,EAAwB4J,EAAKt9C,MAAM,GAAKs9C,EAAKt9C,MAAM,GACpE6W,EACI6/B,IAAYruB,EAAOroB,MAAM,IACzB,IAAM,4CAA4C02C,wCACdruB,EAAOroB,MAAM,QACrD6W,EACIigC,IAAazuB,EAAOroB,MAAM,IAC1B,IAAM,6CAA6C82C,yCACdzuB,EAAOroB,MAAM,QAC/B,MAAnBm4C,GACFthC,EACIA,EAAWsE,IACX,IACI,+EAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAAoC,CAAC2M,GAAIg4B,EAAMj1B,UAE/C7C,EACF,CAAC5e,UAASuU,MAAKu4B,aAAYyE,kBAAiBp+B,WAAYsjC,GAGtDv4B,EAAMW,GAAOC,UACH/X,GAAqBgL,EACrB6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT,IC5DO,MAAMy4B,GAAkBnvB,GAAG,CAACovB,iBAZnC,SACIr8C,EAAiBknB,EACjBo1B,EACA72C,EAAkCuU,EAClCg9B,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,mBAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,mBAElD,OAAO80B,GACHM,EAAa7hB,EAAIghB,EAASh2C,EAASuU,EAAK,OAAQg9B,EACtD;;;;;;;;;;;;;;;;GC4DO,MAAMuF,GAAStvB,GAAG,CAACuvB,QApD1B,SACIx8C,EAAiBknB,EACjBzhB,EAA0CuU,EAC1Cu4B,EAA8B,QAC9BC,EAA6C,CAAC,EAAG,EAAG,IACtD,MAAM/X,EAAKlO,GAAgBvsB,EAAG,IAAK,UAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,UAElD,IAAIowB,EAAM7c,EACN8c,GAAe,EAEH,IAAZ9c,EAAGx3B,OACLs0C,GAAe,EACfD,EAAMV,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAExE6W,EACiB,IAAb4hC,EAAIr0C,MACJ,IAAM,uDAAuDq0C,EAAIr0C,UACrEyS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,wDAAGw4C,EAAQx4C,UACnByS,EACI4hC,EAAIz4C,MAAM,KAAO48C,EAAQ58C,MAAM,IAC/B,IAAM,oCAAoCy4C,EAAIz4C,MAAM,yCACtB48C,EAAQ58C,MAAM,QAChD6W,EACIihC,GAA+BlxC,EAAS+sC,IACxC,IACI,uEAAe/sC,oBAA0B+sC,OACjD98B,EACmB,UAAf68B,GACA,IAAM,sCACFA,6CAER,MAAM/6B,EAAuB,CAACxX,EAAGs3C,EAAKpwB,OAAQu0B,GAExCp3B,EAAqB,CAAC5e,UAASuU,MAAKu4B,aAAYC,aAGhD7uB,EAAMW,GAAOC,UACH9X,GAAQ+K,EACR6M,GAEhB,OAAIkzB,EACKX,GACIjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAGhE8kB,CACT;;;;;;;;;;;;;;;;GCLO,MAAM84B,GAAsBxvB,GAAG,CAACyvB,qBA9DvC,SACI5P,EAGA3oB,EAAO+C,EAAkBzhB,EACzBuU,GACFtE,EACIo3B,EAAOrtC,SAAW0kB,EAAGlhB,MACrB,IACI,sBAAI6pC,EAAOrtC,2BAA2B0kB,EAAGlhB,qBAEjD,IAAI05C,EAAW7P,EACX8P,EAAOz4B,EACPozB,GAAe,EACH,IAAZpzB,EAAGlhB,OACLs0C,GAAe,EACfqF,EAAOhG,GAAQzyB,EAAI,CAAC,EAAGA,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,KACvE89C,EAAW,CAAC,EAAG7P,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAGzD,MAAMyI,EAAUoH,EAAS,GACnBhH,EAAWiH,EAAK/9C,MAAM,GAC5B6W,EACwB,IAApBinC,EAASl9C,QACT,IAEI,qEAAGk9C,EAASl9C,YACpBiW,EACkB,IAAdknC,EAAK35C,MACL,IACI,4DAAQ25C,EAAK35C,SACrByS,EACoB,IAAhBwR,EAAOjkB,MACP,IACI,gEAAQikB,EAAOjkB,SACvByS,EACI6/B,IAAYruB,EAAOroB,MAAM,IACzB,IAAM,4CAA4C02C,wCACdruB,EAAOroB,MAAM,QACrD6W,EACIigC,IAAazuB,EAAOroB,MAAM,IAC1B,IAAM,6CAA6C82C,yCACdzuB,EAAOroB,MAAM,QAEtD,MAAM2Y,EAAsC,CAAC2M,GAAIy4B,EAAM11B,UAEjD7C,EAC2B,CAACrK,MAAKvU,UAASmT,WAAY+jC,GAGtDh5B,EAAMW,GAAOC,UACH5X,GAAuB6K,EACvB6M,GAEhB,OAAIkzB,EACKX,GACIjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAGhE8kB,CACT,IClDO,MAAMk5B,GAAkB5vB,GAAG,CAAC6vB,iBAZnC,SACI98C,EAAiBknB,EACjBo1B,EAGA72C,EAA0CuU,GAC5C,MAAMygB,EAAKlO,GAAgBvsB,EAAG,IAAK,mBAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,mBAElD,OAAOu1B,GAAoBH,EAAa7hB,EAAIghB,EAASh2C,EAASuU,EAChE;;;;;;;;;;;;;;;;GCPO,MAAM+iC,GAAM9vB,GAAG,CAAC+vB,KAPvB,SAAgCh9C,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAInC,OAAOskB,GAAOC,UAAU3X,GAAK4K,EAC/B;;;;;;;;;;;;;;;;GCAO,MAAMylC,GAAOhwB,GAAG,CAACiwB,MANxB,SAAiCl9C,GAC/B,MACMwX,EAAqB,CAACxX,EADjBusB,GAAgBvsB,EAAG,IAAK,SAGnC,OAAOskB,GAAOC,UAAU1X,GAAM2K,EAChC;;;;;;;;;;;;;;;;GCkBO,MAAM2lC,GAASlwB,GAAG,CAACmwB,QAX1B,SACIp9C,EAAsBgD,EAAO,EAAGq6C,GAAY,EAAOlY,GAAU,GAC/D,MAEM3tB,EAAuB,CAACxX,EAFnBusB,GAAgBvsB,EAAG,IAAK,WAG7BqkB,EAAqB,CAACrhB,OAAMq6C,YAAWlY,WAE7C,OAAO7gB,GAAOC,UACVzX,GAAQ0K,EAAgC6M,EAC9C;;;;;;;;;;;;;;;;GCkBO,MAAMi5B,GAAgBrwB,GAAG,CAACswB,eA9BjC,SACIv9C,EAAiBq7B,EAAuB75B,EACxCg8C,GAAe,GACjB,MAAM/iB,EAAKlO,GAAgBvsB,EAAG,IAAK,iBAC7Bq6C,EAAW9tB,GAAgB8O,EAAS,UAAW,iBAErD3lB,EACiB,UAAb+kB,EAAG37B,OACH,IACI,8DAAgC27B,EAAG37B,UAC3C4W,EACI+kB,EAAGx3B,MAAQ,GACX,IACI,sEAAQw3B,EAAGx3B,UACnByS,EAAYlU,GAAQ,GAAG,IAAM,sCAAsCA,OACnEkU,EACI2kC,EAAS74C,OAASi5B,EAAGj5B,MAA0B,IAAlB64C,EAAS74C,MACtC,IAEI,+FAA8Bi5B,EAAG57B,yBAC9Bw7C,EAASx7C,WAEpB,MAAM2Y,EAA8B,CAACxX,EAAGy6B,EAAIY,QAASgf,GAC/Ch2B,EAA4B,CAAC7iB,OAAMg8C,gBAEzC,OAAOl5B,GAAOC,UACVvX,GAAewK,EACf6M,EACN;;;;;;;;;;;;;;;;GCyBO,MAAMo5B,GAAexwB,GAAG,CAACywB,cAnChC,SACI19C,EAA0B29C,EAC1BpL,EAA4B,QAC9B,MAAM9X,EAAKlO,GAAgBvsB,EAAG,IAAK,gBAE7B49C,EAA8B,SAAfrL,EAAyB9X,EAAG57B,MAAM,GAAK47B,EAAG57B,MAAM,GAC/Dg/C,EAA6B,SAAftL,EAAyB9X,EAAG57B,MAAM,GAAK47B,EAAG57B,MAAM,GAC9Di3C,EAA6B,SAAfvD,EAAyB9X,EAAG57B,MAAM,GAAK47B,EAAG57B,MAAM,GAEpE6W,EACIkoC,EAAcD,GAAa,GAC3B,IAAM,oEACNC,SAAmBD,6CACnBljB,EAAG57B,UAEP6W,EACImoC,EAAaF,GAAa,GAC1B,IAAM,oEACNE,SAAkBF,gDACdljB,EAAG57B,UAEX6W,EACKogC,GAAc6H,EAAYA,IAAe,GAC1C,IAAM,8CACFA,EAAYA,YACZ7H,uCAAgDrb,EAAG57B,UAE3D,MAAM2Y,EAA6B,CAACxX,EAAGy6B,GACjCpW,EAA2B,CAACs5B,YAAWpL,cAE7C,OAAOjuB,GAAOC,UACVtX,GAAcuK,EACd6M,EACN;;;;;;;;;;;;;;;;GC0BO,MAAMy5B,GAAkB7wB,GAAG,CAAC8wB,iBAnDnC,SACI/9C,EAAiBknB,EACjBzhB,EAAkCuU,EAClCu4B,EAA4B,OAC5BC,EAAqC,CAAC,EAAG,GACzCwE,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,mBAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,mBAElD,IAAIgwB,EAAMzc,EACN0c,GAAe,EACH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAE3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IACI,gEAAQi0C,EAAIj0C,UACpByS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,iEAAGw4C,EAAQx4C,UACnByS,EACIwhC,EAAIr4C,MAAM,KAAO48C,EAAQ58C,MAAM,IAC/B,IACI,uDAAIq4C,EAAIr4C,MAAM,qDACJ48C,EAAQ58C,MAAM,QAET,MAAnBm4C,GACFthC,EACIA,EAAWsE,IACX,IACI,gFAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAAsC,CAACxX,EAAGk3C,EAAKhwB,OAAQu0B,GACvDp3B,EACF,CAAC5e,UAASuU,MAAKu4B,aAAYC,YAAWwE,mBAGpCrzB,EAAMW,GAAOC,UACHrX,GAAuBsK,EACvB6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GCpEO,MAAMq6B,GAAO/wB,GAAG,CAACgxB,MARxB,SAAej+C,GACb,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAUlX,GAAMmK,EAChC;;;;;;;;;;;;;;;;GCoDO,MAAM0mC,GAAajxB,GAAG,CAACkxB,YA5C9B,SACIn+C,EAAiBknB,EACjBzhB,EAAkCuU,EAClCw4B,EAAqC,CAAC,EAAG,GACzCD,EAAqB,QACvB,MAAM9X,EAAKlO,GAAgBvsB,EAAG,IAAK,cAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,cAElDxR,EACgB,IAAZ+kB,EAAGx3B,MAA0B,IAAZw3B,EAAGx3B,MACpB,IACI,gEAAGw3B,EAAGx3B,UACdyS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,4DAAGw4C,EAAQx4C,UACnByS,EACmB,SAAf68B,GACA,IACI,gFAAyBA,MAEjC,IAAI2E,EAAMzc,EACN0c,GAAe,EAEH,IAAZ1c,EAAGx3B,OACLi0C,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,KACzDs4C,GAAe,GAGjB,MAAM3/B,EAA2B,CAACxX,EAAGk3C,EAAKhwB,OAAQu0B,GAC5Cp3B,EAAyB,CAAC5e,UAASuU,MAAKw4B,aAGxC7uB,EAAMW,GAAOC,UACHjX,GAAYkK,EACZ6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAGtD8kB,CACT;;;;;;;;;;;;;;;;GC5EM,SAAUy6B,GACZxL,EAAmBtF,GACrB,MAAM+Q,EAASzL,EAAQnzC,OACjB6+C,EAAiB,GACvB,IAAK,IAAIh+C,EAAI,EAAGA,EAAI+9C,EAAQ/9C,IAAK,CAC/B,MAAMi+C,EAAMF,EAAS,EAAI/9C,EACnBU,EAAI4xC,EAAQ2L,IAAQ,GAChBjR,EAASA,EAAS7tC,OAAS,EAAIa,IAAM,GACvC,GAAW,IAANU,GACXs9C,EAAK9D,QAAQ+D,GAGjB,OAAOD,CACT,CAMM,SAAUE,GACZ5L,EAAmBtF,GACrB,MAAMtwC,EAAmB,GACzB,IAAK,IAAIsD,EAAI,EAAGA,EAAIgtC,EAAS7tC,OAAQa,IAAK,CACxC,MAAMm+C,EAAQ7L,EAAQA,EAAQnzC,OAASa,EAAI,GACrCo+C,EAAUpR,EAAS7tC,OAASa,EAAI,EAChCq+C,EAASrR,EAASoR,IACX,MAATD,GAA4B,IAAVA,GAAeE,EAAS,IAC5C3hD,EAAOw9C,QAAQkE,GAGnB,OAAO1hD,CACT,CAEM,SAAU4hD,GACZj+C,EAAkBC,GACpB,MAAM5D,EAAmB,GACnB+c,EAAIna,KAAKK,IAAIU,EAAOlB,OAAQmB,EAAOnB,QAEzC,IAAK,IAAIa,EAAI,EAAGA,EAAIyZ,EAAGzZ,IAAK,CAC1B,IAAIU,EAAIL,EAAOA,EAAOlB,OAASa,EAAI,GAC1B,MAALU,IACFA,EAAI,GAEN,IAAImV,EAAIvV,EAAOA,EAAOnB,OAASa,EAAI,GAInC,GAHS,MAAL6V,IACFA,EAAI,GAEI,IAANnV,EACFhE,EAAOw9C,QAAQrkC,QACV,GAAU,IAANA,EACTnZ,EAAOw9C,QAAQx5C,OACV,IAAIA,IAAMmV,EAAG,CAGlB,MAAM9W,MADF,wDAAGsB,SAAcC,MAGrB5D,EAAOw9C,QAAQx5C,IAGnB,OAAOhE,CACT;;;;;;;;;;;;;;;;GC/BO,MAAM6hD,GAAQ5xB,GAAG,CAAC6xB,OAbzB,SACI99C,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,SAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,UAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAsB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEvC,OAAOpgB,GAAOC,UAAU5W,GAAO6J,EACjC;;;;;;;;;;;;;;;;GCgCO,MAAMunC,GAAQ9xB,GAAG,CAAC+xB,OAjCzB,SACIC,EAA8Bj+C,EAAiBmV,GACjD,MAAMsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,SAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,SAC7B+oC,EAAa3yB,GAAgB0yB,EAAW,YAAa,QAAS,QAI9DE,EAAiBP,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OACzDugD,EAAgB9E,GAAY7V,EAAI0a,GAChCE,EAAgB/E,GAAY5V,EAAIya,GACd,IAApBD,EAAWj8C,MAGb1C,EACI2+C,EAAWrgD,MAAM,KAAO4lC,EAAG5lC,MAAM,IACjC,IAAM,mEAGY,IAApBqgD,EAAWj8C,MAEbvC,EACIw+C,EAAWrgD,MAAOwgD,EAAcxgD,MAAO,oBAG7C,MAAM2Y,EAAuB,CAC3BynC,UAAWC,EACXj2C,EAAGm2C,EACHtiD,EAAGuiD,GAEL,OAAO/6B,GAAOC,UAAUrS,GAAQsF,EAClC;;;;;;;;;;;;;;;;GCvCO,MAAM8nC,GAAYryB,GAAG,CAACsyB,WAL7B,SAAsCv/C,GACpC,MACMwX,EAA0B,CAACxX,EADtBusB,GAAgBvsB,EAAG,IAAK,cAEnC,OAAOskB,GAAOC,UAAU3Q,GAAW4D,EACrC;;;;;;;;;;;;;;;;GC4BO,MAAMgoC,GAAWvyB,GAAG,CAACwyB,UAb5B,SACIz+C,EAAsBmV,GAExB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,QAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMgb,EAAYpP,GAAI7L,EAAIC,GACpBib,EAAQL,GAAUI,GAClBE,EAAcf,GAAMna,EAAIib,GAC9B,OAAOZ,GAAMa,EAAaD,EAAOD,EACnC;;;;;;;;;;;;;;;;GCYO,MAAMG,GAAM5yB,GAAG,CAAC6yB,KAtCvB,SAAcC,EAAuBC,GACnC,MAAMC,EAAM1zB,GAAgBwzB,EAAI,KAAM,OAChCG,EAAM3zB,GAAgByzB,EAAI,KAAM,OAEtCtqC,IACkB,IAAbuqC,EAAIh9C,MAA2B,IAAbg9C,EAAIh9C,MAA6B,IAAbi9C,EAAIj9C,MAA2B,IAAbi9C,EAAIj9C,OAC7D,IACI,+DAAGg9C,EAAIh9C,YAAYi9C,EAAIj9C,UAE/B,MAAMk9C,EAAwB,IAAbF,EAAIh9C,KAAag9C,EAAIz+C,KAAOy+C,EAAIphD,MAAM,GACjDuhD,EAAwB,IAAbF,EAAIj9C,KAAai9C,EAAI1+C,KAAO0+C,EAAIrhD,MAAM,GAOvD,GALA6W,EACIyqC,IAAYC,GACZ,IACI,gEAAGD,SAAeC,OAET,IAAbH,EAAIh9C,MAA2B,IAAbi9C,EAAIj9C,KAAY,CACpC,MAAMo9C,EAAOzJ,GAAQqJ,EAAK,CAAC,GAAI,IACzBK,EAAO1J,GAAQsJ,EAAK,EAAE,EAAG,IACzBK,EAAOlc,GAAOgc,EAAMC,GAC1B,OAAO1J,GAAQ2J,EAAM,GACtB,CAAM,GAAiB,IAAbN,EAAIh9C,MAA2B,IAAbi9C,EAAIj9C,KAAY,CAC3C,MAAMo9C,EAAOzJ,GAAQqJ,EAAK,CAAC,GAAI,IACzBK,EAAO1J,GAAQsJ,EAAK,CAACA,EAAIrhD,MAAM,GAAIqhD,EAAIrhD,MAAM,KAC7C0hD,EAAOlc,GAAOgc,EAAMC,GAC1B,OAAO1J,GAAQ2J,EAAM,CAACA,EAAK/+C,MAC5B,CAAM,GAAiB,IAAby+C,EAAIh9C,MAA2B,IAAbi9C,EAAIj9C,KAAY,CAC3C,MAAMq9C,EAAO1J,GAAQsJ,EAAK,EAAE,EAAG,IACzBK,EAAOlc,GAAO4b,EAAKK,GACzB,OAAO1J,GAAQ2J,EAAM,CAACA,EAAK/+C,OACtB,CACL,MAAM8+C,EAAO1J,GAAQsJ,EAAK,CAACA,EAAIrhD,MAAM,GAAIqhD,EAAIrhD,MAAM,KAEnD,OADawlC,GAAO4b,EAAKK,GAG7B;;;;;;;;;;;;;;;;GCjCO,MAAME,GAAMvzB,GAAG,CAACwzB,KARvB,SAAgCzgD,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAInC,OAAOskB,GAAOC,UAAU/W,GAAKgK,EAC/B;;;;;;;;;;;;;;;;GCUO,MAAMkpC,GAAMzzB,GAAG,CAAC0zB,KAbvB,SAAgC3gD,GAC9B,IAAIy6B,EAAKlO,GAAgBvsB,EAAG,IAAK,OACjC0V,EACiB,UAAb+kB,EAAG37B,OAAkC,YAAb27B,EAAG37B,OAC3B,IAAM,8CAEO,UAAb27B,EAAG37B,QACL27B,EAAKje,GAAKie,EAAI,YAGhB,MAAMjjB,EAAoB,CAACxX,EAAGy6B,GAC9B,OAAOnW,GAAOC,UAAU7W,GAAK8J,EAC/B;;;;;;;;;;;;;;;;GCTO,MAAMN,GAAM+V,GAAG,CAAC2zB,KANvB,SAAgC5gD,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAGnC,OAAOskB,GAAOC,UAAU3W,GAAK4J,EAC/B;;;;;;;;;;;;;;;;GCaO,MAAMqpC,GAAa5zB,GAAG,CAAC6zB,YAZ9B,SAAuC9gD,EAAsBgD,EAAO,GAClE,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,aAAc,qBAEjD0V,EAAY1S,GAAQy3B,EAAGx3B,MAAM,IAAM,uCAEnC,MAAMuU,EAA2B,CAACmB,MAAO8hB,GACnCpW,EAAyB,CAACk6B,IAAKv7C,GAErC,OAAOshB,GAAOC,UACV1W,GAAY2J,EAAgC6M,EAClD;;;;;;;;;;;;;;;;GCTO,MAAM08B,GAAQ9zB,GAAG,CAAC+zB,OANzB,SAAkChhD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAUzW,GAAO0J,EACjC;;;;;;;;;;;;;;;;GCwBO,MAAMypC,GAAOh0B,GAAG,CAACi0B,MAfxB,SAAiClhD,EAAiBy6C,GAChD,MAAMhgB,EAAKlO,GAAgBvsB,EAAG,IAAK,OAAQ,qBAC3C0V,EACI+kB,EAAGx3B,OAASw3C,EAAKh7C,QACjB,IAAM,qCAAqCg7B,EAAGx3B,kCACbw3C,OAErC,MAAMjjC,EAAqB,CAACxX,EAAGy6B,GACzBpW,EAAmB,CAACo2B,QAE1B,OAAOn2B,GAAOC,UACVjR,GAAMkE,EACN6M,EACN;;;;;;;;;;;;;;;;GCeO,MAAM88B,GAAMl0B,GAAG,CAACm0B,KAzCvB,SACIC,EAAiBC,EACjBC,EAKAziD,EAAkB,WACF,MAAdwiD,IACFA,EAAaD,GAEf,MAAMG,EAAO1lC,GAAO,CAACulC,EAASC,GAAaxiD,GACrCiX,EAAIsrC,GAAWC,EAAaD,EAAUC,EAC5C,IAAK,IAAIhhD,EAAI,EAAGA,EAAIyV,IAAKzV,EACvBkhD,EAAKvjD,IAAI,EAAGqC,EAAGA,GAEjB,MAAMglB,EAAgBsxB,GAAQ4K,EAAKnmC,WAAY,CAACgmC,EAASC,IACzD,GAAkB,MAAdC,EACF,OAAOj8B,EAEP,GAA0B,IAAtBi8B,EAAW9hD,OACb,OAAOwhD,GAAKJ,GAAWv7B,EAAK,GAAI,CAACi8B,EAAW,GAAI,EAAG,IAC9C,GAA0B,IAAtBA,EAAW9hD,OAEpB,OAAOwhD,GACIJ,GAAWA,GAAWv7B,EAAK,GAAI,GAC/B,CAACi8B,EAAW,GAAIA,EAAW,GAAI,EAAG,IACxC,GAA0B,IAAtBA,EAAW9hD,OAEpB,OAAOwhD,GAAKJ,GAAWA,GAAWA,GAAWv7B,EAAK,GAAI,GAAI,GAAI,CACrDi8B,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAI,EAAG,IAGzD,MAAM,IAAIliD,MAGN,qEAA8BkiD,EAAmB9hD,WAG3D;;;;;;;;;;;;;;;;GC1CA,SAAS6Z,GACLza,EAAoBlC,EAAsBmC,GAC5C,MAAMulB,EAAmB,CAACxlB,QAAOlC,QAAOmC,SAExC,OAAOwlB,GAAOC,UAAUvW,GAAM,CAAE,EAAEqW,EACpC;;;;;;;;;;;;;;;;GCCO,MAAMxd,GAAQomB,GAAG,CAACw0B,OANzB,SAAkCzhD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAUrW,GAAOsJ,EACjC;;;;;;;;;;;;;;;;GCuBO,MAAMkqC,GAASz0B,GAAG,CAAC00B,QAZ1B,SACI3hD,EAAiBgsB,EAA4BhpB,EAAO,EAAG4+C,EAAY,GACrE,MAGMpqC,EAAyB,CAACxX,EAHrBusB,GAAgBvsB,EAAG,IAAK,UAGIgsB,QAFtBO,GAAgBP,EAAS,UAAW,SAAU,UAGzD3H,EAAuB,CAACrhB,OAAM4+C,aAEpC,OAAOt9B,GAAOC,UACVlW,GAAUmJ,EAAgC6M,EAChD;;;;;;;;;;;;;;;;GCRO,MAAMw9B,GAAU50B,GAAG,CAAC60B,SAb3B,SACI9gD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,WAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,YAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAwB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEzC,OAAOpgB,GAAOC,UAAUhW,GAASiJ,EACnC;;;;;;;;;;;;;;;;GCEO,MAAMuqC,GAAe90B,GAAG,CAAC+0B,cAbhC,SACIhhD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,gBAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,iBAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAA6B,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE9C,OAAOpgB,GAAOC,UAAU/V,GAAcgJ,EACxC;;;;;;;;;;;;;;;;GCRO,MAAMmW,GAAOV,GAAG,CAACg1B,MAPxB,SAAiCtpC,GAC/B,MAEMnB,EAAqB,CAACmB,MAFb4T,GAAgB5T,EAAO,QAAS,SAG/C,OAAO2L,GAAOC,UAAU5V,GAAM6I,EAChC;;;;;;;;;;;;;;;;GCEO,MAAMlT,GAAW2oB,GAAG,CAACi1B,UAP5B,SAAqCliD,GACnC,MAEMwX,EAAyB,CAACxX,EAFrBusB,GAAgBvsB,EAAG,IAAK,aAInC,OAAOskB,GAAOC,UAAU3V,GAAU4I,EACpC;;;;;;;;;;;;;;;;GCCO,MAAM2qC,GAAQl1B,GAAG,CAACm1B,OAPzB,SAAkCpiD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAInC,OAAOskB,GAAOC,UAAU1V,GAAO2I,EACjC;;;;;;;;;;;;;;;;GCAO,MAAMnT,GAAQ4oB,GAAG,CAACo1B,OANzB,SAAkCriD,GAChC,MACMwX,EAAsB,CAACxX,EADlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAUzV,GAAO0I,EACjC;;;;;;;;;;;;;;;;GCWO,MAAM8qC,GAAYr1B,GAAG,CAACs1B,WAV7B,SAAsCviD,EAAiBwiD,EAAQ,IAC7D,MAEMhrC,EAA0B,CAACxX,EAFtBusB,GAAgBvsB,EAAG,IAAK,cAG7BqkB,EAAwB,CAACm+B,SAE/B,OAAOl+B,GAAOC,UACVxV,GAAWyI,EAAgC6M,EACjD;;;;;;;;;;;;;;;;GCEO,MAAMo+B,GAAOx1B,GAAG,CAACy1B,MAbxB,SACI1hD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,QAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,SAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAqB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEtC,OAAOpgB,GAAOC,UAAUvV,GAAMwI,EAChC;;;;;;;;;;;;;;;;GCGO,MAAMmrC,GAAY11B,GAAG,CAAC21B,WAb7B,SACI5hD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,aAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,cAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAA0B,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE3C,OAAOpgB,GAAOC,UAAUtV,GAAWuI,EACrC;;;;;;;;;;;;;;;;GCnBM,SAAUqrC,GAASt9C,EAAe6mC,EAAchoC,GACpD,GAAIA,GAAO,EACT,MAAM,IAAI/E,MAAM,4CAGlB,MAAMglB,EAAuB,CAAC9e,QAAO6mC,OAAMhoC,OAC3C,OAAOkgB,GAAOC,UAAUrV,GAAU,CAAE,EAAEmV,EACxC;;;;;;;;;;;;;;;;GCsCO,MAAMy+B,GAA6B71B,GAAG,CAAC81B,4BAnC9C,SACI/iD,EAAiBgjD,EAAc,EAAGC,EAAO,EAAGT,EAAQ,EAAGU,EAAO,IAChE,MAAMzoB,EAAKlO,GAAgBvsB,EAAG,IAAK,8BACnC0V,EACgB,IAAZ+kB,EAAGx3B,MAA0B,IAAZw3B,EAAGx3B,MACpB,IAAM,2FACUw3B,EAAGx3B,UACvByS,EACIA,EAAWstC,IACX,IACI,2FAA+BA,OAEvC,IAAI9L,EAAMzc,EACN0c,GAAe,EACH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG3D,MAAM2Y,EAAoB,CAACxX,EAAGk3C,GAExB7yB,EAAkB,CAAC2+B,cAAaC,OAAMT,QAAOU,QAG7Cv/B,EAAMW,GAAOC,UACH/U,GAAKgI,EACL6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEpD8kB,CAEX;;;;;;;;;;;;;;;;GCjCO,MAAM7K,GAAMmU,GAAG,CAACk2B,KANvB,SAAgCnjD,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAGnC,OAAOskB,GAAOC,UAAUpV,GAAKqI,EAC/B;;;;;;;;;;;;;;;;GCEO,MAAM4rC,GAAQn2B,GAAG,CAACo2B,OANzB,SAAkCrjD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAUnV,GAAOoI,EACjC;;;;;;;;;;;;;;;;GCqOA,SAAS8rC,GAAchlD,EAAiBilD,GAEtC7tC,EACIA,EAAgBpX,IAChB,IAAM,wDACVoX,EACe,MAAX6tC,GACIpiD,MAAMC,QAAQmiD,IAAYA,EAAQlgD,OAAMgX,GAAKA,aAAa2C,MAC9D,IACI,kFAGR,MAAMwmC,EAA8B,MAAXD,EACzB,IAAKC,EAAkB,CAErBD,EAAU,GACV,IAAK,MAAM/7B,KAAWlD,GAAO5E,oBAC3B6jC,EAAQjiD,KAAKgjB,GAAO5E,oBAAoB8H,IAI5C,MAAMi8B,EACFD,EAAmBD,EAAQr8B,QAAOzK,IAAaA,EAASC,YAAa,KAGnEgnC,EAAmBH,EAAQ9jD,OACjC8jD,EAAUA,EAAQr8B,QAAOzK,GAAYA,EAASC,YAC9ChH,EACI6tC,EAAQ9jD,OAAS,GACjB,IACI,gGAAiCikD,8BAGzC,MACM/mD,MAACA,EAAK2tB,MAAEA,GAAShG,GAAOuE,UAAUvqB,EAAGilD,EAAS,MAD3B,GAGzB7tC,EACI4U,EAAMhL,MAAKqkC,GAAU,MAALA,KAChB,IAAM,iMAGVjuC,EACmB,IAAf/Y,EAAMsG,MACN,IACI,iFAAmBtG,EAAMsG,gBAEjC,MAAM2gD,EAA6B,CAAA,EAWnC,OAVAL,EAAQz+C,SAAQ,CAACuV,EAAG/Z,KACF,MAAZgqB,EAAMhqB,KACRsjD,EAAWvpC,EAAEnR,MAAQohB,EAAMhqB,OAGF,MAAzBmjD,GAGFA,EAAsB3+C,SAAQuV,GAAKupC,EAAWvpC,EAAEnR,MAAQ,OAEnD,CAACvM,QAAO2tB,MAAOs5B,EACxB,CA0CA,SAASr5B,GAA6BjsB,GAEpC,OAAOgmB,GAAOiG,WAAWjsB,EAC3B,CAEA,SAASulD,GAAWv5B,GAElB,GADyBA,EAAMpD,QAAOy8B,GAAU,MAALA,IAAWlkD,OAC/B,EACrB,MAAM,IAAIJ,MACN,2IAGR;;;;;;;;;;;;;;;;GCpVO,MAAMykD,GAAM72B,GAAG,CAAC82B,KANvB,SAAgC/jD,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAGnC,OAAOskB,GAAOC,UAAU/T,GAAKgH,EAC/B;;;;;;;;;;;;;;;;GCAO,MAAMwsC,GAAW/2B,GAAG,CAACg3B,UAN5B,SAAqCjkD,GACnC,MAEMwX,EAAyB,CAACxX,EAFrBusB,GAAgBvsB,EAAG,IAAK,aAGnC,OAAOskB,GAAOC,UAAU9R,GAAU+E,EACpC;;;;;;;;;;;;;;;;GCmBO,MAAM0sC,GAAaj3B,GAAG,CAACk3B,YArB9B,SAAuCnkD,GACrC,MAAMy6B,EAAKlO,GAAgBvsB,EAAG,IAAK,cAkBnC,OAbiBuqB,IAAYvqB,IAUpB,CAACrD,MANMmnD,GAAIE,GAASF,GAAI9jD,KAMhBioB,SAJG9D,GACHqsB,GAAIrsB,EAAIuzB,GAAQoM,GAAI9jD,QAM9BokD,CAAS3pB,EAClB;;;;;;;;;;;;;;;;GCMO,MAAMx6B,GAAMgtB,GAAG,CAACo3B,KAXvB,SACIrkD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAEM55B,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAG7BqkB,EAAkB,CAACigC,iBAAkBthD,EAAMouC,YAEjD,OAAO9sB,GAAOC,UACV7U,GAAK8H,EAAgC6M,EAC3C;;;;;;;;;;;;;;;;GCNO,MAAMkgC,GAAMt3B,GAAG,CAACu3B,KAVvB,SAAgCxjD,EAAsBmV,GACpD,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,QAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAoB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAErC,OAAOpgB,GAAOC,UAAUtR,GAAKuE,EAC/B;;;;;;;;;;;;;;;;GCcO,MAAMpX,GAAM6sB,GAAG,CAACw3B,KAdvB,SACIzkD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,IAAI3W,EAAKlO,GAAgBvsB,EAAG,IAAK,OAChB,SAAby6B,EAAG37B,QACL27B,EAAKje,GAAKie,EAAI,UAGhB,MAAMjjB,EAAoB,CAACxX,EAAGy6B,GACxBpW,EAAkB,CAACrhB,OAAMouC,YAE/B,OAAO9sB,GAAOC,UACV5R,GAAK6E,EAAgC6M,EAC3C;;;;;;;;;;;;;;;;GCoCO,MAAMqgC,GAAaz3B,GAAG,CAAC03B,YAnD9B,SAAuCC,EAAsB5hD,GAAO,GAClE,MAAM6hD,EAAUt4B,GAAgBq4B,EAAQ,SAAU,cAKlD,IAHc,IAAV5hD,IACFA,EAAO6hD,EAAQ5hD,KAAO,GAEpBD,IAAS6hD,EAAQ5hD,KAAO,EAC1B,MAAM5D,MAEF,gFAAmBwlD,EAAQ5hD,qBAAqBD,KAetD,MAAMohD,EAAW75B,IAAW,CAACq6B,EAAgBn6B,KAC3C,MACMq6B,EAAO7kD,GAAI2kD,EAAQ5hD,GAAM,GACzB+hD,EAAUR,GAAIK,EAAQE,GACtBnoD,EACF4nD,GAAI/nC,GAAKuoC,EAAS,WAAYjsC,GAAI1Y,GAAI8W,GAAI6tC,GAAU/hD,GAJvC,KAKjBynB,EAAK,CAAC9tB,IAQN,MAAO,CAACA,QAAOsrB,SANEA,CAAC9D,EAAYc,KAC5B,MAAOtoB,GAASsoB,EAEV+/B,EAAU9tC,GAAIva,GACpB,OAAO4nD,GAAIpgC,EAAIqsB,GAAIpwC,GAAI+jB,EAAInhB,GAFV,GAE2BgiD,GAAS,EAE/B,IAG1B,OAAOZ,EAASS,EAQlB;;;;;;;;;;;;;;;;GChFM,SAAUI,GAAqBvhD,EAAgBT,GACnD,IAAK,IAAI3C,EAAI,EAAGA,EAAIoD,EAAKjE,SAAUa,EACjC,GAAIoD,EAAKA,EAAKjE,OAASa,EAAI,KAAO2C,EAAO,EAAI3C,EAC3C,OAAO,EAGX,OAAO,CACT,CAEM,SAAU4kD,GACZC,EAAqBC,EAAqB1hD,GAC5C,MAAMT,EAAOkiD,EAAU1lD,OAAS2lD,EAAU3lD,OACpC2b,EAAM,GACZ,IAAIiqC,EAAS,EACTC,EAAY,EACd,IAAK,IAAI/G,EAAM,EAAGA,EAAMt7C,EAAMs7C,KACH,IAAvB76C,EAAKgpB,QAAQ6xB,GACfnjC,EAAI9Z,KAAK6jD,EAAUE,MAEnBjqC,EAAI9Z,KAAK8jD,EAAUE,MAGvB,OAAOlqC,CACT,CAEM,SAAUmqC,GACZC,EAAkB9hD,GACpB,MAAM4pC,EAAW,GACXrqC,EAAOuiD,EAAO/lD,OACpB,IAAK,IAAI8+C,EAAM,EAAGA,EAAMt7C,EAAMs7C,KACD,IAAvB76C,EAAKgpB,QAAQ6xB,IACfjR,EAAShsC,KAAKkkD,EAAOjH,IAIzB,MAAO,CAACjR,EADY5pC,EAAKR,KAAIq7C,GAAOiH,EAAOjH,KAE7C,CAEM,SAAUkH,GACZ5mD,EAAiB6E,GAEnB,OAAOwhD,GAAiBrmD,EADD6E,EAAKR,KAAIlD,GAAK,IACU0D,EACjD,CAEM,SAAUgiD,GACZjlD,EAAaiD,EAAgBT,GAC/ByS,EACIuvC,GAAqBvhD,EAAMT,IAC3B,IAAM,GAAGxC,qDACOiD,cAAiBT,YACvC,CAOM,SAAU0iD,GAAmBjiD,EAAgBT,GAEjD,GAAIgiD,GAAqBvhD,EAAMT,GAC7B,OAAO,KAET,MAAMjG,EAAmB,GACzB,IAAK,IAAIsD,EAAI,EAAGA,EAAI2C,IAAQ3C,GACD,IAArBoD,EAAKgpB,QAAQpsB,IACftD,EAAOsE,KAAKhB,GAIhB,OADAoD,EAAKoB,SAAQ9B,GAAQhG,EAAOsE,KAAK0B,KAC1BhG,CACT,CAGM,SAAU4oD,GAAuBliD,GACrC,OAAOA,EAAKR,KAAI,CAACF,EAAM1C,IAAM,CAACA,EAAG0C,KAC5BW,MAAK,CAAC3C,EAAGmV,IAAMnV,EAAE,GAAKmV,EAAE,KACxBjT,KAAIlD,GAAKA,EAAE,IAClB,CAEM,SAAU6lD,GAAiBC,EAAiB7iD,GAChD,MAAM0gB,EAAgB,GACtB,IAAK,IAAIrjB,EAAI2C,EAAO6iD,EAASxlD,EAAI2C,IAAQ3C,EACvCqjB,EAAIriB,KAAKhB,GAEX,OAAOqjB,CACT;;;;;;;;;;;;;;;;GC5BO,MAAMoiC,GAAY94B,GAAG,CAAC+4B,WAnB7B,SACIhmD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAAM3W,EAAKlO,GAAgBvsB,EAAG,IAAK,aAE7B0D,EAAOX,EAAeC,EAAMy3B,EAAG57B,OAC/BimD,EAAO7kD,GAAIw6B,EAAI/2B,GAAM,GACrB1C,EAAIujD,GAAI9pB,EAAIqqB,GACZ3uC,EAAIe,GAAIlW,GACRkF,EAAI9F,GAAI+V,EAAGzS,GACXmC,EAAIiT,GAAI5S,GACRyd,EAAM1E,GAAI23B,GAAQkO,EAAMj/C,EAAEhH,OAAQgH,GAExC,GAAIurC,EAAU,CACZ,MAAMvuC,EAAW4iD,GAAqB9hC,EAAI9kB,MAAO6E,GACjD,OAAOkzC,GAAQjzB,EAAK9gB,GAEtB,OAAO8gB,CACT;;;;;;;;;;;;;;;;GC1BO,MAAMsiC,GAAah5B,GAAG,CAACi5B,YAX9B,SACIllD,EAAsBmV,GACxB,MAAMsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,aAAc,QAC3C0jC,EAAKnY,GAAgBpW,EAAG,IAAK,aAAc,QACjDyoC,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAA2B,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE5C,OAAOpgB,GAAOC,UAAUlV,GAAYmI,EACtC;;;;;;;;;;;;;;;;GCNO,MAAM2uC,GAAal5B,GAAG,CAACm5B,YAN9B,SAAuCpmD,GACrC,MACMwX,EAA2B,CAACxX,EADvBusB,GAAgBvsB,EAAG,IAAK,aAAc,SAEjD,OAAOskB,GAAOC,UAAUjV,GAAYkI,EACtC;;;;;;;;;;;;;;;;GCOO,MAAM6uC,GAAYp5B,GAAG,CAACq5B,WAT7B,SACItlD,EAAsBmV,GACxB,MAAMsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,YAAa,QAC1C0jC,EAAKnY,GAAgBpW,EAAG,IAAK,YAAa,QAChDyoC,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAA0B,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAC3C,OAAOpgB,GAAOC,UAAUhV,GAAWiI,EACrC;;;;;;;;;;;;;;;;GCIO,MAAM+uC,GAAat5B,GAAG,CAACu5B,YAV9B,SACIxlD,EAAsBmV,GACxB,MAAMsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,aAAc,QAC3C0jC,EAAKnY,GAAgBpW,EAAG,IAAK,aAAc,QAIjD,OAHAyoC,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAGjConD,GAAWI,GAAUrlD,EAAGmV,GAAIgwC,GAAWF,GAAWjlD,EAAGmV,IAC9D;;;;;;;;;;;;;;;;GCgDO,MAAMswC,GAAUx5B,GAAG,CAACy5B,SA3C3B,SACI1mD,EAAiB6yC,EACjBptC,EAAkCuU,EAClCg9B,GACF,MAAMvc,EAAKlO,GAAgBvsB,EAAG,IAAK,WAGnC,IAAIk3C,EAAMzc,EACN0c,GAAe,EACH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IAAM,uDAAuDi0C,EAAIj0C,UACrEyS,EACIuhC,GAAyCxxC,EAb3B,IAcd,IACI,wEAAeA,wBACA,MAAnBuxC,GACFthC,EACIA,EAAWsE,IACX,IACI,wEAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAAwB,CAACxX,EAAGk3C,GAE5B7yB,EAAsB,CAACwuB,aAAYptC,UAASuU,MAAKg9B,mBAGjDrzB,EAAMW,GAAOC,UACH3U,GAAS4H,EACT6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GCeO,MAAMgjC,GAAY15B,GAAG,CAAC25B,WA/C7B,SACI5mD,EAAiB6yC,EAA8C,CAAC,EAAG,EAAG,GACtEptC,EAA0CuU,EAC1Cg9B,EACAzE,EAA8B,SAChC,MAAM9X,EAAKlO,GAAgBvsB,EAAG,IAAK,aAEnC,IAAIs3C,EAAM7c,EACN8c,GAAe,EACH,IAAZ9c,EAAGx3B,OACLs0C,GAAe,EACfD,EAAMV,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAGxE6W,EACiB,IAAb4hC,EAAIr0C,MACJ,IAAM,qDAAqDq0C,EAAIr0C,UACnEyS,EACmB,UAAf68B,GACA,IACI,gFAAyBA,MACV,MAAnByE,GACFthC,EACIA,EAAWsE,IACX,IACI,0EAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAA0B,CAACxX,EAAGs3C,GAE9BjzB,EACe,CAACwuB,aAAYptC,UAASuU,MAAKg9B,kBAAiBzE,cAG3D5uB,EAAMW,GAAOC,UACHzU,GAAW0H,EACX6M,GAEhB,OAAIkzB,EACKX,GACIjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAIhE8kB,CACT;;;;;;;;;;;;;;;;GC/BO,MAAMkjC,GAAoB55B,GAAG,CAAC65B,mBAlBrC,SACI9mD,EAAiB6yC,EACjBptC,EAAkCuU,EAClC+sC,GAAsB,GACxB,MAEMvvC,EAAkC,CAACxX,EAF9BusB,GAAgBvsB,EAAG,IAAK,sBAG7BqkB,EACuB,CAACwuB,aAAYptC,UAASuU,MAAK+sC,uBAGlD/pD,EAASsnB,GAAOC,UACHvU,GAAmBwH,EACnB6M,GAEnB,MAAO,CAACrnB,OAAQA,EAAO,GAAIgqD,QAAShqD,EAAO,GAC7C;;;;;;;;;;;;;;;;GCHO,MAAMiqD,GAAUh6B,GAAG,CAACi6B,SAjB3B,SACIlmD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,WAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,YAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAEb,SAAbD,EAAG3lC,QACL2lC,EAAKjoB,GAAKioB,EAAI,SACdC,EAAKloB,GAAKkoB,EAAI,UAEhBka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAwB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEzC,OAAOpgB,GAAOC,UAAU5U,GAAS6H,EACnC;;;;;;;;;;;;;;;;GCJO,MAAM6hC,GAAOpsB,GAAG,CAACk6B,MAXxB,SACInnD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAEM55B,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAG7BqkB,EAAmB,CAACrhB,OAAMouC,YAEhC,OAAO9sB,GAAOC,UACVtU,GAAMuH,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GCGO,MAAMtkB,GAAMktB,GAAG,CAACm6B,KAbvB,SACIpnD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,MAEM55B,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAG7BqkB,EAAkB,CAACrhB,OAAMouC,YAG/B,OAAO9sB,GAAOC,UACHrU,GAAKsH,EACL6M,EACb;;;;;;;;;;;;;;;;GCQO,MAAMgjC,GAAUp6B,GAAG,CAACq6B,SAlB3B,SACItmD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,WAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,YAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAEb,SAAbD,EAAG3lC,QACL2lC,EAAKjoB,GAAKioB,EAAI,SACdC,EAAKloB,GAAKkoB,EAAI,UAGhBka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAwB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAEzC,OAAOpgB,GAAOC,UAAUpU,GAASqH,EACnC;;;;;;;;;;;;;;;;GCkBO,MAAM+vC,GAAYt6B,GAAG,CAACu6B,WArC7B,SACIxnD,EAAiBynD,EACjBC,GACFhyC,EACa,YAATgyC,GAA+B,cAATA,GACtB,IACI,+DAAOA,OAEf,MAAMjtB,EAAKlO,GAAgBvsB,EAAG,IAAK,aACnC,GAAgB,IAAZy6B,EAAGx3B,KACL,MAAM,IAAI5D,MACN,kEAGNqW,EACI+xC,EAAShoD,SAAWg7B,EAAGx3B,MACvB,IAAM,wCAAwCw3B,EAAGx3B,aACtCwkD,EAAShoD,YACxB,MAAMkoD,EAAuB,YAATD,EAAqB,EAAI,EAC7C,IAAK,IAAIpnD,EAAI,EAAGA,EAAIm6B,EAAGx3B,KAAM3C,IAC3BoV,EAC2B,IAAvB+xC,EAASnnD,GAAGb,QACZ,IAAM,0DACViW,EACI+xC,EAASnnD,GAAG,IAAM,GAAKmnD,EAASnnD,GAAG,IAAMm6B,EAAG57B,MAAMyB,GAAKqnD,GACnDF,EAASnnD,GAAG,IAAM,GAAKmnD,EAASnnD,GAAG,IAAMm6B,EAAG57B,MAAMyB,GAAKqnD,GAC3D,IAAM,wBAAwBrnD,wCACpBm6B,EAAG57B,MAAMyB,GAAKqnD,uCACXltB,EAAG57B,UAGtB,MAAMwlB,EAAwB,CAACojC,WAAUC,QACnClwC,EAA0B,CAACxX,EAAGy6B,GACpC,OAAOnW,GAAOC,UACVnU,GAAWoH,EAAgC6M,EACjD;;;;;;;;;;;;;;;;GCvBO,MAAMujC,GAAM36B,GAAG,CAAC46B,KAVvB,SAAgC7mD,EAAsBmV,GACpD,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,OAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,QAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMltB,EAAoB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAErC,OAAOpgB,GAAOC,UAAUlU,GAAKmH,EAC/B;;;;;;;;;;;;;;;;GCtBO,MAAMswC,GAAS76B,GAAG,CAAC86B,QAN1B,SAAmC/nD,GACjC,MAAMy6B,EAAKlO,GAAgBvsB,EAAG,IAAK,UAEnC,OAAOskB,GAAOC,UAAU,SAAU,CAACvkB,EAAGy6B,GADxB,CAAA,EAEhB;;;;;;;;;;;;;;;;GCqBO,MAAMutB,GAAU/6B,GAAG,CAACg7B,SAhB3B,SACIjoD,EAAsBgD,EAAwB,KAC9CouC,GAAW,GAEb,MAAM1tC,EAAOX,EAAeC,GAD5BhD,EAAIusB,GAAgBvsB,EAAG,IAAK,YACQnB,OAC9BqpD,EAAQ7O,GAAKr5C,EAAG0D,EAAM0tC,GAC5B,IAAI+W,EAAgBD,EAAMrpD,MACrBuyC,IACH+W,EAAgB1C,GAAqByC,EAAMrpD,MAAO6E,IAEpD,MAAM0kD,EACFN,GAAOvD,GAAI/nC,GAAKxc,EAAG,WAAY42C,GAAQsR,EAAOC,KAElD,MAAO,CAAC9O,KAAM6O,EAAO5O,SADJD,GAAK+O,EAAY1kD,EAAM0tC,GAE1C,ICUO,MAAMiX,GAAep7B,GAAG,CAACq7B,cAxBhC,SACIC,EAA2B7qD,EAC3BwI,EACAiyC,GACF,MAAMI,EAAQhsB,GAAgB7uB,EAAM,OAAQ,gBACtC86C,EAAK5rB,GAAqB1mB,EAAG,IAAK,gBAClCuyC,EAAK7rB,GAAqBurB,EAAG,IAAK,gBAExC,IAAIx/B,EAAQ4/B,EACZ,MAAMiQ,EAAY,GAClB,IAAK,IAAIloD,EAAI,EAAGA,EAAIioD,EAAU9oD,OAAQa,IAAK,CACzC,MAAMsX,EAAS2wC,EAAUjoD,GAAGqY,EAAO6/B,EAAGl4C,GAAIm4C,EAAGn4C,IAC7CkoD,EAAUlnD,KAAKsW,EAAO,IACtB4wC,EAAUlnD,KAAKsW,EAAO,IACtBe,EAAQf,EAAO,GAEjB,MAAMihC,EAAmB,GACnB4P,EAAmB,GACzB,IAAK,IAAInoD,EAAI,EAAGA,EAAIkoD,EAAU/oD,OAAQa,GAAK,EACzCu4C,EAAKv3C,KAAKknD,EAAUloD,IACpBmoD,EAAKnnD,KAAKknD,EAAUloD,EAAI,IAE1B,MAAO,CAACu4C,EAAM4P,EAChB;;;;;;;;;;;;;;;;GCeO,MAAMC,GAAcz7B,GAAG,CAAC07B,aAlC/B,SACI/D,EAAsCgE,EAAoBC,EAC1DC,GAAa,GACf,MAAMjE,EAAUt4B,GAAgBq4B,EAAQ,SAAU,eAC5CmE,EAAclE,EAAQrjD,KACtBwnD,EAAWnE,EAAQ5hD,KACzB,GAAI8lD,EAAc,EAChB,MAAM,IAAI1pD,MAEN,+DAAG0pD,MAET,GAAIC,EAAW,EACb,MAAM,IAAI3pD,MAAM,gDAAgD2pD,KAIlEH,EAAOA,GAAQjpD,KAAKC,SAGpB,MAGM2X,EAA4B,CAACotC,OAFlB,IAAboE,EAAiBpS,GAAQiO,EAAS,CAAC,GAAI,IAAMA,GAG3CxgC,EAA0B,CAACukC,aAAYC,OAAMC,cAG7CnlC,EAAMW,GAAOC,UACHjU,GAAakH,EACb6M,GAGhB,OAAoB,IAAb2kC,EAAiBpS,GAAQjzB,EAAK,CAACA,EAAIniB,OAAqBmiB,CACjE;;;;;;;;;;;;;;;;GC1BO,MAAMslC,GAAWh8B,GAAG,CAACi8B,UAb5B,SACIloD,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,YAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,aAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAyB,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAE1C,OAAOpgB,GAAOC,UAAU9T,GAAU+G,EACpC;;;;;;;;;;;;;;;;GCfM,SAAUmoC,GACZ9gD,EAAoBC,EAAkB,WACxC,GAAc,cAAVA,EAAuB,CACzB,MAAM4uB,EAAOiyB,GAAM9gD,EAAO,WACpB8uB,EAAOgyB,GAAM9gD,EAAO,WAC1B,OAAO2uB,GAAQE,EAAMC,GAEvB,MAAM/uB,EAASyH,EAAoB9E,EAAc1C,GAAQC,GACzD,OAAOwlB,GAAO/I,WAAW3c,EAAQC,EAAOC,EAC1C;;;;;;;;;;;;;;;;GCRM,SAAUgrB,GACZjrB,EAAoBC,EAAkB,WACxC,GAAc,cAAVA,EAAuB,CACzB,MAAM4uB,EAAO5D,GAAKjrB,EAAO,WACnB8uB,EAAOgyB,GAAM9gD,EAAO,WAC1B,OAAO2uB,GAAQE,EAAMC,GAEvB,MAAM/uB,EAASwH,EAAmB7E,EAAc1C,GAAQC,GACxD,OAAOwlB,GAAO/I,WAAW3c,EAAQC,EAAOC,EAC1C;;;;;;;;;;;;;;;;GCFO,MAAMqqD,GAAWl8B,GAAG,CAACm8B,UAP5B,SAAqCppD,GACnC,MAEMwX,EAAyB,CAACxX,EAFrBusB,GAAgBvsB,EAAG,IAAK,aAGnC,OAAOskB,GAAOC,UAAU1T,GAAU2G,EACpC,ICWO,MAAM6xC,GAAep8B,GAAG,CAACq8B,cAfhC,SACIC,EAAyBC,GAC3B,MAAMC,EAAMl9B,GAAgBg9B,EAAI,KAAM,gBAChCG,EAAMn9B,GAAgBi9B,EAAI,KAAM,gBAEtC9zC,EACiB,IAAb+zC,EAAIxmD,MAA2B,IAAbymD,EAAIzmD,MACtB,IACI,+DAAGwmD,EAAIxmD,YAAYymD,EAAIzmD,UAE/B,MAAM0mD,EAAO/S,GAAQ6S,EAAK,EAAE,EAAG,IACzBG,EAAOhT,GAAQ8S,EAAK,CAAC,GAAI,IAC/B,OAAOrlB,GAAOslB,EAAMC,EACtB;;;;;;;;;;;;;;;;GCcO,MAAM5vC,GAAMiT,GAAG,CAAC48B,KAdvB,SACI7pD,EAAiBynD,EAAmCqC,EAAgB,GACtE,MAAMrvB,EAAKlO,GAAgBvsB,EAAG,IAAK,OACnC,GAAgB,IAAZy6B,EAAGx3B,KACL,MAAM,IAAI5D,MAAM,sDAGlB,MAAMglB,EAAoB,CAACojC,WAAUqC,iBAC/BtyC,EAAsB,CAACxX,EAAGy6B,GAChC,OAAOnW,GAAOC,UACVvT,GAAOwG,EACP6M,EACN,IC9BO,MAAM0lC,GAAQ98B,GAAG,CAAC+8B,OATzB,SACIhqD,EAAwBynD,EACxBqC,EAAgB,GAIlB,OAHAvpD,EACwB,IAApBknD,EAAShoD,QACT,IAAM,qDACHua,GAAIha,EAAG,CAACynD,GAAWqC,EAC5B,ICGO,MAAMG,GAAQh9B,GAAG,CAACi9B,OAVzB,SACIlqD,EAAwBynD,EACxBqC,EAAgB,GAKlB,OAJAvpD,EACwB,IAApBknD,EAAShoD,QAAuC,IAAvBgoD,EAAS,GAAGhoD,QACV,IAAvBgoD,EAAS,GAAGhoD,QAChB,IAAM,0DACHua,GAAIha,EAAGynD,EAAUqC,EAC1B,ICGO,MAAMK,GAAQl9B,GAAG,CAACm9B,OAXzB,SACIpqD,EACAynD,EACAqC,EAAgB,GAKlB,OAJAvpD,EACwB,IAApBknD,EAAShoD,QAAuC,IAAvBgoD,EAAS,GAAGhoD,QACV,IAAvBgoD,EAAS,GAAGhoD,QAAuC,IAAvBgoD,EAAS,GAAGhoD,QAC5C,IAAM,0DACHua,GAAIha,EAAGynD,EAAUqC,EAC1B,ICMO,MAAMO,GAAQp9B,GAAG,CAACq9B,OAfzB,SACItqD,EACAynD,EAIAqC,EAAgB,GAMlB,OALAvpD,EACwB,IAApBknD,EAAShoD,QAAuC,IAAvBgoD,EAAS,GAAGhoD,QACV,IAAvBgoD,EAAS,GAAGhoD,QAAuC,IAAvBgoD,EAAS,GAAGhoD,QACjB,IAAvBgoD,EAAS,GAAGhoD,QAChB,IAAM,0DACHua,GAAIha,EAAGynD,EAAUqC,EAC1B;;;;;;;;;;;;;;;;GC4EO,MAAMS,GAAiBt9B,GAAG,CAACu9B,gBAtClC,SACIxqD,EAAiBg5C,EAAsByO,GACzC,MAAMhtB,EAAKlO,GAAgBvsB,EAAG,IAAK,kBAEnC0V,EACI+kB,EAAGx3B,MAAQ,EAAI+1C,EAAWv5C,QAC1B,IAAM,cAAcg7B,EAAGx3B,sCACnB+1C,EAAWv5C,WAEnBiW,EACI+xC,EAAShoD,SAAWu5C,EAAWv5C,QAC/B,IAAM,qBACFgoD,EAAShoD,wCAAwCu5C,EAAWv5C,WAEpEiW,EACI+kB,EAAG57B,MAAMmH,QACL,CAAChF,EAAGmV,EAAG7V,IACDA,EAAI,GAAKA,GAAK04C,EAAWv5C,OACpBuB,IACDmV,EAAIsxC,EAASnnD,EAAI,GAAG,GAAKmnD,EAASnnD,EAAI,GAAG,IACtC04C,EAAW14C,EAAI,IACnB,EAEAU,IAET,IACJ,IAAM,4BAA4By5B,EAAG57B,MAAMiE,MAAM,oBAC7C2kD,EAAShvC,+CACTugC,EAAWvgC,eAEnB,MAAMjB,EAA+B,CAACxX,EAAGy6B,GACnCpW,EAA6B,CAAC20B,aAAYyO,YAEhD,OAAOnjC,GAAOC,UACV3R,GAAgB4E,EAChB6M,EACN;;;;;;;;;;;;;;;;GCgDO,MAAMomC,GAAOx9B,GAAG,CAACy9B,MAxGxB,SACI/xC,EAAqBgyC,EACrBC,EAA0B5wC,EAC1Bw4B,EAAqC/sC,GACtB,MAAb+sC,IACFA,EAAY,CAAC,EAAG,IAEH,MAAX/sC,IACFA,EAAU,GAEA,IAARuU,IACFA,EAAM,SAGR,MAAMygB,EAAKlO,GAAgB5T,EAAO,IAAK,WACvC,IAAIu+B,EAAMzc,EACN0c,GAAe,EAEH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAG3D6W,EACIuhC,GAAyCxxC,EAAS+sC,IAClD,IACI,qEAAe/sC,oBAA0B+sC,OAEjD,MAAMqY,EAAW5T,GACbC,EAAIr4C,MAAO8rD,EAAallD,EAAS+sC,EAAWx4B,GAC1Cm8B,EACF,CAAC0U,EAAS9W,eAAgB8W,EAAS7W,eAOvC,IAAI8W,EAEFA,EADU,SAAR9wC,EA+CN,SACIs4B,EAA+B6D,GAGjC,MAAM4U,EAAqBzY,EAAYpvC,KAAI,CAACC,EAAG7C,IACtC6C,GAAKA,EAAI,IAAMgzC,EAAS71C,GAAK,KAEhC0qD,EAAgBD,EAAmB7nD,KAAIC,GAAKA,EAAI,IAIhD8nD,EAAgBD,EAAc9nD,KAAIC,GAAKvD,KAAKiH,MAAM1D,EAAI,KACtD+nD,EAAcF,EAAc9nD,KAAI,CAACC,EAAG7C,IAAM6C,EAAI8nD,EAAc3qD,KAClE,OAAO0qD,EAAc9nD,KAAI,CAACikB,EAAG7mB,IACpB,CAAC2qD,EAAc3qD,GAAI4qD,EAAY5qD,KAE1C,CA9DkB6qD,CACV,CAACN,EAAS9X,aAAc8X,EAAS7X,aAAcmD,GAErC,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAG7B,MAAMiV,EAAgC,IAAhBjV,EAAS,IAA4B,IAAhBA,EAAS,IAC7CkV,EAAiBC,GAuB1B,SACI1yC,EAA8BogC,EAC9B8R,GACF,MAAMS,EAAWT,EAAY5nD,KAAIiT,GAAKA,EAAE,KAClCq1C,EAAaV,EAAY5nD,KAAIiT,GAAKA,EAAE,KACpCs1C,EAAiB7yC,EAAWxV,OAAOmoD,EAAUC,GAC7CE,EAAc1S,EAAW91C,KAAI,CAACiT,EAAG7V,KAAO6V,EAAIs1C,EAAenrD,GAAK6V,GAAKA,IACrEw1C,EAASH,EAAWtoD,KAAI,CAACC,EAAG7C,IAAM6C,EAAIuoD,EAAYprD,KAClDmnD,EAAWzO,EAAW91C,KAAI,CAACikB,EAAG7mB,IAAM,CAACirD,EAASjrD,GAAIqrD,EAAOrrD,MACzD24C,EAAQD,EAAW91C,KAAI,CAACikB,EAAG7mB,IAAM,CAAC,EAAGorD,EAAYprD,MACvD,MAAO,CAACmnD,EAAUxO,EACpB,CAlC2C2S,CACrC,CAACf,EAASpX,SAAUoX,EAASnX,SAAUyC,EAAU2U,GAC/Ce,EAAeT,EAAgBpxC,EAAM,QACrC8xC,EACFV,EAAgBlU,EAAMqT,GAAerT,EAAKf,EAAUkV,GAKlDtnC,GAH4B,QAAhB6mC,EACd,IAAM9T,GAAQgV,EAAYnB,EAAallD,EAASomD,GAChD,IAAMpF,GAAQqF,EAAYnB,EAAallD,EAASomD,MAG9CloC,EAAMynC,EAAgBrnC,EAAI+0B,GAAe/0B,EAAGoyB,EAAUmV,GAE5D,OAAInU,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAGtD8kB,CACT;;;;;;;;;;;;;;;;GCxDO,MAAMooC,GAAM9+B,GAAG,CAAC++B,KAXvB,SACI/2C,EAAyBiC,GAC3B,IAAI+0C,EAAQ1/B,GAAgBtX,EAAM,OAAQ,OACtCi3C,EAAO3/B,GAAgBrV,EAAK,MAAO,QACtC+0C,EAAOC,GAAQ5tC,GAAe2tC,EAAOC,GAEtC,MAAM10C,EAAoB,CAACxW,EAAGirD,EAAO91C,EAAG+1C,GAExC,OAAO5nC,GAAOC,UAAUtT,GAAKuG,EAC/B;;;;;;;;;;;;;;;;GCbO,MAAM20C,GAAQl/B,GAAG,CAACm/B,OARzB,SAAkCpsD,EAAiBwiD,GACjD,MAGMhrC,EAAsB,CAACxX,EAHlBusB,GAAgBvsB,EAAG,IAAK,SAGCwiD,MAFrBj2B,GAAgBi2B,EAAO,QAAS,UAG/C,OAAOl+B,GAAOC,UAAUrT,GAAOsG,EACjC;;;;;;;;;;;;;;;;GC0BO,MAAM0hC,GAAOjsB,GAAG,CAACo/B,MAhBxB,SACIrsD,EAAsBgD,EAAwB,KAAMouC,GAAW,GACjE,IAAI3W,EAAKlO,GAAgBvsB,EAAG,IAAK,QAEhB,SAAby6B,EAAG37B,QAEL27B,EAAKje,GAAKie,EAAI,UAGhB,MAAMjjB,EAAqB,CAACxX,EAAGy6B,GACzBpW,EAAmB,CAACrhB,OAAMouC,YAEhC,OAAO9sB,GAAOC,UACVpT,GAAMqG,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GCnBO,MAAMioC,GAAOr/B,GAAG,CAACs/B,MApBxB,SACI1tD,EAAoB2tD,EACpB1tD,GACF,MAAM0C,EAAOD,EAAc1C,GAC3B,IAAID,EAAS,KACb,GAAa,MAATE,GAA2B,YAAVA,EACnBF,EAAS,IAAIkF,aAAatC,QACrB,GAAc,UAAV1C,EACTF,EAAS,IAAImF,WAAWvC,OACnB,IAAc,SAAV1C,EAGT,MAAM,IAAIO,MAAM,qBAAqBP,KAFrCF,EAAS,IAAIoF,WAAWxC,GAI1B,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAMlB,IACxB1B,EAAO0B,GAAKksD,IAEd,OAAOloC,GAAO/I,WAAW3c,EAAQC,EAAOC,EAC1C,IAE+B,oBAAA2tD,WAAAA,WAAA,oBAAAxiD,OAAAA,OAAA,oBAAA/C,OAAAA,OAAA,oBAAAiD,MAAAA,6dC1B/B,SAAUjD,EAAQwlD,EAAQC,GAE1B,SAASC,EAAK/D,GACZ,IAAIgE,EAAKpvD,KAAMqvD,EA+CjB,WACE,IAAI/2C,EAAI,WAEJ+2C,EAAO,SAASpvD,GAClBA,EAAOA,EAAK+a,WACZ,IAAK,IAAInY,EAAI,EAAGA,EAAI5C,EAAK+B,OAAQa,IAAK,CAEpC,IAAI63C,EAAI,oBADRpiC,GAAKrY,EAAKs6B,WAAW13B,IAGrB63C,GADApiC,EAAIoiC,IAAM,EAGVpiC,GADAoiC,GAAKpiC,KACK,EAEVA,GAAS,YADToiC,GAAKpiC,EAEN,CACD,OAAmB,wBAAXA,IAAM,IAGhB,OAAO+2C,CACT,CAlEwBC,GAEtBF,EAAGhwD,KAAO,WACR,IAAIoM,EAAI,QAAU4jD,EAAGG,GAAY,uBAAPH,EAAG3mD,EAG7B,OAFA2mD,EAAGG,GAAKH,EAAGI,GACXJ,EAAGI,GAAKJ,EAAGK,GACJL,EAAGK,GAAKjkD,GAAK4jD,EAAG3mD,EAAQ,EAAJ+C,IAI7B4jD,EAAG3mD,EAAI,EACP2mD,EAAGG,GAAKF,EAAK,KACbD,EAAGI,GAAKH,EAAK,KACbD,EAAGK,GAAKJ,EAAK,KACbD,EAAGG,IAAMF,EAAKjE,GACVgE,EAAGG,GAAK,IAAKH,EAAGG,IAAM,GAC1BH,EAAGI,IAAMH,EAAKjE,GACVgE,EAAGI,GAAK,IAAKJ,EAAGI,IAAM,GAC1BJ,EAAGK,IAAMJ,EAAKjE,GACVgE,EAAGK,GAAK,IAAKL,EAAGK,IAAM,GAC1BJ,EAAO,IACT,CAEA,SAASK,EAAK7uD,EAAG2K,GAKf,OAJAA,EAAE/C,EAAI5H,EAAE4H,EACR+C,EAAE+jD,GAAK1uD,EAAE0uD,GACT/jD,EAAEgkD,GAAK3uD,EAAE2uD,GACThkD,EAAEikD,GAAK5uD,EAAE4uD,GACFjkD,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GAClB,IAAIC,EAAK,IAAIV,EAAK/D,GACd3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAOD,EAAGzwD,KAUd,OATA0wD,EAAKxvC,MAAQ,WAAa,OAAoB,WAAZuvC,EAAGzwD,OAAwB,GAC7D0wD,EAAKC,OAAS,WACZ,OAAOD,IAAmC,uBAAhB,QAATA,IAAoB,IAEvCA,EAAKE,MAAQF,EACTrsC,IACmB,iBAAVA,GAAoBisC,EAAKjsC,EAAOosC,GAC3CC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAwBIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAKiwD,KAAON,CAGb,EAhFD,CAiFE3vD,sDCzGF,SAAUyJ,EAAQwlD,EAAQC,GAE1B,SAASgB,EAAO9E,GACd,IAAIgE,EAAKpvD,KAAMmwD,EAAU,GAEzBf,EAAG7sD,EAAI,EACP6sD,EAAG9oC,EAAI,EACP8oC,EAAGgB,EAAI,EACPhB,EAAGiB,EAAI,EAGPjB,EAAGhwD,KAAO,WACR,IAAIoM,EAAI4jD,EAAG7sD,EAAK6sD,EAAG7sD,GAAK,GAIxB,OAHA6sD,EAAG7sD,EAAI6sD,EAAG9oC,EACV8oC,EAAG9oC,EAAI8oC,EAAGgB,EACVhB,EAAGgB,EAAIhB,EAAGiB,EACHjB,EAAGiB,GAAMjB,EAAGiB,IAAM,GAAM7kD,EAAKA,IAAM,GAGxC4/C,KAAiB,EAAPA,GAEZgE,EAAG7sD,EAAI6oD,EAGP+E,GAAW/E,EAIb,IAAK,IAAI7pC,EAAI,EAAGA,EAAI4uC,EAAQnuD,OAAS,GAAIuf,IACvC6tC,EAAG7sD,GAA6B,EAAxB4tD,EAAQ51B,WAAWhZ,GAC3B6tC,EAAGhwD,MAEP,CAEA,SAASswD,EAAK7uD,EAAG2K,GAKf,OAJAA,EAAEjJ,EAAI1B,EAAE0B,EACRiJ,EAAE8a,EAAIzlB,EAAEylB,EACR9a,EAAE4kD,EAAIvvD,EAAEuvD,EACR5kD,EAAE6kD,EAAIxvD,EAAEwvD,EACD7kD,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GAClB,IAAIC,EAAK,IAAIK,EAAO9E,GAChB3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAO,WAAa,OAAQD,EAAGzwD,SAAW,GAAK,YAenD,OAdA0wD,EAAKC,OAAS,WACZ,GACE,IAEIxwD,IAFMswD,EAAGzwD,SAAW,KACbywD,EAAGzwD,SAAW,GAAK,aACF,GAAK,UACf,IAAXG,GACT,OAAOA,GAETuwD,EAAKxvC,MAAQuvC,EAAGzwD,KAChB0wD,EAAKE,MAAQF,EACTrsC,IACmB,iBAAVA,GAAoBisC,EAAKjsC,EAAOosC,GAC3CC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAEIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAKswD,OAASX,CAGf,CAvED,CAwEE3vD,EAC+BivD,wDCzEjC,SAAUxlD,EAAQwlD,EAAQC,GAE1B,SAASgB,EAAO9E,GACd,IAAIgE,EAAKpvD,KAAMmwD,EAAU,GAGzBf,EAAGhwD,KAAO,WACR,IAAIoM,EAAK4jD,EAAG7sD,EAAK6sD,EAAG7sD,IAAM,EAE1B,OADA6sD,EAAG7sD,EAAI6sD,EAAG9oC,EAAG8oC,EAAG9oC,EAAI8oC,EAAGgB,EAAGhB,EAAGgB,EAAIhB,EAAGiB,EAAGjB,EAAGiB,EAAIjB,EAAGxyC,GACzCwyC,EAAGhnD,EAAKgnD,EAAGhnD,EAAI,OAAS,IAC5BgnD,EAAGxyC,EAAKwyC,EAAGxyC,EAAKwyC,EAAGxyC,GAAK,EAAOpR,EAAKA,GAAK,GAAO,GAGtD4jD,EAAG7sD,EAAI,EACP6sD,EAAG9oC,EAAI,EACP8oC,EAAGgB,EAAI,EACPhB,EAAGiB,EAAI,EACPjB,EAAGxyC,EAAI,EAEHwuC,KAAiB,EAAPA,GAEZgE,EAAG7sD,EAAI6oD,EAGP+E,GAAW/E,EAIb,IAAK,IAAI7pC,EAAI,EAAGA,EAAI4uC,EAAQnuD,OAAS,GAAIuf,IACvC6tC,EAAG7sD,GAA6B,EAAxB4tD,EAAQ51B,WAAWhZ,GACvBA,GAAK4uC,EAAQnuD,SACfotD,EAAGhnD,EAAIgnD,EAAG7sD,GAAK,GAAK6sD,EAAG7sD,IAAM,GAE/B6sD,EAAGhwD,MAEP,CAEA,SAASswD,EAAK7uD,EAAG2K,GAOf,OANAA,EAAEjJ,EAAI1B,EAAE0B,EACRiJ,EAAE8a,EAAIzlB,EAAEylB,EACR9a,EAAE4kD,EAAIvvD,EAAEuvD,EACR5kD,EAAE6kD,EAAIxvD,EAAEwvD,EACR7kD,EAAEoR,EAAI/b,EAAE+b,EACRpR,EAAEpD,EAAIvH,EAAEuH,EACDoD,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GAClB,IAAIC,EAAK,IAAIK,EAAO9E,GAChB3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAO,WAAa,OAAQD,EAAGzwD,SAAW,GAAK,YAenD,OAdA0wD,EAAKC,OAAS,WACZ,GACE,IAEIxwD,IAFMswD,EAAGzwD,SAAW,KACbywD,EAAGzwD,SAAW,GAAK,aACF,GAAK,UACf,IAAXG,GACT,OAAOA,GAETuwD,EAAKxvC,MAAQuvC,EAAGzwD,KAChB0wD,EAAKE,MAAQF,EACTrsC,IACmB,iBAAVA,GAAoBisC,EAAKjsC,EAAOosC,GAC3CC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAEIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAKuwD,OAASZ,CAGf,CA5ED,CA6EE3vD,EAC+BivD,wDC5EjC,SAAUxlD,EAAQwlD,EAAQC,GAE1B,SAASgB,EAAO9E,GACd,IAAIgE,EAAKpvD,KAGTovD,EAAGhwD,KAAO,WAER,IAAwBoM,EAAGoR,EAAvB4zC,EAAIpB,EAAG7sD,EAAGM,EAAIusD,EAAGvsD,EAQrB,OAPA2I,EAAIglD,EAAE3tD,GAAoB+Z,GAAhBpR,GAAMA,IAAM,GAAaA,GAAK,GACpBoR,IAApBpR,EAAIglD,EAAG3tD,EAAI,EAAK,IAAc2I,IAAM,GAChBoR,IAApBpR,EAAIglD,EAAG3tD,EAAI,EAAK,IAAc2I,IAAM,EAChBoR,IAApBpR,EAAIglD,EAAG3tD,EAAI,EAAK,IAAc2I,GAAK,EACnCA,EAAIglD,EAAG3tD,EAAI,EAAK,GAAuB+Z,IAAnBpR,GAASA,GAAK,IAAeA,GAAK,EACtDglD,EAAE3tD,GAAK+Z,EACPwyC,EAAGvsD,EAAKA,EAAI,EAAK,EACV+Z,GAGT,SAAcwyC,EAAIhE,GAChB,IAAIjlD,EAAMqqD,EAAI,GAEd,GAAIpF,KAAiB,EAAPA,GAERoF,EAAE,GAAKpF,OAIX,IADAA,EAAO,GAAKA,EACPjlD,EAAI,EAAGA,EAAIilD,EAAKppD,SAAUmE,EAC7BqqD,EAAM,EAAJrqD,GAAUqqD,EAAM,EAAJrqD,IAAU,GACnBilD,EAAK7wB,WAAWp0B,GAAKqqD,EAAGrqD,EAAI,EAAK,IAAM,GAIhD,KAAOqqD,EAAExuD,OAAS,GAAGwuD,EAAE3sD,KAAK,GAC5B,IAAKsC,EAAI,EAAGA,EAAI,GAAc,IAATqqD,EAAErqD,KAAYA,GAOnC,IANS,GAALA,EAAYqqD,EAAE,IAAM,EAAYA,EAAErqD,GAEtCipD,EAAG7sD,EAAIiuD,EACPpB,EAAGvsD,EAAI,EAGFsD,EAAI,IAAKA,EAAI,IAAKA,EACrBipD,EAAGhwD,MAEN,CAEDwN,CAAKwiD,EAAIhE,EACX,CAEA,SAASsE,EAAK7uD,EAAG2K,GAGf,OAFAA,EAAEjJ,EAAI1B,EAAE0B,EAAE8C,QACVmG,EAAE3I,EAAIhC,EAAEgC,EACD2I,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GACN,MAARxE,IAAcA,GAAS,IAAI/3B,MAC/B,IAAIw8B,EAAK,IAAIK,EAAO9E,GAChB3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAO,WAAa,OAAQD,EAAGzwD,SAAW,GAAK,YAenD,OAdA0wD,EAAKC,OAAS,WACZ,GACE,IAEIxwD,IAFMswD,EAAGzwD,SAAW,KACbywD,EAAGzwD,SAAW,GAAK,aACF,GAAK,UACf,IAAXG,GACT,OAAOA,GAETuwD,EAAKxvC,MAAQuvC,EAAGzwD,KAChB0wD,EAAKE,MAAQF,EACTrsC,IACEA,EAAMlhB,GAAGmtD,EAAKjsC,EAAOosC,GACzBC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAEIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAKywD,UAAYd,CAGlB,CAtFD,CAuFE3vD,EAC+BivD,wDCpEjC,SAAUxlD,EAAQwlD,EAAQC,GAE1B,SAASgB,EAAO9E,GACd,IAAIgE,EAAKpvD,KAGTovD,EAAGhwD,KAAO,WACR,IACwBoM,EAAGoR,EADvByzC,EAAIjB,EAAGiB,EACPG,EAAIpB,EAAGoB,EAAG3tD,EAAIusD,EAAGvsD,EAcrB,OAZAusD,EAAGiB,EAAIA,EAAKA,EAAI,WAAc,EAE9BzzC,EAAI4zC,EAAG3tD,EAAI,GAAM,KACjB2I,EAAIglD,EAAE3tD,EAAMA,EAAI,EAAK,KACrB+Z,GAAKA,GAAK,GACVpR,GAAKA,GAAK,GACVoR,GAAKA,IAAM,GACXpR,GAAKA,IAAM,GAEXoR,EAAI4zC,EAAE3tD,GAAK+Z,EAAIpR,EACf4jD,EAAGvsD,EAAIA,EAEC+Z,GAAKyzC,EAAKA,IAAM,IAAQ,GAGlC,SAAcjB,EAAIhE,GAChB,IAAI5/C,EAAGoR,EAAG/Z,EAAGsD,EAAGkqD,EAAGG,EAAI,GAAIE,EAAQ,IAYnC,IAXItF,KAAiB,EAAPA,IAEZxuC,EAAIwuC,EACJA,EAAO,OAGPA,GAAc,KACdxuC,EAAI,EACJ8zC,EAAQvuD,KAAKK,IAAIkuD,EAAOtF,EAAKppD,SAG1Ba,EAAI,EAAGsD,GAAK,GAAIA,EAAIuqD,IAASvqD,EAE5BilD,IAAMxuC,GAAKwuC,EAAK7wB,YAAYp0B,EAAI,IAAMilD,EAAKppD,SAErC,IAANmE,IAASkqD,EAAIzzC,GACjBA,GAAKA,GAAK,GACVA,GAAKA,IAAM,GACXA,GAAKA,GAAK,EACVA,GAAKA,IAAM,GACPzW,GAAK,IACPkqD,EAAKA,EAAI,WAAc,EAEvBxtD,EAAK,IADL2I,EAAKglD,EAAM,IAAJrqD,IAAayW,EAAIyzC,GACTxtD,EAAI,EAAI,GAW3B,IAPIA,GAAK,MACP2tD,EAA+B,KAA5BpF,GAAQA,EAAKppD,QAAU,KAAa,GAKzCa,EAAI,IACCsD,EAAI,IAASA,EAAI,IAAKA,EACzByW,EAAI4zC,EAAG3tD,EAAI,GAAM,KACjB2I,EAAIglD,EAAE3tD,EAAMA,EAAI,EAAK,KACrB+Z,GAAKA,GAAK,GACVpR,GAAKA,GAAK,GACVoR,GAAKA,IAAM,GACXpR,GAAKA,IAAM,GACXglD,EAAE3tD,GAAK+Z,EAAIpR,EAGb4jD,EAAGiB,EAAIA,EACPjB,EAAGoB,EAAIA,EACPpB,EAAGvsD,EAAIA,CACR,CAED+J,CAAKwiD,EAAIhE,EACX,CAEA,SAASsE,EAAK7uD,EAAG2K,GAIf,OAHAA,EAAE3I,EAAIhC,EAAEgC,EACR2I,EAAE6kD,EAAIxvD,EAAEwvD,EACR7kD,EAAEglD,EAAI3vD,EAAE2vD,EAAEnrD,QACHmG,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GACN,MAARxE,IAAcA,GAAS,IAAI/3B,MAC/B,IAAIw8B,EAAK,IAAIK,EAAO9E,GAChB3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAO,WAAa,OAAQD,EAAGzwD,SAAW,GAAK,YAenD,OAdA0wD,EAAKC,OAAS,WACZ,GACE,IAEIxwD,IAFMswD,EAAGzwD,SAAW,KACbywD,EAAGzwD,SAAW,GAAK,aACF,GAAK,UACf,IAAXG,GACT,OAAOA,GAETuwD,EAAKxvC,MAAQuvC,EAAGzwD,KAChB0wD,EAAKE,MAAQF,EACTrsC,IACEA,EAAM+sC,GAAGd,EAAKjsC,EAAOosC,GACzBC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAEIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAK2wD,QAAUhB,CAGhB,CApHD,CAqHE3vD,EAC+BivD,wDC3IjC,SAAUxlD,EAAQwlD,EAAQC,GAE1B,SAASgB,EAAO9E,GACd,IAAIgE,EAAKpvD,KAAMmwD,EAAU,GAGzBf,EAAGhwD,KAAO,WACR,IAAIsZ,EAAI02C,EAAG12C,EAAGjQ,EAAI2mD,EAAG3mD,EAAGL,EAAIgnD,EAAGhnD,EAAG7E,EAAI6rD,EAAG7rD,EAQzC,OAPAmV,EAAKA,GAAK,GAAOA,IAAM,EAAKjQ,EAC5BA,EAAKA,EAAIL,EAAK,EACdA,EAAKA,GAAK,GAAOA,IAAM,EAAK7E,EAC5BA,EAAKA,EAAImV,EAAK,EACd02C,EAAG12C,EAAIA,EAAKA,GAAK,GAAOA,IAAM,GAAMjQ,EACpC2mD,EAAG3mD,EAAIA,EAAKA,EAAIL,EAAK,EACrBgnD,EAAGhnD,EAAKA,GAAK,GAAOK,IAAM,GAAMlF,EACzB6rD,EAAG7rD,EAAKA,EAAImV,EAAK,GAmB1B02C,EAAG7rD,EAAI,EACP6rD,EAAG12C,EAAI,EACP02C,EAAG3mD,GAAI,WACP2mD,EAAGhnD,EAAI,WAEHgjD,IAASjpD,KAAKiH,MAAMgiD,IAEtBgE,EAAG7rD,EAAK6nD,EAAO,WAAe,EAC9BgE,EAAG12C,EAAW,EAAP0yC,GAGP+E,GAAW/E,EAIb,IAAK,IAAI7pC,EAAI,EAAGA,EAAI4uC,EAAQnuD,OAAS,GAAIuf,IACvC6tC,EAAG12C,GAA6B,EAAxBy3C,EAAQ51B,WAAWhZ,GAC3B6tC,EAAGhwD,MAEP,CAEA,SAASswD,EAAK7uD,EAAG2K,GAKf,OAJAA,EAAEjI,EAAI1C,EAAE0C,EACRiI,EAAEkN,EAAI7X,EAAE6X,EACRlN,EAAE/C,EAAI5H,EAAE4H,EACR+C,EAAEpD,EAAIvH,EAAEuH,EACDoD,CACT,CAEA,SAASmkD,EAAKvE,EAAMwE,GAClB,IAAIC,EAAK,IAAIK,EAAO9E,GAChB3nC,EAAQmsC,GAAQA,EAAKnsC,MACrBqsC,EAAO,WAAa,OAAQD,EAAGzwD,SAAW,GAAK,YAenD,OAdA0wD,EAAKC,OAAS,WACZ,GACE,IAEIxwD,IAFMswD,EAAGzwD,SAAW,KACbywD,EAAGzwD,SAAW,GAAK,aACF,GAAK,UACf,IAAXG,GACT,OAAOA,GAETuwD,EAAKxvC,MAAQuvC,EAAGzwD,KAChB0wD,EAAKE,MAAQF,EACTrsC,IACmB,iBAAVA,GAAoBisC,EAAKjsC,EAAOosC,GAC3CC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKG,EAAI,CAAA,KAErCC,CACT,CAEIb,GAAUA,EAAO1wD,QACnB0wD,EAAO1wD,QAAUoxD,EAIjB3vD,KAAK4wD,OAASjB,CAGf,CA5FD,CA6FE3vD,EAC+BivD,0GC1EjC,SAAWjC,EAAM1kB,GAIjB,IASIuoB,EATApnD,EAASzJ,KACToE,EAAQ,IAGR0sD,EAAU,SACVC,EAAazoB,EAAKgmB,IAAIlqD,EAHb,GAIT4sD,EAAe1oB,EAAKgmB,IAAI,EAHf,IAIT2C,EAA0B,EAAfD,EACXzkB,EAAOnoC,EAAQ,EAOnB,SAAS8sD,EAAW9F,EAAM+F,EAASC,GACjC,IAAIplD,EAAM,GAINqlD,EAAYC,EAAO9tD,GAHvB2tD,EAAsB,GAAXA,EAAmB,CAAEI,SAAS,GAAUJ,GAAW,CAAA,GAIpDI,QAAU,CAACnG,EAAMoG,EAASxE,IACzB,MAAR5B,EA+IL,WACE,IACE,IAAIvjC,EAQJ,OAPIgpC,IAAehpC,EAAMgpC,EAAWY,aAElC5pC,EAAMA,EAAIzjB,IAEVyjB,EAAM,IAAIthB,WAAWnC,IACpBqF,EAAOioD,QAAUjoD,EAAOkoD,UAAUC,gBAAgB/pC,IAE9C2pC,EAAS3pC,EACjB,CAAC,MAAOxoB,GACP,IAAI6qC,EAAUzgC,EAAOikB,UACjBmkC,EAAU3nB,GAAWA,EAAQ2nB,QACjC,MAAO,EAAE,IAAIx+B,KAAM5pB,EAAQooD,EAASpoD,EAAOqoD,OAAQN,EAASxE,GAC7D,CACH,CA/JqB+E,GAAa3G,EAAM,GAAIp/C,GAGtCgmD,EAAO,IAAIC,EAAKjmD,GAIhB8jD,EAAO,WAIT,IAHA,IAAIx3C,EAAI05C,EAAK9L,EA5BJ,GA6BL99C,EAAI2oD,EACJxuD,EAAI,EACD+V,EAAI04C,GACT14C,GAAKA,EAAI/V,GAAK6B,EACdgE,GAAKhE,EACL7B,EAAIyvD,EAAK9L,EAAE,GAEb,KAAO5tC,GAAK24C,GACV34C,GAAK,EACLlQ,GAAK,EACL7F,KAAO,EAET,OAAQ+V,EAAI/V,GAAK6F,GAWnB,OARA0nD,EAAKxvC,MAAQ,WAAa,OAAmB,EAAZ0xC,EAAK9L,EAAE,IACxC4J,EAAKE,MAAQ,WAAa,OAAOgC,EAAK9L,EAAE,GAAK,YAC7C4J,EAAKC,OAASD,EAGdwB,EAAOE,EAASQ,EAAKE,GAAIlF,IAGjBmE,EAAQgB,MAAQf,GACpB,SAAStB,EAAM1E,EAAMgH,EAAc3uC,GAUjC,OATIA,IAEEA,EAAMyuC,GAAKxC,EAAKjsC,EAAOuuC,GAE3BlC,EAAKrsC,MAAQ,WAAa,OAAOisC,EAAKsC,EAAM,CAAA,KAK1CI,GAAgB9pB,EAAKwoB,GAAWhB,EAAa1E,GAIrC0E,CACb,GACLA,EACAuB,EACA,WAAYF,EAAUA,EAAQ1nD,OAAUzJ,MAAQsoC,EAChD6oB,EAAQ1tC,MACV,CAaA,SAASwuC,EAAKjmD,GACZ,IAAIR,EAAG6mD,EAASrmD,EAAIhK,OAChBotD,EAAKpvD,KAAM6C,EAAI,EAAGsD,EAAIipD,EAAGvsD,EAAIusD,EAAGjpD,EAAI,EAAGT,EAAI0pD,EAAG8C,EAAI,GAMtD,IAHKG,IAAUrmD,EAAM,CAACqmD,MAGfxvD,EAAIuB,GACTsB,EAAE7C,GAAKA,IAET,IAAKA,EAAI,EAAGA,EAAIuB,EAAOvB,IACrB6C,EAAE7C,GAAK6C,EAAES,EAAIomC,EAAQpmC,EAAI6F,EAAInJ,EAAIwvD,IAAW7mD,EAAI9F,EAAE7C,KAClD6C,EAAES,GAAKqF,GAIR4jD,EAAGlJ,EAAI,SAASoM,GAIf,IAFA,IAAI9mD,EAAG4N,EAAI,EACPvW,EAAIusD,EAAGvsD,EAAGsD,EAAIipD,EAAGjpD,EAAGT,EAAI0pD,EAAG8C,EACxBI,KACL9mD,EAAI9F,EAAE7C,EAAI0pC,EAAQ1pC,EAAI,GACtBuW,EAAIA,EAAIhV,EAAQsB,EAAE6mC,GAAS7mC,EAAE7C,GAAK6C,EAAES,EAAIomC,EAAQpmC,EAAIqF,KAAQ9F,EAAES,GAAKqF,IAGrE,OADA4jD,EAAGvsD,EAAIA,EAAGusD,EAAGjpD,EAAIA,EACViT,CAIR,GAAEhV,EACL,CAMA,SAASsrD,EAAK7uD,EAAG2K,GAIf,OAHAA,EAAE3I,EAAIhC,EAAEgC,EACR2I,EAAErF,EAAItF,EAAEsF,EACRqF,EAAE0mD,EAAIrxD,EAAEqxD,EAAE7sD,QACHmG,CACT,CAMA,SAAShI,EAAQ6d,EAAK+lB,GACpB,IAAqCmrB,EAAjChzD,EAAS,GAAIizD,SAAcnxC,EAC/B,GAAI+lB,GAAgB,UAAPorB,EACX,IAAKD,KAAQlxC,EACX,IAAM9hB,EAAOsE,KAAKL,EAAQ6d,EAAIkxC,GAAOnrB,EAAQ,IAAO,MAAO/nC,GAAK,CAGpE,OAAQE,EAAOyC,OAASzC,EAAgB,UAAPizD,EAAkBnxC,EAAMA,EAAM,IACjE,CAOA,SAASiwC,EAAOlG,EAAMp/C,GAEpB,IADA,IAA4BymD,EAAxBC,EAAatH,EAAO,GAAWjlD,EAAI,EAChCA,EAAIusD,EAAW1wD,QACpBgK,EAAIugC,EAAOpmC,GACTomC,GAASkmB,GAAyB,GAAhBzmD,EAAIugC,EAAOpmC,IAAWusD,EAAWn4B,WAAWp0B,KAElE,OAAOqrD,EAASxlD,EAClB,CA6BA,SAASwlD,EAASjuD,GAChB,OAAOgE,OAAOiyB,aAAa95B,MAAM,EAAG6D,EACtC,CAeA,GAhIA+kC,EAAK,OAASwoB,GAAWI,EA0HzBI,EAAOhpB,EAAKlmC,SAAU4qD,GAMaiC,EAAO1wD,QAAS,CACjD0wD,EAAA1wD,QAAiB2yD,EAEjB,IACEL,EAAa8B,EACjB,CAAI,MAAOxsC,GAAM,CAGjB,CAGC,CA3ND,CA4NE,GACAhkB,eCzOE8tD,GAAO0C,GAKPrC,GAASsC,GAKTrC,GAASsC,GAQTpC,GAAYqC,GASZnC,GAAUoC,GAOVnC,GAASoC,GAITC,cAEJA,GAAGhD,KAAOA,GACVgD,GAAG3C,OAASA,GACZ2C,GAAG1C,OAASA,GACZ0C,GAAGxC,UAAYA,GACfwC,GAAGtC,QAAUA,GACbsC,GAAGrC,OAASA,GAEZ,IAAAM,GAAiB+B;;;;;;;;;;;;;;;;GClBX,MAAOC,GAUXrzD,WAAAA,CACI+7C,EAAcuX,EAAsB9xD,EACpC+xD,EAAqBhI,GACvBprD,KAAK47C,KAAOA,EACZ57C,KAAKqzD,OAASF,EACdnzD,KAAKqB,MAAQA,EACbrB,KAAKszD,QAAUC,IACfvzD,KAAKozD,UAAYA,EACbpzD,KAAKozD,YACPpzD,KAAKwzD,MAAQxzD,KAAK47C,KAAqB,EAAd57C,KAAKqzD,OAC9BrzD,KAAKyzD,MAAQzzD,KAAK47C,KAAqB,EAAd57C,KAAKqzD,QAEhC,MAAMK,EAAYtI,GAAcjpD,KAAKC,SACrCpC,KAAKoC,OAAS8uD,GAAAA,KAAgBwC,EAAU14C,WAC1C,CAGO24C,SAAAA,GACL,IAAK/sD,MAAM5G,KAAKszD,SAAU,CACxB,MAAMp0D,EAAQc,KAAKszD,QAEnB,OADAtzD,KAAKszD,QAAUC,IACRr0D,EAGT,IAAI00D,EAAiBC,EACjBC,GAAU,EACd,MAAQA,GAAS,CACf,IAAIhI,EAAYC,EAAYrmD,EAC5B,GACEomD,EAAK,EAAI9rD,KAAKoC,SAAW,EACzB2pD,EAAK,EAAI/rD,KAAKoC,SAAW,EACzBsD,EAAIomD,EAAKA,EAAKC,EAAKA,QACZrmD,GAAK,GAAW,IAANA,GAEnB,MAAMqtC,EAAM5wC,KAAKmC,MAAM,EAAMnC,KAAKkZ,IAAI3V,GAAKA,GAC3CkuD,EAAU5zD,KAAK47C,KAAO57C,KAAKqzD,OAASvH,EAAK/Y,EACzC8gB,EAAU7zD,KAAK47C,KAAO57C,KAAKqzD,OAAStH,EAAKhZ,EAEpC/yC,KAAKozD,YAAapzD,KAAK+zD,iBAAiBH,KAC3CE,GAAU,GAOd,OAHK9zD,KAAKozD,YAAapzD,KAAK+zD,iBAAiBF,KAC3C7zD,KAAKszD,QAAUtzD,KAAKg0D,aAAaH,IAE5B7zD,KAAKg0D,aAAaJ,EAC3B,CAGQI,YAAAA,CAAa90D,GACnB,OAAkB,MAAdc,KAAKqB,OAAgC,YAAfrB,KAAKqB,MACtBnC,EAEFiD,KAAKwV,MAAMzY,EACpB,CAGQ60D,gBAAAA,CAAiB70D,GACvB,OAAOA,GAASc,KAAKwzD,OAASt0D,GAASc,KAAKyzD,KAC9C,EAKI,MAAOQ,GASXp0D,WAAAA,CACIklD,EAAeU,EAAcpkD,EAC7B+pD,GACFprD,KAAK+kD,MAAQA,EACb/kD,KAAKylD,KAAO,EAAIA,EAChBzlD,KAAKqB,MAAQA,EAEb,MAAMqyD,EAAYtI,GAAcjpD,KAAKC,SACrCpC,KAAKk0D,MAAQhD,GAAAA,KAAgBwC,EAAU14C,YACvChb,KAAKm0D,MAAQ,IAAIjB,GAAY,EAAG,EAAG7xD,GAAO,EAAOrB,KAAKk0D,SAGpDl0D,KAAKoI,EADH28C,EAAQ,EACDA,EAAS,EAAI,EAEbA,EAAS,EAAI,EAExB/kD,KAAKyI,EAAI,EAAItG,KAAKmC,KAAK,EAAItE,KAAKoI,EAClC,CAGOurD,SAAAA,GACL,IAAIS,EAAYC,EAAYvI,EAAYvpD,EAAW+xD,EAAW13C,EAC9D,OAAa,CACX,GACEra,EAAIvC,KAAKm0D,MAAMR,YACf/2C,EAAI,EAAK5c,KAAKyI,EAAIlG,QACXqa,GAAK,GAMd,GALAA,GAAKA,EAAIA,EACTw3C,EAAK7xD,EAAIA,EACT8xD,EAAK,EAAK,KAAQD,EAAKA,EACvBtI,EAAM,GAAMsI,EAAOp0D,KAAKoI,GAAK,EAAIwU,EAAIza,KAAKkZ,IAAIuB,IAC9C03C,EAAIt0D,KAAKk0D,QACLI,EAAID,GAAMlyD,KAAKkZ,IAAIi5C,GAAKxI,EAC1B,MAOJ,OAJAlvC,EAAK,EAAI5c,KAAKylD,KAAQzlD,KAAKoI,EAAIwU,EAC3B5c,KAAK+kD,MAAQ,IACfnoC,GAAKza,KAAKmsD,IAAItuD,KAAKk0D,QAAS,EAAIl0D,KAAK+kD,QAEhC/kD,KAAKg0D,aAAap3C,EAC3B,CAEQo3C,YAAAA,CAAa90D,GACnB,MAAmB,YAAfc,KAAKqB,MACAnC,EAEFiD,KAAKwV,MAAMzY,EACpB,EAGI,MAAOq1D,GAMX10D,WAAAA,CACIyC,EAAM,EAAGE,EAAM,EAAGnB,EAClB+pD,GAWF,GAQMprD,KAAAw0D,eAAiB,IACN,MAAdx0D,KAAKqB,OAAgC,YAAfrB,KAAKqB,MAnB9BrB,KAAKsC,IAAMA,EACXtC,KAAKy0D,MAAQjyD,EAAMF,EACnBtC,KAAKqB,MAAQA,EACD,MAAR+pD,IACFA,EAAOjpD,KAAKC,UAEM,iBAATgpD,IACTA,EAAOA,EAAKpwC,aAGThb,KAAKw0D,kBAAoBx0D,KAAKy0D,OAAS,EAC1C,MAAM,IAAI7yD,MACN,0BAA0BU,OAASE,iCAEzCxC,KAAKoC,OAAS8uD,QAAgB9F,EAChC,CAMQ4I,YAAAA,CAAa90D,GACnB,OAAIc,KAAKw0D,iBACAt1D,EAEFiD,KAAKwV,MAAMzY,EACpB,CAEAy0D,SAAAA,GACE,OAAO3zD,KAAKg0D,aAAah0D,KAAKsC,IAAMtC,KAAKy0D,MAAQz0D,KAAKoC,SACxD;;;;;;;;;;;;;;;;GC3JK,MAAMsyD,GAAcllC,GAAG,CAACmlC,aApB/B,SACIvzD,EAAoB2jD,EAAeU,EAAO,EAC1CpkD,EAA2B,UAAW+pD,GAOxC,GANY,MAAR3F,IACFA,EAAO,GAEI,MAATpkD,IACFA,EAAQ,WAEI,YAAVA,GAAiC,UAAVA,EACzB,MAAM,IAAIO,MAAM,yBAAyBP,KAE3C,MAAMuzD,EAAS,IAAIX,GAAUlP,EAAOU,EAAMpkD,EAAO+pD,GAC3CllC,EAAM7H,GAAOjd,EAAOC,GAC1B,IAAK,IAAIwB,EAAI,EAAGA,EAAIqjB,EAAI/kB,OAAOa,OAAQa,IACrCqjB,EAAI/kB,OAAO0B,GAAK+xD,EAAOjB,YAEzB,OAAOztC,EAAItI,UACb;;;;;;;;;;;;;;;;GCJO,MAAMi3C,GAAerlC,GAAG,CAACslC,cAfhC,SACI1zD,EAAoBw6C,EAAO,EAAGyX,EAAS,EAAGhyD,EAC1C+pD,GACF,GAAa,MAAT/pD,GAAyC,SAAvBA,EACpB,MAAM,IAAIO,MAAM,yBAAyBP,KAE3C,MAAM0zD,EACF,IAAI7B,GAAYtX,EAAMyX,EAAQhyD,GAAO,EAAuB+pD,GAC1DllC,EAAM7H,GAAOjd,EAAOC,GAC1B,IAAK,IAAIwB,EAAI,EAAGA,EAAIqjB,EAAI/kB,OAAOa,OAAQa,IACrCqjB,EAAI/kB,OAAO0B,GAAKkyD,EAAUpB,YAE5B,OAAOztC,EAAItI,UACb;;;;;;;;;;;;;;;;GCGO,MAAMo3C,GAAgBxlC,GAAG,CAACylC,eAXjC,SACI7zD,EAAoB8zD,EAAS,EAAGC,EAAS,EAAG9zD,EAAkB,UAC9D+pD,GACF,MAAMllC,EAAM7H,GAAOjd,EAAOC,GACpBe,EAAS,IAAImyD,GAAcW,EAAQC,EAAQ,KAAM/J,GACvD,IAAK,IAAIvoD,EAAI,EAAGA,EAAIqjB,EAAI/kB,OAAOa,OAAQa,IACrCqjB,EAAI/kB,OAAO0B,GAAKT,EAAOuxD,YAEzB,OAAOztC,EAAItI,UACb;;;;;;;;;;;;;;;;GCZM,SAAU62C,GACZ3sD,EAAe6mC,EAAcxvC,EAAO,EACpCkC,EAA2B,WAC7B,GAAa,IAATlC,EACF,MAAM,IAAIyC,MAAM,8BAGlB,MAAMglB,EAAoB,CAAC9e,QAAO6mC,OAAMxvC,OAAMkC,SAE9C,OAAOwlB,GAAOC,UAAUnT,GAAO,CAAE,EAAeiT,EAClD;;;;;;;;;;;;;;;;GCJO,MAAMqJ,GAAOT,GAAG,CAAC4lC,MAPxB,SAAiCl6C,GAC/B,MAEMnB,EAAqB,CAACmB,MAFb4T,GAAgB5T,EAAO,QAAS,SAG/C,OAAO2L,GAAOC,UAAUlT,GAAMmG,EAChC;;;;;;;;;;;;;;;;GCDO,MAAMs7C,GAAa7lC,GAAG,CAAC8lC,YAN9B,SAAuC/yD,GACrC,MAEMwX,EAA2B,CAACxX,EAFvBusB,GAAgBvsB,EAAG,IAAK,eAGnC,OAAOskB,GAAOC,UAAUjT,GAAYkG,EACtC;;;;;;;;;;;;;;;;GCIO,MAAMw7C,GAAO/lC,GAAG,CAACgmC,MARxB,SAAiCjzD,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAUhT,GAAMiG,EAChC;;;;;;;;;;;;;;;;GCEO,MAAM07C,GAAQjmC,GAAG,CAACkmC,OARzB,SAAkCnzD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAInC,OAAOskB,GAAOC,UAAU1S,GAAO2F,EACjC;;;;;;;;;;;;;;;;GCwBO,MAAM2tB,GAAUlY,GAAG,CAACmmC,SAX3B,SACIpzD,EAAiBgD,GACnB,MAEMwU,EAAwB,CAACxX,EAFpBusB,GAAgBvsB,EAAG,IAAK,YAG7BqkB,EAAsB,CAACi6B,KAAMt7C,GAEnC,OAAOshB,GAAOC,UACVzS,GAAS0F,EAAgC6M,EAC/C;;;;;;;;;;;;;;;;GC9BO,MAAMgvC,GAAYpmC,GAAG,CAACqmC,WAR7B,SAAoBtzD,GAClB,MAAMy6B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAInC,OAHA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IAAM,qDAAqDw3B,EAAGx3B,UAC3DkiC,GAAQ1K,EAAI,EACrB;;;;;;;;;;;;;;;;GCIO,MAAM84B,GAAYtmC,GAAG,CAACumC,WAR7B,SAAoBxzD,EAAwBgD,GAC1C,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAInC,OAHA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IAAM,qDAAqDw3B,EAAGx3B,UAC3DkiC,GAAQ1K,EAAIz3B,EACrB;;;;;;;;;;;;;;;;GCEO,MAAMywD,GAAYxmC,GAAG,CAACymC,WAR7B,SAAoB1zD,EAAwBgD,GAC1C,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAInC,OAHA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IAAM,qDAAqDw3B,EAAGx3B,UAC3DkiC,GAAQ1K,EAAIz3B,EACrB;;;;;;;;;;;;;;;;GCEO,MAAM2wD,GAAY1mC,GAAG,CAAC2mC,WAR7B,SAAoB5zD,EAAwBgD,GAC1C,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAInC,OAHA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IAAM,qDAAqDw3B,EAAGx3B,UAC3DkiC,GAAQ1K,EAAIz3B,EACrB;;;;;;;;;;;;;;;;GCSO,MAAMoS,GAAQ6X,GAAG,CAAC4mC,OAPzB,SAAkC7zD,GAChC,MACMwX,EAAsB,CAACxX,EADlBusB,GAAgBvsB,EAAG,IAAK,UAGnC,OAAOskB,GAAOC,UAAUxS,GAAOyF,EACjC;;;;;;;;;;;;;;;;GCEO,MAAMs8C,GAAQ7mC,GAAG,CAAC8mC,OAPzB,SAAkC/zD,GAChC,MAEMwX,EAAsB,CAACxX,EAFlBusB,GAAgBvsB,EAAG,IAAK,UAInC,OAAOskB,GAAOC,UAAUvS,GAAOwF,EACjC;;;;;;;;;;;;;;;;GCRM,SAAUw8C,GACZr3D,EAAyCmC,GAC3C,IAAMuC,EAAa1E,IAAoB,WAAVmC,GAAuBqC,MAAMC,QAAQzE,KACpD,cAAVmC,EACF,MAAM,IAAIO,MACN,kFAGN,GAAc,WAAVP,GAAsBuC,EAAa1E,MACjCA,aAAiBqH,YACrB,MAAM,IAAI3E,MACN,6EAKN,OAAOkc,GAAW5e,EAFM,GACQ,GACemC,EACjD;;;;;;;;;;;;;;;;GCNO,MAAMm1D,GAAOhnC,GAAG,CAACinC,MARxB,SAAiCl0D,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAUpS,GAAMqF,EAChC,IC4FO,MAAM28C,GAAkBlnC,GAAG,CAACmnC,iBAnEnC,SACIp0D,EAAiBq0D,EACjBC,EAAsC7uD,EACtCuU,EAAqBm8B,EAAoC,CAAC,EAAG,GAC7D5D,EAA4B,QAC9B,MAAM9X,EAAKlO,GAAgBvsB,EAAG,IAAK,mBAC7Bu0D,EACFhoC,GAAgB8nC,EAAiB,kBAAmB,mBAClDG,EACFjoC,GAAgB+nC,EAAiB,kBAAmB,mBAExD,IAAIpd,EAAMzc,EACN0c,GAAe,EAMnB,GALgB,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAGxC,SAAf0zC,EACF,MAAM,IAAIlzC,MACN,sFAINqW,EACiB,IAAbwhC,EAAIj0C,MACJ,IACI,gEAAQi0C,EAAIj0C,UACpByS,EAC8B,IAA1B6+C,EAAiBtxD,MACjB,IACI,2EAAYsxD,EAAiBtxD,UACrCyS,EAC8B,IAA1B8+C,EAAiBvxD,MACjB,IACI,2EAAYsxD,EAAiBtxD,UACrCyS,EACkC,IAA9B8+C,EAAiB31D,MAAM,IACvB,IAEI,yFAAuB21D,EAAiB31D,MAAM,QACtD6W,EACkC,IAA9B8+C,EAAiB31D,MAAM,IACvB,IACI,yFAA6B21D,EAAiB31D,MAAM,QAE5D,MAAM80C,EAAa4gB,EAAiB11D,MAAM,GACpC41D,EAAoBF,EAAiB11D,MAAM,GACjD6W,EACI8+C,EAAiB31D,MAAM,KAAO80C,EAAa8gB,GAC3C,IAEI,6EAAW9gB,EAAa8gB,cACbD,EAAiB31D,MAAM,QAE1C,MAAM00C,EAAYuK,GACd5G,EAAKqd,EAAkB9uD,EAASuU,EAAKu4B,EAAY4D,GAE/CxyB,EACF43B,GAAOhI,EAAWihB,EAFE,EAEiC,QAASjiB,GAElE,OAAI4E,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GChDO,MAAM+wC,GAtCb37B,eACI/4B,EAAsB+jB,GACxB,MAAM0W,EAAKlO,GAAgBvsB,EAAG,IAAK,aAC7B20D,EAAKpoC,GAAgBxI,EAAG,IAAK,aAEnCrO,EACI+kB,EAAG37B,QAAU61D,EAAG71D,OAChB,IAAM,kDACF27B,EAAG37B,iBAAiB61D,EAAG71D,YAE/B4W,EACgB,IAAZ+kB,EAAGx3B,MAAY,IAAM,qCAAqCw3B,EAAG57B,YAEjE6W,EACgB,IAAZi/C,EAAG1xD,MAAY,IAAM,qCAAqC0xD,EAAG91D,YAEjE,MAAM+1D,QAAcn6B,EAAG/8B,OACjBm3D,QAAcF,EAAGj3D,OACjBo3D,EAAO,IAAIn2C,IAAIk2C,GAErB,IAAInrB,EAAa,EACjB,IAAK,IAAIppC,EAAI,EAAGA,EAAIs0D,EAAMn1D,OAAQa,IAC3Bw0D,EAAK/2D,IAAI62D,EAAMt0D,KAClBopC,IAIJ,MAAM5tB,EAAS,IAAIX,GAAa,CAACuuB,GAAajP,EAAG37B,OAC3CktB,EAAU,IAAI7Q,GAAa,CAACuuB,GAAa,SAC/C,IAAK,IAAIppC,EAAI,EAAGojC,EAAI,EAAGpjC,EAAIs0D,EAAMn1D,OAAQa,IAClCw0D,EAAK/2D,IAAI62D,EAAMt0D,MAClBwb,EAAOld,OAAO8kC,GAAKkxB,EAAMt0D,GACzB0rB,EAAQptB,OAAO8kC,GAAKpjC,EACpBojC,KAGJ,MAAO,CAAC5nB,EAAOT,WAAY2Q,EAAQ3Q,WACrC;;;;;;;;;;;;;;;;GC5CO,MAAM05C,GAAO9nC,GAAG,CAAC+nC,MALxB,SAAiCh1D,GAC/B,MACMwX,EAAqB,CAACxX,EADjBusB,GAAgBvsB,EAAG,IAAK,SAEnC,OAAOskB,GAAOC,UAAUhS,GAAMiF,EAChC;;;;;;;;;;;;;;;;GCGO,MAAMy9C,GAAMhoC,GAAG,CAACioC,KAPvB,SAAgCl1D,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAInC,OAAOskB,GAAOC,UAAUlS,GAAKmF,EAC/B;;;;;;;;;;;;;;;;GCAO,MAAM29C,GAAOloC,GAAG,CAACmoC,MANxB,SAAiCp1D,GAC/B,MACMwX,EAAqB,CAACxX,EADjBusB,GAAgBvsB,EAAG,IAAK,SAGnC,OAAOskB,GAAOC,UAAUjS,GAAMkF,EAChC;;;;;;;;;;;;;;;;GCLO,MAAM69C,GAAUpoC,GAAG,CAACqoC,SAT3B,SACIt1D,EAAwB8pC,EAAetoC,GACzC,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAKnC,OAJA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,mDAAmDw3B,EAAGx3B,gBACvDH,GAAM23B,EAAI,CAACqP,GAAQ,CAACtoC,GAC7B;;;;;;;;;;;;;;;;GCEO,MAAM+zD,GAAUtoC,GAAG,CAACuoC,SAV3B,SACIx1D,EAAwB8pC,EACxBtoC,GACF,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAKnC,OAJA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,mDAAmDw3B,EAAGx3B,gBACvDH,GAAM23B,EAAIqP,EAAOtoC,EAC1B;;;;;;;;;;;;;;;;GCCO,MAAMi0D,GAAUxoC,GAAG,CAACyoC,SAV3B,SACI11D,EAAwB8pC,EACxBtoC,GACF,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAKnC,OAJA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,mDAAmDw3B,EAAGx3B,gBACvDH,GAAM23B,EAAIqP,EAAOtoC,EAC1B;;;;;;;;;;;;;;;;GCCO,MAAMm0D,GAAU1oC,GAAG,CAAC2oC,SAV3B,SACI51D,EAAwB8pC,EACxBtoC,GACF,MAAMi5B,EAAKlO,GAAgBvsB,EAAG,IAAK,WAKnC,OAJA0V,EACgB,IAAZ+kB,EAAGx3B,MACH,IACI,mDAAmDw3B,EAAGx3B,gBACvDH,GAAM23B,EAAIqP,EAAOtoC,EAC1B;;;;;;;;;;;;;;;;GC6BO,MAAMwjD,GAAU/3B,GAAG,CAAC4oC,SAnB3B,SAAoCjR,EAAsBrG,GAAM,GAC9D,MAAMsG,EAAUt4B,GAAgBq4B,EAAQ,SAAU,UAAW,WAK7D,IAHa,IAATrG,IACFA,EAAMsG,EAAQ5hD,KAAO,GAEnBs7C,IAAQsG,EAAQ5hD,KAAO,EACzB,MAAM5D,MAEF,4EAAmBwlD,EAAQ5hD,oBAAoBs7C,KAGrD,MAAM/mC,EAAwB,CAACotC,OAAQC,GACjCxgC,EAAsB,CAACk6B,OAE7B,OAAOj6B,GAAOC,UACVzR,GAAS0E,EAAgC6M,EAC/C;;;;;;;;;;;;;;;;GCbO,MAAMyxC,GAAM7oC,GAAG,CAAC8oC,KAXvB,SAAcp9C,GACZpY,EACoB,cAAhBoY,EAAM7Z,OACN,IACI,6DAAW6Z,EAAM7Z,WAEzB,MAAM0Y,EAAoB,CAACmB,SAE3B,OAAO2L,GAAOC,UAAUxW,GAAKyJ,EAC/B;;;;;;;;;;;;;;;;GCEO,MAAMw+C,GAAO/oC,GAAG,CAACgpC,MAXxB,SAAet9C,GACbpY,EACoB,cAAhBoY,EAAM7Z,OACN,IACI,8DAAW6Z,EAAM7Z,WAEzB,MAAM0Y,EAAqB,CAACmB,SAE5B,OAAO2L,GAAOC,UAAU7V,GAAM8I,EAChC;;;;;;;;;;;;;;;;GCmCO,MAAM0+C,GAAQjpC,GAAG,CAACkpC,OArCzB,SAAgBx9C,GACd,MAAMy9C,EAAqBz9C,EAAM9Z,MAAM8Z,EAAM9Z,MAAMY,OAAS,GACtD42D,EAAQ19C,EAAMnX,KAAO40D,EAC3B,IAAIxwD,EACJ,GAAIwwD,GAAsB,EAAG,CAC3B,MAAME,EAAe1f,GAAQj+B,EAAO,CAAC09C,EAAOD,IAC5CxwD,EAAMowD,GAAKM,OACN,CAGL,MAAMha,EAAc,CAAC+Z,EAAO,GAAKD,EAAqB,IAChDG,EAAY3f,GAAQlpB,GAAK/U,GAAQ,CAAC09C,EAAOD,IACzCI,EAAY5f,GAAQjpB,GAAKhV,GAAQ,CAAC09C,EAAOD,IAEzCK,EACFtxB,GAAQriC,GAAMyzD,EAAW,CAAC,EAAG,GAAI,CAACF,EAAOD,EAAqB,IAAK,GACjEM,EAA0BlmB,GAC5BrL,GAAQriC,GAAM0zD,EAAW,CAAC,EAAG,GAAI,CAACH,EAAOD,EAAqB,IAAK,GACnEpC,IAAQ,IAENn9C,EAAIzT,GAAO,CAACmzD,EAAWE,GAAgB,GACvCn2D,EAAI8C,GAAO,CAACozD,EAAWE,GAAgB,GACvCJ,EACF1f,GAAQppB,GAAQ3W,EAAGvW,GAAI,CAACg8C,EAAY,GAAIA,EAAY,KACxD12C,EAAMowD,GAAKM,GAIb,GAFA1wD,EAAM8nB,GAAK9nB,GAEQ,IAAf+S,EAAM1V,MAAiC,IAAnB0V,EAAM9Z,MAAM,GAAU,CAC5C,MAAMa,EAAOkG,EACPywD,EAAQ19C,EAAM9Z,MAAM,GAC1B+G,EAAMgxC,GAAQhxC,EAAK,CAACywD,EAAOzwD,EAAI/G,MAAM,GAAKw3D,EAAOzwD,EAAI/G,MAAM,KAC3Da,EAAKP,UAEP,OAAOyG,CACT;;;;;;;;;;;;;;;;GCVO,MAAM2D,GAAQ0jB,GAAG,CAAC0pC,OAZzB,SACI32D,EAAsB42D,EAAkC5zD,EAAO,GACjE,MAEMwU,EAAuB,CAACxX,EAFnBusB,GAAgBvsB,EAAG,IAAK,UAG7By3C,EAAoB,CAACmf,kBAAiB5zD,QAE5C,OAAOshB,GAAOC,UACH1R,GAAQ2E,EACRigC,EACb;;;;;;;;;;;;;;;;GC2BO,MAAMof,GAAO5pC,GAAG,CAAC6pC,MAnDxB,SAAen+C,EAAeo+C,GAC5Bx2D,EACoB,YAAhBoY,EAAM7Z,OACN,IAAM,mDAAmD6Z,EAAM7Z,UAEnE,IAAIs3D,EAAqBz9C,EAAM9Z,MAAM8Z,EAAM9Z,MAAMY,OAAS,GAC1D,MAAM42D,EAAQ19C,EAAMnX,KAAO40D,EAE3B,IAAIY,EACJ,GAAiB,MAAbD,GAAqBA,EAAYX,EAAoB,CAEvD,MAAMtsB,EAAQnxB,EAAM9Z,MAAMqE,KAAImX,GAAK,IAC7B7Y,EAAOmX,EAAM9Z,MAAMqE,KAAImX,GAAKA,IAClC7Y,EAAKmX,EAAM9Z,MAAMY,OAAS,GAAKs3D,EAC/BC,EAAgBl0D,GAAM6V,EAAOmxB,EAAOtoC,GACpC40D,EAAqBW,CACtB,MAAM,GAAiB,MAAbA,GAAqBA,EAAYX,EAAoB,CAE9D,MAAMa,EAAat+C,EAAM9Z,MAAMqE,KAAImX,GAAKA,IACxC48C,EAAWt+C,EAAM9Z,MAAMY,OAAS,GAAKs3D,EAAYX,EACjDY,EAAgB5zD,GAAO,CAACuV,EAAOgnC,GAAMsX,IAAct+C,EAAM9Z,MAAMY,OAAS,GACxE22D,EAAqBW,OAErBC,EAAgBr+C,EAIlB,MAAMu+C,EAAa5X,GAAU0X,GACvBV,EACF1f,GAAQppB,GAAQwpC,EAAeE,GAAa,CAACb,EAAOD,IAElDxwD,EAAMkwD,GAAIQ,GAGVa,EAAOv3D,KAAKiH,MAAMuvD,EAAqB,GAAK,EAC5CgB,EAAa1pC,GAAK9nB,GAClByxD,EAAa1pC,GAAK/nB,GAClB0xD,EAAuB/tD,GACzB6tD,EAAY,CAACD,EAAMf,EAAqBe,GACxCC,EAAWv4D,MAAMY,OAAS,GACxB83D,EAAuBhuD,GACzB8tD,EAAY,CAACF,EAAMf,EAAqBe,GACxCE,EAAWx4D,MAAMY,OAAS,GAExB68C,EAAc0a,EAAcn4D,MAAMiE,QAGxC,OAFAw5C,EAAY0a,EAAcn4D,MAAMY,OAAS,GAAK03D,EAEvCvgB,GACHppB,GAAQ8pC,EAAqB,GAAIC,EAAqB,IAAKjb,EACjE;;;;;;;;;;;;;;;;GCnDO,MAAMv6C,GAAOkrB,GAAG,CAACuqC,MAPxB,SAAiCx3D,GAC/B,MAEMwX,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAInC,OAAOskB,GAAOC,UAAU7R,GAAM8E,EAChC;;;;;;;;;;;;;;;;GCuBO,MAAMigD,GAAoBxqC,GAAG,CAACyqC,mBAfrC,SACI12D,EAAsBmV,GACxB,IAAIsuB,EAAKlY,GAAgBvrB,EAAG,IAAK,qBAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,sBAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9Bka,GAA2Bna,EAAG5lC,MAAO6lC,EAAG7lC,OAExC,MAAM2Y,EAAkC,CAACxW,EAAGyjC,EAAItuB,EAAGuuB,GAGnD,OAAOpgB,GAAOC,UACVxR,GAAmByE,EAHT,CAAA,EAIhB;;;;;;;;;;;;;;;;GCpBO,MAAMmgD,GAAU1qC,GAAG,CAAC2qC,SAL3B,SAAoC53D,EAAsBgD,GACxD,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,WACnC,OAAO42C,GAAQnc,EAAIl3B,EAAak3B,EAAG57B,MAAOmE,GAAMH,SAClD;;;;;;;;;;;;;;;;GCoBO,MAAMigB,GAAQmK,GAAG,CAAC4qC,OApBzB,SACI9xC,EAA8B/iB,EAAO,GACvC,MAAMiuC,EACFrkB,GAAqB7G,EAAS,UAAW,QAAS,qBAEtDrQ,EACIu7B,EAASxxC,QAAU,GAAG,IAAM,yCAE5BwxC,EAASxxC,OAAS,GACpBiW,EACI1S,GAAQiuC,EAAS,GAAGhuC,MAAM,IAAM,uCAGtC,MAAMuU,EAAqBy5B,EACrB5sB,EAAmB,CAACrhB,QAE1B,OAAOshB,GAAOC,UACVxT,GAAMyG,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GCZO,MAAMznB,GAAOqwB,GAAG,CAAC6qC,MATxB,SAAiC93D,EAAiBwiD,EAAQ,GACxD,MAEMhrC,EAAqB,CAACxX,EAFjBusB,GAAgBvsB,EAAG,IAAK,SAG7BqkB,EAAmB,CAACm+B,SAE1B,OAAOl+B,GAAOC,UACV1Q,GAAM2D,EAAgC6M,EAC5C;;;;;;;;;;;;;;;;GCmCO,MAAM0zC,GAAe9qC,GAAG,CAAC+qC,cAvBhC,SACIh4D,EAAsB8pC,EAAiB/uB,EAAetV,EACtDqlC,EAAY,EAAGC,EAAU,EAAGC,EAAe,EAAG+B,EAAc,EAC5DC,EAAiB,GACnB,MAEMx1B,EAA6B,CAACxX,EAFzBusB,GAAgBvsB,EAAG,IAAK,iBAG7BqkB,EAA2B,CAC/BylB,QACA/uB,MACAtV,UACAqlC,YACAC,UACAC,eACA+B,cACAC,kBAGF,OAAO1oB,GAAOC,UACVpR,GAAcqE,EACd6M,EACN;;;;;;;;;;;;;;;;GCpCO,MAAM4zC,GAAMhrC,GAAG,CAACirC,KAPvB,SAAgCl4D,GAC9B,MAEMwX,EAAoB,CAACxX,EAFhBusB,GAAgBvsB,EAAG,IAAK,QAInC,OAAOskB,GAAOC,UAAUnR,GAAKoE,EAC/B;;;;;;;;;;;;;;;;GCJM,SAAU2gD,GAASv5D,EAAsBE,GAC7CiC,EAAcnC,GACd,MAAM+tB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,OAChB,MAAM,IAAIJ,MAAM,sDAGlB,OAAOkc,GAAW3c,EADM,KACS+tB,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GCDM,SAAUs5D,GACZx5D,EAAsBC,EACtBC,GAEF,GADAiC,EAAcnC,GACD,MAATC,GAAkC,IAAjBA,EAAMY,OACzB,MAAM,IAAIJ,MAAM,iDAElB,MAAMstB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,QAAyC,IAAzBktB,EAAcltB,OAC9C,MAAM,IAAIJ,MACN,kEAEN,GAA6B,IAAzBstB,EAAcltB,QAAyB,MAATZ,EAChC,MAAM,IAAIQ,MACN,gFAGN,OAAOkc,GAAW3c,EAAQC,EAAO8tB,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GClBM,SAAUu5D,GACZz5D,EAAsBC,EACtBC,GAEF,GADAiC,EAAcnC,GACD,MAATC,GAAkC,IAAjBA,EAAMY,OACzB,MAAM,IAAIJ,MAAM,kDAElB,MAAMstB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,QAAyC,IAAzBktB,EAAcltB,OAC9C,MAAM,IAAIJ,MACN,sEAEN,GAA6B,IAAzBstB,EAAcltB,QAAyB,MAATZ,EAChC,MAAM,IAAIQ,MACN,2EAGN,OAAOkc,GAAW3c,EAAQC,EAAO8tB,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GClBM,SAAUw5D,GACZ15D,EAAsBC,EACtBC,GAEF,GADAiC,EAAcnC,GACD,MAATC,GAAkC,IAAjBA,EAAMY,OACzB,MAAM,IAAIJ,MAAM,kDAElB,MAAMstB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,QAAyC,IAAzBktB,EAAcltB,OAC9C,MAAM,IAAIJ,MACN,wEAGN,GAA6B,IAAzBstB,EAAcltB,QAAyB,MAATZ,EAChC,MAAM,IAAIQ,MACN,2EAGN,OAAOkc,GAAW3c,EAAQC,EAAO8tB,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GCnBM,SAAUy5D,GACZ35D,EACAC,EACAC,GAEF,GADAiC,EAAcnC,GACD,MAATC,GAAkC,IAAjBA,EAAMY,OACzB,MAAM,IAAIJ,MAAM,iDAElB,MAAMstB,EAAgBd,GAAWjtB,EAAQE,GACzC,GAA6B,IAAzB6tB,EAAcltB,QAAyC,IAAzBktB,EAAcltB,OAC9C,MAAM,IAAIJ,MACN,0EAGN,GAA6B,IAAzBstB,EAAcltB,QAAyB,MAATZ,EAChC,MAAM,IAAIQ,MACN,2EAKN,OAAOkc,GAAW3c,EAFlBC,EAAQA,GACJ8tB,EAC6BA,EAAe7tB,EAClD;;;;;;;;;;;;;;;;GCIO,MAAM05D,GAAOvrC,GAAG,CAACwrC,MAtBxB,SACIz4D,EAAiBgf,EAAI,EAAG05C,GAAS,GACnC,MAAMj+B,EAAKlO,GAAgBvsB,EAAG,IAAK,QACnC,GAAgB,IAAZy6B,EAAGx3B,KACL,MAAM,IAAI5D,MAAM,sDAElB,MAAMs5D,EAAUl+B,EAAG57B,MAAM47B,EAAG57B,MAAMY,OAAS,GAC3C,GAAIuf,EAAI25C,EACN,MAAM,IAAIt5D,MACN,uDAAuDs5D,cAC5C35C,KAGjB,MAAMxH,EAAqB,CAACxX,EAAGy6B,GACzBpW,EAAmB,CAACrF,IAAG05C,WAEtB95D,EAAQotB,GAAW1H,GAAOC,UAC7BhR,GAAMiE,EAAgC6M,GAE1C,MAAO,CAACzlB,SAAQotB,UAClB;;;;;;;;;;;;;;;;GCZO,MAAM4sC,GAAkB3rC,GAAG,CAAC4rC,iBAfnC,SACIh6D,EAAoBw6C,EAAO,EAAGyX,EAAS,EAAGhyD,EAC1C+pD,GACF,GAAa,MAAT/pD,GAAyC,SAAvBA,EACpB,MAAM,IAAIO,MAAM,qCAElB,MAAMmzD,EACF,IAAI7B,GAAYtX,EAAMyX,EAAQhyD,GAAO,EAAsB+pD,GACzDllC,EAAM7H,GAAOjd,EAAOC,GAC1B,IAAK,IAAIwB,EAAI,EAAGA,EAAIqjB,EAAI/kB,OAAOa,OAAQa,IACrCqjB,EAAI/kB,OAAO0B,GAAKkyD,EAAUpB,YAE5B,OAAOztC,EAAItI,UACb;;;;;;;;;;;;;;;;GCiCO,MAAMy9C,GAAS7rC,GAAG,CAAC8rC,QAb1B,SACI/4D,EAAiBgD,EAAO,GAC1B,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,SAAU,qBAC7CO,EAAOk6B,EAAGx3B,KAAO,GAAG,IAAM,yCAE1B,MAAMuU,EAAuB,CAACxX,EAAGy6B,GAC3BpW,EAAqB,CAACrhB,SACrBpE,EAAQotB,GAAW1H,GAAOC,UACH9Q,GAAQ+D,EACR6M,GAC9B,MAAO,CAACzlB,SAAQotB,UAClB;;;;;;;;;;;;;;;;GC3BO,MAAMgtC,GAAqB/rC,GAAG,CAACgsC,oBAftC,SACIj5D,EAAiBk5D,EAAiCC,GACpD,MAAM1+B,EAAKlO,GAAgBvsB,EAAG,IAAK,sBAC7Bo5D,EACF7sC,GAAgB2sC,EAAY,aAAc,qBAAsB,SACpE34D,EAAOoB,EAAMw3D,IAAc,IAAM,qCAEjC,MAAM3hD,EAAmC,CAACxX,EAAGy6B,EAAIy+B,WAAYE,GACvD/0C,EAAiC,CAAC80C,eAExC,OAAO70C,GAAOC,UACV5Q,GAAoB6D,EACpB6M,EACN;;;;;;;;;;;;;;;;GCHO,MAAMg1C,GAAUpsC,GAAG,CAACqsC,SAd3B,SAAkBt5D,EAAsBgD,EAAO,GAC7C,MAAMy3B,EAAKlO,GAAgBvsB,EAAG,IAAK,UAAW,qBAC9C0V,EACI1S,IAASy3B,EAAG57B,MAAMY,QAAUuD,EAAOy3B,EAAG57B,MAAMY,QAC5C,IACI,UAAUuD,iBAAoBy3B,EAAG57B,MAAMY,WAAWg7B,EAAG57B,MAAMY,YAEnE,MAAM+X,EAAuB,CAAC7a,MAAO89B,GAC/BpW,EAAqB,CAACrhB,QAE5B,OAAOshB,GAAOC,UACV7Q,GAAQ8D,EAAgC6M,EAC9C;;;;;;;;;;;;;;;;GCjBM,SAAU5H,GACZQ,EAAyBP,GAAY,EAAMxT,EAC3CpK,GACF,OAAOwlB,GAAO3H,aAAaM,EAAcP,EAAWxT,EAAMpK,EAE5D;;;;;;;;;;;;;;;;GCnBM,SAAUy6D,GAAUC,EAAqBC,GAC7C,MAAMztC,EAAU,GAChB,IAAK,IAAI1rB,EAAI,EAAGA,EAAIm5D,EAASh6D,OAAQa,IAC/Bm5D,EAASn5D,IACX0rB,EAAQ1qB,KAAKhB,GAIjB,MAAMo5D,EAAW59C,GAAO09C,EAAW,SAE7Bl0C,EAAMxJ,GAAO,CAACkQ,EAAQvsB,OAAQ+5D,EAAU/5D,QAAS,SACvD,IAAK,IAAIa,EAAI,EAAGA,EAAI0rB,EAAQvsB,OAAQa,IAAK,CACvC,MAAM8a,EAAMs+C,EAAS9yD,WAAWolB,EAAQ1rB,IAClCqF,EAASrF,EAAIk5D,EAAU/5D,OAC7B6lB,EAAI1mB,OAAOX,IAAImd,EAAKzV,GAEtB,OAAO2f,EAAIjK,UACb;;;;;;;;;;;;;;;;GCYO,MAAMs+C,GAXb5gC,eAA2BkmB,GACzB,MAAMC,EACF3yB,GAAgB0yB,EAAW,YAAa,aAAc,QACpD96C,QAAa+6C,EAAWxhD,OACxBimB,EAAM41C,GAAUra,EAAWrgD,MAAOsF,GAIxC,OAHI86C,IAAcC,GAChBA,EAAW//C,UAENwkB,CACT;;;;;;;;;;;;;;;;GCuCO,MAAMi2C,GA5Cb7gC,eACI3Z,EAA2B4qB,EAC3BhnC,GACF,MAAM62D,EAAUttC,GAAgBnN,EAAQ,SAAU,YAC5C06C,EAAQvtC,GAAgByd,EAAM,OAAQ,WAAY,QAElD+vB,EAAmB,MAAR/2D,EAAe,EAAIA,EAC9Bg3D,EAAUF,EAAM72D,KAChBg3D,EAAcJ,EAAQh7D,MAE5B6W,EAAYskD,EAAU,GAAG,IAAM,0BAC/BtkD,EACIukD,EAAYn3D,MAAMi3D,EAAUA,EAAWC,GAAUF,EAAMj7D,MACvD,qEAEJ,IAAIq7D,EAAc,EAClB,IAAK,IAAI55D,EAAIy5D,EAAUz5D,EAAIy5D,EAAWC,EAAS15D,IAC7C45D,GAAeD,EAAY35D,GAE7B,MAAM65D,EACFF,EAAYn3D,MAAM,EAAGi3D,GAChB32D,OAAO,CAAC82D,GAAcD,EAAYn3D,MAAMi3D,EAAWC,IACtDI,EAAiBxjB,GAAQijB,EAASM,GAClCE,EAAezjB,GAAQkjB,EAAO,EAAE,IAChCQ,QAA0BX,GAAWU,GACrCruC,EAAU2rC,GAAQ2C,EAAmB,CAAC,IAEtC32C,EAAM+9B,GAAO0Y,EAAgBpuC,EAAS+tC,GAc5C,OAXI36C,IAAWy6C,GACbA,EAAQ16D,UAEN6qC,IAAS8vB,GACXA,EAAM36D,UAER6sB,EAAQ7sB,UACRi7D,EAAej7D,UACfk7D,EAAal7D,UACbm7D,EAAkBn7D,UAEXwkB,CACT;;;;;;;;;;;;;;;;GCDA,SAAS42C,GACLv6D,EAAW0jC,EAAkB1gC,EAAwB,MACvD,GAAe,IAAXhD,EAAEiD,KACJ,OAAOmsC,GAAIpvC,GAIb,GAAe,IAAXA,EAAEiD,MAAuB,OAATD,EAClB,OAAOu3D,GAAS3jB,GAAQ52C,EAAG,EAAE,IAAK0jC,EAAG1gC,GAIvC,GAAe,IAAXhD,EAAEiD,MAA8B,iBAATD,GACvB7B,MAAMC,QAAQ4B,IAAyB,IAAhBA,EAAKvD,OAAc,CAC5C,GAAU,IAANikC,EACF,OAAOtjC,GAAIgvC,GAAIpvC,GAAIgD,GAErB,GAAI0gC,IAAM1sB,IACR,OAAO/W,GAAImvC,GAAIpvC,GAAIgD,GAErB,GAAI0gC,KAAO1sB,IACT,OAAOjX,GAAIqvC,GAAIpvC,GAAIgD,GAErB,GAAU,cAAN0gC,GAA2B,IAANA,EAEvB,OAAO3hC,GAAK3B,GAAI2rD,GAAI3c,GAAIpvC,GAAIg0D,GAAO,EAAG,UAAWhxD,IAGnD,MAAM,IAAI3D,MAAM,qCAAqCqkC,KAIvD,GAAIviC,MAAMC,QAAQ4B,IAAyB,IAAhBA,EAAKvD,OAAc,CAC5C,GAAU,IAANikC,EACF,OAAOzjC,GAAIG,GAAIgvC,GAAIpvC,GAAIgD,EAAK,IAAKA,EAAK,GAAK,GAE7C,GAAI0gC,IAAM1sB,IACR,OAAO/W,GAAIG,GAAIgvC,GAAIpvC,GAAIgD,EAAK,IAAKA,EAAK,IAExC,GAAI0gC,KAAO1sB,IACT,OAAOjX,GAAIK,GAAIgvC,GAAIpvC,GAAIgD,EAAK,IAAKA,EAAK,IAExC,GAAU,QAAN0gC,GAAqB,cAANA,EAEjB,OAAO3hC,GAAK3B,GAAI0nD,GAAO9nD,GAAIgD,IAG7B,MAAM,IAAI3D,MAAM,qCAAqCqkC,KAGvD,MAAM,IAAIrkC,MAAM,gCAAgC2D,IAClD,CAEO,MAAMw3D,GAAOvtC,GAAG,CAACwtC,MAnExB,SACIz6D,EAAsB06D,EAAgC,YACtD13D,EAAwB,KAAMouC,GAAW,GAG3C,MAAMopB,EAAOD,GAFbv6D,EAAIusB,GAAgBvsB,EAAG,IAAK,QAEH06D,EAAK13D,GAC9B,IAAImlD,EAAgBqS,EAAK37D,MACzB,GAAIuyC,EAAU,CACZ,MAAM1tC,EAAOX,EAAeC,EAAMhD,EAAEnB,OACpCspD,EAAgBwS,GAA+BH,EAAK37D,MAAO6E,GAE7D,OAAOkzC,GAAQ4jB,EAAMrS,EACvB;;;;;;;;;;;;;;;;GCDO,MAAMyS,GAAgB3tC,GAAG,CAAC4tC,eAxBjC,SACIxgD,EAAiBra,EAAiB86D,EAClCl+D,EAAsBm+D,GAAa,GACrC,MAAMC,EAAKzuC,GAAgBlS,EAAG,IAAK,iBAC7BogB,EAAKlO,GAAgBvsB,EAAG,IAAK,iBAC7Bi7D,EAAS1uC,GAAgBuuC,EAAO,QAAS,iBAE/Cv8C,GAAiBy8C,EAAIvgC,GACrB/kB,EACIA,EAAiBslD,EAAGn8D,MAAO47B,EAAG57B,QAAQ,IAAM,8BAEhD,MAAMq8D,EAAMlH,GAAO,GACbmH,EAAgB5W,GAAI2W,EAAKD,GAE/B,IAAIG,EAAS5qB,GAAI+T,GAAI9pB,EAAIugC,GAAKG,GAC9B,GAAIJ,EAAY,CACdrlD,EACY,MAAR9Y,GAAc,IAAM,mDACxB,MAAMy+D,EAAQ9uC,GAAgB3vB,EAAM,OAAQ,iBAC5Cw+D,EAAS9qB,GAAI8qB,EAAQ7W,GAAI2W,EAAKnP,GAAIkP,EAAQI,KAE5C,OAAOp8C,GAAI+7C,EAAII,EACjB;;;;;;;;;;;;;;;;GClBO,MAAME,GAAYruC,GAAG,CAACsuC,WAhB7B,SACIvvC,EAA4Bid,EAC5BpqC,GACF,MAAM28D,EAAWjvC,GAAgBP,EAAS,UAAW,YAAa,SAC5DyvC,EAAWlvC,GAAgB0c,EAAS,UAAW,aACrDU,GAA8B8xB,EAAUD,EAAU38D,GAElD,MAAM2Y,EAA0B,CAACwU,QAASwvC,EAAUvyB,QAASwyB,GACvDp3C,EAAwB,CAACxlB,SAG/B,OAAOylB,GAAOC,UACHtS,GAAWuF,EACX6M,EACb,IC+BO,MAAMq3C,GAAgBzuC,GAAG,CAAC0uC;;;;;;;;;;;;;;;;;AA1BjC,SACIC,EAAkCC,EAClCvf,EAA0Bwf,EAAkC,GAC9D,MAAMC,EACFxvC,GAAgBqvC,EAAe,gBAAiB,gBAAiB,SAC/DI,EACFzvC,GAAgBsvC,EAAc,eAAgB,iBAC5CI,EAAgB1vC,GAClBuvC,EAAc,eAAgB,gBAAiBE,EAAcl9D,QC3C7D,SACF88D,EAAuBC,EAAsBvf,EAC7C4f,GACF,GAA4B,UAAxBN,EAAc98D,MAChB,MAAM,IAAIO,MAEN,8EAAsBu8D,EAAc98D,UAE1C,GAAI88D,EAAc34D,KAAO,EACvB,MAAM,IAAI5D,MAEN,sEAAkBu8D,EAAc/8D,UAGtC,MAAMs9D,EAAWP,EAAc34D,KAAO,EAAI24D,EAAc/8D,MAAM,GAAK,EAC7Du9D,EAAUR,EAAc34D,KAAO,EAAI24D,EAAc/8D,MAAM,GAAK,EAElE,GAAIy9C,EAAY78C,SAAW28D,EACzB,MAAM,IAAI/8D,MAEN,kDAAIi9C,EAAY78C,sBAAsB28D,MAG5C,MAAMC,EAAYR,EAAar6D,KAC/B,GAA4B,IAAtBq6D,EAAa54D,OACS,IAAtB44D,EAAa54D,MAAco5D,IAAcF,GAC7C,MAAM,IAAI98D,MAEN,oCAAGw8D,EAAah9D,2BAA2Bs9D,MAGjD,GAAIN,EAAa/8D,QAAUo9D,EAAcp9D,MACvC,MAAM,IAAIO,MAAM,oDAEpB,CDWEi9D,CACIP,EAAgBC,EAAe1f,EAAa2f,GAEhD,MAAMzkD,EAA8B,CAClCokD,cAAeG,EACfF,aAAcG,EACdF,aAAcG,GAGV53C,EAA4B,CAACi4B,eAEnC,OAAOh4B,GAAOC,UACVrR,GAAesE,EACf6M,EACN;;;;;;;;;;;;;;;;GEnBO,MAAMk4C,GAAWtvC,GAAG,CAACuvC,UAT5B,SAAmBx8D,EAAsBgsB,GACvC,MAAMwvC,EAAWjvC,GAAgBP,EAAS,UAAW,WAAY,SAG3DxU,EAAyB,CAACzO,OAFrBwjB,GAAgBvsB,EAAG,IAAK,YAESgsB,QAASwvC,GAErD,OAAOl3C,GAAOC,UAAUjW,GAAUkJ,EACpC;;;;;;;;;;;;;;;;GCSO,MAAMilD,GAAUxvC,GAAG,CAACyvC;;;;;;;;;;;;;;;;;AA1B3B,SACI18D,EAAsB28D,EAAcC,EACpC/T,GACF,MAAMpuB,EAAKlO,GAAgBvsB,EAAG,IAAK,WAUnC,GARA0V,EACiB,YAAb+kB,EAAG37B,OACH,IACI,gFAAqB27B,EAAG37B,0BAChC4W,EACIinD,GAAQ,GAAKA,EAAO,GACpB,IAAM,qDAAqDA,OAElD,IAATA,EACF,OAAO38D,aAAayb,GAASgf,EAAGle,QAAUke,EAG5C,MAAMoiC,ECzCF,SAAwB78D,EAAW48D,GACvC,GAAkB,MAAdA,EACF,OAAO58D,EAAEnB,MAAMiE,QAEjB,GAAI4S,EAAiB1V,EAAEnB,MAAO+9D,GAC5B,OAAOA,EAET,GAAI58D,EAAEnB,MAAMY,SAAWm9D,EAAWn9D,OAAQ,CACxC,MAAMq9D,EAAyB,GAC/B,IAAK,IAAIx8D,EAAI,EAAGA,EAAIN,EAAEnB,MAAMY,OAAQa,IACb,MAAjBs8D,EAAWt8D,IAA4B,MAAdN,EAAEnB,MAAMyB,GACnCw8D,EAAax7D,KAAKtB,EAAEnB,MAAMyB,IAE1Bw8D,EAAax7D,KAAKs7D,EAAWt8D,IAGjC,OAAOw8D,EAGT,OAAOF,CACT,CDqBsBG,CAActiC,EAAImiC,GAChCI,EAAW,EAAIL,EACf10B,EAAaqI,GACfzpC,GAAMoY,GAAIwzC,GAAcoK,EAAa,EAAG,EAAG,UAAWhU,GAAOmU,IAC7DA,GAEJ,OAAOxsB,GAAI/V,EAAIwN,EACjB;;;;;;;;;;;;;;;;GExDM,SAAUg1B,GAAoBtgE,GAElC,OAAOiD,KAAKiH,MAAMjH,KAAKmsD,IAAI,EAAGnsD,KAAKkC,KAAKlC,KAAKkZ,IAAInc,GAASiD,KAAKkZ,IAAI,KACrE,CAEM,SAAUokD,GACZC,EAAsBn8D,EAAWmV,GACnC,MAAMinD,EAAO,EAAID,EAAe,EAC1BE,EAAY,IAAIv5D,aAAaq5D,GACnC,IAAK,IAAI78D,EAAI,EAAGA,EAAI68D,IAAgB78D,EAAG,CACrC,MAAMg9D,EAAU,EAAM19D,KAAK29D,GAAKj9D,GAAM68D,EAAeC,EAAO,GAC5DC,EAAU/8D,GAAKU,EAAImV,EAAIvW,KAAKm9C,IAAIugB,GAElC,OAAOnF,GAASkF,EAAW,UAC7B;;;;;;;;;;;;;;;;GCoEO,MAAMG,GA9DbzkC,eACIwM,EAA2Bk4B,EAAuBz+C,EAAI,GACxD,MAAM0mB,EAAenZ,GAAgBgZ,EAAa,cAAe,UAC3Dm4B,EAAWnxC,GAAgBkxC,EAAS,UAAW,UAErDl9D,EACImlC,EAAaziC,KAAO,GACpB,IACI,uEAAWyiC,EAAaziC,SAChC1C,EACImlC,EAAaziC,KAAO,IAAMy6D,EAASz6D,MACnC,IAEI,mFAAGyiC,EAAaziC,yBAAyBy6D,EAASz6D,SAC1DvC,EACIglC,EAAa7mC,MAAMiE,MAAM,EAAG4iC,EAAa7mC,MAAMY,OAAS,GACxDi+D,EAAS7+D,MACT,2FAEJ,MAAM85D,EAAUjzB,EAAa7mC,MAAM6mC,EAAa7mC,MAAMY,OAAS,GAC/Dc,EACIye,EAAI,GAAKA,GAAK25C,GACd,IACI,4EAAcA,eAAqB35C,MAE3C,MAAM2+C,QAAwBj4B,EAAahoC,OACrCkgE,QAAoBF,EAAShgE,QAI5B24D,EAAO70D,GAAQ,CAACm8D,EAAgBl+D,OAASk5D,EAASA,GACnDkF,EAAYh6D,EAAuB,OAAQwyD,GAEjD,IAAK,IAAIlgD,EAAI,EAAGA,EAAIkgD,EAAOlgD,IAAK,CAC9B,MAAMxQ,EAASwQ,EAAI3U,EACb2C,EAAOw5D,EAAgBG,SAASn4D,EAAQA,EAASnE,GACjDu8D,EAAmD,GACzD,IAAK,IAAIz9D,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,IAC/By9D,EAAUz8D,KAAK,CAAC3E,MAAOwH,EAAK7D,GAAIX,MAAOW,IAEzCy9D,EAAUp6D,MAAK,CAAC3C,EAAGmV,IAAMA,EAAExZ,MAAQqE,EAAErE,QAErCkhE,EAAU1nD,GAAK,EACf,IAAK,IAAI7V,EAAI,EAAGA,EAAI0e,EAAG1e,IACrB,GAAIy9D,EAAUz9D,GAAGX,QAAUi+D,EAAYznD,GAAI,CACzC0nD,EAAU1nD,GAAK,EACf,OAaN,OARIovB,IAAgBG,GAClBA,EAAavmC,UAEXs+D,IAAYC,GACdA,EAASv+D,UAIJigB,GAAOy+C,EAAWH,EAAS7+D,MAAO,OAC3C;;;;;;;;;;;;;;;;GCAO,MAAMm/D,GAAuB/wC,GAAG,CAACgxC,sBArDxC,SACIj+D,EAAMmkB,EAAOmuB,EACb7sC,EACAuU,EACAu4B,EAA4B,OAC5ByE,GACF,IAAIE,EAAMl3C,EACK,IAAXA,EAAEiD,OACJi0C,EAAMN,GAAQ52C,EAAG,CAAC,EAAGA,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,MAEvD,IAAIs9C,EAAOh4B,EACO,IAAdg4B,EAAKl5C,OACPk5C,EAAOvF,GAAQzyB,EAAI,CAAC,EAAGA,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,MAE5D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IACI,iEAAGi0C,EAAIr4C,WACf6W,EACkB,IAAdymC,EAAKl5C,MACL,IACI,8DAAGk5C,EAAKt9C,WAChB6W,EAC2B,IAAvB48B,EAAY7yC,QACZ,IACI,mEAAG6yC,OACX,MAAMiD,EAAyB,SAAfhD,EAAwB2E,EAAIr4C,MAAM,GAAKq4C,EAAIr4C,MAAM,GAC3D82C,EAA0B,SAAfpD,EAAwB4J,EAAKt9C,MAAM,GAAKs9C,EAAKt9C,MAAM,GACpE6W,EACI6/B,IAAYjD,EAAY,IACxB,IAAM,4CAA4CiD,wCACdjD,EAAY,QACpD58B,EACIigC,IAAarD,EAAY,IACzB,IAAM,0CAA0CqD,0CACVrD,EAAY,SAC/B,MAAnB0E,GACFthC,EACIA,EAAWsE,IACX,IACI,gFAAmBg9B,iBAA+Bh9B,OAG5D,MAAMxC,EAAqC,CAACxX,EAAGk3C,EAAK/yB,GAAIg4B,GAClD93B,EACF,CAAC5e,UAASuU,MAAKu4B,aAAYyE,kBAAiB1E,eAGhD,OAAOhuB,GAAOC,UACHhY,GAAsBiL,EACtB6M,EACb;;;;;;;;;;;;;;;;GClEM,SAAU65C,GACZ/5C,EAAYJ,EAAWo6C,GACzB,GAAkB,MAAdA,GAAqC,WAAfA,EACxB,OAAOh6C,EAET,GAAmB,SAAfg6C,EACF,OAAO3tB,GAAIrsB,EAAIvnB,GAAKmnB,IAEtB,MAAM,IAAI1kB,MACN,gDAAgD8+D,KACtD,CAGM,SAAUC,GACZnb,EAAcob,GAChB,IAAI16C,EAAM06C,EACV,MAAMC,EACFC,GAAgCtb,EAAKpkD,MAAOw/D,EAAax/D,OAI7D,OAHIy/D,EAAW7+D,OAAS,IACtBkkB,EAAMvjB,GAAIujB,EAAK26C,IAEV1nB,GAAQjzB,EAAKs/B,EAAKpkD,MAC3B,CAEM,SAAU2/D,GACZx+D,EAAWm+D,EAAwBM,EACnCC,GACF,GAAmB,WAAfP,EACF,OAAOn+D,EACF,GAAmB,SAAfm+D,EACT,OAAOnL,GAAKhzD,GACP,GAAmB,QAAfm+D,EACT,OAAO3d,GAAIxgD,GACN,GAAmB,UAAfm+D,EACT,OAAOjL,GAAMlzD,GACR,GAAmB,UAAfm+D,EACT,OAAOhS,GAAMnsD,EAAGy+D,GACX,GAAmB,cAAfN,EACT,OAAO7b,GAAUtiD,EAAG0+D,GAEtB,MAAM,IAAIr/D,MAAM,4BAA4B8+D,KAC9C,CAGO,MAAMQ,GAAaA,CAAC3+C,EAAuBm+C,MAC3Bn+C,EAAgB,IACE,WAAfm+C;;;;;;;;;;;;;;;;GCmMnB,MAAM5iB,GAAStuB,GAAG,CAAC2xC,aAlL1B,UAAmD5+D,EACjDA,EAACknB,OACDA,EAAMzhB,QACNA,EAAOuU,IACPA,EAAGu4B,WACHA,EAAa,OAAMC,UACnBA,EAAY,CAAC,EAAG,GAAEwE,gBAClBA,EAAeiM,KACfA,EAAIkb,WACJA,EAAa,SAAQM,uBACrBA,EAAsBC,eACtBA,IAgBA,GAFAP,EAAaA,GAAc,UAEgC,IAAvDQ,GAAWr6C,GAAOpD,MAAMlB,cAAem+C,GAAuB,CAChE,IAAInhE,EAAS6hE,GACT7+D,EAAGknB,EAAQzhB,EAASuU,EAAKu4B,EAAYC,EAAWwE,GAKpD,OAJY,MAARiM,IACFjmD,EAASiiB,GAAIjiB,EAAQimD,IAGhBub,GACIxhE,EAAQmhE,EAAYM,EAAwBC,GAGzD,MAAMjkC,EAAKlO,GAAgBvsB,EAAG,IAAK,UAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,UAElD,IAAIgwB,EAAMzc,EACN0c,GAAe,EAEH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAE3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IACI,6DAAGi0C,EAAIj0C,UACfyS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,8DAAGw4C,EAAQx4C,UACI,MAAnB+zC,GACFthC,EACIA,EAAWsE,IACX,IACI,6EAAmBg9B,iBAA+Bh9B,OAG5DtE,EACIwhC,EAAIr4C,MAAM,KAAO48C,EAAQ58C,MAAM,IAC/B,IAAM,oCAAoCq4C,EAAIr4C,MAAM,yCACtB48C,EAAQ58C,MAAM,QAChD6W,EACIuhC,GAAyCxxC,EAAS+sC,IAClD,IACI,uEAAe/sC,oBAA0B+sC,OACjD98B,EACmB,SAAf68B,GACA,IAAM,sCACFA,4CAER,MAAMsY,EAAW5T,GACbC,EAAIr4C,MAAO48C,EAAQ58C,MAAO4G,EAAS+sC,EAAWx4B,EAAKg9B,GAEvD,IAAI8nB,EAQAC,EAPQ,MAAR9b,IACF6b,EAAQvyC,GAAgB02B,EAAM,OAAQ,iBACrC6b,GAASxgD,GAAewgD,EAAOrkC,GAEhC8jC,GAA0C1T,EAASvd,SAAUwxB,EAAMjgE,QAIvC,MAA1B4/D,IACFM,EAA0BxyC,GACtBkyC,EAAwB,gBAAiB,iBAG/C,MAAM7zC,EAAOA,CAACzG,EAAcc,KAC1B,MAAOw2B,EAASvE,EAAKnzB,EAAG+6C,GACpB75C,EAEEo5C,EAAeH,GAAqB/5C,EAAIJ,EAAGo6C,GAEjDzoD,EACIuhC,GAA4BzE,IAC5B,IAEI,uHAAsDA,OAE9D,MAIMwsB,EAAgB,CAHlBhjB,GAAoB9E,EAAIr4C,MAAOw/D,EAAc5iB,EAASh2C,EAASuU,GAE/DgkD,GAAqB9mB,EAAKmnB,EAAc5iB,EAAQ58C,MAAO4G,EAASuU,IAGpE,GAAa,MAAT8kD,EAAe,CACjB,MAAMG,EAAUb,GAAqBU,EAAOT,GAC5CW,EAAI19D,KAAK29D,GAEX,OAAOD,CAAG,EAGNxnD,EAA4B,CAChCxX,EAAGk3C,EACHhwB,OAAQu0B,EACRwH,KAAM6b,EACNL,uBAAwBM,GAGpB16C,EAA0B,CAC9B5e,UACAuU,MACAu4B,aACAC,YACAwE,kBACAmnB,aACAO,kBAKF,GAAY,MAARzb,EAAc,CAChB,MAAMmB,EACF75B,IAAW,CAAC2sB,EAAehwB,EAAkBuD,KAC3C,IAAI9G,EAEAW,GAAOC,UACHtQ,GAAauD,EACb6M,GAUR,OARAoG,EAAK,CAACvD,EAAQgwB,EAAKvzB,IAEfwzB,IAEFxzB,EAAMizB,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,MAIrD,CAAClC,MAAOgnB,EAAKsE,SAAU2C,EAAK,IAEzC,OAAOw5B,EAASlN,EAAKuE,GAChB,CACL,MAAMyjB,EAAmB30C,IACrB,CAAC2sB,EAAehwB,EAAkB+7B,EAAcx4B,KAC9C,IAAI9G,EAAyBW,GAAOC,UAChCtQ,GAAauD,EACb6M,GAUJ,OARAoG,EAAK,CAACvD,EAAQgwB,EAAKvzB,EAAKs/B,IAEpB9L,IAEFxzB,EAAMizB,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,MAIrD,CAAClC,MAAOgnB,EAAKsE,SAAU2C,EAAK,IAGzC,OAAOs0C,EAAiBhoB,EAAKuE,EAASqjB,GAE1C;;;;;;;;;;;;;;;;GC9NO,MAAMK,GACTlyC,GAAG,CAACmyC,qCA1BR,SACIp/D,EAAMmkB,EAAOmuB,EACb7sC,EAAkCuU,EAClCw4B,EAAqC,CAAC,EAAG,GACzCwE,GACF,IAAIE,EAAMl3C,EACK,IAAXA,EAAEiD,OACJi0C,EAAMN,GAAQ52C,EAAG,CAAC,EAAGA,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,GAAImB,EAAEnB,MAAM,MAEvD,IAAIs9C,EAAOh4B,EACO,IAAdg4B,EAAKl5C,OACPk5C,EAAOvF,GAAQzyB,EAAI,CAAC,EAAGA,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,MAG5D,MAAM2Y,EAAoD,CAACxX,EAAGk3C,EAAK/yB,GAAIg4B,GACjE93B,EACF,CAAC5e,UAASuU,MAAKg9B,kBAAiBxE,YAAWF,eAG/C,OAAOhuB,GAAOC,UACHpX,GACAqK,EAAgC6M,EAE7C;;;;;;;;;;;;;;;;GCKO,MAAMg7C,GACTpyC,GAAG,CAACqyC,oCA7BR,SACIxyB,EAA0C3oB,EAAO+C,EACjDzhB,EAAkCuU,EAClCw4B,EAAqC,CAAC,EAAG,GACzCwE,GACF,IAAImF,EAAOh4B,EACPgzB,GAAe,EACH,IAAZhzB,EAAGlhB,OACLk0C,GAAe,EACfgF,EAAOvF,GAAQzyB,EAAI,CAAC,EAAGA,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,GAAIslB,EAAGtlB,MAAM,MAG5D,MAAM2Y,EAAmD,CAAC2M,GAAIg4B,EAAMj1B,UAC9D7C,EACF,CAAC5e,UAASuU,MAAKg9B,kBAAiBxE,YAAW55B,WAAYk0B,GAErDnpB,EAEFW,GAAOC,UACHnX,GAAoCoK,EACpC6M,GAER,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GCsNO,MAAMm6B,GAAkB7wB,GAAG,CAACsyC,sBA/KnC,UAA4Dv/D,EAC1DA,EAACknB,OACDA,EAAMzhB,QACNA,EAAOuU,IACPA,EAAGu4B,WACHA,EAAa,OAAMC,UACnBA,EAAY,CAAC,EAAG,GAAEwE,gBAClBA,EAAeiM,KACfA,EAAIkb,WACJA,EAAa,SAAQM,uBACrBA,EAAsBC,eACtBA,IAcA,IAA2D,IAAvDC,GAAWr6C,GAAOpD,MAAMlB,cAAem+C,GAAuB,CAChE,IAAInhE,EAASwiE,GACTx/D,EAAGknB,EAAQzhB,EAASuU,EAAKu4B,EAAYC,EAAWwE,GAKpD,OAJY,MAARiM,IACFjmD,EAASiiB,GAAIjiB,EAAQimD,IAGhBub,GACIxhE,EAAQmhE,EAAYM,EAAwBC,GAGzD,MAAMjkC,EAAKlO,GAAgBvsB,EAAG,IAAK,mBAC7By7C,EAAUlvB,GAAgBrF,EAAQ,SAAU,mBAElD,IAAIgwB,EAAMzc,EACN0c,GAAe,EACH,IAAZ1c,EAAGx3B,OACLk0C,GAAe,EACfD,EAAMN,GAAQnc,EAAI,CAAC,EAAGA,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,GAAI47B,EAAG57B,MAAM,MAE3D6W,EACiB,IAAbwhC,EAAIj0C,MACJ,IACI,sEAAQi0C,EAAIj0C,UACpByS,EACqB,IAAjB+lC,EAAQx4C,MACR,IACI,uEAAgBw4C,EAAQx4C,UAChCyS,EACIwhC,EAAIr4C,MAAM,KAAO48C,EAAQ58C,MAAM,IAC/B,IACI,6DAAIq4C,EAAIr4C,MAAM,qDACJ48C,EAAQ58C,MAAM,QACf,MAAb2zC,IACFA,EAAY,CAAC,EAAG,IAElB98B,EACIuhC,GAAyCxxC,EAAS+sC,IAClD,IAEI,sFAAqB/sC,oBAA0B+sC,OAEhC,MAAnBwE,GACFthC,EACIA,EAAWsE,IACX,IACI,qFAAyBg9B,iBAA+Bh9B,OAGlE,MAAM6wC,EAAW5T,GACbC,EAAIr4C,MAAO48C,EAAQ58C,MAAO4G,EAAS+sC,EAAWx4B,EAAKg9B,GACnD,GAEJ,IAAI8nB,EAQAC,EAPQ,MAAR9b,IACF6b,EAAQvyC,GAAgB02B,EAAM,OAAQ,iBACrC6b,GAASxgD,GAAewgD,EAAOrkC,GAEhC8jC,GAA0C1T,EAASvd,SAAUwxB,EAAMjgE,QAIvC,MAA1B4/D,IACFM,EAA0BxyC,GACtBkyC,EAAwB,gBAAiB,0BAG/C,MAAM7zC,EAAOA,CAACzG,EAAcc,KAC1BvP,EACIuhC,GAA4BzE,IAC5B,IAEI,mHAAIA,OACZ,MAAOiJ,EAASvE,EAAKnzB,EAAGk/B,GAAQh+B,EAE1Bo5C,EAAeH,GAAqB/5C,EAAIJ,EAAGo6C,GAE3CsB,EAAOJ,GACRnoB,EAAiBr4C,MAAOw/D,EAAc5iB,EAAqBh2C,EAC5DuU,EAAKw4B,EAAWwE,GACd0oB,EAAYP,GACdjoB,EAAiBmnB,EAAe5iB,EAAqB58C,MAAO4G,EAC5DuU,EAAKw4B,EAAWwE,GAEpB,GAAY,MAARiM,EAAc,CAEhB,MAAO,CAACwc,EAAMC,EADEtB,GAAqBU,EAAOT,IAG9C,MAAO,CAACoB,EAAMC,EAAU,EAGpBloD,EAAqC,CACzCxX,EAAGk3C,EACHhwB,OAAQu0B,EACRwH,KAAM6b,EACNL,uBAAwBM,GAEpB16C,EAAmC,CACvC5e,UACAuU,MACAu4B,aACAC,YACAwE,kBACAmnB,aACAO,kBAKF,GAAY,MAARzb,EAAc,CAChB,MAAMmB,EACF75B,IAAW,CAAC2sB,EAAehwB,EAAkBuD,KAE3C,IAAI9G,EAAyBW,GAAOC,UAChCrQ,GAAsBsD,EACtB6M,GAUJ,OARAoG,EAAK,CAACvD,EAAQgwB,EAAKvzB,IAEfwzB,IAEFxzB,EAAMizB,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,MAIrD,CAAClC,MAAOgnB,EAAKsE,SAAU2C,EAAK,IAEzC,OAAOw5B,EAASlN,EAAKuE,GAChB,CACL,MAAMyjB,EAAmB30C,IACrB,CAAC2sB,EAAehwB,EAAkB+7B,EAAcx4B,KAE9C,IAAI9G,EAAyBW,GAAOC,UAChCrQ,GAAsBsD,EACtB6M,GAUJ,OARAoG,EAAK,CAACvD,EAAQgwB,EAAKvzB,EAAKs/B,IAEpB9L,IAEFxzB,EAAMizB,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,MAIrD,CAAClC,MAAOgnB,EAAKsE,SAAU2C,EAAK,IAGzC,OAAOs0C,EAAiBhoB,EAAKuE,EAASqjB,GAE1C;;;;;;;;;;;;;;;;GC1CS,MAAMz6B,GAASpX,GAAG,CAAC0yC,aArK5B,UAAwC3+D,EACtCA,EAACmV,EACDA,EAACouB,WACDA,GAAa,EAAKC,WAClBA,GAAa,EAAKye,KAClBA,EAAIkb,WACJA,EAAa,SAAQM,uBACrBA,EAAsBC,eACtBA,IAWE,IAA2D,IAAvDC,GAAWr6C,GAAOpD,MAAMlB,cAAem+C,GAAuB,CAChE,IAAInhE,EAAS4iE,GAAc5+D,EAAGmV,EAAGouB,EAAYC,GAK7C,OAJY,MAARye,IACFjmD,EAASiiB,GAAIjiB,EAAQimD,IAGhBub,GACIxhE,EAAQmhE,EAAYM,EAAwBC,GAIzD,IAAIj6B,EAAKlY,GAAgBvrB,EAAG,IAAK,gBAC7B0jC,EAAKnY,GAAgBpW,EAAG,IAAK,iBAChCsuB,EAAIC,GAAMpmB,GAAemmB,EAAIC,GAE9B,MAAMm7B,EACFt7B,EAAaE,EAAG5lC,MAAM4lC,EAAGxhC,KAAO,GAAKwhC,EAAG5lC,MAAM4lC,EAAGxhC,KAAO,GACtD68D,EACFt7B,EAAaE,EAAG7lC,MAAM6lC,EAAGzhC,KAAO,GAAKyhC,EAAG7lC,MAAM6lC,EAAGzhC,KAAO,GAEtD88D,EACFx7B,EAAaE,EAAG5lC,MAAM4lC,EAAGxhC,KAAO,GAAKwhC,EAAG5lC,MAAM4lC,EAAGxhC,KAAO,GACtD+8D,EACFx7B,EAAaE,EAAG7lC,MAAM6lC,EAAGzhC,KAAO,GAAKyhC,EAAG7lC,MAAM6lC,EAAGzhC,KAAO,GAEtDg9D,EAAax7B,EAAG5lC,MAAMiE,MAAM,GAAI,GAChCo9D,EAAax7B,EAAG7lC,MAAMiE,MAAM,GAAI,GAChCq9D,EAAYzqD,EAAmBuqD,GAC/BG,EAAY1qD,EAAmBwqD,GAErCxqD,EACI+uB,EAAGxhC,MAAQ,GAAKyhC,EAAGzhC,MAAQ,GAAKwhC,EAAGxhC,OAASyhC,EAAGzhC,MAC/C,IACI,kFAAsBwhC,EAAGxhC,YAAYyhC,EAAGzhC,UAEhDyS,EACIA,EAAiBuqD,EAAYC,IAC7B,IAAM,4CAA4CD,WAC3CC,6BAAsCz7B,EAAG5lC,aACzC6lC,EAAG7lC,sBAEd6W,EACImqD,IAAgBC,GAChB,IAAM,wCAAwCD,WACvCC,6BAAuCr7B,EAAG5lC,aAC1C6lC,EAAG7lC,wBAAwB0lC,oBACXC,kBAE3B,MAAM8I,EAAW7I,EAAG5lC,MAAMiE,MAAM,GAAI,GAAGM,OAAO,CAAC28D,EAAaC,IAEtDK,EACFzpB,GAAQnS,EADUF,EACN,CAAC47B,EAAWN,EAAaE,GACzB,CAACI,EAAWJ,EAAaF,IACnCS,EACF1pB,GAAQlS,EADUF,EACN,CAAC47B,EAAWJ,EAAaF,GACzB,CAACM,EAAWN,EAAaE,IAEzC,IAAIlB,EAQAC,EAPQ,MAAR9b,IACF6b,EAAQvyC,GAAgB02B,EAAM,OAAQ,iBACrC6b,GAASxgD,GAAewgD,EAAOr6B,GAEhC85B,GAA0CjxB,EAAUwxB,EAAMjgE,QAI9B,MAA1B4/D,IACFM,EAA0BxyC,GACtBkyC,EAAwB,gBAAiB,iBAG/C,MAAM7zC,EAAOA,CAACzG,EAAcc,KAC1B,MAAOo7C,EAAKC,EAAKv8C,EAAG+6C,GAAS75C,EAIvBo5C,EACFH,GAAqBtnB,GAAQzyB,EAAIJ,EAAEllB,OAAQklB,EAAGo6C,GAClD,IAAIoC,EACAC,EAgBJ,GAdKj8B,GAAeC,GAGRD,GAAcC,GACxB+7B,EAAOX,GAAcvB,EAAciC,GAAK,GAAO,GAC/CE,EAAOZ,GAAcvB,EAAcgC,GAAK,GAAM,IACrC97B,IAAeC,GACxB+7B,EAAOX,GAAcU,EAAKjC,GAAc,GAAO,GAC/CmC,EAAOZ,GAAcS,EAAKhC,GAAc,GAAO,KAE/CkC,EAAOX,GAAcU,EAAKjC,GAAc,GAAM,GAC9CmC,EAAOZ,GAAcvB,EAAcgC,GAAK,GAAM,KAV9CE,EAAOX,GAAcvB,EAAciC,GAAK,GAAO,GAC/CE,EAAOZ,GAAcS,EAAKhC,GAAc,GAAM,IAYpC,MAARpb,EAAc,CAEhB,MAAO,CAACsd,EAAMC,EADEpC,GAAqBU,EAAOT,IAG5C,MAAO,CAACkC,EAAMC,IAIZhpD,EAA6B,CACjCxW,EAAGq/D,EACHlqD,EAAGmqD,EACHrd,KAAM6b,EACNL,uBAAwBM,GAEpB16C,EACF,CAACkgB,aAAYC,aAAY25B,aAAYO,kBAIzC,GAAY,MAARzb,EAAc,CAChB,MAAMmB,EACF75B,IAAW,CAAC81C,EAAeC,EAAe71C,KACxC,MAAM9G,EAEFW,GAAOC,UACHvQ,GAAcwD,EACd6M,GAIR,OAFAoG,EAAK,CAAC41C,EAAKC,EAAK38C,IAET,CAAChnB,MAAOi6C,GAAQjzB,EAAK2pB,GAAWrlB,SAAU2C,EAAK,IAE5D,OAAOw5B,EAASic,EAAKC,GAChB,CACL,MAAMpB,EAAmB30C,IACrB,CAAC81C,EAAeC,EAAexB,EAAer0C,KAC5C,MAAM9G,EAEFW,GAAOC,UACHvQ,GAAcwD,EACd6M,GAIR,OAFAoG,EAAK,CAAC41C,EAAKC,EAAK38C,EAAKm7C,IAEd,CAACniE,MAAOi6C,GAAQjzB,EAAK2pB,GAAWrlB,SAAU2C,EAAK,IAG5D,OAAOs0C,EAAiBmB,EAAKC,EAAKxB,GAEtC;;;;;;;;;;;;;;;;GC5NF,IAAA2B,GAAAj4D,OAAAmN,OAAA,CAAAC,UAAA,KAAA2lC,OAAAmlB,GAAA5iB,gBAAAA,GAAAzZ,OAAAA;;;;;;;;;;;;;;;;GAoCO,MAAMs8B,GAAgB1zC,GAAG,CAAC2zC,eAHjC,SAAwBzD,GACtB,OAAOD,GAAaC,EAAc,IAAM,IAC1C;;;;;;;;;;;;;;;;GCEO,MAAM0D,GAAa5zC,GAAG,CAAC6zC,YAJ9B,SAAqB3D,GACnB,OAAOD,GAAaC,EAAc,GAAK,GACzC;;;;;;;;;;;;;;;;GCiCO,MAAM4D,GAAQ9zC,GAAG,CAAC+zC,OA3BzB,SACIC,EAAkBC,EAAqBC,EAAmBxV,GAAS,EACnEyV,EAAW,GACb,IAAI77D,EAAQ,EACZ,MAAMqS,EAAmB,GACzB,KAAOrS,EAAQ27D,GAAeD,EAAOz/D,MACnCoW,EAAOtW,KAAKwB,GAAMm+D,EAAQ17D,EAAO27D,IACjC37D,GAAS47D,EAGX,GAAIxV,EACF,KAAOpmD,EAAQ07D,EAAOz/D,MAAM,CAC1B,MAAM6/D,EAAU97D,EAAQ27D,EAAeD,EAAOz/D,KACxCwY,EAAM5W,GAAO,CACjBN,GAAMm+D,EAAQ17D,EAAO27D,EAAcG,GAAS/nD,GAAK,CAAC+nD,GAASD,KAE7DxpD,EAAOtW,KAAK0Y,GACZzU,GAAS47D,EAIb,OAAsB,IAAlBvpD,EAAOnY,OACF24D,GAAS,GAAI,CAAC,EAAG8I,IAGnBtqB,GAAQxzC,GAAOwU,GAAS,CAACA,EAAOnY,OAAQyhE,GACjD;;;;;;;;;;;;;;;;GCPO,MAAMI,GAAOr0C,GAAG,CAACs0C,MAhBxB,SACIN,EAAkBC,EAAqBC,EACvCpK,EACAyK,EAAyCX,IAC1B,MAAb9J,IACFA,EAAYkG,GAAoBiE,IAElC,MAAMO,EAAeV,GAAME,EAAQC,EAAaC,GAC1CO,EAAiBlxB,GAAIixB,EAAcD,EAASN,IAC5CtpD,EAAmB,GACzB,IAAK,IAAItX,EAAI,EAAGA,EAAImhE,EAAa5iE,MAAM,GAAIyB,IACzCsX,EAAOtW,KACHu1D,GAAK/zD,GAAM4+D,EAAgB,CAACphE,EAAG,GAAI,CAAC,EAAG4gE,IAAenK,IAE5D,OAAO3zD,GAAOwU,EAChB;;;;;;;;;;;;;;;;GCsCO,MAAM+pD,GAAgB10C,GAAG,CAAC20C,eA9CjC,SACIvyC,EACAwyC,EACAC,EACAC,EACA5gC,EAA+B,WAC/B6gC,EAAqB,GAEvB,MAAMC,EAAS11C,GAAgB8C,EAAO,QAAS,iBACzC6yC,EAAS31C,GAAgBs1C,EAAO,QAAS,gBAAiB,WAC1DM,EAAU51C,GAAgBu1C,EAAQ,SAAU,gBAAiB,SAE7DM,EAAWF,EAAOrjE,MAAM,GAE9B6W,EACoB,IAAhBusD,EAAOh/D,MACP,IACI,6DAAgBg/D,EAAOh/D,UAC/ByS,EACoB,IAAhBwsD,EAAOj/D,MAAkC,IAApBi/D,EAAOrjE,MAAM,IAClC,IAAM,oDAAoDujE,sBACrCF,EAAOrjE,WAChC6W,EACqB,IAAjBysD,EAAQl/D,MAAck/D,EAAQtjE,MAAM,KAAOujE,GAC3C,IAAM,qDAAqDA,oBACtCF,EAAOrjE,WAChC6W,EACwB,IAApBqsD,EAAStiE,QACT,IACI,wEAAUsiE,EAAStiE,YAC3BiW,EACIqsD,EAAS,IAAM,GAAKA,EAAS,IAAM,GACnC,IAAM,2CAA2CA,MACrDrsD,EACe,aAAXyrB,GAAoC,YAAXA,GACzB,IAAM,+CAA+CA,MAEzD,MAAM3pB,EACoB,CAAC6X,MAAO4yC,EAAQJ,MAAOK,EAAQJ,OAAQK,GAC3D99C,EAA4B,CAAC8c,SAAQ6gC,qBAAoBD,YAI/D,OAHYz9C,GAAOC,UACfxX,GAAeyK,EACf6M,EAEN;;;;;;;;;;;;;;;;GChDO,MAAMg+C,GAAgBp1C,GAAG,CAACq1C,eAdjC,SAAwBjzC,GACtB,MAAM4yC,EAAS11C,GAAgB8C,EAAO,QAAS,gBAAiB,WAEhE3Z,EACoB,IAAhBusD,EAAOh/D,MACP,IACI,6DAAgBg/D,EAAOh/D,UAE/B,MAAMuU,EAA8B,CAAC6X,MAAO4yC,GAG5C,OADI39C,GAAOC,UAAUtW,GAAeuJ,EAAgC,CAAA,EAEtE;;;;;;;;;;;;;;;;GCkBO,MAAM+qD,GAAmBt1C,GAAG,CAACu1C,kBAnBpC,SACInzC,EAA4BozC,EAC5BC,EAA6C,EAC7CC,EAAkC,IACpC,MAAMV,EAAS11C,GAAgB8C,EAAO,QAAS,mBAAoB,WAEnE3Z,EACoB,IAAhBusD,EAAOh/D,MACP,IACI,gEAAgBg/D,EAAOh/D,UAE/B,MAAMuU,EAAiC,CAAC6X,MAAO4yC,GACzC59C,EAA+B,CAACo+C,UAASC,YAAWC,UAI1D,OAHYr+C,GAAOC,UACfxQ,GAAkByD,EAClB6M,EAEN;;;;;;;;;;;;;;;;GCzCA,SAASu+C,GACLf,EAAiBgB,EAAkBC,EACnCC,EAAsBC,EAAwBC,GAM5B,MAAhBF,IACFA,EAAe,IAEK,MAAlBC,IACFA,EAAiBx8D,OAAO08D,mBAEN,MAAhBD,IACFA,EAAe,GAGjB,MAAMb,EAAWP,EAAMhjE,MAAM,GAqB7B,OApBAikE,EAAgBljE,KAAKG,IAAI+iE,EAAeV,GAExC1sD,EACI,GAAKqtD,GAAgBA,GAAgB,GACrC,IAAM,4CAA4CA,OACtDrtD,EACmB,IAAfmsD,EAAM5+D,MACN,IAAM,+CAA+C4+D,EAAM5+D,UAC/DyS,EACuB,IAAnBmsD,EAAMhjE,MAAM,IACZ,IACI,oDAAoDgjE,EAAMhjE,MAAM,OACxE6W,EAA4B,IAAhBmtD,EAAO5/D,MAAY,IAAM,+BACrCyS,EACImtD,EAAOhkE,MAAM,KAAOujE,GACpB,IAAM,sDAAsDA,cAC7CS,EAAOhkE,MAAM,OAChC6W,EACI,GAAKutD,GAAgBA,GAAgB,GACrC,IAAM,4CAA4CA,OAC/C,CAACH,gBAAeC,eAAcC,iBAAgBC,eACvD;;;;;;;;;;;;;;;;GCEO,MAAME,GAAoBl2C,GAAG,CAACm2C,mBAlBrC,SACIvB,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,mBAC1B,MAAMhB,EAAS31C,GAAgBs1C,EAAO,QAAS,qBACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,qBAE5CrrD,EAASorD,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,GAK5C3+C,EAAQ,CAACy+C,cAJfA,EAAgBtrD,EAAOsrD,cAIOC,aAH9BA,EAAevrD,EAAOurD,aAGsBC,eAF5CA,EAAiBxrD,EAAOwrD,gBAGxB,OAAO1+C,GAAOC,UACV7T,GAAqB,CAACmxD,MAAOK,EAAQW,OAAQQ,GAAUh/C,EAC7D;;;;;;;;;;;;;;;;GC9BM,SAAUi/C,GACZjjE,EAAUkjE,EAAYC,GACxB,MAAM7jE,EAoBF,SACFU,EAAUm8B,EAAWgnC,GACvB,OAcF,SACInjE,EAAUm8B,EAAWgnC,GACvB,IAAI/uB,EAAO,EACPC,EAAQr0C,EAAIZ,OACZgkE,EAAS,EACT5jC,GAAQ,EACZ,KAAO4U,EAAOC,GAAO,CACnB+uB,EAAShvB,GAASC,EAAQD,IAAU,GACpC,MAAMivB,EAAgBF,EAAWhnC,EAAQn8B,EAAIojE,IACzCC,EAAgB,EAClBjvB,EAAOgvB,EAAS,GAEhB/uB,EAAQ+uB,EAGR5jC,GAAS6jC,GAIb,OAAO7jC,EAAQ4U,GAAQA,EAAO,CAChC;;;;;;;;;;;;;;;;GAlCSkvB,CAActjE,EAAKm8B,EAAQgnC,GAAcI,GAClD,CAvBgBC,CAAaxjE,EAAKkjE,EAASC,GACnCM,EAAiBnkE,EAAQ,IAAMA,EAAQ,GAAKA,EAClDU,EAAIiqC,OAAOw5B,EAAgB,EAAGP,EAChC,CA6BA,SAASK,GAAqB5iE,EAAMmV,GAClC,OAAOnV,EAAImV,EAAI,EAAInV,EAAImV,GAAK,EAAI,CAClC,CC/BM,SAAU4tD,GACZlC,EAAmBgB,EAAoBC,EACvCC,EAAsBC,GACxB,OAAOgB,GACHnC,EAAOgB,EAAQC,EAAeC,EAAcC,EAC5C,EACN,CAEM,SAAUiB,GACZpC,EAAmBgB,EAAoBC,EACvCC,EAAsBC,EACtBkB,GACF,OAAOF,GACHnC,EAAOgB,EAAQC,EAAeC,EAAcC,EAC5C,GAAsB,EACtBkB,GAA6C,EAEnD,CAEM,SAAUC,GACZtC,EAAmBgB,EAAoBC,EACvCC,EAAsBC,EACtBC,GACF,OAAOe,GACHnC,EAAOgB,EAAQC,EAAeC,EAAcC,EAAgBC,GAC5D,EACN,CAEA,SAASe,GACLnC,EAAmBgB,EAAoBC,EACvCC,EAAsBC,EAAwBC,EAC9CmB,GAAqB,EAAOF,GAAqB,EACjDG,GAAqB,GAGvB,MAAMC,EAAa,GAEnB,IAAK,IAAIhkE,EAAI,EAAGA,EAAIuiE,EAAOpjE,OAAQa,IAC7BuiE,EAAOviE,GAAK0iE,GACdsB,EAAWhjE,KAAK,CAACijE,MAAO1B,EAAOviE,GAAIkkE,SAAUlkE,EAAGmkE,mBAAoB,IAIxEH,EAAW3gE,KAAK+gE,IAIhB,MAAM11C,EAAQi0C,EAAe,GAAM,GAAMA,EAAgB,EAEnD0B,EAA4B,GAC5BC,EAA2B,GAEjC,KAAOD,EAAgBllE,OAASqjE,GAAiBwB,EAAW7kE,OAAS,GAAG,CACtE,MAAMolE,EAAYP,EAAW37C,OACtB47C,MAAOO,EAAaN,SAAEA,EAAQC,mBAAEA,GAAsBI,EAE7D,GAAIC,EAAgB9B,EAClB,MASF,IAAI+B,GAAkB,EACtB,IAAK,IAAInhE,EAAI+gE,EAAgBllE,OAAS,EAAGmE,GAAK6gE,IAAsB7gE,EAAG,CACrE,MAAMohE,EAAMC,GAAsBpD,EAAO2C,EAAUG,EAAgB/gE,IAEnE,GAAIohE,GAAOjC,EAAc,CACvBgC,GAAkB,EAClB,MAMF,GAHAF,EAAUN,MACNM,EAAUN,MAAQW,GAAenC,EAAc/zC,EAAOg2C,GAEtDH,EAAUN,OAASvB,EACrB,MAWJ6B,EAAUJ,mBAAqBE,EAAgBllE,OAE1CslE,IAGCF,EAAUN,QAAUO,GACtBH,EAAgBrjE,KAAKkjE,GACrBI,EAAetjE,KAAKujE,EAAUN,QACrBM,EAAUN,MAAQvB,GAG3BM,GAAagB,EAAYO,EAAWH,KAM1C,MAAMS,EAAeR,EAAgBllE,OAC/B2lE,EAAatC,EAAgBqC,EAE/BjB,GAAsBkB,EAAa,IACrCT,EAAgBrjE,QAAQ,IAAIH,MAAMikE,GAAY9rD,KAAK,IACnDsrD,EAAetjE,QAAQ,IAAIH,MAAMikE,GAAY9rD,KAAK,KAGpD,MAAMtc,EAAkC,CAAC2nE,mBAUzC,OARIP,IACFpnE,EAAuB,eAAI4nE,GAGzBP,IACFrnE,EAAqB,aAAImoE,GAGpBnoE,CACT,CAEA,SAASioE,GAAsBpD,EAAmBvhE,EAAWsD,GAC3D,MAAMyhE,EAASxD,EAAM/D,SAAa,EAAJx9D,EAAW,EAAJA,EAAQ,GACvCglE,EAASzD,EAAM/D,SAAa,EAAJl6D,EAAW,EAAJA,EAAQ,GACvC2hE,EAAQ3lE,KAAKG,IAAIslE,EAAO,GAAIA,EAAO,IACnCG,EAAQ5lE,KAAKG,IAAIslE,EAAO,GAAIA,EAAO,IACnCI,EAAQ7lE,KAAKK,IAAIolE,EAAO,GAAIA,EAAO,IACnCK,EAAQ9lE,KAAKK,IAAIolE,EAAO,GAAIA,EAAO,IACnCM,EAAQ/lE,KAAKG,IAAIulE,EAAO,GAAIA,EAAO,IACnCM,EAAQhmE,KAAKG,IAAIulE,EAAO,GAAIA,EAAO,IACnCO,EAAQjmE,KAAKK,IAAIqlE,EAAO,GAAIA,EAAO,IACnCQ,EAAQlmE,KAAKK,IAAIqlE,EAAO,GAAIA,EAAO,IACnCS,GAASN,EAAQF,IAAUG,EAAQF,GACnCQ,GAASH,EAAQF,IAAUG,EAAQF,GACzC,GAAIG,GAAS,GAAKC,GAAS,EACzB,OAAO,EAET,MAAMC,EAAmBrmE,KAAKK,IAAIslE,EAAOI,GACnCO,EAAmBtmE,KAAKK,IAAIulE,EAAOI,GACnCO,EAAmBvmE,KAAKG,IAAI0lE,EAAOI,GACnCO,EAAmBxmE,KAAKG,IAAI2lE,EAAOI,GACnCO,EAAmBzmE,KAAKK,IAAIkmE,EAAmBF,EAAkB,GACnErmE,KAAKK,IAAImmE,EAAmBF,EAAkB,GAClD,OAAOG,GAAoBN,EAAQC,EAAQK,EAC7C,CAMA,SAASnB,GAAenC,EAAsB/zC,EAAeg2C,GAC3D,MAAMsB,EAAS1mE,KAAKsX,IAAI8X,EAAQg2C,EAAMA,GACtC,OAAOA,GAAOjC,EAAeuD,EAAS,CACxC,CAEA,SAAS5B,GAAoB6B,EAAeC,GAK1C,OAAQD,EAAGhC,MAAQiC,EAAGjC,OAChBgC,EAAGhC,QAAUiC,EAAGjC,OAAWiC,EAAGhC,SAAW+B,EAAG/B,QACpD;;;;;;;;;;;;;;;;GChIO,MAAMiC,GAhCb1tC,eACI8oC,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,mBAC1B,MAAMhB,EAAS31C,GAAgBs1C,EAAO,QAAS,0BACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,0BAE5CrrD,EAASorD,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,GAClDF,EAAgBtrD,EAAOsrD,cACvBC,EAAevrD,EAAOurD,aACtBC,EAAiBxrD,EAAOwrD,eAExB,MAAM0D,QAAuBnqE,QAAQ+b,IAAI,CAAC4pD,EAAOxkE,OAAQ2lE,EAAQ3lE,SAC3DipE,EAAYD,EAAe,GAC3BE,EAAaF,EAAe,IAK5B/B,gBAACA,GAAmBZ,GACtB4C,EAAWC,EAAY9D,EAAeC,EAAcC,GAQxD,OAPId,IAAWL,GACbK,EAAO/iE,UAELkkE,IAAYR,GACdQ,EAAQlkE,UAGHg5D,GAASwM,EAAiB,QACnC;;;;;;;;;;;;;;;;GCWO,MAAMkC,GAA6B55C,GAAG,CAAC65C,4BA5B9C,SACIjF,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,kBACxBD,EAAe,GACjB,MAAMf,EAAS31C,GAAgBs1C,EAAO,QAAS,qBACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,qBAE5C95D,EAAS65D,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,EAC9CC,GAMEzrD,EAAoC,CAACqqD,MAAOK,EAAQW,OAAQQ,GAC5Dh/C,EACF,CAACy+C,cAPLA,EAAgB/5D,EAAO+5D,cAOHC,aANpBA,EAAeh6D,EAAOg6D,aAMYC,eALlCA,EAAiBj6D,EAAOi6D,eAK0BC,aAJlDA,EAAel6D,EAAOk6D,cAOhBjmE,EAASsnB,GAAOC,UACH3T,GAAqB4G,EACrB6M,GAEnB,MAAO,CAACsgD,gBAAiB3nE,EAAO,GAAI4nE,eAAgB5nE,EAAO,GAC7D;;;;;;;;;;;;;;;;GCUO,MAAM+pE,GAxCbhuC,eACI8oC,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,kBACxBD,EAAe,GACjB,MAAMf,EAAS31C,GAAgBs1C,EAAO,QAAS,0BACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,0BAE5C95D,EAAS65D,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,EAC9CC,GACJH,EAAgB/5D,EAAO+5D,cACvBC,EAAeh6D,EAAOg6D,aACtBC,EAAiBj6D,EAAOi6D,eACxBC,EAAel6D,EAAOk6D,aAEtB,MAAMyD,QAAuBnqE,QAAQ+b,IAAI,CAAC4pD,EAAOxkE,OAAQ2lE,EAAQ3lE,SAC3DipE,EAAYD,EAAe,GAC3BE,EAAaF,EAAe,IAK5B/B,gBAACA,EAAeC,eAAEA,GAAkBT,GACtCwC,EAAWC,EAAY9D,EAAeC,EAAcC,EACpDC,GASJ,OAPIf,IAAWL,GACbK,EAAO/iE,UAELkkE,IAAYR,GACdQ,EAAQlkE,UAGH,CACLwlE,gBAAiBxM,GAASwM,EAAiB,SAC3CC,eAAgBzM,GAASyM,GAE7B;;;;;;;;;;;;;;;;GCTO,MAAMoC,GAA0B/5C,GAAG,CAACg6C,yBA/B3C,SACIpF,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,kBACxBgB,GAAqB,GACvB,MAAMhC,EAAS31C,GAAgBs1C,EAAO,QAAS,qBACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,qBAE5C95D,EAAS65D,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,EAC9C,MAKExrD,EAAoC,CAACqqD,MAAOK,EAAQW,OAAQQ,GAC5Dh/C,EAAkC,CACtCy+C,cANqB/5D,EAAO+5D,cAO5BC,aANoBh6D,EAAOg6D,aAO3BC,eANsBj6D,EAAOi6D,eAO7BkB,sBAIIlnE,EAASsnB,GAAOC,UACH5T,GAAqB6G,EACrB6M,GAEnB,MAAO,CAACsgD,gBAAiB3nE,EAAO,GAAImoE,aAAcnoE,EAAO,GAC3D;;;;;;;;;;;;;;;;GCMO,MAAMkqE,GAtCbnuC,eACI8oC,EAA4BgB,EAC5BC,EAAuBC,EAAe,GACtCC,EAAiBx8D,OAAO08D,kBACxBgB,GAAqB,GACvB,MAAMhC,EAAS31C,GAAgBs1C,EAAO,QAAS,0BACzCwB,EAAU92C,GAAgBs2C,EAAQ,SAAU,0BAE5C95D,EAAS65D,GACXV,EAAQmB,EAASP,EAAeC,EAAcC,EAC9C,MACEmE,EAAiBp+D,EAAO+5D,cACxBsE,EAAgBr+D,EAAOg6D,aACvBsE,EAAkBt+D,EAAOi6D,gBAExB2D,EAAWC,SACRrqE,QAAQ+b,IAAI,CAAC4pD,EAAOxkE,OAAQ2lE,EAAQ3lE,UAKxCinE,gBAACA,EAAeQ,aAAEA,GAAgBlB,GACpC0C,EAAWC,EAAYO,EAAgBC,EAAeC,EACtDnD,GASJ,OAPIhC,IAAWL,GACbK,EAAO/iE,UAELkkE,IAAYR,GACdQ,EAAQlkE,UAGH,CACLwlE,gBAAiBxM,GAASwM,EAAiB,SAC3CQ,aAAcnR,GAAOmR,EAAc,SAEvC;;;;;;;;;;;;;;;;GCIO,MAAMmC,GAAiBr6C,GAAG,CAACs6C,gBA1ClC,SACIC,EAAsBhmE,EAAwBimE,GAAe,EAC7DC,GAAmB,GACrB,MAAMC,EAAUp7C,GAAgBi7C,EAAQ,SAAU,kBAElD9xD,EACqB,IAAjBiyD,EAAQ1kE,MAA+B,IAAjB0kE,EAAQ1kE,MAC9B,IACI,gEAAQ0kE,EAAQ1kE,UACxByS,EACoB,IAAhBlU,EAAK/B,QACL,IACI,6DAAG+B,OACXkU,GACyB,IAArBgyD,IAA+C,IAAjBD,GAC9B,IAAM,sFAGV,IAAIG,EAAcD,EACdxwB,GAAe,EACE,IAAjBwwB,EAAQ1kE,OACVk0C,GAAe,EACfywB,EAAchxB,GACV+wB,EAAS,CAAC,EAAGA,EAAQ9oE,MAAM,GAAI8oE,EAAQ9oE,MAAM,GAAI8oE,EAAQ9oE,MAAM,MAKrE,MAAM2Y,EAA+B,CAACgwD,OAAQI,GACxCvjD,EAA6B,CAACojD,eAAcC,mBAAkBlmE,QAG9DmiB,EAAMW,GAAOC,UACH5S,GAAgB6F,EAChB6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GCMO,MAAMkkD,GAAwB56C,GAAG,CAAC66C,uBA7CzC,SACIN,EAAsBhmE,EAAwBimE,GAAe,EAC7DC,GAAmB,GACrB,MAAMC,EAAUp7C,GAAgBi7C,EAAQ,SAAU,yBAElD9xD,EACqB,IAAjBiyD,EAAQ1kE,MAA+B,IAAjB0kE,EAAQ1kE,MAC9B,IACI,uEAAQ0kE,EAAQ1kE,UACxByS,EACoB,IAAhBlU,EAAK/B,QACL,IAEI,oEAAG+B,OACXkU,EACsB,YAAlBiyD,EAAQ7oE,OAAyC,UAAlB6oE,EAAQ7oE,OACvC,IAAM,qDACV4W,GACyB,IAArBgyD,IAA+C,IAAjBD,GAC9B,IAAM,6FAEV,IAAIG,EAAcD,EACdxwB,GAAe,EACE,IAAjBwwB,EAAQ1kE,OACVk0C,GAAe,EACfywB,EAAchxB,GACV+wB,EAAS,CAAC,EAAGA,EAAQ9oE,MAAM,GAAI8oE,EAAQ9oE,MAAM,GAAI8oE,EAAQ9oE,MAAM,MAIrE,MAAM2Y,EAAsC,CAACgwD,OAAQI,GAC/CvjD,EAC2B,CAACojD,eAAcC,mBAAkBlmE,QAG5DmiB,EAAMW,GAAOC,UACH9S,GAAuB+F,EACvB6M,GAEhB,OAAI8yB,EACKP,GAAQjzB,EAAK,CAACA,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,GAAI8kB,EAAI9kB,MAAM,KAEtD8kB,CACT;;;;;;;;;;;;;;;;GCmCO,MAAMokD,GAAW96C,GAAG,CAAC+6C,UApD5B,SACIhnE,EAAiBinE,EAAkBC,GACrC3nE,EACI0nE,EAAW,GAAM,GACjB,IAAM,gDAAgDA,OAC1D1nE,EACI2nE,EAAW,GAAM,GACjB,IAAM,gDAAgDA,OAE1D,MAAMzjC,EAAKlY,GAAgBvrB,EAAG,IAAK,YAEnCT,EACIkkC,EAAGxhC,MAAQ,GACX,IAAM,4CAA4CwhC,EAAGxhC,UAEzD,MAAMpE,EAAQ4lC,EAAG5lC,OACVspE,EAAGC,GAAK3jC,EAAG5lC,MAAMiE,OAAO,GAE/B,KAAMmlE,GAAYE,GAChB,MAAM,IAAI9oE,MACN,yBAAyB4oE,mDACwBE,OAEvD,KAAMD,GAAYE,GAChB,MAAM,IAAI/oE,MACN,yBAAyB6oE,sDAC2BE,OAGtDH,EAAW,IACbA,EAAWE,GAETD,EAAW,IACbA,EAAWE,GAGb,MAAM9nE,EAAIs2C,GAAQsb,GAAM,EAAGiW,EAAG,EAAG,SAAU,EAAE,EAAG,IAC1CvkE,EAAIsuD,GAAM,EAAGkW,EAAG,EAAG,SACnBC,EAAK9jB,GAAIjkD,EAAGsD,GAEZ0kE,EAASriB,GACXtD,GAAU0lB,EAAIrU,IAAQiU,EAAU,UAChClmB,GAAasmB,EAAIrU,IAAQkU,EAAU,WAEjCK,EAAO5oB,GAAM,CAACwoB,EAAGC,GAAI3jC,EAAG3lC,OAE9B,OAAO83C,GACI9zB,GAAMu2C,GAAQziB,GAAQnS,EAAI,EAAE,EAAG0jC,EAAGC,KACvBllE,KAAIslE,GAAOzpB,GAAMupB,EAAQE,EAAKD,MACzC1pE,EACb;;;;;;;;;;;;;;;;GCfO,MAAM4pE,GAAcx7C,GAAG,CAACy7C,aAjD/B,SAAsB5/C,GACpB,IAAI6/C,EACJ,GAAIxnE,MAAMC,QAAQ0nB,GAAK,CACrB6/C,GAAkB,EAClBpoE,EACU,MAANuoB,GAAcA,EAAGrpB,OAAS,GAC1B,IAAM,sEAEV,MAAM8+C,EAAMz1B,EAAG,GAAGjqB,MAAM,GACxB,IAAK,IAAIyB,EAAI,EAAGA,EAAIwoB,EAAGrpB,SAAUa,EAC/BC,EACIuoB,EAAGxoB,GAAGzB,MAAM,KAAO0/C,GACnB,IAEI,iEAAKz1B,EAAkBxoB,GAAGzB,MAAM,UAAU0/C,YAGpDoqB,GAAkB,EAClB7/C,EAAKvf,GAAMuf,EAAIA,EAAGjqB,MAAM,GAAI,GAAGqE,KAAIlD,GAAK23D,GAAQ33D,EAAG,CAAC,MAGtDO,EACIuoB,EAAGrpB,QAAUqpB,EAAG,GAAGjqB,MAAM,IACzB,IAAM,oCACKiqB,EAAkBrpB,yCACCqpB,EAAkB,GAAGjqB,MAAM,SAE7D,MAAM+pE,EAAiB,GACjBC,EAAO//C,EACb,IAAK,IAAIxoB,EAAI,EAAGA,EAAIwoB,EAAGrpB,SAAUa,EAC/BsoE,EAAGtnE,KAAKgjB,GAAOlB,MAAK,KAClB,IAAIpjB,EAAI6oE,EAAKvoE,GACb,GAAIA,EAAI,EACN,IAAK,IAAIsD,EAAI,EAAGA,EAAItD,IAAKsD,EAAG,CAC1B,MAAMklE,EAAOt4B,GAAIpwC,GAAIowC,GAAIo4B,EAAGhlE,GAAI5D,IAAK4oE,EAAGhlE,IACxC5D,EAAIukD,GAAIvkD,EAAG8oE,GAGf,OAAOx4B,GAAItwC,EAAGw6D,GAAKx6D,EAAG,aAAa,KAIvC,OAAI2oE,EACK7lD,GAAM8lD,EAAI,GAEVA,CAEX;;;;;;;;;;;;;;;;GCaA,SAASG,GAAK/oE,EAAagpE,GAAe,GACxC,OAAO1kD,GAAOlB,MAAK,KACjB7iB,EACuB,IAAnBP,EAAEnB,MAAMY,QACR,IAAM,0CACFO,EAAEnB,MAAMY,oBAEhB,MAAM8xB,EAAIvxB,EAAEnB,MAAM,GACZkX,EAAI/V,EAAEnB,MAAM,GAElB,IAAIoqE,EAAI9nB,GAAI5vB,GACR1a,EAAI0F,GAAMvc,GAEd,MAAMkpE,EAAQ9Q,GAAS,CAAC,CAAC,IAAK,CAAC,EAAG,IAClC,IAAItK,EAAcvxC,GAAM2sD,GAExB,MAAMC,EAAQ53C,GAAKxb,EAAIA,EAAIwb,EAC3B,IAAK,IAAI3tB,EAAI,EAAGA,EAAIulE,IAASvlE,EAAG,CAG9B,MAAMwlE,EAAQvyD,EACRwyD,EAAQvb,EACRwb,EAAQL,GACbnb,EAAGj3C,EAAGoyD,GAAK3kD,GAAOlB,MAAK,KAEtB,MAAMmmD,EAASzmE,GAAM+T,EAAG,CAACjT,EAAGA,GAAI,CAAC2tB,EAAI3tB,EAAG,IAClC4lE,EAAQhP,GAAK+O,GACbE,EAAM3mE,GAAM+T,EAAG,CAACjT,EAAGA,GAAI,CAAC,EAAG,IAG3BT,EAAI47C,GAAM8C,GAAQ4nB,EAAK,GAAIrR,GAAS,CAAC,EAAE,KAAMA,GAAS,CAAC,CAAC,MAExDsR,EAAKnlB,GAAIklB,EAAKj5B,GAAIrtC,EAAGqmE,IACrBG,EAAOr5B,GAAIi5B,EAAQG,GAEvB5b,EADoB,IAAlB6b,EAAK9qE,MAAM,GACT0d,GAAM2sD,GAEN9lE,GACA,CACE8lE,EACApmE,GAAM6mE,EAAM,CAAC,EAAG,GAAI,CAACA,EAAK9qE,MAAM,GAAK,EAAG8qE,EAAK9qE,MAAM,MAGrD,GAEN,MAAM+qE,EAAM9lB,GAAIxT,GAAIjM,GAAOlhC,EAAGumE,GAAKF,IAG7BK,EAAW/mE,GAAM+T,EAAG,CAACjT,EAAG,GAAI,CAAC2tB,EAAI3tB,EAAGmS,IACpC+zD,EAAsBt5B,GAAIo5B,EAAK9b,GAC/Bic,EAAe/kC,GAAU8oB,GAC/B,GAAU,IAANlqD,EACFiT,EAAI0tC,GAAIslB,EAAUxlC,GAAOylC,EAAWzlC,GAAO0lC,EAAIF,SAC1C,CACL,MAAMG,EACFzlB,GAAIslB,EAAUxlC,GAAOylC,EAAWzlC,GAAO0lC,EAAIF,KAC/ChzD,EAAIzT,GAAO,CAACN,GAAM+T,EAAG,CAAC,EAAG,GAAI,CAACjT,EAAGmS,IAAKi0D,GAAY,GAEpD,MAAMC,EAAuBjlC,GAAU8kC,GACjCI,EAAWpnE,GAAMmmE,EAAG,CAAC,EAAGrlE,GAAI,CAAC2tB,EAAG03C,EAAEpqE,MAAM,GAAK+E,IACnD,GAAU,IAANA,EACFqlE,EAAI1kB,GAAI2lB,EAAU7lC,GAAOA,GAAO6lC,EAAUpc,GAAImc,QACzC,CACL,MAAME,EACF5lB,GAAI2lB,EAAU7lC,GAAOA,GAAO6lC,EAAUpc,GAAImc,IAC9ChB,EAAI7lE,GAAO,CAACN,GAAMmmE,EAAG,CAAC,EAAG,GAAI,CAAC13C,EAAG3tB,IAAKumE,GAAY,GAEpD,MAAO,CAACrc,EAAGj3C,EAAGoyD,EAAE,IAElB9pE,GAAQ,CAACiqE,EAAOC,EAAOC,IAQzB,OALKN,GAAgBz3C,EAAIxb,IACvBkzD,EAAInmE,GAAMmmE,EAAG,CAAC,EAAG,GAAI,CAAC13C,EAAGxb,IACzBc,EAAI/T,GAAM+T,EAAG,CAAC,EAAG,GAAI,CAACd,EAAGA,KAGpB,CAACkzD,EAAGpyD,EAAE,GAEjB,CAEO,MAAMuzD,GAAKn9C,GAAG,CAACo9C,IArHtB,SAAarqE,EAAWgpE,GAAe,GAMrC,GALAzoE,EACIP,EAAEiD,MAAQ,GACV,IAAM,gEACFjD,EAAEiD,SAEK,IAAXjD,EAAEiD,KACJ,OAAO8lE,GAAK/oE,EAAegpE,GACtB,CAKL,MAAMsB,EAAgBtqE,EAAEnB,MAAMiE,MAAM,EAAG9C,EAAEnB,MAAMY,OAAS,GAC7BuG,QAAO,CAACrJ,EAAO+Z,IAAS/Z,EAAQ+Z,IACrD6zD,EAAOlR,GACTziB,GACI52C,EACA,CACEsqE,EAAetqE,EAAEnB,MAAMmB,EAAEnB,MAAMY,OAAS,GACxCO,EAAEnB,MAAMmB,EAAEnB,MAAMY,OAAS,KAE/B,GACE+qE,EAAmB,GACnBC,EAAmB,GACzBF,EAAKzlE,SAAQ4lE,IACX,MAAOC,EAAKC,GAAO7B,GAAK2B,EAAiB1B,GACzCwB,EAAKlpE,KAAKqpE,GACVF,EAAKnpE,KAAKspE,EAAI,IAIhB,MAAO,CAFGh0B,GAAQ9zB,GAAM0nD,EAAM,GAAIxqE,EAAEnB,OAC1B+3C,GAAQ9zB,GAAM2nD,EAAM,GAAIzqE,EAAEnB,QAGxC;;;;;;;;;;;;;;;;GCpGA,IAAYgsE,IAAZ,SAAYA,GACVA,EAAAA,EAAI,KAAA,GAAA,OACJA,EAAAA,EAAI,KAAA,GAAA,OACJA,EAAAA,EAAG,IAAA,GAAA,MACHA,EAAAA,EAAsB,uBAAA,GAAA,wBACvB,CALD,CAAYA,KAAAA,GAAS,CAAA,ICkEd,MAAMC,GAAsB79C,GAAG,CAAC89C,qBAzCvC,SACIC,EAAsB3vC,EACtB4vC,EAAYJ,GAAUK,wBACxB,MAAMC,EAAU5+C,GAAgBy+C,EAAQ,SAAU,uBAClD,IAAI3wB,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,wBAGjD,MAAM+vC,EAA4B,MAAZ/wB,EAAoB8wB,EAAU36B,GAAI26B,EAAS9wB,GAEjE,GAAI4wB,IAAcJ,GAAUQ,KAC1B,OAAOD,EAET,GAAIH,IAAcJ,GAAUS,IAC1B,OAAOlrE,GAAIgrE,GAEb,GAAIH,IAAcJ,GAAUU,KAAM,CAChC,GAAgB,MAAZlxB,EACF,OAAOhB,GAAK+xB,GACP,CACL,MAAMI,EAAkBL,EAAQ3pE,KAAO64C,EAAS74C,KAC1CxE,EAASszC,GAAIlwC,GAAIgrE,GAAehrE,GAAIi6C,IAC1C,OAAOmxB,EAAkB,EAAIl7B,GAAItzC,EAAQg3D,GAAOwX,IACnBxuE,GAGjC,GAAIiuE,IAAcJ,GAAUK,uBAAwB,CAClD,GAAgB,MAAZ7wB,EACF,OAAO/J,GAAIlwC,GAAIgrE,GAAepX,GAAOmX,EAAQ3pE,OACxC,CACL,MAAMiqE,EAAqBj7B,GAAI6J,EAAUvwB,GAAKqhD,EAAQtsE,QAEhD6sE,EACFlvD,GAAKpc,GAAI6oD,GAASwiB,EAAoBzX,GAAO,KAAM,WACvD,OAAO1jB,GAAIlwC,GAAIgrE,GAAeM,IAIlC,MAAMrsE,MAAM,sBAAsB4rE,IACpC;;;;;;;;;;;;;;;;GCrBO,MAAMU,GAAqB1+C,GAAG,CAAC2+C,oBAlBtC,SACItmC,EAAsBC,EACtBlK,EACA4vC,EAAYJ,GAAUK,wBACxB,MAAMzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,sBAC5CI,EACFnZ,GAAgBgZ,EAAa,cAAe,sBAChD,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,uBAEjD36B,EACI+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,iCAEvC,MAAMmsE,EAAS57B,GAAImV,GAAI9e,EAASC,IAChC,OAAOolC,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C,ICIO,MAAMY,GAAiB5+C,GAAG,CAAC6+C,gBAlBlC,SACIxmC,EAAsBC,EAA2BviC,EACjDq4B,EACA4vC,EAAYJ,GAAUK,wBACxB,MAAMzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,kBAC5CI,EACFnZ,GAAgBgZ,EAAa,cAAe,kBAChD,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,mBAEjD36B,EACI+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,6BAEvC,MAAMq8D,EAAMlH,GAAO,GACbgX,EAASzmB,GAAI2W,EAAK96D,GAAIowC,GAAI/K,EAASC,GAAe1iC,GAAM,IAC9D,OAAO8nE,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C,ICAO,MAAMc,GAAY9+C,GAAG,CAAC++C,WAlB7B,SACI1mC,EAAsBC,EACtBlK,EACA4vC,EAAYJ,GAAUK,wBACxB,IAAIzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,aAChD,MAAMI,EAAenZ,GAAgBgZ,EAAa,cAAe,aACjE,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,cAEjD36B,EAAkB+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,wBAErD,MAAMq8D,EAAMlH,GAAO,GAEnBvuB,EAAU8e,GAAI/T,GAAIwjB,GAAO,GAAIvuB,GAAUy1B,GACvC,MAAM8P,EAAShY,GAAKzO,GAAI2W,EAAK1qB,GAAI/K,EAASC,KAC1C,OAAOolC,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C;;;;;;;;;;;;;;;;GCSO,MAAMgB,GAAYh/C,GAAG,CAACi/C,WArB7B,SACI5mC,EAAsBC,EACtBlK,EAA6B8wC,EAAQ,EACrClB,EAAYJ,GAAUK,wBACxB,MAAMzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,aAC5CI,EAAenZ,GAAgBgZ,EAAa,cAAe,aACjE,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,cAEjD36B,EAAkB+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,wBAErD,MAAMutE,EAAcpY,GAAOmY,GACrBzoD,EAAQ0rB,GAAImV,GAAI7e,EAAcD,IAC9B4mC,EAAYhlB,GAAQ3jC,EAAO0oD,GAC3BE,EAAS/nB,GAAI7gC,EAAO2oD,GAEpBrB,EACF/rD,GAAIuxB,GAAIwjB,GAAO,IAAMlM,GAAOukB,IAAa77B,GAAI47B,EAAaE,IAC9D,OAAOxB,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C;;;;;;;;;;;;;;;;GCAO,MAAMsB,GAAUt/C,GAAG,CAACu/C,SArB3B,SACIlnC,EAAsBC,EACtBlK,EAA6Bn8B,EAAU,KACvC+rE,EAAYJ,GAAUK,wBACxB,MAAMzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,WAC5CI,EAAenZ,GAAgBgZ,EAAa,cAAe,WACjE,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,YAEjD36B,EAAkB+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,sBAErD,MAAMq8D,EAAMlH,GAAO,GACbyY,EAAgBzY,GAAO90D,GAEvBwtE,EAAK5oB,GAAItT,GAAI/K,EAAS3sB,GAAImG,GAAIymB,EAAc+mC,MAC5CE,EACFn8B,GAAI+T,GAAI2W,EAAKz1B,GAAU3sB,GAAImG,GAAIslC,GAAI2W,EAAKx1B,GAAe+mC,KACrDzB,EAASzmB,GAAImoB,EAAIC,GACvB,OAAO7B,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C;;;;;;;;;;;;;;;;GCTO,MAAM2B,GAAmB3/C,GAAG,CAAC4/C,kBAjBpC,SACIvnC,EAAsBC,EACtBlK,EACA4vC,EAAYJ,GAAUK,wBACxB,MAAMzlC,EAAUlZ,GAAgB+Y,EAAQ,SAAU,oBAC5CI,EACFnZ,GAAgBgZ,EAAa,cAAe,oBAChD,IAAI8U,EAAmB,KACR,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,qBAEjD36B,EACI+kC,EAAQ5mC,MAAO6mC,EAAa7mC,MAAO,+BAEvC,MAAMmsE,EAASvT,GAAkBhyB,EAASC,GAC1C,OAAOolC,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C;;;;;;;;;;;;;;;;GC8DO,MAAM6B,GAAsB7/C,GAAG,CAAC8/C,qBA5BvC,SACIC,EAAgCpoB,EAChCvpB,EAA6B4xC,EAAiB,EAC9ChC,EAAYJ,GAAUK,wBACxB,IAAIgC,EAAoB3gD,GACpBygD,EAAkB,mBAAoB,uBAC1C,MAAMnoB,EAAUt4B,GAAgBq4B,EAAQ,SAAU,uBAClD,IAAIvK,EAAmB,KAOvB,GANe,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,wBAEjD36B,EACIwsE,EAAkBruE,MAAOgmD,EAAQhmD,MAAO,kCAExCouE,EAAiB,EAAG,CACtB,MAAME,EAAuBnZ,GAAOiZ,GAC9B/R,EAAMlH,GAAO,GACbmD,EAAOnD,GAAO,IAEpBkZ,EACIjuD,GAAIuxB,GAAI08B,EAAmB3oB,GAAI2W,EAAKiS,IAChC38B,GAAI2mB,EAAMgW,IAEpB,MAAMnC,EAhFR,SACI1lC,EAAsBsf,GACxB,MAAMnf,EACFlZ,GAAgB+Y,EAAQ,SAAU,iCAChCuf,EACFt4B,GAAgBq4B,EAAQ,SAAU,iCACtClkD,EACI+kC,EAAQ5mC,MAAOgmD,EAAQhmD,MAAO,4CAsBlC,MAAMuuE,EAAYpa,GAAKnO,GACjBwoB,EAAgB78B,GAAIqU,EAASpf,GAC7B6nC,EAAgBlqB,GAAMlsC,GAAI4sC,GAAI1U,GAAIyV,MAExC,OAAO5lC,GAAIslC,GAAI6oB,EAAWC,GAAgBC,EAC5C,CA8CiBC,CAA+BL,EAAmBroB,GAEjE,OAAOimB,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C;;;;;;;;;;;;;;;;GCqCO,MAAMuC,GAAsBvgD,GAAG,CAACwgD,qBA/BvC,SACIC,EAA4B9oB,EAC5BvpB,EAA6B4xC,EAAiB,EAC9ChC,EAAYJ,GAAUK,wBACxB,IAAIyC,EACAphD,GAAgBmhD,EAAc,eAAgB,uBAClD,MAAM7oB,EAAUt4B,GAAgBq4B,EAAQ,SAAU,uBAClD,IAAIvK,EAAmB,KASvB,GAPe,MAAXhf,IACFgf,EAAW9tB,GAAgB8O,EAAS,UAAW,wBAGjD36B,EACIitE,EAAc9uE,MAAOgmD,EAAQhmD,MAAO,kCAEpCouE,EAAiB,EAAG,CACtB,MAAME,EAAuBnZ,GAAOiZ,GAC9B/R,EAAMlH,GAAO,GACbxuB,EAAawuB,GAAO2Z,EAAc9uE,MAAM,IAE9C8uE,EACI1uD,GAAIuxB,GAAIm9B,EAAeppB,GAAI2W,EAAKiS,IAC5B78B,GAAI68B,EAAsB3nC,IAGpC,MAAMwlC,EAvFR,SACI1lC,EAAWsf,EAAWrG,GAAM,GAK9B,IAJa,IAATA,IACFA,EAAMqG,EAAO3hD,KAAO,GAGlBs7C,IAAQqG,EAAO3hD,KAAO,EACxB,MAAM5D,MAEF,mGAAuCulD,EAAO3hD,oBAC/Bs7C,KAGrB,MAAM6F,EACF75B,IAAW,CAAC+a,EAAgBsf,EAAgBn6B,KAI1C,MACMmjD,EAAM7nB,GAAUnB,EAAQ,CAACrG,IADd,GAEXsvB,EAAYtpB,GAAI/nC,GAAKooC,EAAQ,WAAYgpB,GAC/CnjD,EAAK,CAAC6a,EAAQuoC,IAEd,MAAMC,EAAahqB,GAAItT,GAAIq9B,EAAWvoC,IAatC,MAAO,CAAC3oC,MAZSyD,GAAI0tE,EAAY,CAACvvB,IAYnBt2B,SAVEA,CAAC9D,EAAOc,KACvB,MAAOqgB,EAAQuoC,GAAa5oD,EACtB8oD,EAAUtoB,GAAqBthC,EAAGtlB,MAAO,CAAC0/C,IAChD,MAAO,CACL/N,GAAIoG,GAAQzyB,EAAI4pD,GACZxpB,GAAI/nC,GAAK8oB,EAAQ,WAAYpuB,GAAI22D,KACrCr9B,GAAIoG,GAAQzyB,EAAI4pD,GACZxpB,GAAIrtC,GAAI22D,GAAYrxD,GAAK8oB,EAAQ,aACtC,EAEqB,IAG9B,OAAO8e,EAAS9e,EAAQsf,EAC1B,CA+CiBopB,CAA+BL,EAAe9oB,GAE7D,OAAOimB,GAAoBE,EAAQ3wB,EAAU4wB,EAC/C,IC+DMgD,GAAW,KACfnY,QACAE,GACAa,QACAX,UASI+K,GAAS,CACbN,iBACAE,cACAE,SACAO,SAeIjyC,GAAQ,CACZgzC,uCACAwF,kBACAP,GACA/E,kCACAZ,GACAwB,qBACAsD,0BACAI,8BACAE,mCACAC,2BACAE,iCAOIgH,GAAS,CACbnG,YACAU,eACA2B,OAaIY,GAAS,CACbW,sBACAb,uBACAe,kBACAE,aACAE,aACAM,WACAK,oBACAE,uBACAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1PI,MAAgBW,WAAkBzgC,GAiBtC0gC,QAAAA,CAAS9vE,EAAiB+vE,GAAa,EAAO9qB,GAE5C,MAAM5mD,MAACA,EAAK2tB,MAAEA,GAAS7sB,KAAK6wE,iBAAiBhwE,EAAGilD,GAEhD,GAAe,MAAXA,EAAiB,CACnB,MAAMgrB,EACFhrB,EAAQrgD,KAAImX,IAAM,CAACnR,KAAMmR,EAAEnR,KAAMkW,OAAQkL,EAAMjQ,EAAEnR,UACrDzL,KAAK+wE,eAAeD,QAEpB9wE,KAAK+wE,eAAelkD,GAMtB,OAFAnrB,GAAQmrB,GAEJ+jD,EACK1xE,GAEPA,EAAMwC,UACC,KAEX,CAKA,cAAIsvE,GAIF,OAHwB,MAApBhxE,KAAKixE,cACPjxE,KAAKixE,YAAc,GAEdjxE,KAAKixE,WACd,CAEUC,mBAAAA,GACRlxE,KAAKixE,YAAcjxE,KAAKgxE,WAAa,CACvC,CAeAH,gBAAAA,CAAiBhwE,EAAiBilD,GAEhC,OAAOD,GAAchlD,EAAGilD,EAC1B,CAeApkD,OAAAA,GAC0B,MAApB1B,KAAKixE,aACPvvE,GAAQ1B,KAAKixE,YAEjB,CAEA,oBAAME,GAIJ,OAHwB,MAApBnxE,KAAKixE,cACPjxE,KAAKixE,YAAc,GAEd,CACLxlE,KAAM,OAENkW,OAAQ40C,GAAOv2D,KAAKixE,YAAa,SAErC,CAEA,gBAAMG,GACJ,MAAM,IAAIxvE,MAAM,0DAClB,CAEA,gBAAMyvE,CAAWC,GACf,MAAM,IAAI1vE,MAEN,4DAAG5B,KAAKkwC,iBACd,CASU,uBAAMqhC,CAAkBD,GAGhC,OADAtxE,KAAKixE,mBAAqBK,EAAa,GAAG3vD,OAAO1hB,QAAQ,GAClDqxE,EAAajsE,MAAM,EAC5B,EAGF0F,OAAOoU,eAAeuxD,GAAWtxD,OAAOC,YAAa,CACnDngB,MAAQogB,GACsB,MAArBA,EAASqxD,UAAiD,MAA7BrxD,EAASuxD,kBACd,MAA3BvxD,EAASyxD;;;;;;;;;;;;;;;;;AC3IX,MAAOS,WAA0Bd,GAMrC7wE,WAAAA,CACc4xE,EAAgCC,EAChCjwE,EAAkB,MAC9Bie,QAFY1f,KAAAyxE,aAAAA,EAAgCzxE,KAAA0xE,IAAAA,EAChC1xE,KAAAyB,QAAAA,EALNzB,KAAA2xE,iBAAwC,GACxC3xE,KAAA4xE,mBAA0C,GAOjC,MAAXnwE,IACFzB,KAAKyB,QAAUolB,GAAO/mB,QAAQ2B,UAElC,CAEAsvE,cAAAA,CAAec,IACSnuE,MAAMC,QAAQkuE,GAChCA,EAAkBpsE,KAAIujB,GAAQA,EAAKvd,OACnCV,OAAOsZ,KAAKwtD,IAEFxqE,SAAQ,CAACoE,EAAM5I,KAC3B,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACnCwT,GAAY,EACc,MAA5Bjf,KAAK2xE,iBAAiB9uE,KACxB7C,KAAK2xE,iBAAiB9uE,GAAK,CACzBivE,aAAc,GAAGrmE,eACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAGjB,MAA9Bjf,KAAK4xE,mBAAmB/uE,KAC1B7C,KAAK4xE,mBAAmB/uE,GAAK,CAC3BivE,aAAc,GAAGrmE,cACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAInD,MAAMwL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAGF,MAAMsnD,EAAkB/xE,KAAK2xE,iBAAiB9uE,GAAGmc,SAC3CgzD,EAAoBhyE,KAAK4xE,mBAAmB/uE,GAAGmc,SAErD2G,IAAK,KACH,MAAMssD,EACFzwD,GAAIuxB,GAAIg/B,EAAiB/xE,KAAK0xE,KAC1B3+B,GAAIsX,GAAO5/B,GAAW,EAAIzqB,KAAK0xE,MAEjClmC,EACFuH,GAAIF,GAAIvuC,GAAKkd,GAAIwwD,EAAmBhyE,KAAKyB,UACjC6C,GAAKkd,GAAIuwD,EAAiB/xE,KAAKyB,WACnCgpB,GAEFynD,EACF1wD,GAAIuxB,GAAIi/B,EAAmBhyE,KAAK0xE,KAC5B3+B,GAAIsX,GAAO7e,GAAU,EAAIxrC,KAAK0xE,MAEtCK,EAAgB/mE,OAAOinE,GACvBD,EAAkBhnE,OAAOknE,GAEzB,MAAMvyD,EAAW6B,GAAIuxB,GAAIvH,GAAUxrC,KAAKyxE,cAAevyE,GACvDA,EAAM8L,OAAO2U,EAAS,GACtB,IAEJ3f,KAAKkxE,qBACP,CAEAxvE,OAAAA,GACiC,MAA3B1B,KAAK4xE,qBACPlwE,GAAQ1B,KAAK2xE,iBAAiBlsE,KAAImX,GAAKA,EAAEoC,YACzCtd,GAAQ1B,KAAK4xE,mBAAmBnsE,KAAImX,GAAKA,EAAEoC,YAE/C,CAEA,gBAAMoyD,GAEJ,MAAMe,EACF,IAAInyE,KAAK2xE,oBAAqB3xE,KAAK4xE,oBACvC,MAAO,OAAO5xE,KAAKmxE,kBAAkBxrE,OACjCwsE,EAAU1sE,KAAImX,IAAM,CAACnR,KAAMmR,EAAEk1D,aAAcnwD,OAAQ/E,EAAEoC,aAC3D,CAEA,gBAAMqyD,CAAWC,GAEf,MAAMc,GADNd,QAAqBtxE,KAAKuxE,kBAAkBD,IACTtvE,OAAS,EACtCid,GAAY,EAClBjf,KAAK2xE,iBACDL,EAAajsE,MAAM,EAAG+sE,GAAe3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SACfC,OAEnDjf,KAAK4xE,mBACDN,EAAajsE,MAAM+sE,EAA+B,EAAhBA,GAC7B3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SAASC,MAE7C,CAEAozD,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrBC,IAAO1xE,KAAK0xE,IACZjwE,QAAWzB,KAAKyB,QAEpB,CAGA,iBAAO2uC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EAAIl5B,EAAqB,aAAGA,EAAY,IAAGA,EAAgB,QACxE,EAlHOq6D,GAAArhC,UAAY,WAoHrBO,GAAc8gC;;;;;;;;;;;;;;;;;ACtHR,MAAOc,WAAyB5B,GAMpC7wE,WAAAA,CACc4xE,EAA8Bc,EAA0B,IACpE7yD,QADY1f,KAAAyxE,aAAAA,EAA8BzxE,KAAAuyE,wBAAAA,EAHpCvyE,KAAA2xE,iBAAwC,EAKhD,CAEAZ,cAAAA,CAAec,IACSnuE,MAAMC,QAAQkuE,GAChCA,EAAkBpsE,KAAIujB,GAAQA,EAAKvd,OACnCV,OAAOsZ,KAAKwtD,IAEFxqE,SAAQ,CAACoE,EAAM5I,KAC3B,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACzC,GAAgC,MAA5BzL,KAAK2xE,iBAAiB9uE,GAAY,CACpC,MAAMoc,GAAY,EAClBjf,KAAK2xE,iBAAiB9uE,GAAK,CACzBivE,aAAc,GAAGrmE,gBACjBuT,SAAU2G,IACN,IAAM9J,GAAK3c,EAAMkC,MAAOpB,KAAKuyE,yBAClBvzD,SAASC,MAI5B,MAAMwL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAGF,MAAMsnD,EAAkB/xE,KAAK2xE,iBAAiB9uE,GAAGmc,SAEjD2G,IAAK,KACH,MAAMssD,EAAqBzwD,GAAIuwD,EAAiB1nB,GAAO5/B,IACvDsnD,EAAgB/mE,OAAOinE,GAEvB,MAAMtyD,EAAW6B,GACbuxB,GAAIF,GAAIpoB,EACAnmB,GAAKkd,GAAIywD,EAAoBprD,GAAO/mB,QAAQ2B,cAC/CzB,KAAKyxE,cACVvyE,GACJA,EAAM8L,OAAO2U,EAAS,GACtB,IAEJ3f,KAAKkxE,qBACP,CAEAxvE,OAAAA,GAC+B,MAAzB1B,KAAK2xE,kBACPjwE,GAAQ1B,KAAK2xE,iBAAiBlsE,KAAImX,GAAKA,EAAEoC,WAE7C,CAEA,gBAAMoyD,GAEJ,MAAO,OAAOpxE,KAAKmxE,kBAAkBxrE,OAAO3F,KAAK2xE,iBAAiBlsE,KAC9DmX,IAAM,CAACnR,KAAMmR,EAAEk1D,aAAcnwD,OAAQ/E,EAAEoC,aAC7C,CAEA,gBAAMqyD,CAAWC,GACfA,QAAqBtxE,KAAKuxE,kBAAkBD,GAE5CtxE,KAAK2xE,iBAAmBL,EAAa7rE,KACjCmX,IAAM,CAACk1D,aAAcl1D,EAAEnR,KAAMuT,SAAUpC,EAAE+E,OAAO3C,SAFlC,UAGpB,CAEAqzD,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrBc,wBAA2BvyE,KAAKuyE,wBAEpC,CAGA,iBAAOniC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EAAIl5B,EAAqB,aAAGA,EAAgC,wBACzE,EAhFOm7D,GAAAniC,UAAY,UAkFrBO,GAAc4hC;;;;;;;;;;;;;;;;;ACjFR,MAAOE,WAAsB9B,GASjC7wE,WAAAA,CACc4xE,EAAgCgB,EAChCC,EAAyBjxE,EAAkB,MACvDie,QAFY1f,KAAAyxE,aAAAA,EAAgCzxE,KAAAyyE,MAAAA,EAChCzyE,KAAA0yE,MAAAA,EAAyB1yE,KAAAyB,QAAAA,EAL/BzB,KAAA2yE,uBAA8C,GAC9C3yE,KAAA4yE,wBAA+C,GAMrDjtD,IAAK,KAEH3lB,KAAK6yE,SAAWtc,GAAOkc,GAAOzzD,WAC9Bhf,KAAK8yE,SAAWvc,GAAOmc,GAAO1zD,UAAU,IAG3B,MAAXvd,IACFzB,KAAKyB,QAAUolB,GAAO/mB,QAAQ2B,UAElC,CAEAsvE,cAAAA,CAAec,GACb,MAAMkB,EAAWrvE,MAAMC,QAAQkuE,GAC3BA,EAAkBpsE,KAAImX,GAAKA,EAAEnR,OAC7BV,OAAOsZ,KAAKwtD,GAChBlsD,IAAK,KACH,MAAMqtD,EAAmBlsB,GAAI,EAAG9mD,KAAK6yE,UAC/BI,EAAmBnsB,GAAI,EAAG9mD,KAAK8yE,UAErCC,EAAS1rE,SAAQ,CAACoE,EAAM5I,KACtB,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACnCwT,GAAY,EACoB,MAAlCjf,KAAK2yE,uBAAuB9vE,KAC9B7C,KAAK2yE,uBAAuB9vE,GAAK,CAC/BivE,aAAc,GAAGrmE,MACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAGZ,MAAnCjf,KAAK4yE,wBAAwB/vE,KAC/B7C,KAAK4yE,wBAAwB/vE,GAAK,CAChCivE,aAAc,GAAGrmE,MACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAInD,MAAMwL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAGF,MAAMyoD,EAAclzE,KAAK2yE,uBAAuB9vE,GAAGmc,SAC7Cm0D,EAAenzE,KAAK4yE,wBAAwB/vE,GAAGmc,SAE/Co0D,EACF5xD,GAAIuxB,GAAImgC,EAAalzE,KAAKyyE,OAAQ1/B,GAAItoB,EAAU,EAAIzqB,KAAKyyE,QACvDY,EACF7xD,GAAIuxB,GAAIogC,EAAcnzE,KAAK0yE,OACvB3/B,GAAIsX,GAAO5/B,GAAW,EAAIzqB,KAAK0yE,QAEjCY,EAA2BzgC,GAAIugC,EAAgBJ,GAC/CO,EACF1gC,GAAIwgC,EAAiBJ,GAEzBC,EAAYloE,OAAOooE,GACnBD,EAAanoE,OAAOqoE,GAEpB,MAAM1zD,EACF6B,GAAIuxB,GAAIF,GAAIygC,EACA9xD,GAAIld,GAAKivE,GAA4BvzE,KAAKyB,WAC7CzB,KAAKyxE,cACVvyE,GACRA,EAAM8L,OAAO2U,EAAS,IAGxB3f,KAAK6yE,SAAS7nE,OAAO+nC,GAAI/yC,KAAK6yE,SAAU7yE,KAAKyyE,QAC7CzyE,KAAK8yE,SAAS9nE,OAAO+nC,GAAI/yC,KAAK8yE,SAAU9yE,KAAK0yE,OAAO,IAEtD1yE,KAAKkxE,qBACP,CAEAxvE,OAAAA,GACE1B,KAAK6yE,SAASnxE,UACd1B,KAAK8yE,SAASpxE,UAEqB,MAA/B1B,KAAK2yE,wBACPjxE,GAAQ1B,KAAK2yE,uBAAuBltE,KAAImX,GAAKA,EAAEoC,YAEb,MAAhChf,KAAK4yE,yBACPlxE,GAAQ1B,KAAK4yE,wBAAwBntE,KAAImX,GAAKA,EAAEoC,WAEpD,CAEA,gBAAMoyD,GAEJ,MAAMe,EACF,IAAInyE,KAAK2yE,0BAA2B3yE,KAAK4yE,yBAC7C,MAAO,OAAO5yE,KAAKmxE,kBAAkBxrE,OACjCwsE,EAAU1sE,KAAImX,IAAM,CAACnR,KAAMmR,EAAEk1D,aAAcnwD,OAAQ/E,EAAEoC,aAC3D,CAEA,gBAAMqyD,CAAWC,GACfA,QAAqBtxE,KAAKuxE,kBAAkBD,GAC5C3rD,IAAK,KACH3lB,KAAK6yE,SAAS7nE,OAAOsjD,GAAItuD,KAAKyyE,MAAOzyE,KAAKixE,YAAc,IACxDjxE,KAAK8yE,SAAS9nE,OAAOsjD,GAAItuD,KAAK0yE,MAAO1yE,KAAKixE,YAAc,GAAG,IAG7D,MAAMmB,EAAgBd,EAAatvE,OAAS,EACtCid,GAAY,EAClBjf,KAAK2yE,uBACDrB,EAAajsE,MAAM,EAAG+sE,GAAe3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SACfC,OAEnDjf,KAAK4yE,wBACDtB,EAAajsE,MAAM+sE,EAA+B,EAAhBA,GAC7B3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SAASC,MAE7C,CAEAozD,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrBgB,MAASzyE,KAAKyyE,MACdC,MAAS1yE,KAAK0yE,MACdjxE,QAAWzB,KAAKyB,QAEpB,CAGA,iBAAO2uC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EACPl5B,EAAqB,aAAGA,EAAc,MAAGA,EAAc,MACvDA,EAAgB,QACtB,EA7IOq7D,GAAAriC,UAAY,OA+IrBO,GAAc8hC;;;;;;;;;;;;;;;;;AClJR,MAAOgB,WAAwB9C,GASnC7wE,WAAAA,CACc4xE,EAAgCgB,EAChCC,EAAyBjxE,EAAkB,KAC3C47D,EAAQ,GACpB39C,QAHY1f,KAAAyxE,aAAAA,EAAgCzxE,KAAAyyE,MAAAA,EAChCzyE,KAAA0yE,MAAAA,EAAyB1yE,KAAAyB,QAAAA,EACzBzB,KAAAq9D,MAAAA,EANNr9D,KAAA2yE,uBAA8C,GAC9C3yE,KAAAyzE,2BAAkD,GAQxD9tD,IAAK,KACH3lB,KAAK0zE,UAAYnd,GAAO,GAAGv3C,WAC3Bhf,KAAK6yE,SAAWtc,GAAOkc,GAAOzzD,UAAU,IAG3B,MAAXvd,IACFzB,KAAKyB,QAAUolB,GAAO/mB,QAAQ2B,UAElC,CAEAsvE,cAAAA,CAAec,GACb,MAAM8B,EAAgBjwE,MAAMC,QAAQkuE,GAChCA,EAAkBpsE,KAAIujB,GAAQA,EAAKvd,OACnCV,OAAOsZ,KAAKwtD,GAEhBlsD,IAAK,KACH,MAAMqtD,EAAmBlsB,GAAI,EAAG9mD,KAAK6yE,UAC/Be,EACF/gC,IAAK7yC,KAAKyxE,aAAcjwD,GAAIuxB,GAAI/yC,KAAK0zE,UAAW1zE,KAAKq9D,OAAQ,IAEjEsW,EAActsE,SAAQ,CAACoE,EAAM5I,KAC3B,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACnCwT,GAAY,EACoB,MAAlCjf,KAAK2yE,uBAAuB9vE,KAC9B7C,KAAK2yE,uBAAuB9vE,GAAK,CAC/BivE,aAAc,GAAGrmE,MACjBuT,SAAU6iC,GAAU3iD,GAAO8f,SAASC,KAGE,MAAtCjf,KAAKyzE,2BAA2B5wE,KAClC7C,KAAKyzE,2BAA2B5wE,GAAK,CACnCivE,aAAc,GAAGrmE,MACjBuT,SAAU6iC,GAAU3iD,GAAO8f,SAASC,KAIxC,MAAMwL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAGF,MAAMyoD,EAAclzE,KAAK2yE,uBAAuB9vE,GAAGmc,SAC7C60D,EAAkB7zE,KAAKyzE,2BAA2B5wE,GAAGmc,SAErDo0D,EACF5xD,GAAIuxB,GAAImgC,EAAalzE,KAAKyyE,OAAQ1/B,GAAItoB,EAAU,EAAIzqB,KAAKyyE,QAEvDqB,EAAM/gC,GAAI8gC,EAAiB7zE,KAAK0yE,OAChCqB,EAAMpiC,GAAIlnB,GAEVupD,EAAqBxqB,GAAQsqB,EAAKC,GAExCb,EAAYloE,OAAOooE,GACnBS,EAAgB7oE,OAAOgpE,GAEvB,MAAMr0D,EACF6B,GAAIuxB,GAAIF,GAAI+gC,EAAIZ,GACRngC,GAAIugC,EAAgB5xD,GAAIwyD,EAAoBh0E,KAAKyB,WACrDvC,GAERA,EAAM8L,OAAO2U,EAAS,IAGxB3f,KAAK0zE,UAAU1oE,OAAOwW,GAAIxhB,KAAK0zE,UAAW,IAC1C1zE,KAAK6yE,SAAS7nE,OAAO+nC,GAAI/yC,KAAK6yE,SAAU7yE,KAAKyyE,OAAO,IAEtDzyE,KAAKkxE,qBACP,CAEAxvE,OAAAA,GACE1B,KAAK6yE,SAASnxE,UACd1B,KAAK0zE,UAAUhyE,UAEoB,MAA/B1B,KAAK2yE,wBACPjxE,GAAQ1B,KAAK2yE,uBAAuBltE,KAAImX,GAAKA,EAAEoC,YAEV,MAAnChf,KAAKyzE,4BACP/xE,GAAQ1B,KAAKyzE,2BAA2BhuE,KAAImX,GAAKA,EAAEoC,WAEvD,CAEA,gBAAMoyD,GACJ,MAAM,IAAIxvE,MAAM,kDAClB,CAEA,gBAAMyvE,CAAWC,GACf,MAAM,IAAI1vE,MAAM,kDAClB,CAEAywE,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrBgB,MAASzyE,KAAKyyE,MACdC,MAAS1yE,KAAK0yE,MACdjxE,QAAWzB,KAAKyB,QAChB47D,MAASr9D,KAAKq9D,MAElB,CAGA,iBAAOjtB,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EACPl5B,EAAqB,aAAGA,EAAc,MAAGA,EAAc,MACvDA,EAAgB,QAAGA,EAAc,MACvC,EAxHOq8D,GAAArjC,UAAY,SA0HrBO,GAAc8iC;;;;;;;;;;;;;;;;;AChIR,MAAOS,WAAqBvD,GAKhC7wE,WAAAA,CAAsB4xE,GACpB/xD,QADoB1f,KAAAyxE,aAAAA,EAEpBzxE,KAAKk0E,gBAAgBzC,EACvB,CAEAV,cAAAA,CAAec,IACInuE,MAAMC,QAAQkuE,GAC3BA,EAAkBpsE,KAAImX,GAAKA,EAAEnR,OAC7BV,OAAOsZ,KAAKwtD,IACPxqE,SAAQ,CAACoE,EAAM5I,KACtB,MAAM4nB,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAEF,MAAMvrB,EAAQ2nB,GAAO5E,oBAAoBxW,GACzCka,IAAK,KACH,MAAMhG,EAAW6B,GAAIuxB,GAAI/yC,KAAKyI,EAAGgiB,GAAWvrB,GAC5CA,EAAM8L,OAAO2U,EAAS,GACtB,IAEJ3f,KAAKkxE,qBACP,CAKAgD,eAAAA,CAAgBzC,GACdzxE,KAAKyxE,aAAeA,EACN,MAAVzxE,KAAKyI,GACPzI,KAAKyI,EAAE/G,UAET1B,KAAKyI,EAAI8f,GAAKguC,IAAQkb,GACxB,CAEA/vE,OAAAA,GACE1B,KAAKyI,EAAE/G,SACT,CAEA,gBAAM0vE,GACJ,MAAO,OAAOpxE,KAAKmxE,iBACrB,CAEA,gBAAME,CAAWC,GAEf,GAA4B,KAD5BA,QAAqBtxE,KAAKuxE,kBAAkBD,IAC3BtvE,OACf,MAAM,IAAIJ,MAAM,gDAEpB,CAEAywE,SAAAA,GACE,MAAO,CAACZ,aAAgBzxE,KAAKyxE,aAC/B,CAGA,iBAAOrhC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EAAIl5B,EAAqB,aACtC,EA9DO88D,GAAA9jC,UAAY,MAgErBO,GAAcujC;;;;;;;;;;;;;;;;;AChER,MAAOE,WAA0BF,GAMrCp0E,WAAAA,CACc4xE,EAA8B2C,EAChCC,GAAc,GACxB30D,MAAM+xD,GAFMzxE,KAAAyxE,aAAAA,EAA8BzxE,KAAAo0E,SAAAA,EAChCp0E,KAAAq0E,YAAAA,EAJJr0E,KAAAs0E,cAAqC,GAM3Ct0E,KAAK8zB,EAAIyiC,GAAOv2D,KAAKo0E,SACvB,CAEArD,cAAAA,CAAec,IACSnuE,MAAMC,QAAQkuE,GAChCA,EAAkBpsE,KAAIujB,GAAQA,EAAKvd,OACnCV,OAAOsZ,KAAKwtD,IAEFxqE,SAAQ,CAACoE,EAAM5I,KAC3B,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACzC,GAA6B,MAAzBzL,KAAKs0E,cAAczxE,GAAY,CACjC,MAAMoc,GAAY,EAClBjf,KAAKs0E,cAAczxE,GAAK,CACtBivE,aAAc,GAAGrmE,aACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,MAInD,MAAMs1D,EAAev0E,KAAKs0E,cAAczxE,GAAGmc,SACrCyL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACN,MAAZgf,GAIJ9E,IAAK,KACH,IAAIhG,EACJ,MAAM60D,EAAkBhzD,GAAIuxB,GAAI/yC,KAAK8zB,EAAGygD,GAAe9pD,GAErD9K,EADE3f,KAAKq0E,YACI7yD,GACPuxB,GAAI/yC,KAAKyI,EAAG+Y,GAAIiJ,EAAUsoB,GAAIyhC,EAAiBx0E,KAAK8zB,KAAM50B,GAEnDsiB,GAAIuxB,GAAI/yC,KAAKyI,EAAG+rE,GAAkBt1E,GAE/Cq1E,EAAavpE,OAAOwpE,GACpBt1E,EAAM8L,OAAO2U,EAAS,GACtB,IAEJ3f,KAAKkxE,qBACP,CAEAxvE,OAAAA,GACE1B,KAAK8zB,EAAEpyB,UACmB,MAAtB1B,KAAKs0E,eACP5yE,GAAQ1B,KAAKs0E,cAAc7uE,KAAImX,GAAKA,EAAEoC,WAE1C,CAOAy1D,WAAAA,CAAYL,GACVp0E,KAAKo0E,SAAWA,CAClB,CAEA,gBAAMhD,GAEJ,MAAO,OAAOpxE,KAAKmxE,kBAAkBxrE,OAAO3F,KAAKs0E,cAAc7uE,KAC3DmX,IAAM,CAACnR,KAAMmR,EAAEk1D,aAAcnwD,OAAQ/E,EAAEoC,aAC7C,CAEA,gBAAMqyD,CAAWC,GACfA,QAAqBtxE,KAAKuxE,kBAAkBD,GAE5CtxE,KAAKs0E,cAAgBhD,EAAa7rE,KAC9BmX,IAAM,CAACk1D,aAAcl1D,EAAEnR,KAAMuT,SAAUpC,EAAE+E,OAAO3C,SAFlC,UAGpB,CAEAqzD,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrB2C,SAAYp0E,KAAKo0E,SACjBC,YAAer0E,KAAKq0E,YAExB,CAGA,iBAAOjkC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EACPl5B,EAAqB,aAAGA,EAAiB,SAAGA,EAAoB,YACtE,EA5FOg9D,GAAAhkC,UAAY,WA8FrBO,GAAcyjC;;;;;;;;;;;;;;;;;AC/FR,MAAOO,WAAyBhE,GASpC7wE,WAAAA,CACc4xE,EAAgCpU,EAAQ,GACxC+W,EAAW,EAAe3yE,EAAkB,KACtDkzE,GAAW,GAQb,GAPAj1D,QAHY1f,KAAAyxE,aAAAA,EAAgCzxE,KAAAq9D,MAAAA,EAChCr9D,KAAAo0E,SAAAA,EAA0Bp0E,KAAAyB,QAAAA,EANhCzB,KAAA40E,uBAA8C,GAC9C50E,KAAA60E,mBAA0C,GAC1C70E,KAAA80E,qBAA4C,GAQlD90E,KAAK20E,SAAWA,EAED,MAAXlzE,IACFzB,KAAKyB,QAAUolB,GAAO/mB,QAAQ2B,WAEZ,MAAhBgwE,EACF,MAAM,IAAI7vE,MAAM,qDAEpB,CAEAmvE,cAAAA,CAAec,IACSnuE,MAAMC,QAAQkuE,GAChCA,EAAkBpsE,KAAIujB,GAAQA,EAAKvd,OACnCV,OAAOsZ,KAAKwtD,IAEFxqE,SAAQ,CAACoE,EAAM5I,KAC3B,MAAM3D,EAAQ2nB,GAAO5E,oBAAoBxW,GACnCwT,GAAY,EACoB,MAAlCjf,KAAK40E,uBAAuB/xE,KAC9B7C,KAAK40E,uBAAuB/xE,GAAK,CAC/BivE,aAAc,GAAGrmE,QACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAGjB,MAA9Bjf,KAAK60E,mBAAmBhyE,KAC1B7C,KAAK60E,mBAAmBhyE,GAAK,CAC3BivE,aAAc,GAAGrmE,aACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAGf,MAAhCjf,KAAK80E,qBAAqBjyE,IAAc7C,KAAK20E,WAC/C30E,KAAK80E,qBAAqBjyE,GAAK,CAC7BivE,aAAc,GAAGrmE,OACjBuT,SAAU2G,IAAK,IAAMk8B,GAAU3iD,GAAO8f,SAASC,OAInD,MAAMwL,EAAW/mB,MAAMC,QAAQkuE,GAC3BA,EAAkBhvE,GAAG8e,OACrBkwD,EAAkBpmE,GACtB,GAAgB,MAAZgf,EACF,OAGF,MAAMsqD,EAAwB/0E,KAAK40E,uBAAuB/xE,GAAGmc,SACvD61D,EAAqB70E,KAAK60E,mBAAmBhyE,GAAGmc,SACtD2G,IAAK,KACH,MAAMqvD,EACFxzD,GAAIuxB,GAAIgiC,EAAuB/0E,KAAKq9D,OAChCtqB,GAAIsX,GAAO5/B,GAAW,EAAIzqB,KAAKq9D,QAEvC,GAAIr9D,KAAK20E,SAAU,CACjB,MAAMM,EAAsBj1E,KAAK80E,qBAAqBjyE,GAAGmc,SAEnDk2D,EACF1zD,GAAIuxB,GAAIkiC,EAAqBj1E,KAAKq9D,OAC9BtqB,GAAItoB,EAAU,EAAIzqB,KAAKq9D,QAEzB8X,EACFtiC,GAAIE,GAAItoB,EAAUzqB,KAAKyxE,cACnBntE,GACIwiD,GAAIkuB,EACAxzD,GAAI6oC,GAAO6qB,GAAyBl1E,KAAKyB,YACnD2zE,EACF5zD,GAAIuxB,GAAI8hC,EAAoB70E,KAAKo0E,UAAWe,GAEhDJ,EAAsB/pE,OAAOgqE,GAC7BC,EAAoBjqE,OAAOkqE,GAC3BL,EAAmB7pE,OAAOoqE,GAE1B,MAAMz1D,EAAWmnC,GAAI5nD,EAAOk2E,GAC5Bl2E,EAAM8L,OAAO2U,OACR,CAEL,MAAMq1D,EACFxzD,GAAIuxB,GAAIgiC,EAAuB/0E,KAAKq9D,OAChCtqB,GAAIsX,GAAO5/B,GAAW,EAAIzqB,KAAKq9D,QAEjC+X,EACF5zD,GAAIuxB,GAAI8hC,EAAoB70E,KAAKo0E,UAC7BvhC,GAAIE,GAAItoB,EAAUzqB,KAAKyxE,cACnBntE,GAAKkd,GAAIwzD,EAA0Bh1E,KAAKyB,YAEpDszE,EAAsB/pE,OAAOgqE,GAC7BH,EAAmB7pE,OAAOoqE,GAE1B,MAAMz1D,EAAWmnC,GAAI5nD,EAAOk2E,GAC5Bl2E,EAAM8L,OAAO2U,MAEf,IAEJ3f,KAAKkxE,qBACP,CAEAxvE,OAAAA,GACqC,MAA/B1B,KAAK40E,wBACPlzE,GAAQ1B,KAAK40E,uBAAuBnvE,KAAImX,GAAKA,EAAEoC,YAEhB,MAA7Bhf,KAAK80E,sBAAgC90E,KAAK20E,UAC5CjzE,GAAQ1B,KAAK80E,qBAAqBrvE,KAAImX,GAAKA,EAAEoC,YAEhB,MAA3Bhf,KAAK60E,oBACPnzE,GAAQ1B,KAAK60E,mBAAmBpvE,KAAImX,GAAKA,EAAEoC,WAE/C,CAEA,gBAAMoyD,GAEJ,MAAMe,EACF,IAAInyE,KAAK40E,0BAA2B50E,KAAK60E,oBAI7C,OAHI70E,KAAK20E,UACPxC,EAAUtuE,QAAQ7D,KAAK80E,sBAElB,OAAO90E,KAAKmxE,kBAAkBxrE,OACjCwsE,EAAU1sE,KAAImX,IAAM,CAACnR,KAAMmR,EAAEk1D,aAAcnwD,OAAQ/E,EAAEoC,aAC3D,CAEA,gBAAMqyD,CAAWC,GACfA,QAAqBtxE,KAAKuxE,kBAAkBD,GAC5C,MAAMc,EACFpyE,KAAK20E,SAAWrD,EAAatvE,OAAS,EAAIsvE,EAAatvE,OAAS,EAC9Did,GAAY,EAClBjf,KAAK40E,uBACDtD,EAAajsE,MAAM,EAAG+sE,GAAe3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SACfC,OAEnDjf,KAAK60E,mBACDvD,EAAajsE,MAAM+sE,EAA+B,EAAhBA,GAC7B3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SAASC,OAEvCjf,KAAK20E,WACP30E,KAAK80E,qBACDxD,EAAajsE,MAAsB,EAAhB+sE,EAAmC,EAAhBA,GACjC3sE,KAAImX,IAAM,CACJk1D,aAAcl1D,EAAEnR,KAChBuT,SAAUpC,EAAE+E,OAAO3C,SAASC,OAG/C,CAEAozD,SAAAA,GACE,MAAO,CACLZ,aAAgBzxE,KAAKyxE,aACrBpU,MAASr9D,KAAKq9D,MACd+W,SAAYp0E,KAAKo0E,SACjB3yE,QAAWzB,KAAKyB,QAChBkzE,SAAY30E,KAAK20E,SAErB,CAGA,iBAAOvkC,CACHC,EAAiCl5B,GACnC,OAAO,IAAIk5B,EACPl5B,EAAqB,aAAGA,EAAc,MAAGA,EAAiB,SAC1DA,EAAgB,QAAGA,EAAiB,SAC1C,EA7KOu9D,GAAAvkC,UAAY,UA+KrBO,GAAcgkC;;;;;;;;;;;;;;;;;ACxLR,MAAOW,GAsCX,UAAOC,CAAI7D,GACT,OAAO,IAAIwC,GAAaxC,EAC1B,CAiBA,eAAO2C,CAAS3C,EAAsB2C,EAAkBC,GAAc,GAEpE,OAAO,IAAIF,GAAkB1C,EAAc2C,EAAUC,EACvD,CAsBA,cAAOkB,CACH9D,EAAsBpU,EAAQ,GAAI+W,EAAW,EAAK3yE,EAAkB,KACpEkzE,GAAW,GACb,OAAO,IAAID,GACPjD,EAAcpU,EAAO+W,EAAU3yE,EAASkzE,EAC9C,CAcA,WAAOa,CACH/D,EAAe,KAAOgB,EAAQ,GAAKC,EAAQ,KAC3CjxE,EAAkB,MACpB,OAAO,IAAI+wE,GAAcf,EAAcgB,EAAOC,EAAOjxE,EACvD,CAcA,eAAOg0E,CAAShE,EAAe,KAAMC,EAAM,IAAKjwE,EAAkB,MAEhE,OAAO,IAAI+vE,GAAkBC,EAAcC,EAAKjwE,EAClD,CAeA,aAAOi0E,CACHjE,EAAe,KAAOgB,EAAQ,GAAKC,EAAQ,KAAOjxE,EAAkB,KACpE47D,EAAQ,GACV,OAAO,IAAImW,GAAgB/B,EAAcgB,EAAOC,EAAOjxE,EAAS47D,EAClE,CAkBA,cAAOsY,CAAQlE,EAAsBc,EAA0B,IAE7D,OAAO,IAAID,GAAiBb,EAAcc,EAC5C;;;;;;;;;;;;;;;;GC5JK,MAAMqD,GAAQ,CACnBN,IAAKD,GAAsBC,IAC3BlB,SAAUiB,GAAsBjB,SAChCqB,SAAUJ,GAAsBI,SAChCE,QAASN,GAAsBM,QAC/BJ,QAASF,GAAsBE,QAC/BG,OAAQL,GAAsBK,OAC9BF,KAAMH,GAAsBG,MCrBxBK,GACiC,oBAA1BC,sBACFA,sBAC0B,oBAAjBC,aACTA,aAEDl1E,GAAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJpB,SAAUm1E,GAAuBC,EAAoB1wE,GACzD,MAAMC,EAAOywE,EAAO,GAAGj0E,OACvBi0E,EAAO5uE,SAAQ,CAACjG,EAAOyB,KACrBoV,EACI7W,EAAMY,SAAWwD,GACjB,IACI,kBAAkBA,uBAA0B3C,gDAChB2C,MAAQ,IAG9CyS,EACI1S,GAAQ,GAAKA,EAAOC,GACpB,IAAM,kBAAkBA,kCAAqCA,EAAO,OAExE,MAAM0wE,EAAaD,EAAO,GAC1BA,EAAO5uE,SAAQ,CAACjG,EAAOyB,KACrB,IAAK,IAAIuW,EAAI,EAAGA,EAAI5T,EAAM4T,IACxBnB,EACKmB,IAAM7T,GAAUnE,EAAMgY,KAAO88D,EAAW98D,IACzC,IAAM,kBAAkB5T,wBAA2B3C,OAAOzB,4CACb80E,sCACNrzE,SAGjD,CAEM,SAAU2pC,GAAgBypC,EAAoB1wE,GAClD,MAAMs5C,EAAco3B,EAAO,GAAG5wE,QAC9B,IAAK,IAAIxC,EAAI,EAAGA,EAAIozE,EAAOj0E,OAAQa,IACjCg8C,EAAYt5C,IAAS0wE,EAAOpzE,GAAG0C,GAEjC,OAAOs5C,CACT;;;;;;;;;;;;;;;;GC5BO,MAAMs3B,GAAwB,GAS/B,SAAUC,GAAyBC,GACvC,OAAIA,GAAUF,GACLE,EAEFxuE,EAAewuE,EAAQl0E,KAAKiH,MAAMjH,KAAKmC,KAAK+xE,IACrD;;;;;;;;;;;;;;;;GCnBM,SAAUC,GACZpR,EAAiCqR,EACjCC,GAKF,MAAO,CAHHA,GAAgC,iBAAXtR,EAAsBA,EAASA,EAAO,IAE3DqR,GAAiC,iBAAXrR,EAAsBA,EAASA,EAAO,IAElE;;;;;;;;;;;;;;;;GCDM,SAAUuR,GACZt7D,EAAsBogC,EAAsBE,EAC5Ci7B,GAAe,GACjB,IAAIC,EAAqB,GACzB,GAAID,EACFC,EAAWA,EAAShxE,OAAO41C,EAAWl2C,MAAM,IAC5CsxE,EAAS9yE,KAAKsX,EAAW,GAAKsgC,GAC9Bk7B,EAAWA,EAAShxE,OAAOwV,EAAW9V,MAAM,QACvC,CACLsxE,EAAWA,EAAShxE,OAAOwV,EAAW,IACtC,MAAMy7D,EAAgBr7B,EAAWv5C,OACjC,IAAK,IAAIa,EAAI,EAAGA,EAAI+zE,IAAiB/zE,EACnC8zE,EACIA,EAAShxE,OAAO,CAACwV,EAAWtY,EAAI,GAAK04C,EAAW14C,GAAI04C,EAAW14C,KAErE8zE,EAAWA,EAAShxE,OAAOwV,EAAW9V,MAAMuxE,EAAgB,IAE9D,OAAOD,CACT,CAWM,SAAUE,GACZC,EAAsBC,EACtBL,GAAe,GACjB,MAAMM,EAAW,GACjB,GAAIN,EAAc,CAChBM,EAASnzE,KAAKkzE,GACd,IAAK,IAAIl0E,EAAIk0E,EAAiB,EAAGl0E,EAAIi0E,IAAgBj0E,EAC/CA,GAAK,EAAIk0E,GACXC,EAASnzE,KAAKhB,GACdm0E,EAASnzE,KAAKhB,GAAKk0E,EAAiB,KAEpCC,EAASnzE,KAAKhB,OAGb,CACL,MAAMo0E,EAAsB,GACtBC,EAAqB,GAC3B,IAAK,IAAIr0E,EAAI,EAAGA,EAAIi0E,IAAgBj0E,EAC9BA,GAAsB,EAAjBk0E,EAAqB,GAAKl0E,EAAI,GAAM,EAC3Cq0E,EAAmBrzE,KAAKhB,GAExBo0E,EAAoBpzE,KAAKhB,GAG7Bm0E,EAASnzE,QAAQozE,GACjBD,EAASnzE,KAAK,GACdmzE,EAASnzE,QAAQqzE,GAEnB,OAAOF,CACT,CAWM,SAAUG,GACZh8D,EAAsBogC,EAAsBE,EAC5Ci7B,GAAe,GACjB,MAAMU,EAAmB,GAErBV,EACFU,EAAiBvzE,KAAKsX,EAAW,GAAKsgC,GAEtC27B,EAAiBvzE,KAAKsX,EAAW,GAAKsgC,GAGxC,IAAK,IAAI54C,EAAI,EAAGA,EAAIsY,EAAWnZ,SAAUa,EACnCA,GAAK04C,EAAWv5C,OACd00E,EACFU,EAAiBvzE,KAAK03C,EAAW14C,EAAI,GAAKsY,EAAWtY,IAErDu0E,EAAiBvzE,KAAKsX,EAAWtY,GAAK04C,EAAW14C,EAAI,IAGvDu0E,EAAiBvzE,KAAKsX,EAAWtY,IAIrC,OAAOu0E,CACT,CAMM,SAAUC,GACZ77B,EAAmBD,GACrB,MAAM+7B,EAAmB,CAAC,GAC1B,IAAK,IAAIz0E,EAAI,EAAGA,EAAI04C,IAAc14C,EAChCy0E,EAAiBzzE,KAAK23C,EAAM34C,GAAG,IAEjC,OAAOy0E,CACT,CAaM,SAAUC,GACZC,EAA0Bh8B,EAAmBD,GAC/C,MAAMlQ,EAAYmsC,EAAenyE,MAAM,EAAG,GAC1C,IAAK,IAAIxC,EAAI,EAAGA,EAAI04C,IAAc14C,EAChCwoC,EAAUxnC,KAAK2zE,EAAe30E,EAAI,GAAK24C,EAAM34C,GAAG,GAAK24C,EAAM34C,GAAG,IAGhE,OAAOwoC,CACT;;;;;;;;;;;;;;;;GCvIO,MAAMosC,GAAkB,mBAClBC,GAAa,mBCDbC,GAAQ,SACRC,GAAS,WACTC,IAAU,WACVC,GAAS,YACTC,IAAU,YACVC,GAAS;;;;;;;;;;;;;;;;;ACHhB,SAAU9tE,MAAQlH,GACjBmJ,IAAMxB,QAAQ,YACjBV,QAAQC,QAAQlH,EAEpB;;;;;;;;;;;;;;;;;ACSM,SAAUi1E,GACZhoD,EAAoBC,GACtB,GAAID,EAAKjuB,SAAWkuB,EAAKluB,OACvB,MAAM,IAAIJ,MAEN,gEAAGquB,EAAKjuB,iBAAiBkuB,EAAKluB,WAEpC,MAAMzC,EAAS,IAAI8G,aAA2B,EAAd4pB,EAAKjuB,QACrC,IAAK,IAAIa,EAAI,EAAGA,EAAItD,EAAOyC,OAAQa,GAAK,EACtCtD,EAAOsD,GAAKotB,EAAKptB,EAAI,GACrBtD,EAAOsD,EAAI,GAAKqtB,EAAKrtB,EAAI,GAE3B,OAAOtD,CACT,CCpBM,SAAU24E,GACZ31E,EAAsB42D,EACtB5zD,EAAO,GACT,IAAI4yE,EAAa,GACjB,GAAiC,iBAArBhf,EACVr2D,EACIP,EAAEnB,MAAMmE,GAAQ4zD,GAAoB,GACpC,IAAM,kDACVgf,EACI,IAAIz0E,MAAMy1D,GAAiBt9C,KAAKtZ,EAAEnB,MAAMmE,GAAQ4zD,OAC/C,CAOLr2D,EANkBq2D,EAAgB5wD,QAAO,CAAC+pD,EAAOpzD,MAChC,IAAXA,IACFozD,GAAS,GAEJA,IACN,IAEc,GACb,IAAM,4DACV,MAAM8lB,EAAWjf,EAAgBlqC,SAAS,GAG1C,IAAkB,IAAdmpD,EAAiB,CACnB,MAAMC,EAAQlf,EAAgB5wD,QAAO,CAAChF,EAAGmV,IAAMA,EAAI,EAAInV,EAAImV,EAAInV,IAC/D41D,EAAgBif,GAAY71E,EAAEnB,MAAMmE,GAAQ8yE,EAE9Cv1E,EACIP,EAAEnB,MAAMmE,KAAU4zD,EAAgB5wD,QAAO,CAAChF,EAAGmV,IAAMnV,EAAImV,KACvD,IAAM,gEACVy/D,EAAahf,EAGf,OAAOgf,CACT;;;;;;;;;;;;;;;;GC9BM,SAAUG,GACZjC,EAAgB3a,GAClB,IACIx1C,EADA1mB,GAAO,EAUX,IAPI62E,GAAUF,IACZjwD,EAAMmwD,EACN72E,GAAO,GAEP0mB,EAAMre,EAAewuE,EAAQl0E,KAAKiH,MAAMjH,KAAKmC,KAAK+xE,MAG5C72E,GACF0mB,EAAMw1C,GAAex1C,IAAQmwD,EAC/B72E,GAAO,EAEP0mB,EAAMre,EAAewuE,EAAQnwD,EAAM,GAGvC,OAAOA,CACT,CAEM,SAAUsmB,GACZub,EAAkBxiD,EAAcm2D,GAClC,MAAM7rB,EAAW,GACXrqC,EAAOuiD,EAAO/lD,OACpB,IAAK,IAAI8+C,EAAM,EAAGA,EAAMt7C,EAAMs7C,IACxBA,IAAQv7C,EACVsqC,EAAShsC,KAAKkkD,EAAOjH,IAErBjR,EAAShsC,KAAK63D,GAGlB,OAAO7rB,CACT,CAUM,SAAU0oC,GACZh2E,EAAegsB,EAAqBhpB,EACpC4+C,GACF,MAAMnZ,EAAczc,EAAQntB,MAAMY,OAC5BktC,EAAQ3sC,EAAEnB,MAAMY,OAEtB,GAAkB,IAAdmiD,IACEA,GAAanZ,GAAemZ,EAAYnZ,GAC1C,MAAM,IAAIppC,MAAM,sCAAsCopC,MAClDA,eAAyBmZ,KAQjC,GAJIA,EAAY,IACdA,GAAanZ,GAGXmZ,EAAYjV,EACd,MAAM,IAAIttC,MAAM,cAAcuiD,uCAC5BjV,OAGJ,GAAI3pC,EAAO4+C,EACT,MAAM,IAAIviD,MAAM,cACZuiD,0CAAkD5+C,OAGxD,IAAK,IAAI1C,EAAI,EAAGA,EAAIshD,IAAathD,EAC/B,GAAIN,EAAEnB,MAAMyB,KAAO0rB,EAAQntB,MAAMyB,GAC/B,MAAM,IAAIjB,MACN,WAAWiB,OAAON,EAAEnB,MAAMyB,uCACtBA,OAAO0rB,EAAQntB,MAAMyB,OAGjC,MAAMiG,EAAUvG,EAAEnB,MAAMmE,GAElBs5C,EAAwB,GAC9B,IAAI9I,EAAY,EACZyiC,EAAY,EACZntC,EAAY,EAEhB,IAAK,IAAIxoC,EAAI,EAAGA,EAAIshD,IAAathD,EAC/Bg8C,EAAYh7C,KAAKtB,EAAEnB,MAAMyB,IACzBkzC,GAAaxzC,EAAEnB,MAAMyB,GAGvB,IAAK,IAAIA,EAAIshD,EAAWthD,EAAI0C,EAAM1C,IAChCg8C,EAAYh7C,KAAKtB,EAAEnB,MAAMyB,IACzB21E,GAAaj2E,EAAEnB,MAAMyB,GAGvB,IAAK,IAAIA,EAAIshD,EAAWthD,EAAImoC,EAAanoC,IACvCg8C,EAAYh7C,KAAK0qB,EAAQntB,MAAMyB,IAGjC,IAAK,IAAIA,EAAI0C,EAAO,EAAG1C,EAAIqsC,EAAOrsC,IAChCg8C,EAAYh7C,KAAKtB,EAAEnB,MAAMyB,IACzBwoC,GAAa9oC,EAAEnB,MAAMyB,GAGvB,MAAO,CAACkzC,YAAW1K,YAAWmtC,YAAW1vE,UAAS+1C,cACpD,CCtIA,IAAA45B,GAAA1tE,OAAAmN,OAAA,CAAAC,UAAA,KAAAogE,yBAAAA,GAAA/rC,gBAAAA,GAAA8rC,8BAAAA;;;;;;;;;;;;;;;;GA+CM,SAAUI,GAAuBhyE,GACrC,IAEE,OAAOA,EAAKjB,KAAI/C,GAAOqV,GAAarV,IACrC,CAAC,MAAO0iB,GACP,MAAM,IAAIxjB,MACN,4DAA4DwjB,KAEpE,CAEM,SAAUuzD,GAAuBC,GACrC,OAAOA,EAAQnzE,KAAIC,GAAK4R,GAAa5R,IACvC,CC3DA,IAAAmzE,GAAA9tE,OAAAmN,OAAA,CAAAC,UAAA,KAAAy/D,OAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAL,MAAAA,GAAAxB,sBAAAA,GAAAuB,WAAAA,GAAAD,gBAAAA,GAAA1W,gBAAAA,GAAA5f,2BAAAA,GAAA8G,2BAAAA,GAAA+tB,uBAAAA,GAAA8C,mBJ0HM,SACF74E,EAAkBgwB,EAAcC,EAAchuB,GAChDjC,EAAa,EAARiC,GAAa+tB,EAClBhwB,EAAa,EAARiC,EAAY,GAAKguB,CACxB,EI9HAs3B,qBAAAA,GAAA3b,gBAAAA,GAAA4b,iBAAAA,GAAAsxB,qBJ4EM,SAA+BhpD,GAEnC,MAAMznB,EAAMnG,KAAKkC,KAAK0rB,EAAQ/tB,OAAS,GACjCiuB,EAAO,IAAI5pB,aAAaiC,GACxB4nB,EAAO,IAAI7pB,aAAaiC,GAC9B,IAAK,IAAIzF,EAAI,EAAGA,EAAIktB,EAAQ/tB,OAAQa,GAAK,EACvCotB,EAAK9tB,KAAKiH,MAAMvG,EAAI,IAAMktB,EAAQltB,GAClCqtB,EAAK/tB,KAAKiH,MAAMvG,EAAI,IAAMktB,EAAQltB,EAAI,GAExC,MAAO,CAACotB,OAAMC,OAChB,EItFA8oD,oBJ4FM,SAA8BjpD,GAElC,MAAMznB,EAAMnG,KAAKiH,MAAM2mB,EAAQ/tB,OAAS,GAClCiuB,EAAO,IAAI5pB,aAAaiC,GACxB4nB,EAAO,IAAI7pB,aAAaiC,GAC9B,IAAK,IAAIzF,EAAI,EAAGA,EAAIktB,EAAQ/tB,OAAQa,GAAK,EACvCotB,EAAK9tB,KAAKiH,MAAMvG,EAAI,IAAMktB,EAAQltB,GAClCqtB,EAAK/tB,KAAKiH,MAAMvG,EAAI,IAAMktB,EAAQltB,EAAI,GAExC,MAAO,CAACotB,OAAMC,OAChB,EItGA8kB,kBAAAA,GAAAa,kBAAAA,GAAAuB,kBAAAA,GAAAxC,sBAAAA,GAAAwhC,yBAAAA,GAAAtuB,0BAAAA,GAAAtb,gBAAAysC,GAAA/jC,kBAAAA,GAAAO,kBAAAA,GAAAR,wBAAAA,GAAAiE,+BAAAA,GAAA8O,qBAAAA,GAAAkxB,SJkJM,SACF33D,EAAWjJ,EAAW6gE,GACxB,MAAM52E,GAAK42E,EAAU,GAAK,GAAKh3E,KAAK29D,IAAMv+C,EAAIjJ,GAG9C,MAAO,CAAC2X,KAFK9tB,KAAKm9C,IAAI/8C,GAER2tB,KADD/tB,KAAKq1D,IAAIj1D,GAExB,EIxJA62E,UJmIM,SACF9gE,EAAW6gE,GACb,MAAMlpD,EAAO,IAAI5pB,aAAaiS,EAAI,GAC5B4X,EAAO,IAAI7pB,aAAaiS,EAAI,GAClC,IAAK,IAAIzV,EAAI,EAAGA,EAAIV,KAAKkC,KAAKiU,EAAI,GAAIzV,IAAK,CACzC,MAAMN,GAAK42E,EAAU,GAAK,GAAKh3E,KAAK29D,IAAMj9D,EAAIyV,GAC9C2X,EAAKptB,GAAKV,KAAKm9C,IAAI/8C,GACnB2tB,EAAKrtB,GAAKV,KAAKq1D,IAAIj1D,GAErB,MAAO,CAAC0tB,OAAMC,OAChB,EI7IAyoD,uBAAAA,GAAAD,uBAAAA,GAAAxwB,mBAAAA,GAAAvH,iBAAA04B,GAAAC,oBJ6GM,SACFvpD,EAAuB7tB,GAGzB,MAAO,CAAC+tB,KAFKF,EAAgB,EAAR7tB,GAEPguB,KADDH,EAAgB,EAAR7tB,EAAY,GAEnC,EIlHAy+D,qBAAAA,GAAAF,qBAAAA,GAAA6V,eAAAA,GAAAluB,iBAAAA,GAAAyuB,YAAAA,GAAA91B,iBAAAA,GAAA01B,YAAAA,GAAAU,oBAAAA,GAAAE,oBAAAA,GAAAE,aAAAA,GAAApvB,uBAAAA,GAAA9sC,ILyBM,YAAiBrY,GAChBmJ,IAAMxB,QAAQ,YACjBV,QAAQoR,OAAOrY,EAEnB,EK7BAi1E,uBAAAA,GAAAntC,mBAAAA,GAAAotC,iBAAAA,GAAAO,aAAAA,GAAAvX,WAAAA,GAAAnxB,WAAAA,GAAAwpC,uBJ6DM,SAAiCxpD,GAErC,MAAME,EAAO,IAAI5pB,aAAa0pB,EAAQ/tB,OAAS,GACzCkuB,EAAO,IAAI7pB,aAAa0pB,EAAQ/tB,OAAS,GAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIktB,EAAQ/tB,OAAQa,GAAK,EACvCotB,EAAKptB,EAAI,GAAKktB,EAAQltB,GACtBqtB,EAAKrtB,EAAI,GAAKktB,EAAQltB,EAAI,GAE5B,MAAO,CAACotB,OAAMC,OAChB,EItEA4oB,kBAAAA,GAAAt4B,WAAAA,GAAAorB,cAAAO,GAAAZ,oBAAAA,GAAArhC,KAAAA,KCAAsvE,GAAAzuE,OAAAmN,OAAA,CAAAC,UAAA,KAAAmuD,wBAAAmT,GAAAjT,wBAAAkT,GAAAhT,wBAAAiT,GAAA7d,UAAA8d,KCAAC,GAAA9uE,OAAAmN,OAAA,CAAAC,UAAA,KAAAjL,IAAAA,EAAAC,KAAAA,GAAAC,MAAAA,GAAAokE,kBAAAA,GAAAc,iBAAAA,GAAAE,cAAAA,GAAAgB,gBAAAA,GAAAnmE,IAAAA,GAAAC,KAAAA,GAAAC,IAAAA,GAAAC,IAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAC,KAAAA,GAAAC,MAAAA,GAAAC,KAAAA,GAAAE,MAAAA,GAAAD,MAAAA,GAAAE,QAAAA,GAAAE,UAAAA,GAAAC,cAAAA,GAAAF,YAAAA,GAAAG,YAAAA,GAAAC,eAAAA,GAAAC,SAAAA,GAAAwrE,YtT2I2B,csT3I3BvrE,KAAAA,GAAAC,KAAAA,GAAAC,YAAAA,GAAAC,QAAAA,GAAAC,WAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAC,qBAAAA,GAAAC,oBAAAA,GAAAC,OAAAA,GAAAC,uBAAAA,GAAAC,sBAAAA,GAAAC,IAAAA,GAAAC,KAAAA,GAAAE,cAAAA,GAAAD,OAAAA,GAAAzP,YAAAA,EAAA2P,cAAAA,GAAAC,aAAAA,GAAAC,sBAAAA,GAAAC,oCAAAA,GAAAC,mCAAAA,GAAAC,KAAAA,GAAAC,WAAAA,GAAAkqE,yBtT8TwC,2BsT9TxCC,wBtT0TuC,0BsT1TvC,OAAA5tE,GAAA,OAAA6tE,CAAA,EAAAlqE,IAAAA,GAAAC,QAAAA,GAAAxG,YAAAA,EAAA0G,MAAAA,GAAAD,IAAAA,GAAAE,IAAAA,GAAAC,WAAAA,GAAAC,MAAAA,GAAAC,IAAAA,GAAAC,KAAAA,GAAAC,cAAAA,GAAAC,MAAAA,GAAAC,SAAAA,GAAA2F,WAAAA,GAAA1F,eAAAA,GAAA6F,YAAAA,GAAAC,qBAAAA,GAAA5F,SAAAA,GAAAD,SAAAA,GAAAE,QAAAA,GAAAC,aAAAA,GAAAE,KAAAA,GAAAD,SAAAA,GAAAE,KAAAA,GAAAC,SAAAA,GAAAC,MAAAA,GAAAC,MAAAA,GAAA1Q,cAAAA,EAAAoR,IAAAA,GAAAC,QAAAA,GAAAV,UAAAA,GAAAC,KAAAA,GAAAC,UAAAA,GAAAC,SAAAA,GAAAC,IAAAA,GAAAC,MAAAA,GAAAuoE,WtT0b0B,asT1b1BtoE,WAAAA,GAAAC,WAAAA,GAAAC,UAAAA,GAAAG,IAAAA,GAAAE,QAAAA,GAAAE,UAAAA,GAAAC,cAAAA,GAAAF,YAAAA,GAAAG,kBAAAA,GAAAL,QAAAA,GAAAM,KAAAA,GAAAC,IAAAA,GAAAC,QAAAA,GAAAC,UAAAA,GAAAC,IAAAA,GAAAuhE,kBAAAA,GAAAthE,YAAAA,GAAAC,SAAAA,GAAAC,IAAAA,GAAAE,oBAAAA,GAAAC,oBAAAA,GAAAC,oBAAAA,GAAAH,SAAAA,GAAAuc,gBAAAA,GAAAlc,OAAAA,GAAAD,SAAAA,GAAAs9D,UAAAA,GAAAp9D,KAAAA,GAAAC,MAAAA,GAAA4mE,KtT4mBoB,OsT5mBpB3mE,IAAAA,GAAAC,MAAAA,GAAAC,KAAAA,GAAAghE,iBAAAA,GAAA/gE,MAAAA,GAAA,QAAAmM,GAAA,OAAAA,EAAA,EAAAlM,KAAAA,GAAA9D,QAAAA,GAAA+D,WAAAA,GAAA,aAAAu5D,GAAA,OAAAA,EAAA,EAAAt5D,KAAAA,GAAAM,MAAAA,GAAAL,QAAAA,GAAAG,eAAAA,GAAAC,mBAAAA,GAAAH,sBAAAA,GAAAC,0BAAAA,GAAAI,QAAAA,GAAAiC,iBAAAA,GAAAhC,MAAAA,GAAAC,MAAAA,GAAA0/D,aAAAA,GAAAz/D,UAAAA,GAAAC,OAAAA,GAAAC,KAAAA,GAAAK,QAAAA,GAAAD,KAAAA,GAAAF,IAAAA,GAAAC,KAAAA,GAAAF,MAAAA,GAAAU,QAAAA,GAAAL,SAAAA,GAAAG,eAAAA,GAAAM,cAAAA,GAAAL,OAAAA,GAAAH,KAAAA,GAAAM,OAAAA,GAAAD,kBAAAA,GAAAc,KAAAA,GAAAV,aAAAA,GAAAF,IAAAA,GAAAN,IAAAA,GAAAS,IAAAA,GAAAC,KAAAA,GAAAoI,OAAAA,GAAAN,aAAAA,GAAA7H,KAAAA,GAAAC,KAAAA,GAAAC,UAAAA,GAAAC,OAAAA,GAAAC,OAAAA,GAAAC,mBAAAA,GAAAqJ,SAAAA,GAAApJ,UAAAA,GAAAI,aAAAA,GAAAo7B,IAAAyoC,GAAAlnC,KAAAmnC,GAAAjnC,MAAAknC,GAAA94D,IAAAA,GAAA8xB,KAAAinC,GAAA1/D,IAAA2/D,GAAA5mC,IAAA6mC,GAAA3mC,OAAA4mC,GAAA1mC,OAAA2mC,GAAAzmC,KAAA0mC,GAAAxmC,MAAAymC,GAAAvmC,KAAAwmC,GAAAtmC,MAAAumC,GAAArmC,MAAAsmC,GAAA3hC,QAAA4hC,GAAAthC,UAAAA,GAAA75C,QvQmXM,WACJ,OAAO+mB,GAAO/mB,OAChB,EuQrXA+4E,aAAAA,GAAAx+B,cAAAA,GAAAqB,UAAAw/B,GAAA9+B,YAAAA,GAAAE,YAAAA,GAAAE,YAAAA,GAAAnB,eAAA8/B,GAAAz+B,SAAA0+B,GAAAjf,iBAAAA,GAAAtf,YAAAA,GAAA3S,QAAAA,GAAA7rB,OAAAA,GAAAU,KAAAs8D,GAAAh3E,KAAAi3E,GAAAp+B,YAAAq+B,GAAAz8D,MAAAA,GAAAiR,QAAAyrD,GAAA71E,OAAA81E,GAAAn+B,SAAAA,GAAAE,SAAAA,GAAAE,SAAAA,GAAAE,SAAAA,GAAAK,OAAAA,GAAAH,OAAA49B,GAAA/8B,gBAAAA,GAAAG,OAAAA,GAAAM,gBAAAA,GAAAu8B,sBrT0MM,SACFC,EAA+BC,GACjB7kE,GAAqB4kE,GAC7Bv0E,SAAQy0E,IAGd1kE,GADIrM,OAAOC,OAAO,CAAA,EAAI8wE,EAAc,CAACjlE,YAAaglE,IACnB,GAEnC,EqTlNAv8B,IAAAy8B,GAAAv8B,KAAAw8B,GAAAvc,aAAAA,GAAA/f,OAAAu8B,GAAAnvD,WAAAA,GAAA+yB,cAAAq8B,GAAAC,gBvQ6DM,SAA0Bn5E,GAC1BmJ,IAAMxB,QAAQ,iCAChBV,QAAQC,KACJlH,gFAGR,EuQnEAg9C,aAAAo8B,GAAA/7B,gBAAAg8B,GAAAluD,YAAAA,GAAAoyB,KAAA+7B,GAAA77B,WAAAA,GAAA87B,2BvQuDM,WACJpwE,IAAM3L,IAAI,gCAAgC,GAC1CyJ,QAAQC,KAAK,yDACf,EuQ1DAxI,QAAAA,GAAAooB,iBvQ2EM,WACJjD,GAAOiD,kBACT,EuQ7EA+oB,IAAAA,GAAAkP,SAAAA,GAAAK,IAAAA,GAAA4c,QAAAA,GAAAjc,IAAAy5B,GAAAC,gBvQkDM,WACJtwE,IAAM3L,IAAI,SAAS,EACrB,EuQpDAk8E;;;;;;;;;;;;;;;;;AvQgCM,WACJvwE,IAAM3L,IAAI,QAAQ,EACpB,EuQlCAg/D,oBAAAA,GAAA/sB,OAAAA,GAAAtmC,IAAAA,EAAAi1C,MAAAu7B,GAAA15B,IAAA25B,GAAAnjE,IAAAojE,GAAAz5B,WAAA05B,GAAAx5B,MAAAy5B,GAAAr5B,IAAAA,GAAA2U,IAAA2kB,GAAAnhE,KAAAohE,GAAA34D,YvQwUM,SAAsB7Y,GAC1B,OAAOob,GAAOvC,YAAY7Y,EAC5B,EuQ1UA8Y,mBvQiVM,SAA6B9Y,GAEjC,OAAOob,GAAOtC,mBAAmB9Y,EACnC,EuQpVArC,MAAA8zE,GAAAvqC,SAAAwqC,GAAAC,MAAApa,GAAA/e,OAAAA,GAAA6a,SAAAA,GAAAue,YAAA/xC,GAAAgyC,WvQuTM,WACJ,OAAOz2D,GAAOhQ,WAChB,EuQzTAE,YAAAA,GAAAH,UAAAA,GAAAI,qBAAAA,GAAAmW,KlL0DA,SAActsB,GAIZ,OAFAoX,EACIA,EAAgBpX,IAAI,IAAM,+CACvB,CAAC0B,EAAsBmkB,KAE5B,MAAMsW,EAAKlO,GAAgBvsB,EAAG,IAAK,UAAW,qBACxCg7E,EACK,MAAN72D,EAAcoI,GAAgBpI,EAAI,KAAM,WAAa,KAC1D,OAAOG,GAAOlB,MAAK,KACjB,MAAMzmB,MAACA,EAAK2tB,MAAEA,GAAShG,GAAOuE,WAAU,IAAMvqB,EAAEm8B,IAAK,CAACA,GAAKugD,GAQ3D,OAPW,MAAPA,GACFtlE,EACI/Y,EAAMkC,MAAOm8E,EAAIn8E,MACjB,kFAGNglD,GAAWv5B,GACJA,EAAM,EAAE,GACf,CAEN,EkL/EAA,MlL8GA,SAAehsB,GAIb,OAFAoX,EACIA,EAAgBpX,IAAI,IAAM,gDACvB,CAACgvB,EAAgCnJ,KACtCzO,EACIvU,MAAMC,QAAQksB,IACd,IAAM,qFAGV,MAAM2tD,EACFruD,GAAqBU,EAAM,OAAQ,WAAY,qBAC7C0tD,EACK,MAAN72D,EAAcoI,GAAgBpI,EAAI,KAAM,YAAc,KAC3D,OAAOG,GAAOlB,MAAK,KACjB,MAAMzmB,MAACA,EAAK2tB,MAAEA,GAAShG,GAAOuE,WAAU,IAAMvqB,KAAK28E,IAAQA,EAAOD,GAQlE,OAPW,MAAPA,GACFtlE,EACI/Y,EAAMkC,MAAOm8E,EAAIn8E,MACjB,iGAGNglD,GAAWv5B,GACJA,CAAK,GACZ,CAEN,EkLxIAu3B,QAAAq5B,GAAAn5B,aAAAo5B,GAAAnlB,KAAAolB,GAAAztD,KAAA0tD,GAAAhsD,MAAAisD,GAAA9d,YAAAA,GAAAv6B,GAAAA,GAAAizB,MAAAA,GAAA5xD,SAAAi3E,GAAAp5B,MAAAq5B,GAAAn3E,MAAAo3E,GAAAz1D,KAAAA,GAAAixD,aAAAA,GAAA30B,UAAAo5B,GAAAj5B,KAAAk5B,GAAAh5B,UAAAi5B,GAAA1N,OAAAA,GAAArrB,SAAAA,GAAAC,2BAAAA,GAAAhqC,IAAA+iE,GAAAz4B,MAAA04B,GAAA53B,WAAAA,GAAAQ,WAAAA,GAAAqB,UAAAA,GAAAE,WAAA81B,GAAA51B,WAAA61B,GAAA31B,UAAA41B,GAAA11B,WAAAA,GAAAykB,OAAAA,GAAA3mC,OAAA63C,GAAAn2C,KAAAA,GAAA9lC,IAAAk8E,GAAA11B,QAAA21B,GAAAz1B,UAAA01B,GAAAx1B,kBAAAA,GAAAI,QAAAq1B,GAAAjjC,KAAAA,GAAAr6C,OvQ6GM,WACJ,OAAOslB,GAAOtlB,QAChB,EuQ/GAe,IAAAw8E,GAAAl1B,QAAAm1B,GAAAj1B,UAAAA,GAAAK,IAAA60B,GAAAz0B,QAAAA,GAAA4S,cAAAA,GAAApqB,IAAAA,GAAA6X,aAAAA,GAAAK,YAAAg0B,GAAA54B,IAAA64B,GAAAC,UdoCA,WACE,OAAO,IAAIrgF,SAAcC,GAAW82E,IAAc,IAAM92E,OAC1D,EctCAg+D,KAAAA,GAAAvR,SAAA4zB,GAAAl4C,OAAAm4C,GAAAhzD,KAAAA,GAAAq/B,SAAA4zB,GAAA9vD,GAAAA,GAAAo8B,aAAAA,GAAArvC,IAAAA,GAAA+vC,MAAAA,GAAAE,MAAAA,GAAAE,MAAAA,GAAAE,MAAAA,GAAAI,KAAAA,GAAAsB,IAAAixB,GAAA7wB,MAAA8wB,GAAA3gE,MAAAA,GAAA48B,KAAAgkC,GAAAv1D,QvQgJM,SAAkBrpB,GAEtB,OAAOgmB,GAAOqD,QAAQrpB,EACxB,EuQnJAguD,KAAAA,GAAA6F,YAAAA,GAAAG,aAAAA,GAAAG,cAAAA,GAAAP,MAAAirB,GAAAh8D,MvQ6SM,WACJ,OAAOmD,GAAOnD,OAChB,EuQ/SAuM,KAAA0vD,GAAAtqB,WAAAuqB,GAAAn7D,gBAAAA,GAAAo7D,iBrT4JM,SAA2B1oE,GAC/B,MAAMxV,WAACA,GAAcwV,EAEjBR,GAAarW,IAAIqB,IAGfwK,IAAMxB,QAAQ,UAChBV,QAAQC,KAAK,gCAAgCvI,MAGjDgV,GAAanW,IAAImB,EAAYwV,EAC/B,EqTvKAC,eAAAA,GAAAm+C,KAAAuqB,GAAArqB,MAAAsqB,GAAAx6D,cvQgUM,SAAwB9Z,GAC5Bob,GAAOtB,cAAc9Z,EACvB,EuQlUA0tC,QAAA6mC,GAAAt4C,QAAAu4C,GAAArqB,UAAAA,GAAAE,UAAAA,GAAAE,UAAAA,GAAAE,UAAAA,GAAAkD,KAAAA,GAAAzhD,MAAAuoE,GAAA7pB,MAAA8pB,GAAA5pB,OAAAA,GAAAsH,UAAAA,GAAAuiB,aAAAl0C,GAAAsqB,KAAA6pB,GAAA3pB,gBAAAA,GAAA/lB,cAAAA,GAAA1sB,WvQkSM,SAAqBpN,GACzB,OAAOgQ,GAAO5C,WAAWpN,EAC3B,EuQpSA/M,YvQ6XM,SAAsBC,EAAsBC,GAChDmC,IAAMrC,YAAYC,EAAcC,EAClC,EuQ/XAitD,eAAAA,GAAAhd,QAAAqmC,GAAAhpB,KAAAipB,GAAA/c,OAAAA,GAAAhM,IAAAgpB,GAAA9oB,KAAA+oB,GAAAp7E,MAAAq7E,GAAA9oB,QAAAA,GAAAE,QAAAA,GAAAE,QAAAA,GAAAE,QAAAA,GAAAnoB,WAAAA,GAAAwX,QAAAo5B,GAAAp6B,SAAAq6B,GAAA9zB,eAAA+zB,GAAA5iB,cAAA6iB,GAAAtQ,SAAAuQ,GAAAj1E,MAAAk1E,GAAA18E,KAAA28E,GAAA52B,OAAA62B,GAAAlnB,kBAAAmnB,GAAAjnB,QAAAA,GAAA70C,MAAAA,GAAAlmB,KAAAiiF,GAAA9mB,aAAA+mB,GAAAv6B,IAAAw6B,GAAA3+E,IAAA4+E,GAAA5gE,WAAAA,GAAA65C,IAAAgnB,GAAAloE,KAAAmoE,GAAA9/D,OAAAA,GAAA+4C,SAAAA,GAAAC,SAAAA,GAAApyB,SAAAA,GAAAqyB,SAAAA,GAAAC,SAAAA,GAAAC,SAAAA,GAAAr5C,YAAAA,GAAAmwB,UAAAA,GAAAjsB,KAAAA,GAAA69B,KAAAk+B,GAAA9gF,KvQ+QM,SAAeC,GACnB,OAAOgmB,GAAOjmB,KAAKC,EACrB,EuQjRAk6D,KAAAA,GAAA6a,MAAAA,GAAAruC,UAAAo6C,GAAAxmB,gBAAAA,GAAAE,OAAAumB,GAAAC,mBrT4LM,SAA6BlgF,GACjC,IAAKgV,GAAarW,IAAIqB,GACpB,MAAM,IAAIC,MACN,iBAAiBD,oCAEvBgV,GAAalW,OAAOkB,EACtB,EqTlMAmgF,iBrTgLM,SACFngF,EAAoBkV,GACtB,MAAM7K,EAAM8K,GAAQnV,EAAYkV,GAChC,IAAKH,GAAepW,IAAI0L,GACtB,MAAM,IAAIpK,MACN,eAAeD,mBACXkV,wBAEVH,GAAejW,OAAOuL,EACxB,EqTzLAuvD,mBAAAwmB,GAAAnmB,QAAAA,GAAAp7C,WAAAA,GAAAvI,KAAAA,GAAA+pE,alLmKA,SAA0DnhF,GAQxD,OAHAoX,EACIA,EAAgBpX,IAChB,IAAM,uDACH,CAAC0B,EAAMmkB,KACZzO,EACI1V,aAAayb,IACb,IAAM,wDACV/F,EACU,MAANyO,GAAcA,aAAc1I,IAC5B,IAAM,6DACV,MAAM6O,MAACA,EAAK3tB,MAAEA,GAAS2nB,GAAOuE,WAAU,IAAMvqB,EAAE0B,IAAI,CAACA,GAAImkB,GAEzD,OADA0/B,GAAWv5B,GACJ,CAACM,KAAMN,EAAM,GAAS3tB,QAAM,CAEvC,EkLtLA+iF,clLuNA,SAAyCphF,GAQvC,OAHAoX,EACIA,EAAgBpX,IAChB,IAAM,wDACH,CAACgvB,EAAgBnJ,KACtBzO,EACIvU,MAAMC,QAAQksB,IAASA,EAAKjqB,OAAMwpB,GAAOA,aAAepR,MACxD,IAAM,uEAEV/F,EACU,MAANyO,GAAcA,aAAc1I,IAC5B,IAAM,iEACV,MAAMkI,EAAMW,GAAOuE,WAAU,IAAMvqB,KAAKgvB,IAAOA,EAAMnJ,GAQrD,OAPU,MAANA,GACFzO,EACIiO,EAAIhnB,MAAMkC,MAAOslB,EAAGtlB,MACpB,yGAGNglD,GAAWlgC,EAAI2G,OACR3G,CAAG,CAEd,EkLjPAlH,SAAAA,GAAA6mC,cAAAA,GAAAq8B,axQGgB,awQHhB5gC,MAAAA,GAAA4a,WAAAA,GAAAha,MAAAA,GAAAL,UAAAsgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,MAAMC,GAAmD,CAAA,EAEnDC,GAA2C,CAC/Ct9B,OAAO,EACPu9B,WAAW,EACXC,oBAAoB,EACpBC,uBAAuB,EACvBp7C,OAAO,EACPq7C,SAAS,EACTC,8BAA8B,GAY1B,SAAUC,GAAgBC,GAC9B,KAAMA,KAAgBR,IAAW,CAC/B,MAAMS,EAqCV,SAAkCD,GAChC,GAAqB,IAAjBA,GAAuC,IAAjBA,EACxB,MAAM,IAAIhhF,MAAM,0DAElB,MAAMkoC,EAdR,SAAsB84C,GACpB,GAA+B,oBAApBE,iBAAoD,IAAjBF,EAC5C,OAAO,IAAIE,gBAAgB,IAAK,KAC3B,GAAwB,oBAAb70D,SAChB,OAAOA,SAAS+P,cAAc,UAE9B,MAAM,IAAIp8B,MAAM,yCAEpB,CAMiBmhF,CAAaH,GAM5B,GAJA94C,EAAOk5C,iBAAiB,oBAAqBC,IAC3CA,EAAGC,wBACId,GAASQ,EAAa,IAC5B,GACkB,IAAjBA,EACF,OAAQ94C,EAAOR,WAAW,QAAS+4C,KAC3Bv4C,EAAOR,WAAW,qBAAsB+4C,IAGlD,OAAOv4C,EAAOR,WAAW,SAAU+4C,GACrC;;;;;;;;;;;;;;;;GArDmBc,CAAyBP,GACxC,GAAe,OAAXC,EAIF,OADA54E,QAAQoR,IAAI,0CAA2CunE,GAChD,KAHPR,GAASQ,GAAgBC,EAM7B,MAAMO,EAAKhB,GAASQ,GACpB,OAAIQ,EAAGC,wBACEjB,GAASQ,GACTD,GAAgBC,KAGzBQ,EAAGE,QAAQF,EAAGG,YACdH,EAAGE,QAAQF,EAAGI,cACdJ,EAAGE,QAAQF,EAAGK,OACdL,EAAGE,QAAQF,EAAGM,QACdN,EAAGE,QAAQF,EAAGO,qBACdP,EAAGE,QAAQF,EAAGQ,iBACdR,EAAGS,OAAOT,EAAGU,cACbV,EAAGS,OAAOT,EAAGW,WACbX,EAAGY,SAASZ,EAAGa,MAER7B,GAASQ,GAClB,CC9CA,IAAYsB,GAqCAC,GAOAC,GA0CN,SAAUC,GACZC,EAAcC,GAChB,MAAO,CAACA,EAASD,EACnB,CAeM,SAAUE,GAAiBpjF,GAC/B,MAAM2C,EAAOkU,EAAmB7W,GAEhC,OAAO6W,EADc9V,KAAKkC,KAAKN,EAAO,GAExC,CA2BM,SAAU0gF,GACZH,EAAcC,GAChB,MAAO,CACLpiF,KAAKK,IAAI,EAAGL,KAAKkC,KAAKkgF,EAAU,IAAKpiF,KAAKK,IAAI,EAAGL,KAAKkC,KAAKigF,EAAO,IAEtE,CAyBM,SAAUI,GAEZtB,EAA2BuB,GAE7B,MAAMC,EAAQxB,EAEd,IAAIyB,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAEAC,EACAC,EACAC,EA2BJ,OAzByC,IAArCn5E,IAAMzB,UAAU,kBAClBm6E,EAAsBD,EAAMW,KAC5BT,EAA0BF,EAAMY,KAChCT,EAAgCH,EAAMa,QACtCT,EAA4BJ,EAAMc,QAClCT,EAAqBL,EAAMe,IAC3BR,EAA4B,EAC5BC,EAAqB,EACrBC,EAAuBT,EAAMgB,WAC7BN,EAAmBV,EAAMiB,QAEzBhB,EAAsBzB,EAAG0C,KACzBhB,EAA0B1B,EAAG0C,KAC7Bf,EAAgC3B,EAAG0C,KACnCd,EAA4BJ,EAAMkB,KAClCb,EAAqB7B,EAAG0C,KACxBX,EAA4B,EAC5BC,EAAqB,EACrBC,EAAoD,MAA7BV,EACnBA,EAA0BoB,eAC1B,KACJT,EAAmBlC,EAAGyC,OAExBX,EAAwB9B,EAAG0C,KAEpB,CACLjB,sBACAC,0BACAC,gCACAC,4BACAC,qBACAC,wBACAC,4BACAC,qBACAC,uBACAC,mBAEJ;;;;;;;;;;;;;;;;GC1NM,SAAUU,GAAgB5C,EAA2B6C,GACzD,MAAMC,EAAcD,IAIpB,OAHI95E,IAAMxB,QAAQ,UAMpB,SAAyBy4E,GACvB,MAAMn9D,EAAQm9D,EAAG+C,WACjB,GAAIlgE,IAAUm9D,EAAGgD,SACf,MAAM,IAAIxkF,MAAM,gBAgBd,SACFwhF,EAA2Br/C,GAC7B,OAAQA,GACN,KAAKq/C,EAAGgD,SACN,MAAO,WACT,KAAKhD,EAAGiD,aACN,MAAO,eACT,KAAKjD,EAAGkD,cACN,MAAO,gBACT,KAAKlD,EAAGmD,kBACN,MAAO,oBACT,KAAKnD,EAAGoD,8BACN,MAAO,gCACT,KAAKpD,EAAGqD,cACN,MAAO,gBACT,KAAKrD,EAAGsD,mBACN,MAAO,qBACT,QACE,MAAO,sBAAsB3iD,IAEnC,CApCsC4iD,CAAqBvD,EAAIn9D,GAE/D,CAVI2gE,CAAgBxD,GAEX8C,CACT,EDTA,SAAYhC,GAgBVA,EAAAA,EAAK,MAAA,GAAA,QAkBLA,EAAAA,EAAY,aAAA,GAAA,cACb,CAnCD,CAAYA,KAAAA,GAAa,CAAA,IAqCzB,SAAYC,GACVA,EAAAA,EAAM,OAAA,GAAA,SACNA,EAAAA,EAAM,OAAA,GAAA,SACNA,EAAAA,EAAM,OAAA,GAAA,SACNA,EAAAA,EAAQ,SAAA,GAAA,UACT,CALD,CAAYA,KAAAA,GAAY,CAAA,IAOxB,SAAYC,GACVA,EAAAA,EAAgB,iBAAA,GAAA,mBAChBA,EAAAA,EAAgB,iBAAA,GAAA,mBAChBA,EAAAA,EAAwB,yBAAA,GAAA,2BACxBA,EAAAA,EAAkB,mBAAA,GAAA,qBAClBA,EAAAA,EAAkB,mBAAA,GAAA,oBACnB,CAND,CAAYA,KAAAA,GAAmB,CAAA,ICtBzB,SAAUyC,GAAiBlgF,GAC/B,SAAIwF,IAAMxB,QAAQ,iCAA2C,IAARhE,GAJnC,QAKCxE,KAAKwvC,IAAIhrC,IAAQxE,KAAKwvC,IAAIhrC,GAJ3B,MAQpB,CAwBM,SAAUmgF,GACZ1D,EAA2B2D,GAC7B,OAAOC,GACH5D,GAAI,IAAMA,EAAG6D,aAAaF,IAC1B,cAAgBA,EAAgB,mCACtC,CAgBM,SAAUG,GACZ9D,EAA2B+D,GAC7B,MAAMC,EAA8BJ,GAChC5D,GAAI,IAAMA,EAAGiE,aAAajE,EAAGkE,kBAC7B,0CAGJ,GAFAtB,GAAa5C,GAAI,IAAMA,EAAGmE,aAAaH,EAAgBD,KACvDnB,GAAa5C,GAAI,IAAMA,EAAGoE,cAAcJ,MACyB,IAA7DhE,EAAGqE,mBAAmBL,EAAgBhE,EAAGsE,gBAG3C,MAMJ,SACIH,EAAsBI,GACxB,MAAMC,EAAwBC,GAAgBC,KAAKH,GACnD,GAA6B,MAAzBC,EAGF,OAFA39E,QAAQoR,IAAI,wCAAwCssE,UACpD19E,QAAQoR,IAAIksE,GAId,MAAMQ,GAAcH,EAAsB,GAEpCI,EAAcT,EAAaz7E,MAAM,MACjCyQ,EAAMyrE,EAAYhmF,OAAOgZ,WAAWhZ,OAAS,EAC7CimF,EAAuBD,EAAYviF,KACrC,CAACyiF,EAAMH,IACH9vE,GAAe8vE,EAAa,GAAG/sE,WAAYuB,GAAO2rE,IAC1D,IAAIC,EAAgB,EACpB,IAAK,IAAItlF,EAAI,EAAGA,EAAIolF,EAAqBjmF,OAAQa,IAC/CslF,EAAgBhmF,KAAKK,IAAIylF,EAAqBplF,GAAGb,OAAQmmF,GAG3D,MAAMC,EAAmBH,EAAqB5iF,MAAM,EAAG0iF,EAAa,GAC9DM,EAAYJ,EAAqB5iF,MAAM0iF,EAAa,EAAGA,GACvDO,EAAkBL,EAAqB5iF,MAAM0iF,GAEnD99E,QAAQoR,IAAI+sE,EAAiBx8E,KAAK,OAClC3B,QAAQoR,IAAIssE,EAAc77E,MAAM,MAAM,IACtC7B,QAAQoR,IACJ,MAAMpD,EAAcowE,EAAU,GAAIF,KAClC,iEACJl+E,QAAQoR,IAAIitE,EAAgB18E,KAAK,MACnC,CAvCI28E,CACIpB,EAAsB/D,EAAGoF,iBAAiBpB,IACxC,IAAIxlF,MAAM,sCAElB,OAAOwlF,CACT,CAEA,MAAMS,GAAkB,2BA+ClB,SAAUY,GACZrF,EAA2BsF,GAE7B,GADA1C,GAAa5C,GAAI,IAAMA,EAAGqF,gBAAgBC,MACkB,IAAxDtF,EAAGuF,oBAAoBD,EAAStF,EAAGwF,iBAErC,MADA3+E,QAAQoR,IAAI+nE,EAAGyF,kBAAkBH,IAC3B,IAAI9mF,MAAM,oCAEpB,CAqDM,SAAUknF,GACZ1F,EAA2BsF,EAAuBK,EAClD1qE,EAAqB2qE,EAA6BC,EAClDC,GACF,MAAMvrE,EAAMylE,EAAG+F,kBAAkBT,EAASK,GAC1C,OAAa,IAATprE,IAKJqoE,GAAa5C,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiG,aAAchrE,KACtD2nE,GACI5C,GACA,IAAMA,EAAGkG,oBACL3rE,EAAKqrE,EAAqB5F,EAAGyC,OAAO,EAAOoD,EAC3CC,KACRlD,GAAa5C,GAAI,IAAMA,EAAGmG,wBAAwB5rE,MAC3C,EACT,CAEM,SAAU6rE,GACZpG,EAA2BqG,EAAuBC,IA6FtD,SAA6BtG,EAA2BsG,GACtD,MAAMC,EAAiBvG,EAAGwG,iCAAmC,EACvDC,EAAgBH,EAActG,EAAG0G,SACvC,GAAID,EAAgBzG,EAAG0G,UAAYD,EAAgBF,EAAgB,CAEjE,MAAM,IAAI/nF,MAAM,0BADS,2BAA2B+nF,SAGxD,CAnGEI,CAAoB3G,EAAIsG,GACxB1D,GAAa5C,GAAI,IAAMA,EAAG4G,cAAc5G,EAAG0G,SAAWJ,KACtD1D,GAAa5C,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAYT,IACvD,CAoCM,SAAUU,GACZ/G,EAA2BqG,EAC3BW,GACFpE,GAAa5C,GAAI,IAAMA,EAAGiH,gBAAgBjH,EAAGkH,YAAaF,KAC1DpE,GACI5C,GACA,IAAMA,EAAGmH,qBACLnH,EAAGkH,YAAalH,EAAGoH,kBAAmBpH,EAAG8G,WAAYT,EAAS,IACxE,CAEM,SAAUgB,GACZrH,EAA2BgH,GAC7BpE,GAAa5C,GAAI,IAAMA,EAAGiH,gBAAgBjH,EAAGkH,YAAaF,KAC1DpE,GACI5C,GACA,IAAMA,EAAGmH,qBACLnH,EAAGkH,YAAalH,EAAGoH,kBAAmBpH,EAAG8G,WAAY,KAAM,IACrE,CAEM,SAAUQ,GAAoBtH,GAClC,MAAMr/C,EAASq/C,EAAGuH,uBAAuBvH,EAAGkH,aAC5C,GAAIvmD,IAAWq/C,EAAGwH,qBAChB,MAAM,IAAIhpF,MACN,8BAIF,SACFwhF,EAA2Br/C,GAC7B,OAAQA,GACN,KAAKq/C,EAAGyH,kCACN,MAAO,oCACT,KAAKzH,EAAG0H,0CACN,MAAO,4CACT,KAAK1H,EAAG2H,kCACN,MAAO,oCACT,KAAK3H,EAAG4H,wBACN,MAAO,0BACT,QACE,MAAO,iBAAiBjnD,IAE9B,CAlBwCknD,CAA2B7H,EAAIr/C,GAEvE,CAkBA,SAASijD,GACL5D,EAA2B8H,EAC3BC,GACF,MAAMC,EAAkBpF,GAAa5C,GAAI,IAAM8H,MAC/C,GAAe,MAAXE,EACF,MAAM,IAAIxpF,MAAMupF,GAElB,OAAOC,CACT,CAWM,SAAUC,GAAYjqF,EAAiBkqF,EAAa,GACxD,OAAOrzE,EAAmB7W,EAAMiE,MAAM,EAAGjE,EAAMY,OAASspF,GAC1D,CAEM,SAAUC,GAAYnqF,GAC1B,GAAqB,IAAjBA,EAAMY,OACR,MAAMJ,MAAM,wDAGd,MAAO,CACLR,EAAMY,OAAS,EAAIZ,EAAMA,EAAMY,OAAS,GAAK,EAAGZ,EAAMA,EAAMY,OAAS,GAEzE,CAEM,SAAUwpF,GAAapqF,GAC3B,IAAIqqF,EAAsC,CAAC,EAAG,EAAG,GAMjD,OALkC,IAAjBrqF,EAAMY,QAAkC,IAAjBZ,EAAMY,QAA6B,IAAbZ,EAAM,KAElEqqF,EACI,CAACJ,GAAYjqF,MAAWmqF,GAAYnqF,KAEnCqqF,CACT,CA2EA,SAASC,GAAOpzE,GACd,OAAOA,EAAI,GAAM,CACnB,CAMM,SAAUqzE,GAAcC,EAAkBC,GAI9C,GAAI5zE,EAHJ2zE,EAASA,EAAOvmF,OAAO,GACvBwmF,EAASA,EAAOxmF,OAAO,IAGrB,OAAO,EAGT,IAAKumF,EAAO5pF,SAAW6pF,EAAO7pF,OAC5B,OAAO,EAGT,GAAkB,IAAd4pF,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdC,EAAO,IAC/B,IAAdA,EAAO,GACT,OAAO,EAGT,GAAID,EAAO5pF,SAAW6pF,EAAO7pF,OAAQ,CACnC,MAAM8pF,EAAaF,EAAOvmF,OAAO,GAAG,GAC9B0mF,EAAaF,EAAOxmF,OAAO,GAAG,GACpC,GAAIymF,IAAeC,EACjB,OAAO,EAGT,GAAIL,GAAOI,IAAeJ,GAAOK,KACd,IAAdH,EAAO,IAA0B,IAAdC,EAAO,IAC7B,OAAO,EAGX,OAAOD,EAAO,KAAOC,EAAO,IAAMH,GAAOE,EAAO,KAAOF,GAAOG,EAAO,GACvE,CAKA,IAAIG,GACAC,GA8CE,SAAUC,GAAa9I,EAA2B2D,GAEtD,OAAc,MADF3D,EAAG6D,aAAaF,EAE9B,CAEM,SAAUoF,GAAsBvJ,GACpC,IAEE,GAAU,MADCD,GAAgBC,GAEzB,OAAO,CAEV,CAAC,MAAOvjF,GAEP,OADA4K,QAAQoR,IAAI,qCAAsChc,IAC3C,EAET,OAAO,CACT,CAiCM,SAAU+sF,GAA8BxJ,GAC5C,GAAqB,IAAjBA,EACF,OAAO,EAGT,MAAMQ,EAAKT,GAAgBC,GAE3B,GAAqB,IAAjBA,EAOG,CACL,GAAIsJ,GAAa9I,EAAI,0BACnB,OAAOiJ,GAAuCjJ,GAGhD,MAAMkJ,EAA0B,8BAChC,GAAIJ,GAAa9I,EAAIkJ,GAA0B,CAC7C,MAAM3H,EACFvB,EAAG6D,aAAaqF,GACpB,OAwCN,SAEIlJ,EAA2BuB,GAC7B,MAAM4H,EAAY7H,GAAiBtB,EAAIuB,GACjC8E,EAAUrG,EAAGoJ,gBACnBpJ,EAAG6G,YAAY7G,EAAG8G,WAAYT,GAE9B,MAAMrlF,EAAQ,EACRslC,EAAS,EACf05C,EAAGqJ,WACCrJ,EAAG8G,WAAY,EAAGqC,EAAUzH,wBAAyB1gF,EAAOslC,EAAQ,EACpE6iD,EAAUtH,mBAAoBsH,EAAUlH,qBAAsB,MAElE,MAAMqH,EAActJ,EAAGuJ,oBACvBvJ,EAAGiH,gBAAgBjH,EAAGkH,YAAaoC,GACnCtJ,EAAGmH,qBACCnH,EAAGkH,YAAalH,EAAGoH,kBAAmBpH,EAAG8G,WAAYT,EAAS,GAElE,MAAMmD,EACFxJ,EAAGuH,uBAAuBvH,EAAGkH,eAAiBlH,EAAGwH,qBAOrD,OALAxH,EAAG6G,YAAY7G,EAAG8G,WAAY,MAC9B9G,EAAGiH,gBAAgBjH,EAAGkH,YAAa,MACnClH,EAAGyJ,cAAcpD,GACjBrG,EAAG0J,kBAAkBJ,GAEdE,CACT,CAnEaG,CACH3J,EAAIuB,GAGV,OAAO,EAnBP,IAAKuH,GAAa9I,EAAI,qBACpB,OAAO,EAET,IAAK8I,GAAa9I,EAAI,4BACpB,OAAO,EAmBX,OAD8BiJ,GAAuCjJ,EAEvE,CAEA,SAASiJ,GAAuCjJ,GAE9C,MAAMmJ,EAAY7H,GAAiBtB,GAE7BqG,EAAUrG,EAAGoJ,gBACnBpJ,EAAG6G,YAAY7G,EAAG8G,WAAYT,GAI9BrG,EAAGqJ,WACCrJ,EAAG8G,WAAY,EAAGqC,EAAU1H,oBAHlB,EACC,EAEqD,EAChE0H,EAAUtH,mBAAoBsH,EAAUjH,iBAAkB,MAE9D,MAAMoH,EAActJ,EAAGuJ,oBACvBvJ,EAAGiH,gBAAgBjH,EAAGkH,YAAaoC,GACnCtJ,EAAGmH,qBACCnH,EAAGkH,YAAalH,EAAGoH,kBAAmBpH,EAAG8G,WAAYT,EAAS,GAElE,MAAMmD,EACFxJ,EAAGuH,uBAAuBvH,EAAGkH,eAAiBlH,EAAGwH,qBAOrD,OALAxH,EAAG6G,YAAY7G,EAAG8G,WAAY,MAC9B9G,EAAGiH,gBAAgBjH,EAAGkH,YAAa,MACnClH,EAAGyJ,cAAcpD,GACjBrG,EAAG0J,kBAAkBJ,GAEdE,CACT,CA0CM,SAAUI,GACZrrE,EAAiC8N,GAC9B/rB,MAAMC,QAAQge,KACjBA,EAAS,CAACA,IAEZA,EAAOta,SAAQmE,IACJ,MAALA,GACFyM,EACgB,cAAZzM,EAAEnK,OACF,IAAM,GAAGouB,iEAInB;;;;;;;;;;;;;;;;GC5pBA,MAAMrjB,GAAMD;;;;;;;;;;;;;;;;;ACUN,SAAU8gF,KACd,IAAIC,EACAnE,EACAoE,EACAC,EACAC,EACAlzE,EACAmzE,EACAC,EACAC,EACAC,EA+EJ,OA7EyC,IAArCthF,IAAMzB,UAAU,kBAClBwiF,EAAU,kBACVnE,EAAY,KACZoE,EAAY,MACZC,EAAY,KACZC,EAAY,UACZlzE,EAAS,cACTmzE,EAAe,wBAMfC,EAAmB,gVAcnBC,EAAmB,GACnBC,EAAc,4OAWdP,EAAU,GACVnE,EAAY,YACZoE,EAAY,UACZC,EAAY,UACZC,EAAY,YACZlzE,EAAS,eACTmzE,EAAe,GAEfC,EAAmB,0SASnBC,EAAmB,iNAUnBC,EAAc,yLAWT,CACLP,UACAnE,YACAoE,YACAC,YACAC,YACAlzE,SACAmzE,eACAC,mBACAC,mBACAC,cAEJ;;;;;;;;;;;;;;;;GC5GM,SAAUC,GACZC,EAAkBvsF,EAAiBc,EAAQ,SAC7C,MAAM8F,EAAUiQ,EAAoB7W,GACpC,OAAO4G,EACFvC,KAAI,CAAC4X,EAAQxa,IAKL,GAJO,OAAO8qF,EAAO9qF,QAAQX,OAAWmb,QACjCxa,IAAMmF,EAAQhG,OAAS,EACjC,OAAO2rF,EAAO9qF,EAAI,QAAQX,OAAWyrF,EAAO9qF,QAAQwa,IACpD,YAAYswE,EAAO9qF,QAAQwa,SAGhCzR,KAAK,GACZ,CA8CM,SAAUgiF,GAAmBxsF,GACjC,MAAM4G,EAAUiQ,EAAoB7W,GAAOqE,KAAI2C,GAAKA,EAAE4S,aAEtD,MAAO,+DAEehT,EAAQ,mBAAmBA,EAAQ,uBAG3D,CF5DAoE,GAAIjC,aAAa,aAAa,IAAMiC,GAAI1B,UAAU,iBAAmB,IAGrE0B,GAAIjC,aAAa,iBAAiB,IAC5BgiF,GAAsB,GACjB,EACEA,GAAsB,GACxB,EAEF,IAIT//E,GAAIjC,aAAa,kCAAkC,KAAM,IAEzDiC,GAAIjC,aACA,0BAA0B,IAAmC,IAA7BiC,GAAIhM,IAAI,mBAG5CgM,GAAIjC,aAAa,qBAAqB,KAAM,IAG5CiC,GAAIjC,aAAa,4BAA4B,KAAM,IAGnDiC,GAAIjC,aAAa,cAAc,IAAMiC,GAAIzB,QAAQ,eAGjDyB,GAAIjC,aAAa,4BAA4B,IAAMiC,GAAIzB,QAAQ,gBAG/DyB,GAAIjC,aAAa,mBAAmB,IAAMiC,GAAIzB,QAAQ,gBAItDyB,GAAIjC,aAAa,4BAA4B,KAAM,IAGnDiC,GAAIjC,aACA,gCAAgC,IAAMiC,GAAIzB,QAAQ,gBAGtDyB,GAAIjC,aACA,+BAA+B,IAAMiC,GAAIzB,QAAQ,gBAGrDyB,GAAIjC,aACA,+BAA+B,IAAMiC,GAAIzB,QAAQ,gBAGrDyB,GAAIjC,aACA,+BAA+B,IAAMiC,GAAIzB,QAAQ,gBAGrDyB,GAAIjC,aAAa,qBAAqB,IAAMiC,GAAIzB,QAAQ,gBAGxDyB,GAAIjC,aAAa,uBAAuB,IAAMiC,GAAIzB,QAAQ,gBAG1DyB,GAAIjC,aAAa,qBAAqB,IAAMiC,GAAIzB,QAAQ,gBAGxDyB,GAAIjC,aACA,0BACA,IDiYE,SAAiCy4E,GACrC,GAAwB,MAApBoJ,GAA0B,CAC5B,MAAM5I,EAAKT,GAAgBC,GAC3BoJ,GAAmB5I,EAAGyK,aAAazK,EAAG4I,kBAExC,OAAOA,EACT,CCvYU8B,CAAuB1hF,GAAI1B,UAAU,oBAG/C0B,GAAIjC,aACA,gCACA,ID2YE,SAAiCy4E,GACrC,GAA8B,MAA1BqJ,GAAgC,CAClC,MAAM7I,EAAKT,GAAgBC,GAC3BqJ,GAAyB7I,EAAGyK,aAAazK,EAAG2K,yBAG9C,OAAO5rF,KAAKG,IAAI,GAAI2pF,GACtB,CClZU+B,CAAuB5hF,GAAI1B,UAAU,oBAU/C0B,GAAIjC,aAAa,gDAAgD,KAC/D,MAAMy4E,EAAex2E,GAAI1B,UAAU,iBAEnC,OAAqB,IAAjBk4E,EACK,EDsYL,SAA4CA,GAEhD,GAAqB,IAAjBA,EACF,OAAO,EAGT,IAAIqL,EACJ,MAAM7K,EAAKT,GAAgBC,GAU3B,OANEqL,EAFE/B,GAAa9I,EAAI,oCACA,IAAjBR,EACkB,EACXsJ,GAAa9I,EAAI,4BACN,EAEA,EAEf6K,CACT,CCtZSC,CAAkCtL,EAAa,IAOxDx2E,GAAIjC,aACA,iDACA,IAAMiC,GAAI1B,UAAU,gDAAkD,IACjEyjB,OAKT/hB,GAAIjC,aACA,gCACA,IDyZE,SAA6Cy4E,GAEjD,GAAqB,IAAjBA,EACF,OAAO,EAGT,MAAMQ,EAAKT,GAAgBC,GAE3B,GAAqB,IAAjBA,GACF,IAAKsJ,GAAa9I,EAAI,qBACpB,OAAO,OAGT,IAAK8I,GAAa9I,EAAI,0BACpB,OAAO,EAKX,OAD8BiJ,GAAuCjJ,EAEvE,CC7aU+K,CAAmC/hF,GAAI1B,UAAU,oBAM3D0B,GAAIjC,aAAa,gCAAgC,KACxCiC,GAAIzB,QAAQ,6BAEfyB,GAAIzB,QAAQ,kCAOlByB,GAAIjC,aACA,gCACA,IAAMiiF,GAA8BhgF,GAAI1B,UAAU,oBAGtD0B,GAAIjC,aACA,2BACA,KAAMikF,OD8fa,KADaxL,EC7fNx2E,GAAI1B,UAAU,mBDogBC,MAHhCi4E,GAAgBC,GAGGyL,UAP1B,IAA8BzL,CC7fyB,IAK7Dx2E,GAAIjC,aAAa,6BAA6B,IAKxBiC,GAAIzB,QAAQ,gCACX,EAAI,IAU3ByB,GAAIjC,aACA,kCACA,KACU,IAEVmkF,IACE,GAAIA,EAAY,IAAoB,IAAfA,EACnB,MAAM,IAAI1sF,MAEN,8FAAkC0sF,SE9FvC,MAAMC,GAAuB;;;;;;;;;;;;;;;;GCtE9B,MAAOC,GAQX3uF,WAAAA,CAAYg/C,GAPZ7+C,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EACf1uF,KAAA2uF,iBAAmBzK,GAAc0K,MAG/B,MAAMC,EAAWrK,GAAiB3lC,GAC5BiwC,EAAO7B,KACbjtF,KAAK6+C,YAAcA,EAEnB7+C,KAAK+uF,SAAW,8DAGZC,GACI,CAAC,IAAK,IAAK,KAAMnwC,oIAMZgwC,EAAS,OAAOA,EAAS,gDACFA,EAAS,iQAUvCC,EAAK30E,iCAGb;;;;;;;;;;;;;;;;GCrCI,MAAO80E,GAQXpvF,WAAAA,CAAYg/C,GAPZ7+C,KAAA2zE,cAAgB,CAAC,KAEjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAEf1uF,KAAA2uF,iBAAmBzK,GAAc0K,MAG/B,MAAMC,EAAWrK,GAAiB3lC,GAC5BiwC,EAAO7B,KACbjtF,KAAK6+C,YAAcA,EAEnB7+C,KAAK+uF,SAAW,8DAGZC,GACI,CAAC,IAAK,IAAK,KAAMnwC,oIAMZgwC,EAAS,OAAOA,EAAS,gDACFA,EAAS,+RAUvCC,EAAK30E,iCAGb;;;;;;;;;;;;;;;;GCrCI,MAAO+0E,GAMXrvF,WAAAA,CAAYg/C,GALZ7+C,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAmvF,YAAchL,GAAaiL,SAGzB,MAAMN,EAAO7B,KACbjtF,KAAK6+C,YAAcA,EACnB7+C,KAAK+uF,SAAW,WACZR,4EAIEO,EAAK30E,0CAGb;;;;;;;;;;;;;;;;GCjBI,MAAOk1E,GAQXxvF,WAAAA,CAAYg/C,GAPZ7+C,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EACf1uF,KAAAmvF,YAAchL,GAAaiL,SAGzB,MAAMN,EAAO7B,KACbjtF,KAAK6+C,YAAcA,EACnB7+C,KAAK+uF,SAAW,WACZR,6JAKEO,EAAK30E,0CAGb;;;;;;;;;;;;;;;;GCrBI,MAAOm1E,GAKXzvF,WAAAA,CACIg/C,EAAuCgwC,EACvCU,GAAsB,GAN1BvvF,KAAA2zE,cAAgB,CAAC,KAOf,MAAMmb,EAAO7B,MACNvjD,EAAQtlC,GAASyqF,EACxB7uF,KAAK6+C,YAAcA,EAEnB,IAAI1kC,EAAS,SACTo1E,IACFp1E,EAAS,8BAGXna,KAAK+uF,SAAW,WACZC,GAA+BnwC,iPAUTz6C,uCACIA,uDACeA,QAAYslC,gCACrColD,EAAKzB,mTAcnByB,EAAK30E,iBAAiBA,gCAG9B;;;;;;;;;;;;;;;;GChCI,MAAOq1E,GAOX3vF,WAAAA,CACIg/C,EAAuCgwC,EACvCU,GAAsB,GAR1BvvF,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAKb,MAAMI,EAAO7B,MACNvjD,EAAQtlC,GAASyqF,EACxB7uF,KAAK6+C,YAAcA,EAEnB,IAAI4wC,EAAW,GACXt1E,EAAS,SACTo1E,IACFp1E,EAAS,8BAGX,IAAK,IAAI6B,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAI0zE,EAAM,EAAGA,GAAO,EAAGA,IAAO,CACjC,MAAMzlD,EAAgB,EAANjuB,EAAU0zE,EAE1BD,GAAY,oEAEYC,OAAS7wC,EAAY,wCACrB6wC,uCACE1zE,OAAS6iC,EAAY,0CACrB7iC,gMAOF5X,yCACIA,wDACcA,QAAYslC,iCACrColD,EAAKzB,gFAGLpjD,mFAEAA,mFAEAA,mEAEAA,yEAQrBjqC,KAAK+uF,SAAW,WACZC,GAA+BnwC,gOAW7B4wC,gBAEAX,EAAK30E,YAAYA,mBAGzB;;;;;;;;;;;;;;;;GCtFI,SAAUw1E,GAAmBvM,GACjC,MAAM0L,EAAO7B,KAWb,OV0CI,SACF7J,EAA2BwM,GAC7B,MAAMC,EAA4B7I,GAC9B5D,GAAI,IAAMA,EAAGiE,aAAajE,EAAG0M,gBAC7B,wCAGJ,GAFA9J,GAAa5C,GAAI,IAAMA,EAAGmE,aAAasI,EAAcD,KACrD5J,GAAa5C,GAAI,IAAMA,EAAGoE,cAAcqI,MACuB,IAA3DzM,EAAGqE,mBAAmBoI,EAAczM,EAAGsE,gBAEzC,MADAz9E,QAAQoR,IAAI+nE,EAAGoF,iBAAiBqH,IAC1B,IAAIjuF,MAAM,oCAElB,OAAOiuF,CACT,CUtDSE,CAA8B3M,EAVV,GAAG0L,EAAK5B,4CAE/B4B,EAAK/F,qCACL+F,EAAK/F,2BACL+F,EAAK3B,yHAOX,CAEM,SAAU6C,GAAmB5M,GAIjC,OVwHI,SACFA,EAA2BnjF,GAC7B,MAAMoe,EAAsB2oE,GACxB5D,GAAI,IAAMA,EAAG6M,gBAAgB,gCAGjC,OAFAjK,GAAa5C,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiG,aAAchrE,KACtD2nE,GAAa5C,GAAI,IAAMA,EAAG8M,WAAW9M,EAAGiG,aAAcppF,EAAMmjF,EAAG+M,eACxD9xE,CACT,CU/HS0xE,CAAoC3M,EAFvB,IAAI/8E,aACpB,EAAE,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAEpE,CAEM,SAAU+pF,GAAkBhN,GAGhC,OV2HI,SACFA,EAA2BnjF,GAC7B,MAAMoe,EAAsB2oE,GACxB5D,GAAI,IAAMA,EAAG6M,gBAAgB,gCAIjC,OAHAjK,GAAa5C,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiN,qBAAsBhyE,KAC9D2nE,GACI5C,GAAI,IAAMA,EAAG8M,WAAW9M,EAAGiN,qBAAsBpwF,EAAMmjF,EAAG+M,eACvD9xE,CACT,CUnIS0xE,CAAmC3M,EADZ,IAAI9xD,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhE,CAEA,SAASg/D,GACLlN,EAA2Bh/E,EAAeslC,EAC1C6mD,EAAwBC,EACxBC,IV2IE,SAA8BrsF,EAAeslC,GACjD,MAAMgnD,EAAiBvkF,IAAMzB,UAAU,0BACvC,GAAKtG,GAAS,GAAOslC,GAAU,EAE7B,MAAM,IAAI9nC,MADQ,2BAAIwC,KAASslC,kBAGjC,GAAKtlC,EAAQssF,GAAoBhnD,EAASgnD,EAGxC,MAAM,IAAI9uF,MAFQ,2BAAIwC,KAASslC,wDACfgnD,KAAkBA,MAKtC,CUvJEX,CAA+B3rF,EAAOslC,GACtC,MAAM+/C,EVoIF,SAAwBrG,GAC5B,OAAO4D,GACH5D,GAAI,IAAMA,EAAGoJ,iBAAiB,iCACpC,CUvIkBuD,CAAyB3M,GAEnCuN,EAAQvN,EAAG8G,WAgBjB,OAfA6F,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY0G,EAAOlH,KACxDsG,GACI3M,GAAI,IAAMA,EAAGwN,cAAcD,EAAOvN,EAAGyN,eAAgBzN,EAAG0N,iBAC5Df,GACI3M,GAAI,IAAMA,EAAGwN,cAAcD,EAAOvN,EAAG2N,eAAgB3N,EAAG0N,iBAC5Df,GACI3M,GAAI,IAAMA,EAAGwN,cAAcD,EAAOvN,EAAG4N,mBAAoB5N,EAAG6N,WAChElB,GACI3M,GAAI,IAAMA,EAAGwN,cAAcD,EAAOvN,EAAG8N,mBAAoB9N,EAAG6N,WAChElB,GACI3M,GACA,IAAMA,EAAGqJ,WACLkE,EAAO,EAAGJ,EAAgBnsF,EAAOslC,EAAQ,EAAG8mD,EAC5CC,EAAa,QACrBV,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAY,QACzDT,CACT,CAEM,SAAU0H,GACZC,GACF,OAAOA,EAAcvM,mBACvB,CAaM,SAAUwM,GACZD,GACF,OAAOA,EAActM,uBACvB,CAaM,SAAUwM,GACZF,GACF,OAAOA,EAAclM,qBACvB,CAaM,SAAUqM,GACZH,GACF,OAAOA,EAAcpM,yBACvB,CAYM,SAAUwM,GACZJ,GACF,OAAOA,EAAcrM,6BACvB,CA8IM,SAAU0M,GACZrO,EAA2B/kE,EAAqBu6C,EAAe0rB,EAC/DoN,EAAcC,EAAsBC,EACpCR,GACF,MAAMS,EAAMzO,EAEN0O,EACF,IAAIzrF,aXpIJ,SACFi+E,EAAcC,GAChB,MAAOl0B,EAAG3V,GAAK+pC,GAAuCH,EAAMC,GAC5D,OAAOl0B,EAAI3V,EAAI,CACjB,CWgIuBq3C,CACbJ,EAAcC,IAMtB,OAJAC,EAAIzI,WAAWyI,EAAIG,kBAAmB3zE,GACtCwzE,EAAII,iBAAiBJ,EAAIG,kBAAmB,EAAGF,GAC/CD,EAAIzI,WAAWyI,EAAIG,kBAAmB,MAE/BF,CACT;;;;;;;;;;;;;;;;;AC9QM,MAAOI,GAiBXryF,WAAAA,CAAYujF,GANZpjF,KAAAmyF,cAAmC,KACnCnyF,KAAA0oF,QAA6B,KACrB1oF,KAAAoyF,UAAW,EAqOXpyF,KAAAqyF,qBAAsB,EAsPtBryF,KAAAsyF,YAA0B,GAtdhC,MAAMC,EAAYpmF,IAAMzB,UAAU,iBACxB,MAAN04E,GACFpjF,KAAKojF,GAAKA,EblBV,SACFR,EAAsBQ,GACxBhB,GAASQ,GAAgBQ,CAC3B,CagBMoP,CAAgBD,EAAWnP,IAE3BpjF,KAAKojF,GAAKT,GAAgB4P,GAG5B,IAAIE,EAAqB,2BACzB,MAAMnG,EAA0B,8BAChC,GAAyC,IAArCngF,IAAMzB,UAAU,iBAAwB,CAC1C,MAAMgoF,EAAgB,oBAChBC,EAAqB,yBAI3B,GAFA3yF,KAAK4yF,sBACD7C,GAA+B/vF,KAAKojF,GAAIsP,GACxC3C,GAAwB/vF,KAAKojF,GAAIuP,GACnC3yF,KAAK2kF,0BACDoL,GAA+B/vF,KAAKojF,GAAIuP,QACvC,GAAIxmF,IAAM/L,IAAI,4BACnB,MAAM,IAAIwB,MACN,sHAKN,GADA5B,KAAK6yF,0BAA4B7yF,KAAKojF,GAAG6D,aAAawL,GAClD1C,GAAwB/vF,KAAKojF,GAAIkJ,GACnCtsF,KAAK8yF,8BACD/C,GAA+B/vF,KAAKojF,GAAIkJ,QACvC,GAAIngF,IAAM/L,IAAI,4BACnB,MAAM,IAAIwB,MACN,oIAKN,GADA6wF,EAAqB,yBACjB1C,GAAwB/vF,KAAKojF,GAAIqP,GACnCzyF,KAAK6yF,0BACD7yF,KAAKojF,GAAG6D,aAAawL,OACpB,KAAI1C,GAAwB/vF,KAAKojF,GAAIkJ,GAI1C,MAAM,IAAI1qF,MAAM,uDAHhB5B,KAAK8yF,8BACD9yF,KAAKojF,GAAG6D,aAAaqF,GAM7BtsF,KAAK+yF,aAAeC,GAA8BhzF,KAAKojF,IACvDpjF,KAAKizF,YAAcD,GAA6BhzF,KAAKojF,IACrDpjF,KAAKoqF,YX+GH,SAA4BhH,GAChC,OAAO4D,GACH5D,GAAI,IAAMA,EAAGuJ,qBAAqB,qCACxC,CWlHuBoD,CAA6B/vF,KAAKojF,IAErDpjF,KAAKoxF,cACDW,GAA0B/xF,KAAKojF,GAAIpjF,KAAK2kF,0BAC9C,CAEA,SAAYuO,GACV,OAAO/mF,IAAMxB,QAAQ,QACvB,CAEOjJ,OAAAA,GACL,GAAI1B,KAAKoyF,SACP,OAEkB,MAAhBpyF,KAAK0oF,SACPz+E,QAAQC,KACJ,wKAIoB,MAAtBlK,KAAKmyF,eACPloF,QAAQC,KACJ,sMAKN,MAAMk5E,EAAKpjF,KAAKojF,GAChB2M,GAAwB3M,GAAI,IAAMA,EAAG+P,WACrCpD,GAAwB3M,GAAI,IAAMA,EAAGiH,gBAAgBjH,EAAGkH,YAAa,QACrEyF,GAAwB3M,GAAI,IAAMA,EAAG0J,kBAAkB9sF,KAAKoqF,eAC5D2F,GAAwB3M,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiG,aAAc,QACjE0G,GACI3M,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiN,qBAAsB,QACrDN,GAAwB3M,GAAI,IAAMA,EAAGgQ,aAAapzF,KAAKizF,eACvDjzF,KAAKoyF,UAAW,CAClB,CAEOiB,0BAAAA,CAA2B/O,EAAcC,GAG9C,OADAvkF,KAAKye,kBDvDH,SACF2kE,EAA2BkB,EAAcC,EACzC6M,GACF,MAAOhtF,EAAOslC,GACVqoD,GAAkDzN,EAAMC,GAC5D,OAAO+L,GACHlN,EAAIh/E,EAAOslC,EACXynD,GAAyCC,GACzCA,EAAcnM,mBAAoB7B,EAAGyC,MAC3C,CC+CWmN,CACHhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,cACnC,CAEOkC,0BAAAA,CAA2BhP,EAAcC,GAG9C,OADAvkF,KAAKye,kBD9CH,SACF2kE,EAA2BkB,EAAcC,EACzC6M,GACF,MAAOhtF,EAAOslC,GACVqoD,GAAkDzN,EAAMC,GAC5D,OAAO+L,GACHlN,EAAIh/E,EAAOslC,EACX2nD,GAAyCD,GACzCA,EAAcnM,mBAAoBmM,EAAc/L,qBACtD,CCsCW2N,CACHhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,cACnC,CAEOmC,gCAAAA,CAAiCjP,EAAcC,GAGpD,OADAvkF,KAAKye,kBDrCH,SACF2kE,EAA2BkB,EAAcC,EACzC6M,GACF,MAAOhtF,EAAOslC,GACVqoD,GAAkDzN,EAAMC,GAC5D,OAAO+L,GACHlN,EAAIh/E,EAAOslC,EACX4nD,GAA+CF,GAAgBhO,EAAG0C,KAClE1C,EAAGoQ,cACT,CC6BWR,CACHhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,cACnC,CAEOqC,wBAAAA,CACHhK,EACA9gD,GACF3oC,KAAKye,kBDuCH,SACF2kE,EAA2BqG,EAC3B9gD,GAEFonD,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAYT,KAC3D9gD,EAAqB1oC,gBAAgBsG,WACxCwpF,GACI3M,GACA,IAAMA,EAAGqJ,WACLrJ,EAAG8G,WAAY,EAAG9G,EAAG0C,KAAMn9C,EAAOvkC,MAAOukC,EAAOe,OAAQ,EAAG05C,EAAG0C,KAC9D1C,EAAGoQ,cAAgB7qD,EAAqB1oC,QAEhD8vF,GACI3M,GACA,IAAMA,EAAGqJ,WACLrJ,EAAG8G,WAAY,EAAG9G,EAAG0C,KAAM1C,EAAG0C,KAAM1C,EAAGoQ,cACvC7qD,KAIVonD,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAY,OAClE,CC3DI8I,CAAoChzF,KAAKojF,GAAIqG,EAAS9gD,EACxD,CAEO+qD,0BAAAA,CACHjK,EAAuBrlF,EAAeslC,EAAgBzpC,GACxDD,KAAKye,kBDMH,SACF2kE,EAA2BqG,EAAuBrlF,EAClDslC,EAAgBzpC,EAAkBmxF,GAGpC,IAAIuC,EAA2BC,EAAuBrD,EAFtDR,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAYT,KAG5DxpF,aAAgBsG,YAClBotF,EAAgB,IAAIptF,WAAWnC,EAAQslC,EAAS,GAChDkqD,EAAgBxQ,EAAGoQ,cACnBjD,EAAiBnN,EAAG0C,OAEpB6N,EAAgB,IAAIttF,aAAajC,EAAQslC,EAAS,GAClDkqD,EAAgBxQ,EAAGyC,MACnB0K,EAAiBa,EAAcpM,2BAGjC2O,EAAcnzF,IAAIP,GAElB8vF,GACI3M,GACA,IAAMA,EAAGqJ,WACLrJ,EAAG8G,WAAY,EAAGqG,EAAgBnsF,EAAOslC,EAAQ,EAAG05C,EAAG0C,KACvD8N,EAAeD,KAEvB5D,GAAwB3M,GAAI,IAAMA,EAAG6G,YAAY7G,EAAG8G,WAAY,OAClE,CC9BI8I,CACIhzF,KAAKojF,GAAIqG,EAASrlF,EAAOslC,EAAQzpC,EAAMD,KAAKoxF,cAClD,CAEOyC,gCAAAA,CAAiCvP,EAAcC,GAGpD,OADAvkF,KAAKye,kBD3BH,SACF2kE,EAA2BkB,EAAcC,EACzC6M,GACF,MAAOhtF,EAAOslC,GACVqoD,GAAgDzN,EAAMC,GAC1D,OAAO+L,GACHlN,EAAIh/E,EAAOslC,EACX8nD,GAA+CJ,GAAgBhO,EAAG0C,KAClEsL,EAAc/L,qBACpB,CCmBW2N,CACHhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,cACnC,CAEO0C,yBAAAA,CAA0BxP,EAAcC,GAG7C,OADAvkF,KAAKye,kBDjDH,SACF2kE,EAA2BkB,EAAcC,EACzC6M,GACF,MAAOhtF,EAAOslC,GACVqoD,GAAgDzN,EAAMC,GAC1D,OAAO+L,GACHlN,EAAIh/E,EAAOslC,EAAQ6nD,GAAwCH,GAC3DhO,EAAG0C,KAAM1C,EAAGyC,MAClB,CC0CWmN,CACHhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,cACnC,CAEO2C,mBAAAA,CAAoBtK,GACzBzpF,KAAKye,kBACDze,KAAKmyF,gBAAkB1I,IACzBsG,GAA6C/vF,KAAKojF,GAAIpjF,KAAKoqF,aAC3DpqF,KAAKmyF,cAAgB,MAEvBpC,GAAwB/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAGyJ,cAAcpD,IAC/D,CAEOuK,+CAAAA,CACHvK,EAAuBnF,EAAcC,GACvC,OAAOvkF,KAAKi0F,qBACRxK,GACA,IDmEF,SACFrG,EAA2BkB,EAAcC,EACzC6M,GACF,MAAO/gC,EAAG3V,GACNq3C,GAAkDzN,EAAMC,GAGtDuN,EAAiB,IAAIvrF,WACqB+9E,EAAOC,EAFnC,GAYpB,OARAwL,GACI3M,GACA,IAAMA,EAAG8Q,WACL,EAAG,EAAG7jC,EAAG3V,EAAG02C,EAAclM,sBAAuB9B,EAAGoQ,cACpD1B,KAID,IAAIzrF,aAAayrF,EAAezzE,OACzC,CCtFc20E,CACFhzF,KAAKojF,GAAIkB,EAAMC,EAASvkF,KAAKoxF,gBACvC,CAEOK,8BAAAA,CACHpzE,EAAqBu6C,EAAe0rB,EAAcC,EAClDoN,EAAsBC,GACxB,OAAOoB,GACHhzF,KAAKojF,GAAI/kE,EAAQu6C,EAAO0rB,EAAMC,EAASoN,EAAcC,EACrD5xF,KAAKoxF,cACX,CAEO+C,+BAAAA,CAAgC91E,EAAqBta,GAE1D,ODuCE,SACFq/E,EAA2B/kE,EAC3Bta,GACF,MAAM8tF,EAAMzO,EAEN0O,EAAiB,IAAIzrF,aAAatC,GAMxC,OAJA8tF,EAAIzI,WAAWyI,EAAIG,kBAAmB3zE,GACtCwzE,EAAII,iBAAiBJ,EAAIG,kBAAmB,EAAGF,GAC/CD,EAAIzI,WAAWyI,EAAIG,kBAAmB,MAE/BF,CACT,CCnDWkB,CAA2ChzF,KAAKojF,GAAI/kE,EAAQta,EACrE,CAEOqwF,uBAAAA,CACH3K,EAAuBnF,EAAcC,GACvCvkF,KAAKq0F,yBAAyB5K,GAC9B,MAAMlqF,EDIJ,SACFsyF,EAA6BvN,EAAcC,EAC3C6M,GAEF,MAAM/yE,EAASwzE,EAAI5B,eACnBF,GACI8B,GAAK,IAAMA,EAAIzI,WAAWyI,EAAIG,kBAAmB3zE,KAGrD,MAEMi2E,EAAkBC,GAAiCjQ,EAAOC,EAehE,OAbAwL,GACI8B,GACA,IAAMA,EAAI3B,WACN2B,EAAIG,kBAAmBsC,EAAiBzC,EAAI2C,eAIpDzE,GACI8B,GAAK,IAAMA,EAAIqC,WAAW,EAAG,EAAG3P,EAASD,EAAMuN,EAAI/L,KAAM+L,EAAIhM,MAAO,KAExEkK,GACI8B,GAAK,IAAMA,EAAIzI,WAAWyI,EAAIG,kBAAmB,QAE9C3zE,CACT,CC/BmB20E,CACXhzF,KAAKojF,GAA8BkB,EAAMC,EAASvkF,KAAKoxF,eAE3D,OADApxF,KAAKy0F,6BACEl1F,CACT,CAEOm1F,qBAAAA,GACL,MAAMC,EAAe30F,KAAK40F,YAAY50F,KAAKojF,IAC3C,OAAOpjF,KAAK60F,UAAUF,EACxB,CAEQC,WAAAA,CAAYxR,GAClB,IAAIj5D,EACA2qE,EAEJ,GAAI3oF,IAAMxB,QAAQ,2BAA4B,CAC5C,MAAMknF,EAAMzO,EAEN2R,EAAOlD,EAAIxD,UAAUwD,EAAImD,2BAA4B,GAC3D5R,EAAG6R,QAEHH,EAAgBA,KACd,MAAM/wD,EAAS8tD,EAAIqD,eAAeH,EAAM,EAAG,GAC3C,OAAOhxD,IAAW8tD,EAAIsD,kBAClBpxD,IAAW8tD,EAAIuD,mBAAmB,EAGxCjrE,EAAQ4qE,CACT,MACG5oF,IAAMzB,UAAU,gDAAkD,GACpEyf,EAAQnqB,KAAKq1F,aACbr1F,KAAKs1F,WACLR,EAAgBA,IAAM90F,KAAKu1F,iBACvBprE,EACAhe,IAAMzB,UAAU,kDAMpBoqF,EAAgBA,KAAM,EAGxB,MAAO,CAAC3qE,QAAO2qE,gBACjB,CAEOU,+BAAAA,CACH/L,EAAuBkI,EACvBC,GACF,OAAO5xF,KAAKi0F,qBACRxK,GACA,IDkCF,SACFrG,EAA2BuO,EAC3BC,GACF,MAAM6D,EAAa,IAAIpvF,aAAasrF,EAAeC,EAAe,GAMlE,OALA7B,GACI3M,GACA,IAAMA,EAAG8Q,WACL,EAAG,EAAGtC,EAAcD,EAAcvO,EAAG0C,KAAM1C,EAAGyC,MAAO4P,KAEtDA,CACT,CC5CczC,CACFhzF,KAAKojF,GAAIuO,EAAcC,IACjC,CAIO8D,aAAAA,CAAcvO,GACnBnnF,KAAKye,kBACL,MAAM2kE,EAAKpjF,KAAKojF,GACVgE,EACF2I,GAAgC3M,EAAI+D,GAClC0I,EAA4BmD,GAA8B5P,GAC1DsF,EX5IJ,SAAwBtF,GAC5B,OAAO4D,GACH5D,GAAI,IAAMA,EAAGsS,iBAAiB,iCACpC,CWyIkC3F,CAAyB3M,GAYvD,OAXA2M,GAAwB3M,GAAI,IAAMA,EAAGuS,aAAajN,EAASmH,KAC3DE,GAAwB3M,GAAI,IAAMA,EAAGuS,aAAajN,EAAStB,KXzIzD,SAAsBhE,EAA2BsF,GAErD,GADA1C,GAAa5C,GAAI,IAAMA,EAAGwS,YAAYlN,MACkB,IAApDtF,EAAGuF,oBAAoBD,EAAStF,EAAGyS,aAErC,MADA5rF,QAAQoR,IAAI+nE,EAAGyF,kBAAkBH,IAC3B,IAAI9mF,MAAM,8CAEpB,CWoIImuF,CAAuB3M,EAAIsF,GACvB1oF,KAAKkzF,OACPnD,GAA2B3M,EAAIsF,GAE5B1oF,KAAKqyF,sBACRryF,KAAK81F,WAAWpN,GAChB1oF,KAAKqyF,oBDrIL,SACFjP,EAA2BsF,EAC3BqK,GAQF,OAJAhD,GACI3M,GAAI,IAAMA,EAAGgG,WAAWhG,EAAGiG,aAAc0J,KAC7BhD,GACZ3M,EAAIsF,EAAS,eAAgBqK,EAAc,EAJ/B,GAFE,IAQdhD,GACI3M,EAAIsF,EAAS,KAAMqK,EAAc,EAPzB,GADC,GASnB,CCwHiCC,CACvB5P,EAAIpjF,KAAK0oF,QAAS1oF,KAAK+yF,eAEtBrK,CACT,CAEOqN,aAAAA,CAAcrN,GACnB1oF,KAAKye,kBACDiqE,IAAY1oF,KAAK0oF,UACnB1oF,KAAK0oF,QAAU,MAEF,MAAXA,GACFqH,GAAwB/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAG2S,cAAcrN,IAEjE,CAEOoN,UAAAA,CAAWpN,GAChB1oF,KAAKye,kBACLze,KAAK0oF,QAAUA,EACM,MAAhB1oF,KAAK0oF,SAAoB1oF,KAAKkzF,OACjCnD,GAA2B/vF,KAAKojF,GAAIpjF,KAAK0oF,SAE3CqH,GAAwB/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAG4S,WAAWtN,IAC5D,CAEOuN,kBAAAA,CACHvN,EAAuBwN,EACvBC,GAAc,GAEhB,OADAn2F,KAAKye,kBACD03E,EXvEF,SACF/S,EAA2BsF,EAC3BwN,GACF,OAAOlP,GACH5D,GAAI,IAAMA,EAAG6S,mBAAmBvN,EAASwN,IACzC,YAAcA,EAAc,4BAClC,CWkEanG,CACH/vF,KAAKojF,GAAIsF,EAASwN,GXjEtB,SACF9S,EAA2BsF,EAC3BwN,GACF,OAAO9S,EAAG6S,mBAAmBvN,EAASwN,EACxC,CW+DanG,CACH/vF,KAAKojF,GAAIsF,EAASwN,EAE1B,CAEOE,oBAAAA,CAAqB1N,EAAuBK,GAGjD,OADA/oF,KAAKye,kBACEsxE,GACH/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAG+F,kBAAkBT,EAASK,IACxD,CAEOsN,yBAAAA,CAA0B3N,EAAuBwN,GAGtD,OADAl2F,KAAKye,kBACEze,KAAKojF,GAAG6S,mBAAmBvN,EAASwN,EAC7C,CAEOI,qBAAAA,CACHC,EAAkCC,EAClC9M,GACF1pF,KAAKye,kBACLze,KAAKy2F,mBXnFH,SACFrT,EAA2BqG,EAC3BiN,EAA8ChN,GAChD1D,GAAa5C,GAAI,IAAMoG,GAAgBpG,EAAIqG,EAASC,KACpD1D,GAAa5C,GAAI,IAAMA,EAAGuT,UAAUD,EAAwBhN,IAC9D,CW+EIqG,CACI/vF,KAAKojF,GAAImT,EAAoBC,EAAiB9M,EACpD,CAEOkN,sBAAAA,CACHC,EAAmCvS,EAAcC,GACnDvkF,KAAK82F,6BAA6BD,EAAqBtS,EAASD,EAClE,CAEOyS,4BAAAA,CACHC,EAAyC1S,EAAcC,GACzDvkF,KAAKye,kBACL,MAAOra,EAAOslC,GACVqoD,GAAgDzN,EAAMC,GAC1DvkF,KAAK82F,6BAA6BE,EAA2B5yF,EAAOslC,EACtE,CAEOutD,0BAAAA,CACHC,EAAkBtzC,EAAiBuzC,EACnCtzC,GACF7jD,KAAKo3F,iCACDD,EAAaD,EAAUrzC,EAAYD,EACzC,CAEOyzC,gCAAAA,CACHH,EAAkBtzC,EAAiBuzC,EACnCtzC,GACF,MAAM,IAAIjiD,MAAM,oDAClB,CAEO01F,aAAAA,GACe,MAAhBt3F,KAAK0oF,SACPqH,GAA2B/vF,KAAKojF,GAAIpjF,KAAK0oF,SAE3CqH,GAA+B/vF,KAAKojF,GACtC,CAEOmU,cAAAA,GACLv3F,KAAKye,kBACLze,KAAKy2F,mBACL,MAAMrT,EAAKpjF,KAAKojF,GACZpjF,KAAKkzF,OACPlzF,KAAKs3F,gBAEPvH,GACI3M,GAAI,IAAMA,EAAGoU,aAAapU,EAAGqU,UAAW,EAAGrU,EAAGsU,eAAgB,IACpE,CAEOC,8BAAAA,GACL33F,KAAKye,kBACLsxE,GAAwB/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAG+P,UACjD,CAEQyE,sBAAAA,GAaN,OAXwC,MAApC53F,KAAK63F,8BACP73F,KAAK63F,4BACD9H,GACI/vF,KAAKojF,GAEmD,IADxDj3E,IAAMzB,UACF,gDACA,kCACA,6BAIP1K,KAAK63F,2BACd,CAEQC,4BAAAA,GACN,OAAO93F,KAAK43F,wBACd,CAEQG,4BAAAA,GACN,OAAO/3F,KAAK43F,wBACd,CAEAvC,UAAAA,GACE,GAAwE,IAApElpF,IAAMzB,UAAU,gDAAuD,CACzE,MAAMmnF,EAAM7xF,KAAKojF,GACX4U,EAAMh4F,KAAK83F,+BAEX3tE,EAAQ0nE,EAAIoG,cAElB,OADApG,EAAIwD,WAAW2C,EAAIE,iBAAkB/tE,GAC9BA,EAET,MAAM6tE,EAAMh4F,KAAK+3F,+BACX5tE,EAAQ6tE,EAAIG,iBAElB,OADAH,EAAII,cAAcJ,EAAIE,iBAAkB/tE,GACjCA,CACT,CAEAmrE,QAAAA,GACE,GAAwE,IAApEnpF,IAAMzB,UAAU,gDAAuD,CACzE,MAAMmnF,EAAM7xF,KAAKojF,GACX4U,EAAMh4F,KAAK83F,+BAEjB,YADAjG,EAAIyD,SAAS0C,EAAIE,kBAGnB,MAAMF,EAAMh4F,KAAK+3F,+BACjBC,EAAIK,YAAYL,EAAIE,iBACtB,CAEO,4BAAMI,CAAuBnuE,GASlC,aARMlS,GACF,IAAMjY,KAAKoyF,UAGPpyF,KAAKu1F,iBACDprE,EACAhe,IAAMzB,UACF,mDACT1K,KAAKu4F,aACRpuE,EAAOhe,IAAMzB,UAAU,gDAC7B,CAEQ6tF,YAAAA,CAAapuE,EAAmB8jE,GACtC,GAA0B,IAAtBA,EACF,OAAO,KAGT,GAA0B,IAAtBA,EAAyB,CAC3B,MAAM4D,EAAM7xF,KAAKojF,GAIjB,OAFyByO,EAAI2G,kBAAkBruE,EAAO0nE,EAAI4G,cAEhC,IACrB,CACL,MAAMT,EAAMh4F,KAAK+3F,+BAKjB,OAFIC,EAAIU,kBAAkBvuE,EAAO6tE,EAAIW,kBAEX,IAE9B,CAEQpD,gBAAAA,CAAiBprE,EAAmB8jE,GAE1C,GAA0B,IAAtBA,EACF,OAAO,EAGT,GAA0B,IAAtBA,EAAyB,CAC3B,MAAM4D,EAAM7xF,KAAKojF,GACX4U,EAAMh4F,KAAK83F,+BAEXc,EACF/G,EAAI2G,kBAAkBruE,EAAO0nE,EAAIgH,wBAKrC,OAJqB,MAAjB74F,KAAK84F,WACP94F,KAAK84F,SAAW94F,KAAKojF,GAAGyK,aAAamK,EAAIe,mBAGpCH,IAAc54F,KAAK84F,SACrB,CACL,MAAMd,EAAMh4F,KAAK+3F,+BAEXa,EACFZ,EAAIU,kBAAkBvuE,EAAO6tE,EAAIgB,4BAKrC,OAJqB,MAAjBh5F,KAAK84F,WACP94F,KAAK84F,SAAW94F,KAAKojF,GAAGyK,aAAamK,EAAIe,mBAGpCH,IAAc54F,KAAK84F,SAE9B,CAEAjE,SAAAA,CAAUF,GACR,OAAO,IAAI71F,SAAcC,IACvBiB,KAAKi5F,eAAc,IAAMtE,EAAaG,kBAAiB,IAAM/1F,KAAU,GAE3E,CAIAm6F,SAAAA,GAEE,MAAMh3F,EAmGJ,SAA+BU,GACnC,IAAIC,EAAI,EACR,KAAOA,EAAID,EAAIZ,SAAUa,EAAG,CAE1B,IADeD,EAAIC,KAEjB,MAGJ,OAAOA,EAAI,CACb;;;;;;;;;;;;;;;;GA5GkBs2F,CAAqBn5F,KAAKsyF,YAAY7sF,KAAIlD,GAAKA,EAAE62F,YAC/D,IAAK,IAAIv2F,EAAI,EAAGA,GAAKX,IAASW,EAAG,CAC/B,MAAMw2F,UAACA,GAAar5F,KAAKsyF,YAAYzvF,GACrCw2F,IAEFr5F,KAAKsyF,YAActyF,KAAKsyF,YAAYjtF,MAAMnD,EAAQ,EACpD,CAEQ+2F,aAAAA,CAAcG,EAAyBC,GAC7Cr5F,KAAKsyF,YAAYzuF,KAAK,CAACu1F,WAAUC,cAC7Br5F,KAAKsyF,YAAYtwF,OAAS,GAK9BiW,GAAiB,KACfjY,KAAKk5F,YAE8B,IAA5Bl5F,KAAKsyF,YAAYtwF,SAE5B,CAEQqyF,wBAAAA,CAAyB5K,GAC/BzpF,KAAKye,kBACLsxE,GACI/vF,KAAKojF,GAAIqG,EAASzpF,KAAKoqF,aACvBpqF,KAAKkzF,OACPnD,GAA+B/vF,KAAKojF,GAExC,CAEQqR,0BAAAA,GACoB,MAAtBz0F,KAAKmyF,eACPpC,GACI/vF,KAAKojF,GAAIpjF,KAAKmyF,cAAenyF,KAAKoqF,aAClCpqF,KAAKkzF,OACPnD,GAA+B/vF,KAAKojF,KAGtC2M,GAA6C/vF,KAAKojF,GAAIpjF,KAAKoqF,YAE/D,CAEQ6J,oBAAAA,CACJxK,EACA6P,GACFt5F,KAAKq0F,yBAAyB5K,GAC9B,MAAMlqF,EAAS+5F,IAGf,OAFAt5F,KAAKy0F,6BAEEl1F,CACT,CAEQu3F,4BAAAA,CACJyC,EAA8Cn1F,EAC9CslC,GACF1pC,KAAKye,kBACL,MAAM2kE,EAAKpjF,KAAKojF,GAChB2M,GACI3M,EAAImW,EAAgCv5F,KAAKoqF,aACzCpqF,KAAKkzF,OACPnD,GAA+B3M,GAEjCpjF,KAAKmyF,cAAgBoH,EACrBxJ,GAAwB3M,GAAI,IAAMA,EAAGoW,SAAS,EAAG,EAAGp1F,EAAOslC,KAC3DqmD,GAAwB3M,GAAI,IAAMA,EAAGqW,QAAQ,EAAG,EAAGr1F,EAAOslC,IAC5D,CAEQ0tD,gCAAAA,CACJ70F,EAAW+jB,EAAWliB,EAAeslC,GACvC1pC,KAAKye,kBACLsxE,GACI/vF,KAAKojF,IAAI,IAAMpjF,KAAKojF,GAAGqW,QAAQl3F,EAAG+jB,EAAGliB,EAAOslC,IAClD,CAEQjrB,eAAAA,GACN,GAAIze,KAAKoyF,SACP,MAAM,IAAIxwF,MAAM,0CAEpB,CAEQ60F,gBAAAA,GACN,GAAoB,MAAhBz2F,KAAK0oF,QACP,MAAM,IAAI9mF,MAAM,mCAEpB,EC9kBF,MAAM++C,iBAACA,IAAoBk4B,GAiBrB,SAAU6gB,GACZC,EAAyB96C,EAAwBkwC,EACjD6K,GACF,MAAMC,EAA2B,GACjCF,EAAWtyF,SAAQ9E,IACjB,MAAMwB,EAAOkU,EAAmB1V,EAAEu3F,UAAUC,cAGxCx3F,EAAEu3F,UAAUE,UACdH,EAAeh2F,KACX,iBAAiBtB,EAAEkJ,OAAO1H,EAAO,EAAI,IAAIA,KAAU,QAEvD81F,EAAeh2F,KAAK,qBAAqBtB,EAAEkJ,SAC3CouF,EAAeh2F,KAAK,qBAAqBtB,EAAEkJ,aAG/C,MAAMwuF,EAAqBJ,EAAejuF,KAAK,MAEzCsuF,EACFP,EACKl0F,KAAIlD,GAsEf,SACI43F,EAAmBC,EACnBR,GAAqB,GACvB,IAAI1zE,EAAM,GAERA,GADE0zE,EACKS,GAA2BF,GAE3BG,GAAqBH,GAG9B,MAAMhlD,EAAUglD,EAAOL,UAAUC,aAC3BlqD,EAAWuqD,EAAaL,aAC1B5kD,EAAQnzC,QAAU6tC,EAAS7tC,SAE3BkkB,GADE0zE,EA4jCR,SACIW,EAAsBH,GACxB,MAAMI,EAAUD,EAAU9uF,KACpBgvF,EAAiBD,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACjEu1F,EAAW,MAAQH,EAAiB,cACpC75C,EAAS25C,EAAUT,UAAUC,aAAa/3F,OAC1C64F,EAAUT,EAAaL,aAAa/3F,OAEpC84F,EAAgBn6C,GAClB45C,EAAUT,UAAUC,aAAcK,EAAaL,cAE7Cn5E,EAAOm6E,GAAkBF,GACzBG,EAAWH,EAAUj6C,EAC3B,IAAIq6C,EACJ,MAAMC,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAGvCD,EADa,IAAXr6C,EACc,GACPi6C,EAAU,GAAKC,EAAc94F,QAAU,EAChC,cAGZ84F,EAAcr1F,KAAI2C,GAAK,UAAU8yF,EAAO9yF,EAAI4yF,YACvCpvF,KAAK,MAEhB,IAAIuvF,EAAwB,GAE1BA,EADEN,EAAU,GAAKj6C,EAAS,EACF,SAEA25C,EAAUT,UAAUC,aACft0F,KAAI,CAACC,EAAG7C,IAAM,UAAUq4F,EAAOr4F,EAAIm4F,OACnCpvF,KAAK,MAGpC,IAAIuO,EAAS,sBACb,MACMihF,EAA2B,IADlBnjF,EAAmBsiF,EAAUT,UAAUC,cAEhDsB,EAAUpjF,EAAmBmiF,EAAaL,cAC1CuB,EAA6B,IAAZD,EAEvB,GAAe,IAAXz6C,GAAiBw6C,GAAkBE,GAIhC,GAAIF,IAAkBE,EAEzBnhF,EADc,IAAZ0gF,EACO,uEAIA,qDAIN,GAAIC,EAAc94F,OAAQ,CAC/B,MAAMsiF,EAAO1jC,EAAS,EAChB8wC,EAAO9wC,EAAS,EAElBk6C,EAAc7rE,QAAQq1D,IAAS,GAAKwW,EAAc7rE,QAAQyiE,IAAS,EACrEv3E,EAAS,8BACA2gF,EAAc7rE,QAAQq1D,IAAS,EACxCnqE,EAAS,2EAEA2gF,EAAc7rE,QAAQyiE,IAAS,IACxCv3E,EAAS,sDAvBXA,EAAS,6DA2BX,MAAO,cACEygF,gBACHh6E,wCACAq6E,kCACsBR,KAAkBU,cACxChhF,cAGR,CAvoCaohF,CAA+BpB,EAAQC,GAyoCpD,SACIG,EAAsBH,GACxB,MAAMI,EAAUD,EAAU9uF,KACpBgvF,EAAiBD,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACjEu1F,EAAW,MAAQH,EAAiB,cACpCe,EAAcpB,EAAavL,SAC3B4M,EAAalB,EAAUT,UAAUjL,SACjCjuC,EAAS25C,EAAUT,UAAUC,aAAa/3F,OAC1C64F,EAAUT,EAAaL,aAAa/3F,OAE1C,IAAKu4F,EAAUT,UAAUE,WAAap5C,IAAWi6C,GACX,MAAlCN,EAAUT,UAAU/qD,YACpB92B,EAAiBwjF,EAAYD,GAC/B,MAAO,iBACGZ,uCACiBJ,+BAK7B,MAAM55E,EAAOm6E,GAAkBF,GACzBC,EAAgBn6C,GAClB45C,EAAUT,UAAUC,aAAcK,EAAaL,cAC7CiB,EAAWH,EAAUj6C,EAC3B,IAAIq6C,EACJ,MAAMC,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAGvCD,EADa,IAAXr6C,EACc,GACPi6C,EAAU,GAAKC,EAAc94F,QAAU,EAChC,cAGZ84F,EAAcr1F,KAAI2C,GAAK,UAAU8yF,EAAO9yF,EAAI4yF,YACvCpvF,KAAK,MAEhB,IAAIuvF,EAAwB,GAE1BA,EADEN,EAAU,GAAKj6C,EAAS,EACF,SAEA25C,EAAUT,UAAUC,aACft0F,KAAI,CAACC,EAAG7C,IAAM,UAAUq4F,EAAOr4F,EAAIm4F,OACnCpvF,KAAK,MAGpC,MAAO,eACGgvF,gBACJh6E,wCACAq6E,sBACUR,KAAkBU,gBAGpC,CA3rCaO,CAAyBvB,EAAQC,IAG5C,OAAOl0E,CACT,CA1FoBy1E,CAAwBp5F,EAAGs8C,EAAa+6C,KACjDhuF,KAAK,MACR4vF,EAAc38C,EAAYgwC,SAC1BC,EAAO7B,KACP2O,EAqIR,SAAsC9M,GACpC,MAAO,gFAEMA,EAAKzB,6CAGpB,CA3IoCwO,CAA6B/M,GAC/D,IAAIgN,EACAC,EACAC,EA0JN,SAAyBlN,GACvB,MAAMmN,EAAgB,GAAGnN,EAAK5B,sGAI1B4B,EAAK1B,iCACL0B,EAAKxB,wTAuBLwB,EAAKvB,yBACLuB,EAAKtB,yBACLsB,EAAKrB,2lBAyBLyO,WACAC,WACAC,SAGJ,OAAOH,CACT,CAxNqBI,CAAgBvN,GAE/BjwC,EAAYy9C,UACdR,EAkFJ,SACIjsD,EAAoB2rD,GACtB,OAAQ3rD,EAAS7tC,QACf,KAAK,EACH,OAAOu6F,KACT,KAAK,EACH,OAuLN,SACIn7F,EAAiBytF,GACnB,MAAM2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACzD,GAA0B,IAAtB2N,EAAe,GACjB,MAAO,wEAE2BA,EAAe,wBAKnD,GAA0B,IAAtBA,EAAe,GACjB,MAAO,wEAE2BA,EAAe,wBAKnD,MAAO,gHAG2BA,EAAe,OAAOA,EAAe,yCACxCA,EAAe,8BAGhD,CAlNaC,CAAwB5sD,EAAsB2rD,GACvD,KAAK,EACH,OAqXN,SACIp6F,EAAyBytF,GAC3B,MAAM2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACzD,GAAI52E,EAAiB7W,EAAOytF,GAC1B,MAAO,kFAEmC2N,EAAe,OACrDA,EAAe,uBAMrB,MAAME,EAAqBv6F,KAAKkC,KAAKjD,EAAM,GAAK,GAWhD,MAAO,kHAG2Bo7F,EAAe,OAAOA,EAAe,2CAExCA,EAAe,gDACnBE,kCACDA,iDAK5B,CA1ZaC,CAAwB9sD,EAA8B2rD,GAC/D,KAAK,EACH,OAyON,SACIp6F,EAAiCytF,GACnC,MAAM2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACnD6N,EAAqBv6F,KAAKkC,KAAKjD,EAAM,GAAK,GAC1Cw7F,EAAgBF,EAAqBv6F,KAAKkC,KAAKjD,EAAM,GAAK,GAEhE,MAAO,kHAG2Bo7F,EAAe,OAAOA,EAAe,yCACxCA,EAAe,6CAExBI,0BACHA,oCAEQF,kCACDA,oDAK5B,CA/PaG,CACHhtD,EAAsC2rD,GAC5C,QACE,OA8QN,SACIp6F,EAAiBytF,GACnB,MAAM2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IAEnD6N,EAAqBv6F,KAAKkC,KAAKjD,EAAMA,EAAMY,OAAS,GAAK,GACzD46F,EACFF,EAAqBv6F,KAAKkC,KAAKjD,EAAMA,EAAMY,OAAS,GAAK,GAC7D,IAAI86F,EAAiBF,EACjBG,EAAU,GACVpP,EAAS,UAEb,IAAK,IAAIj1E,EAAI,EAAGA,EAAItX,EAAMY,OAAS,EAAG0W,IACpCokF,GAAkB17F,EAAMA,EAAMY,OAAS0W,EAAI,GAC3CqkF,EAAU,gBACDrkF,eAAeokF,uBACVpkF,OAAOokF,WACjBC,EACJpP,EAAS,IAAIj1E,MAAQi1E,EAGvB,MAAO,aACCvsF,EAAMY,6GAEoBw6F,EAAe,OAAOA,EAAe,yCACxCA,EAAe,6BAExCO,8BAEgBH,0BACHA,oCAEQF,kCACDA,+BAETt7F,EAAMY,UAAU2rF,gBAGnC,CApTaqP,CAAwBntD,EAAU2rD,GAE/C,CAhGQyB,CAA+Bp+C,EAAYk7C,aAAcyB,GAC7DO,EA6IJ,SAAuCjN,GACrC,MAAO,2CAEDA,EAAK30E,0BAGb,CAnJmC+iF,CAA8BpO,KAE7DgN,EA+FJ,SACIjsD,EAAoB2rD,GACtB,OAAQ3rD,EAAS7tC,QACf,KAAK,EACH,OAAOu6F,KACT,KAAK,EACH,OAmMN,SACIn7F,EAAiBytF,GACnB,GAAoB,IAAhBA,EAAS,GACX,MAAO,oEAEuBA,EAAS,wBAIzC,GAAoB,IAAhBA,EAAS,GACX,MAAO,oEAEuBA,EAAS,wBAIzC,MAAO,gHAG2BA,EAAS,OAAOA,EAAS,oCACjCA,EAAS,6BAGrC,CA1NasO,CAAkBttD,EAAsB2rD,GACjD,KAAK,EACH,OA2YN,SACIp6F,EAAyBytF,GAC3B,GAAI52E,EAAiB7W,EAAOytF,GAC1B,MAAO,8EAE+BA,EAAS,OAAOA,EAAS,uBAIjE,GAAiB,IAAbztF,EAAM,GACR,MAAO,wHAG2BytF,EAAS,OAAOA,EAAS,2CAC5BA,EAAS,mEAK1C,GAAiB,IAAbztF,EAAM,GACR,MAAO,wHAG2BytF,EAAS,OAAOA,EAAS,2CAC5BA,EAAS,mEAK1C,MAAO,kHAG2BA,EAAS,OAAOA,EAAS,yCAC5BA,EAAS,2CAClBztF,EAAM,kCACFA,EAAM,2CAIlC,CAlbag8F,CAAkBvtD,EAA8B2rD,GACzD,KAAK,EACH,OAgPN,SACIp6F,EAAiCytF,GACnC,MAAMwO,EACFrO,GAA+C,CAAC,IAAK,IAAK,KAAM5tF,GAEpE,MAAO,kHAG2BytF,EAAS,OAAOA,EAAS,yCAC5BA,EAAS,2BAClCwO,4CAIR,CA9PaC,CACHztD,EAAsC2rD,GAC5C,KAAK,EACH,OAqSN,SACIp6F,EACAytF,GACF,MAAMwO,EAAyBrO,GAC3B,CAAC,IAAK,IAAK,IAAK,MAAO5tF,GAE3B,MAAO,6FAGMytF,EAAS,OAAOA,EAAS,yCACPA,EAAS,2BAClCwO,gDAIR,CApTaE,CACH1tD,EAA8C2rD,GACpD,KAAK,EACH,OAmTN,SACIp6F,EACAytF,GACF,MAAMwO,EAAyBrO,GAC3B,CAAC,IAAK,IAAK,IAAK,KAAM,MAAO5tF,GAEjC,MAAO,oFAEyCytF,EAAS,qCAC5BA,EAAS,2CAEPA,EAAS,6BAElCwO,wFAMR,CAtUaG,CACH3tD,EAAsD2rD,GAC5D,KAAK,EACH,OAqUN,SACIp6F,EACAytF,GACF,MAAMwO,EAAyBrO,GAC3B,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MAAO5tF,GAEvC,MAAO,6FAGMytF,EAAS,OAAOA,EAAS,yCACPA,EAAS,6BAElCwO,wFAMR,CAvVaI,CACH5tD,EACA2rD,GACN,QACE,MAAM,IAAI55F,MACN,GAAGiuC,EAAS7tC,iDAEtB,CAxHQ07F,CAAyB7+C,EAAYk7C,aAAcyB,GACvDO,EAiIJ,SAAoCjN,GAClC,MAAO,4CAEDA,EAAK30E,yCAGb,CAvImCwjF,CAA2B7O,IAGxD8K,IACFoC,GAAgB4B,IAOlB,MAJe,CACb5B,EAAcJ,EAA2BG,EACzC9B,EAAoB6B,EAAuB5B,EAAsBnL,GACjEnjF,KAAK,KAET,CAEA,SAAS0uF,GAAqBH,GAC5B,MAAM/4F,EAAQ+4F,EAAOL,UAAUC,aAC/B,OAAQ34F,EAAMY,QACZ,KAAK,EACH,OAshBN,SAA0Bu4F,GACxB,MAAMC,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACzE,GAAIk1F,EAAUT,UAAUE,UACtB,MAAO,SAASY,eAAsBJ,MAExC,MAAOqD,EAASC,GAAWvD,EAAUT,UAAUjL,SAC/C,GAAgB,IAAZgP,GAA6B,IAAZC,EACnB,MAAO,iBACGlD,uCACiBJ,6BAK7B,MAAOuD,EAAOC,GAASzD,EAAUT,UAAUjL,SACrC3mF,EAAS+1F,GAAyBzD,GACxC,MAAO,eACGI,qCACiBmD,MAAUC,MAAU91F,mCACpBsyF,oBAG7B,CA7iBa0D,CAAiB/D,GAC1B,KAAK,EACH,OA8jBN,SAAsBI,GACpB,MAAMC,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GAEzE,GAAIk1F,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,2BACJuD,GAAkB5D,oBAK1B,MAAM1L,EAAW0L,EAAUT,UAAUjL,SAC/BkP,EAAQlP,EAAS,GACjBmP,EAAQnP,EAAS,GAEvB,GAAc,IAAVmP,GAAyB,IAAVD,EACjB,MAAO,iBACGnD,gDACiBJ,6BAI7B,MAAMtyF,EAAS+1F,GAAyBzD,GACxC,GAAc,IAAVwD,EACF,MAAO,iBACGpD,8DAC+B1yF,eAAoB61F,uCAClCvD,yBAI7B,GAAc,IAAVuD,EACF,MAAO,iBACGnD,yDAC0B1yF,eAAoB81F,4CAC7BxD,yBAI7B,MAAO,eACGI,8CACiBmD,MAAUC,cAAkB91F,mCAC5BsyF,oBAG7B,CA7mBa4D,CAAajE,GACtB,KAAK,EACH,OA6oBN,SAAsBI,GACpB,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEwpF,EAAW0L,EAAUT,UAAUjL,SAErC,GAAgB,MAAZA,GAAoB52E,EAAiB7W,EAAOytF,GAAW,CACzD,MAAMgP,EAAUhP,EAAS,GAEzB,MAAO,eACC+L,2EAFQ/L,EAAS,SAGoCgP,qCACpCrD,qBAK3B,MAAMp1F,SAACA,EAAQW,SAAEA,GAAYkS,EAAkB7W,GACzCi9F,EAAgBj5F,EACtB,GAAIi5F,EAAcr8F,OAASZ,EAAMY,OAAQ,CACvC,MACMsJ,EAAS,CAAC,MAAO,OACvB,MAAO,WACHgvF,GAHiBgE,GAAiB/D,EAAW8D,oBAIvCzD,yCACGA,KAAY2D,GAAkBjzF,EAAQvF,sBAKrD,GAAIw0F,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,6EACuCx5F,EAAM,sBACjD+8F,GAAkB5D,oBAK1B,MAAMsD,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GACnB3mF,EAAS+1F,GAAyBzD,GACxC,GAAgB,IAAZsD,EAEF,MAAO,eACClD,iEAC6B1yF,YAAiB9G,EAAM,0DACpBy8F,qCACfrD,qBAI3B,GAAgB,IAAZqD,EAEF,MAAO,eACCjD,iEAC6B1yF,YAAiB9G,EAAM,qDACzB08F,0CACVtD,qBAK3B,MAAO,aACCI,yHAEcx5F,EAAM,cAAc8G,gCACjB21F,MAAYC,wCACZtD,gBAG3B,CArtBagE,CAAarE,GACtB,KAAK,EACH,OA0vBN,SAAsBI,GACpB,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEo5F,EAAUr9F,EAAM,GAAKA,EAAM,GAC3Bs9F,EAAUt9F,EAAM,IAEhBgE,SAACA,EAAQW,SAAEA,GAAYkS,EAAkB7W,GACzCi9F,EAAgBj5F,EACtB,GAAIi5F,EAAcr8F,OAASZ,EAAMY,OAAQ,CACvC,MACMsJ,EAAS,CAAC,MAAO,MAAO,SAC9B,MAAO,aACDgvF,GAHegE,GAAiB/D,EAAW8D,sBAIrCzD,sDACGA,KAAY2D,GAAkBjzF,EAAQvF,0BAKvD,GAAIw0F,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,0HAEmB6D,MAAYC,qBACnCP,GAAkB5D,oBAK1B,MAAM1L,EAAW0L,EAAUT,UAAUjL,SAC/BgP,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GACnB9/C,EAAawrD,EAAUT,UAAU/qD,WACvC,GAAI+uD,IAAYW,GAAyB,MAAd1vD,EAEzB,MAAO,mBACK6rD,2HAEoC8D,yFAExBZ,QAAcD,yCACTrD,6BAK/B,GAAIsD,IAAYY,GAAyB,MAAd3vD,EAEzB,MAAO,eACC6rD,iFACkCx5F,EAAM,kGAEC08F,QAAcD,qCACtCrD,qBAK3B,MAAMtyF,EAAS+1F,GAAyBzD,GACxC,MAAO,iBACKI,4IAEc6D,aAAmBC,eAAqBx2F,oCACrC21F,MAAYC,4CACZtD,sBAG/B,CA/zBamE,CAAaxE,GACtB,KAAK,EACH,OA+1BN,SAAsBI,GACpB,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEu5F,EAAUx9F,EAAM,GAChBs9F,EAAUt9F,EAAM,GAAKw9F,EACrBH,EAAUr9F,EAAM,GAAKs9F,GAErBt5F,SAACA,EAAQW,SAAEA,GAAYkS,EAAkB7W,GAC/C,GAAIgE,EAASpD,OAASZ,EAAMY,OAAQ,CAClC,MACMsJ,EAAS,CAAC,MAAO,MAAO,QAAS,UACvC,MAAO,WACHgvF,GAHiBgE,GAAiB/D,EAAWn1F,oBAIvCw1F,gEACGA,KAAY2D,GAAkBjzF,EAAQvF,sBAKrD,GAAIw0F,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,8IAEmB6D,MAAYC,MAAYE,qBAC/CT,GAAkB5D,oBAK1B,MAAMxrD,EAAawrD,EAAUT,UAAU/qD,WACjC8/C,EAAW0L,EAAUT,UAAUjL,SAC/BgP,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GAEzB,GAAIiP,IAAYW,GAAyB,MAAd1vD,EAEzB,MAAO,iBACG6rD,yKAIS8D,MAAYE,qFAETd,QAAcD,uCACTrD,yBAI7B,GAAIsD,IAAYc,GAAyB,MAAd7vD,EAEzB,MAAO,iBACG6rD,gIAEkBx5F,EAAM,GAAKA,EAAM,OAAOA,EAAM,0HAGrC08F,QAAcD,uCACRrD,yBAK7B,MAAMtyF,EAAS+1F,GAAyBzD,GACxC,MAAO,eACGI,oJAEc6D,aAAmBC,0BACzBE,2CACSf,MAAYC,cAAoB51F,mCAChCsyF,oBAG7B,CAz6BaqE,CAAa1E,GACtB,KAAK,EACH,OAy6BN,SAAsBI,GACpB,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEy5F,EAAU19F,EAAM,GAChBw9F,EAAUx9F,EAAM,GAAK09F,EACrBJ,EAAUt9F,EAAM,GAAKw9F,EACrBH,EAAUr9F,EAAM,GAAKs9F,GAErBt5F,SAACA,EAAQW,SAAEA,GAAYkS,EAAkB7W,GAC/C,GAAIgE,EAASpD,OAASZ,EAAMY,OAAQ,CAClC,MACMsJ,EAAS,CAAC,MAAO,MAAO,QAAS,SAAU,UACjD,MAAO,WACHgvF,GAHiBgE,GAAiB/D,EAAWn1F,oBAIvCw1F,4EACGA,KAAY2D,GAAkBjzF,EAAQvF,sBAKrD,GAAIw0F,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,kJAGG6D,MAAYC,MAAYE,MAAYE,qCAE3CX,GAAkB5D,oBAK1B,MAAMxrD,EAAawrD,EAAUT,UAAU/qD,WACjC8/C,EAAW0L,EAAUT,UAAUjL,SAC/BgP,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GAEzB,GAAIiP,IAAYW,GAAyB,MAAd1vD,EAEzB,MAAO,iBACG6rD,gLAGkB8D,MAAYE,MAAYE,qFAE9BhB,QAAcD,uCACTrD,yBAK7B,GAAIsD,IAAYgB,GAAyB,MAAd/vD,EAEzB,MAAO,iBACG6rD,iJAGGx5F,EAAM,GAAKA,EAAM,GAAKA,EAAM,uBAC5BA,EAAM,GAAKA,EAAM,OAAOA,EAAM,iHAGtB08F,QAAcD,uCACRrD,yBAK7B,MAAMtyF,EAAS+1F,GAAyBzD,GACxC,MAAO,eACGI,gKAEc6D,aAAmBC,eAAqBE,2BAC7CE,gBAAsB52F,kCACd21F,MAAYC,0CACZtD,oBAG7B,CAx/BauE,CAAa5E,GACtB,KAAK,EACH,OAw/BN,SAAsBI,GACpB,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,IAEnED,SAACA,EAAQW,SAAEA,GAAYkS,EAAkB7W,GAC/C,GAAIgE,EAASpD,OAASZ,EAAMY,OAAQ,CAClC,MACMsJ,EAAS,CAAC,MAAO,MAAO,QAAS,SAAU,SAAU,UAC3D,MAAO,WACHgvF,GAHiBgE,GAAiB/D,EAAWn1F,oBAIvCw1F,6GAEGA,KAAY2D,GAAkBjzF,EAAQvF,sBAKrD,MAAMi5F,EAAU59F,EAAM,GAChB09F,EAAU19F,EAAM,GAAK49F,EACrBJ,EAAUx9F,EAAM,GAAK09F,EACrBJ,EAAUt9F,EAAM,GAAKw9F,EACrBH,EAAUr9F,EAAM,GAAKs9F,EAE3B,GAAInE,EAAUT,UAAUE,UAEtB,MAAO,iBACGY,qLAIG6D,MAAYC,MAAYE,MAAYE,8EAGlCE,qBACTb,GAAkB5D,oBAK1B,MAAMxrD,EAAawrD,EAAUT,UAAU/qD,WACjC8/C,EAAW0L,EAAUT,UAAUjL,SAC/BgP,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GACzB,GAAIiP,IAAYW,GAAyB,MAAd1vD,EAEzB,MAAO,iBACG6rD,kMAIG8D,MAAYE,MAAYE,MAAYE,kHAG3BlB,QAAcD,uCACTrD,yBAI7B,GAAIsD,IAAYkB,GAAyB,MAAdjwD,EAEzB,MAAO,iBACG6rD,sKAGGx5F,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,uBACvCA,EAAM,GAAKA,EAAM,GAAKA,EAAM,uBAC5BA,EAAM,GAAKA,EAAM,uBACjBA,EAAM,8HAGE08F,QAAcD,uCACRrD,yBAI7B,MAAMtyF,EAAS+1F,GAAyBzD,GACxC,MAAO,eACGI,+LAGc6D,aAAmBC,eAAqBE,2BAC7CE,gBAAsBE,gBAAsB92F,kCACpC21F,MAAYC,0CACZtD,oBAG7B,CA/kCayE,CAAa9E,GACtB,QACE,MAAM,IAAIv4F,MACN,GAAGR,EAAMY,gDAGnB,CAEA,SAASq4F,GAA2BF,GAElC,OADcA,EAAOL,UAAUC,aACjB/3F,QACZ,KAAK,EACH,OAmfN,SAAgCu4F,GAC9B,MAAMC,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEypF,EAAO7B,KACb,MAAO,cACE2N,uBACI9L,EAAKzB,aAAamN,wBAGjC,CA5fa0E,CAAuB/E,GAChC,KAAK,EACH,OAqhBN,SAA4BI,GAC1B,MAAMC,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEwpF,EAAW0L,EAAUT,UAAUjL,SAC/B2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACnDC,EAAO7B,KAEb,MAAO,cACE2N,4DAED4B,EAAe,OAAOA,EAAe,6BAChC1N,EAAKzB,aAAamN,oBAGjC,CApiBa2E,CAAmBhF,GAC5B,KAAK,EACH,OAqlBN,SAA4BI,GAC1B,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEwpF,EAAW0L,EAAUT,UAAUjL,SAE/BgP,EAAUhP,EAAS,GACnBiP,EAAUjP,EAAS,GACnBC,EAAO7B,KACb,GAAgB,MAAZ4B,GAAoB52E,EAAiB7W,EAAOytF,GAC9C,MAAO,gBACE+L,6EACwCkD,QAAcD,2BAElD/O,EAAKzB,aAAamN,yBAKjC,MAAMgC,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACnDuQ,EAAej9F,KAAKkC,KAAKjD,EAAM,GAAK,GAE1C,MAAO,cACEw5F,yDACsBwE,MAAiB5C,EAAe,OAC3DA,EAAe,gCACN1N,EAAKzB,aAAamN,oBAGjC,CAnnBa6E,CAAmBlF,GAC5B,KAAK,EACH,OA6rBN,SAA4BI,GAC1B,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5BS,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEwpF,EAAW0L,EAAUT,UAAUjL,SAC/B2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IAEzD,GAAiB,IAAbztF,EAAM,GAAU,CAClB,MACM2E,EAAW,CAAC,EAAG,GAEfuF,EAAS,CAAC,IAAK,MAAO,OAC5B,MAAO,aACD+uF,GAHeiE,GAAiB/D,EAFhBn5F,EAAMiE,MAAM,sBAMvBu1F,kDACIA,KAAY2D,GAAkBjzF,EAAQvF,0BAKvD,MAAM83F,EAAUrB,EAAe,GACzBsB,EAAUtB,EAAe,GAEzB4C,EAAej9F,KAAKkC,KAAKjD,EAAM,GAAK,GACpCw7F,EAAgBwC,EAAej9F,KAAKkC,KAAKjD,EAAM,GAAK,GACpD0tF,EAAO7B,KAEb,MAAO,cACE2N,0EAEDiD,MAAYC,MAAYlB,MAAkBwC,kCACrCtQ,EAAKzB,aAAamN,oBAGjC,CAhuBa8E,CAAmBnF,GAC5B,QACE,OAuyBN,SAA4BI,GAC1B,MAAMn5F,EAAQm5F,EAAUT,UAAUC,aAC5Bv0F,EAAOpE,EAAMY,OACbw4F,EAAUD,EAAU9uF,KACpBmvF,EAAW,MAAQJ,EAAQE,OAAO,GAAGC,cAAgBH,EAAQn1F,MAAM,GACnEwpF,EAAW0L,EAAUT,UAAUjL,SAC/B2N,EACF,CAACr6F,KAAKkC,KAAKwqF,EAAS,GAAK,GAAI1sF,KAAKkC,KAAKwqF,EAAS,GAAK,IACnDgP,EAAUrB,EAAe,GACzBsB,EAAUtB,EAAe,GAEzB4C,EAAej9F,KAAKkC,KAAKjD,EAAMoE,EAAO,GAAK,GACjD,IAAIo3F,EAAgBwC,EAAej9F,KAAKkC,KAAKjD,EAAMoE,EAAO,GAAK,GAC3D8F,EAAS,0BACTpJ,EAAQ,OAAO06F,mBAA+BwC,gBAClD,IAAK,IAAI1mF,EAAI,EAAGA,EAAIlT,EAAO,EAAGkT,IAC5BpN,EAAS,QAAQoN,MAAQpN,EACzBsxF,GAAiBx7F,EAAMoE,EAAOkT,EAAI,GAClCxW,EAAQ,IAAIwW,OAAOkkF,OAAqB16F,EAE1C,MAAM4sF,EAAO7B,KACb,MAAO,cACE2N,KAAYtvF,2BACHpJ,gCACO47F,uCACOA,0DACmBA,MAAYD,qBAClD/O,EAAKzB,aAAamN,oBAGjC,CAr0Ba+E,CAAmBpF,GAEhC,CA6JA,MAAM+B,GAAoB,kbAcpBC,GAAoB,qTAUpBC,GAAoB,2VAWpBwB,GAAuB,sWAa7B,SAASrB,KACP,MAAO,2DAKT,CAkRA,SAAS0B,GAAyBzD,GAChC,MAAO,SAASA,GAClB,CAolBA,SAAS2D,GAAkB5D,GACzB,MAAMC,EAAUD,EAAU9uF,KACpB4qE,EAASp+D,EAAmBsiF,EAAUT,UAAUC,cAEtD,OAAI1jB,EAAS,EACJ,UAAUmkB,KAEZ,6BACiBnkB,sDAETmkB,2BAIjB,CAsIM,SAAUO,GAAkBv1F,GAChC,GAAIA,GAAQ,EACV,MAAO,MACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QAEP,MAAM5D,MAAM,gBAAgB4D,yBAEhC,CAGA,SAAS84F,GACLnE,EAAmBkE,GAErB,MAAMmB,EAA0BxtE,KAAKiI,MAAMjI,KAAKC,UAAUkoE,IAE1D,OADAqF,EAAa1F,UAAUC,aAAesE,EAC/BmB,CACT,CAEA,SAASjB,GAAkBjzF,EAAkBvF,GAC3C,OAAOA,EAASN,KAAI2C,GAAKkD,EAAOlD,KAAIwD,KAAK,KAC3C;;;;;;;;;;;;;;;;GC3uCA,SAAS6zF,GACLC,EAAyB3lF,GAC3B,GAAI2lF,EAAW19F,SAAW+X,EAAO/X,OAC/B,MAAMJ,MACF,4BAA4B89F,EAAW19F,wCAClB+X,EAAO/X,iBAGlC09F,EAAWr4F,SAAQ,CAAC3B,EAAG7C,KACrB,MAAMK,EAASwC,EAAEq0F,aACX7+E,EAAQnB,EAAOlX,GACfM,EAAS+X,EAAM9Z,MAErB,IAAK6W,EAAiB/U,EAAQC,GAC5B,MAAMvB,MAEF,2EAA4BsB,SAAcC,gBAGhD,GAAIuC,EAAEs0F,WAAa9+E,EAAM8+E,UACvB,OAGF,MAAM2F,EAAYj6F,EAAEmpF,SACd+Q,EAAY1kF,EAAM8+E,UAAY,KAAO9+E,EAAM2kF,QAAQhR,SACzD,IAAK52E,EAAiB0nF,EAAWC,GAC/B,MAAMh+F,MAEF,kFAAwB+9F,SAAiBC,kBAGnD;;;;;;;;;;;;;;;;;ACnIM,SAAUE,GAA6BtwE,GAE3C,MAAO,CAACu4B,EAAkBg4C,EAAkBC,EACpCC,EAAmB5+F,KACzB,MAAM+D,EAAWyzE,GAAwC9wB,EAAQg4C,GAE3DG,EAAa96F,EAASpD,OACtBm+F,EAAgBloF,EAAoB7S,GAGpC7F,EACF0Y,EAA4B5W,EAHb4W,EAAmB7S,IAKhCg7F,EAAQr4C,EAAO/lD,OACfq+F,EAAQN,EAAO/9F,OAEfs+F,EAAWroF,EAAoB8vC,GAC/Bw4C,EAAWtoF,EAAoB8nF,GAE/BS,EAAiB3nB,GAA8B9wB,EAAQ3iD,GACvDq7F,EAAiB5nB,GAA8BknB,EAAQ36F,GAE7D,GAAIo7F,EAAex+F,OAASy+F,EAAez+F,SAAW,EACpD,IAAK,IAAIa,EAAI,EAAGA,EAAItD,EAAOyC,SAAUa,EACnCtD,EAAOsD,GAAK2sB,EAAGwwE,EAAMn9F,EAAIm9F,EAAMh+F,QAASi+F,EAAMp9F,EAAIo9F,EAAMj+F,cAG1D,IAAK,IAAIa,EAAI,EAAGA,EAAItD,EAAOyC,SAAUa,EAAG,CACtC,MAAM8a,EAAM1F,EAAgBpV,EAAGq9F,EAAYC,GAErCO,EAAO/iF,EAAItY,OAAO+6F,GACxBI,EAAen5F,SAAQe,GAAKs4F,EAAKt4F,GAAK,IACtC,MAAMu4F,EAAS1oF,EAAgByoF,EAAMN,EAAOE,GAEtCM,EAAOjjF,EAAItY,OAAOg7F,GACxBI,EAAep5F,SAAQe,GAAKw4F,EAAKx4F,GAAK,IACtC,MAAMy4F,EAAS5oF,EAAgB2oF,EAAMP,EAAOE,GAE5ChhG,EAAOsD,GAAK2sB,EAAGwwE,EAAMW,GAASV,EAAMY,IAIxC,MAAO,CAACthG,EAAQ6F,EAAS,CAE7B;;;;;;;;;;;;;;;;GC9CO,MAAM07F,GAAUhB,IAA8B,CAACv8F,EAAGmV,IAAMnV,EAAImV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACE7D,SAAUqoF,GAAsBvxE,GAEpC,MAAO,CAACruB,EAAQE,EAAOulB,KACrB,MAAMg5C,EACF3nD,EAA4B5W,EAA0BF,EAAOa,QACjE,IAAK,IAAIa,EAAI,EAAGA,EAAI1B,EAAOa,SAAUa,EACnC+8D,EAAU/8D,GAAK2sB,EAAGruB,EAAO0B,GAAI+jB,GAE/B,OAAOg5C,CAAS,CAEpB;;;;;;;;;;;;;;;;GCZO,MAAMohC,GAAWD,IAAuBE,GAAO9+F,KAAKkC,KAAK48F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzD,MAAMC,GAAUH,IAAuBE,GAAO9+F,KAAKsX,IAAIwnF,KCAjDE,GAAYJ,IAAuBE,GAAO9+F,KAAKmhD,MAAM29C,KCArDG,GAAYL,IAAuBE,GAAO9+F,KAAKiH,MAAM63F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3D,MAAMI,GACTvB,IAA6B,CAACv8F,EAAWmV,IAAenV,EAAImV,EAAK,EAAI,ICD5D4oF,GACTxB,IAA6B,CAACv8F,EAAWmV,IAAenV,EAAImV,EAAK,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDlE,MAAM6oF,GAAUR,IAAuBE,GAAO9+F,KAAKkZ,IAAI4lF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvD,MAAMO,GAAc1B,IACtB,CAAC2B,EAAQC,IAAWv/F,KAAKK,IAAIi/F,EAAQC,KCD7BC,GAAc7B,IACtB,CAAC2B,EAAQC,IAAWv/F,KAAKG,IAAIm/F,EAAQC,KCF7BE,GACT9B,IAA8B,CAAC2B,EAAQC,IAAWD,EAASC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxD,MAAMG,GACT/B,IAA8B,CAACv8F,EAAGmV,IAAOnV,IAAMmV,EAAK,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDrD,MAAMopF,GAAYf,IAAuBE,GAAO,EAAI9+F,KAAKmC,KAAK28F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9D,MAAMc,GAAwBjC,IAA8B,CAACv8F,EAAGmV,KACrE,MAAMC,EAAOpV,EAAImV,EACjB,OAAOC,EAAOA,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,MAAMqpF,GACTlC,IAA8B,CAAC2B,EAAQC,IAAWD,EAASC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB/D,IAAAO,GAAAl3F,OAAAmN,OAAA,CAAAC,UAAA,KAAA2oF,QAAAA,GAAAoB,aCkBM,SACF/qC,EAAmBgrC,EAAyBC,EAC5CC,EAAwBt+F,GAC1B,MAAMu+F,EAAcrqF,EAAmBoqF,GACjCE,EAAUtqF,EAAyBlU,EAAMq+F,GAE/C,IAAK,IAAIv/F,EAAI,EAAGA,EAAIs0D,EAAMn1D,OAAQa,IAAK,CACrC,MAAM3D,EAAQi4D,EAAMt0D,GACpB,GAAI3D,EAAQ,EACV,MAAM,IAAI0C,MAAM,iCAGd1C,GAAS6E,IAKXw+F,EAAQrjG,IADNojG,EAAc,EACEH,EAAYt/F,GAEZ,GAItB,OAAO0/F,CACT,ED1CAC,mBC4CM,SACFC,EAAuBC,EAA6B3+F,EACpDg8C,GAAe,GACjB,MAAM6D,EAAU6+C,EAAKrhG,MAAM,GACrBwa,EAAU6mF,EAAKrhG,MAAM,GAErBuhG,EAAStkF,GAAO,CAACulC,EAAS7/C,GAAO2+F,EAAWrhG,OAElD,IAAK,IAAIwB,EAAI,EAAGA,EAAI+gD,EAAS/gD,IAC3B,IAAK,IAAIsD,EAAI,EAAGA,EAAIyV,EAASzV,IAAK,CAChC,MAAMjH,EAAQujG,EAAKriG,IAAIyC,EAAGsD,GAC1B,GAAIjH,EAAQ,EACV,MAAM,IAAI0C,MAAM,iCAGd1C,GAAS6E,IAITg8C,EACF4iD,EAAOniG,IAAI,EAAGqC,EAAG3D,GAEbwjG,EAAW3+F,KAAO,EACpB4+F,EAAOniG,IAAImiG,EAAOviG,IAAIyC,EAAG3D,GAASwjG,EAAWtiG,IAAIyC,EAAGsD,GAAItD,EAAG3D,GAE3DyjG,EAAOniG,IAAImiG,EAAOviG,IAAIyC,EAAG3D,GAAS,EAAG2D,EAAG3D,IAMhD,OAAOyjG,CACT,ED5EA3B,SAAAA,GAAA4B,WEkBM,SACF7oF,EAAuD81B,EACvDxuC,EAAiBwhG,GACnB,MAAMN,EAAUtqF,EAAuB5W,EAAO4W,EAAmB43B,IAEjE,GAAIgzD,GAA0B,WAAVxhG,EAAoB,CAEtC,IAAI6G,EAAS,EACb6R,EAAO1S,SAAQ6T,IACb,MAAMnX,EAAOkU,EAAmBiD,EAAM9Z,OAErCmhG,EAAuB/hG,IAAI0a,EAAMxU,KAAoBwB,GACtDA,GAAUnE,CAAI,QAEX,CACL,IAAI++F,EAAY,EAEhB/oF,EAAO1S,SAAQ6T,IACb,MAAM6nF,EAAwB,WAAV1hG,EAChBw3E,GAAoC39D,EAAMxU,MAC1CwU,EAAMxU,KAEV,IAAIs8F,EAAO,EAEX,IAAK,IAAIhnF,EAAM,EAAGA,EAAMd,EAAM9Z,MAAM,KAAM4a,EAAK,CAC7C,MAAMinF,EAASjnF,EAAM6zB,EAAS,GAAKizD,EACnC,IAAK,IAAIpT,EAAM,EAAGA,EAAMx0E,EAAM9Z,MAAM,KAAMsuF,EACxC6S,EAAQU,EAASvT,GAAOqT,EAAYC,KAIxCF,GAAa5nF,EAAM9Z,MAAM,EAAE,IAI/B,OAAOmhG,CACT,EFtDArB,QAAAA,GAAAC,UAAAA,GAAAC,UAAAA,GAAA8B;;;;;;;;;;;;;;;;;AGkBM,SACFT,EAA0BU,EAC1BC,GACF,MAAMT,EAAStkF,GAAO+kF,EAAoBX,EAAKphG,OAC/C,IAAK,IAAIwB,EAAI,EAAGA,EAAI8/F,EAAO5+F,OAAQlB,EAAG,CACpC,MAEMwgG,EAFSV,EAAOx5F,WAAWtG,GAEIwC,QAC/Bi+F,EAAWD,EAAY,GACvBE,EAAaF,EAAY,GACzBG,EAAeL,EAAWl6F,WAAW,CAACq6F,EAAUC,IACtDF,EAAY,GAAKF,EAAWhiG,OAAOqiG,GAEnC,MAAMC,EAAgBhB,EAAKx5F,WAAWo6F,GACtCV,EAAOxhG,OAAO0B,GAAK4/F,EAAKthG,OAAOsiG,GAGjC,OAAOd,CACT,EHpCAtB,YAAAA,GAAAC,SAAAA,GAAAoC;;;;;;;;;;;;;;;;;AIkBM,SACF57F,EAAe6mC,EAAchoC,GAC/B,MAAMxH,GAAQwvC,EAAO7mC,IAAUnB,EAAM,GAE/BxF,EAAS8W,EAAyBtR,EAAK,WAC7CxF,EAAO,GAAK2G,EACZ,IAAK,IAAIjF,EAAI,EAAGA,EAAI1B,EAAOa,OAAQa,IACjC1B,EAAO0B,GAAK1B,EAAO0B,EAAI,GAAK1D,EAG9B,OAAOgC,CACT,EJ7BAogG,QAAAA,GAAAoC,QKkBM,SACF3D,EAAmB4D,EAAoB/zD,EACvCxuC,GACF,MAAMqF,EAAOuR,EACT5W,EAA0B4W,EAAmB43B,IAEjD,IAAK,IAAIhtC,EAAI,EAAGA,EAAI6D,EAAK1E,SAAUa,EAAG,CACpC,MAAMqF,EAASrF,EAAI+gG,EACnB,IAAIphG,EAAMw9F,EAAM93F,GAChB,IAAK,IAAI/B,EAAI,EAAGA,EAAIy9F,IAAcz9F,EAAG,CACnC,MAAMjH,EAAQ8gG,EAAM93F,EAAS/B,GACzBjH,EAAQsD,IACVA,EAAMtD,GAGVwH,EAAK7D,GAAKL,EAEZ,OAAOkE,CACT,ELpCA86F,YAAAA,GAAAG,YAAAA,GAAAC,aAAAA,GAAAiC;;;;;;;;;;;;;;;;;AMsBM,SAAkB1sC,EAAmB9nB,EAAkBy0D,GAE3D,MAAMC,EACF9rF,IAAwB,EAAsB6rF,GAClD,OAAOlC,GAAa,GAAIvyD,EAAQ00D,EAAU5sC,EAAO2sC,EACnD,EN3BAjC,aAAAA,GAAAmC;;;;;;;;;;;;;;;;;AOsBM,SACF30D,EAAkBy0D,EAAkB3sC,EACpC8sC,GAEF,MAAOp0D,EAAUq0D,GACbrrB,GAAuCxpC,EAAQ40D,GAC7CE,EAAW3jF,GAAWsjF,EAAQ,SAC9BvB,EAAUtqF,EACIA,EAAmB43B,GAAWs0D,GAC5CP,EAAa3rF,EAAmBisF,GAEtC,IAAK,IAAIrhG,EAAI,EAAGA,EAAI0/F,EAAQvgG,SAAUa,EAAG,CACvC,MAAMqF,EAASrF,EAAI+gG,EACnB,IAAInoD,EAAO,EACX,IAAK,IAAIt1C,EAAI,EAAGA,EAAIy9F,IAAcz9F,EAChCs1C,GAAQ0b,EAAMjvD,EAAS/B,GAEzBo8F,EAAQ1/F,GAAK44C,EAGf,MAAO,CAAC8mD,UAAS1yD,WAAUs0D,WAC7B;;;;;;;;;;;;;;;;IP3CAC,UQkBM,SACFt8F,EAAe6mC,EAAcxvC,EAC7BkC,GAKF,GAJsByG,IAAU6mC,GACI7mC,EAAQ6mC,GAAQxvC,EAAO,GACvBwvC,EAAO7mC,GAAS3I,EAAO,EAIzD,OAAO8Y,EAAyB,EAAG5W,GAGrC,MACMF,EAAS8W,EADK9V,KAAKwvC,IAAIxvC,KAAKkC,MAAMsqC,EAAO7mC,GAAS3I,IACHkC,GAEjDstC,EAAO7mC,GAAkB,IAAT3I,IAGlBA,GAAQ,GAGVgC,EAAO,GAAK2G,EACZ,IAAK,IAAIjF,EAAI,EAAGA,EAAI1B,EAAOa,OAAQa,IACjC1B,EAAO0B,GAAK1B,EAAO0B,EAAI,GAAK1D,EAE9B,OAAOgC,CACT,ER5CA2gG,UAAAA,GAAAuC;;;;;;;;;;;;;;;;;ASqBM,SAAwB39F,GAC5B,MAAM49F,EAAe,IAAIj+F,aAAaK,EAAK1E,QAC3C,IAAK,IAAIa,EAAI,EAAGA,EAAI6D,EAAK1E,SAAUa,EACjCyhG,EAAazhG,GAAKV,KAAKwvC,IAAIjrC,EAAK7D,IAElC,OAAOyhG,CACT,ET3BAC,UUqBM,SACF79F,EAAqB2lC,EAAiBtoC,EAAgB3C,EACtDC,GACF,MAAMmjG,EAAcz0D,GAA4B3uC,EAAOirC,EAAOtoC,GACxD/B,EAASiW,EAAmBlU,GAC5B0gG,EAAWxsF,EAAoB7W,GAErC,GAAIojG,EAAa,CACf,MAAMz1D,EAAagB,GAA6B1D,EAAOo4D,GAEvD,MAAc,WAAVpjG,EACMqF,EAAsBrB,MAAM0pC,EAAYA,EAAa/sC,GAGvD0E,EAAoB25D,SAAStxB,EAAYA,EAAa/sC,GAGhE,MAIM0iG,EAAQrmF,GAAOjd,EAAOC,EAJE,WAAVA,EAChBw3E,GAAoCnyE,GACpCA,GAGEi8F,EAAStkF,GAAOta,EAAM1C,GAC5B,IAAK,IAAIwB,EAAI,EAAGA,EAAI8/F,EAAO5+F,OAAQlB,EAAG,CACpC,MAAM8hG,EAAShC,EAAOx5F,WAAWtG,GAC3B+hG,EAAQD,EAAOl/F,KAAI,CAACo/F,EAAa1+F,IAAM0+F,EAAMx4D,EAAMlmC,KACzDw8F,EAAOniG,IAAIkkG,EAAMtkG,OAAOwkG,MAAWD,GAGrC,MAAc,WAAVtjG,EACKw3E,GAAoC8pB,EAAOxhG,QAE7CwhG,EAAOxhG,MAChB,EVtDA4gG,sBAAAA,GAAA+C,iBWkBM,SACFj1D,EAAoB4yD,EAAuBz6F,EAC3CqkC,GACF,MAAMs2D,EAAStkF,GAAOwxB,EAAU4yD,EAAKphG,OAErC,IAAK,IAAIwB,EAAI,EAAGA,EAAI8/F,EAAO5+F,KAAMlB,IAAK,CACpC,MAAM8a,EAAMglF,EAAOx5F,WAAWtG,GAExBkiG,EAAmB,IAAIrhG,MAAMia,EAAI3b,QACvC,IAAK,IAAImE,EAAI,EAAGA,EAAI4+F,EAAO/iG,OAAQmE,IACjC4+F,EAAO5+F,GAAKwX,EAAIxX,GAAK6B,EAAQ7B,GAAKkmC,EAAMlmC,GAE1Cw8F,EAAOniG,IAAIiiG,EAAKriG,OAAO2kG,MAAYpnF,GAGrC,OAAOglF,CACT,EXlCAX,QAAAA,GAAAgD,SYuBM,SACFvC,EACAzlD,GACF,MAAM53C,EAAqB,IAAI1B,MAAM++F,EAAKj9F,MAC1C,IAAK,IAAI3C,EAAI,EAAGA,EAAIuC,EAASpD,OAAQa,IACnCuC,EAASvC,GAAK4/F,EAAKrhG,MAAMyB,GAAKm6C,EAAKn6C,GAErC,MAAMtD,EAAS8e,GAAOjZ,EAAUq9F,EAAKphG,OACrC,IAAK,IAAIwB,EAAI,EAAGA,EAAItD,EAAO4B,OAAOa,SAAUa,EAAG,CAC7C,MAAMkiG,EAASxlG,EAAO4J,WAAWtG,GAE3BwgG,EAAwB,IAAI3/F,MAAM++F,EAAKj9F,MAC7C,IAAK,IAAIW,EAAI,EAAGA,EAAIk9F,EAAYrhG,OAAQmE,IACtCk9F,EAAYl9F,GAAK4+F,EAAO5+F,GAAKs8F,EAAKrhG,MAAM+E,GAG1C,MAAMs9F,EAAgBhB,EAAKx5F,WAAWo6F,GAEtC9jG,EAAO4B,OAAO0B,GAAK4/F,EAAKthG,OAAOsiG,GAEjC,OAAOlkG,CACT;;;;;;;;;;;;;;;;IZ5CA0lG,SaoBM,SACF1iG,EAAe8sC,EAAkBy0D,EAAyBviF,EAC1D05C,GAGF,MAAMC,EAAU7rB,EAAOA,EAAOrtC,OAAS,IAChC42D,EAAO70D,GAAQ,CAACxB,EAAEP,OAASk5D,EAASA,GACrCgqC,EAAcjtF,EAA4B6rF,EAAQlrC,EAAQr3C,GAC1D4jF,EAAiBltF,EAA4B,QAAS2gD,EAAQr3C,GAEpE,IAAK,IAAI7I,EAAI,EAAGA,EAAIkgD,EAAOlgD,IAAK,CAC9B,MAAMxQ,EAASwQ,EAAI3U,EACb2C,EAAOnE,EAAE89D,SAASn4D,EAAQA,EAASnE,GACnCu8D,EAAmD,GACzD,IAAK,IAAIz9D,EAAI,EAAGA,EAAI6D,EAAK1E,OAAQa,IAC/By9D,EAAUz8D,KAAK,CAAC3E,MAAOwH,EAAK7D,GAAIX,MAAOW,IAEzCy9D,EAAUp6D,MAAK,CAAC3C,EAAGmV,IAAMA,EAAExZ,MAAQqE,EAAErE,QAErC,MAAMkmG,EAAY1sF,EAAI6I,EAChB8jF,EAAWH,EAAY7kC,SAAS+kC,EAAWA,EAAY7jF,GACvD+jF,EAAcH,EAAe9kC,SAAS+kC,EAAWA,EAAY7jF,GACnE,IAAK,IAAI1e,EAAI,EAAGA,EAAI0e,EAAG1e,IACrBwiG,EAASxiG,GAAKy9D,EAAUz9D,GAAG3D,MAC3BomG,EAAYziG,GAAKy9D,EAAUz9D,GAAGX,MAKlC,MAAM28C,EAAcxP,EAAOhqC,QAG3B,OAFAw5C,EAAYA,EAAY78C,OAAS,GAAKuf,EAE/B,CACLlD,GAAOwgC,EAA4BilD,EAAQoB,GAC3C7mF,GAAOwgC,EAA4B,QAASsmD,GAEhD;;;;;;;;;;;;;;;;IbxDAI,ccmBM,SACFpuC,EAAmB9nB,EAAkBhuC,EAAiBomC,EACtDriC,GACF,MAAM8pC,EAAQG,EAAOrtC,OACfwjG,EAAQvtF,EAAmBo3B,GAC3Bo1D,EAAWxsF,EAAoBo3B,GAC/BzC,EAAa30B,EAAoB7S,GAEjC7F,EAAS0Y,EACX5W,EAA0B4W,EAAmB7S,IAEjD,IAAK,IAAIvC,EAAI,EAAGA,EAAI2iG,IAAS3iG,EAAG,CAC9B,MAAM8a,EAAM1F,EAAgBpV,EAAGqsC,EAAOu1D,GAGhCM,EAAmB,IAAIrhG,MAAMia,EAAI3b,QACvC,IAAK,IAAIa,EAAI,EAAGA,EAAIkiG,EAAO/iG,OAAQa,IACjCkiG,EAAOliG,GAAK8a,EAAI8pB,EAAK5kC,IAIvBtD,EADiB0Y,EAAgB8sF,EAAQ71D,EAAOtC,IAC7BuqB,EAAMt0D,GAE3B,OAAOtD,CACT,Ed3CAkmG,WekBM,SACFtkG,EAAuBoE,EAAcnE,EAAiBC,GAMxD,MAAMqkG,EAAQztF,EAAoB1S,EAAMnE,GAAO,GAyDzCgE,EAAW,CAAC,EAAGhE,EAAM,GAAI,GAC/B,IAAK,IAAIyB,EAAI,EAAGA,EAAI6iG,EAAO7iG,IACzBuC,EAAS,IAAMhE,EAAMyB,GAEvBuC,EAAS,GAAKhE,EAAMskG,GACpB,IAAK,IAAI7iG,EAAI6iG,EAAQ,EAAG7iG,EAAIzB,EAAMY,OAAQa,IACxCuC,EAAS,IAAMhE,EAAMyB,GAKvB,MAAM8iG,EAA0C,CAAA,EAG1Cp3E,EAAU,IAAIjoB,WAAWlF,EAAMskG,IAE/BE,EAAc,IAAIloF,GAAatY,EAAU/D,EAAOF,GAGhD0kG,EAA0B,GAC1BC,EAA6B,IAAhB1gG,EAAS,IAA4B,IAAhBA,EAAS,GACjD,IAAK,IAAIvC,EAAI,EAAGA,EAAIzB,EAAMskG,GAAQ7iG,IAAK,CAErC,IAAIijE,EACJ,GAAIggC,EAEFhgC,EAAU3kE,EAAO0B,GAAGmY,eACf,CACL,MAAM+qF,EAAa,GACnB,IAAK,IAAIjyE,EAAI,EAAGA,EAAI1uB,EAAS,GAAI0uB,IAC/B,IAAK,IAAIxb,EAAI,EAAGA,EAAIlT,EAAS,GAAIkT,IAC/BytF,EAAWliG,KAAK+hG,EAAYxlG,IAAI0zB,EAAGjxB,EAAGyV,IAG1CwtD,EAAUigC,EAAWn6F,KAAK,KAI5B,QAAgC4lB,IAA5Bm0E,EAAe7/B,GACjBv3C,EAAQ1rB,GAAK8iG,EAAe7/B,OACvB,CACL,MAAMkgC,EAAcj7F,OAAOsZ,KAAKshF,GAAgB3jG,OAChD2jG,EAAe7/B,GAAWkgC,EAC1Bz3E,EAAQ1rB,GAAKmjG,EACbH,EAAchiG,KAAKhB,IAOvB,MAAMojG,EAAiB7gG,EAASC,QAChC4gG,EAAe,GAAKl7F,OAAOsZ,KAAKshF,GAAgB3jG,OAChD,MAAMkkG,EAAe,IAAIxoF,GAAauoF,EAAgB5kG,GACtDwkG,EAAcx+F,SAAQ,CAAC8+F,EAAoBtjG,KACzC,IAAK,IAAIixB,EAAI,EAAGA,EAAI1uB,EAAS,GAAI0uB,IAC/B,IAAK,IAAIxb,EAAI,EAAGA,EAAIlT,EAAS,GAAIkT,IAC/B4tF,EAAa1lG,IAAIolG,EAAYxlG,IAAI0zB,EAAGqyE,EAAoB7tF,GAAIwb,EAAGjxB,EAAGyV,MAOxE,MAAMumC,EAAcz9C,EAAMiE,QAG1B,OAFAw5C,EAAY6mD,GAASO,EAAe,GAE7B,CACLG,aAAcF,EAAa/kG,OAC3B09C,cACAtwB,UAEJ;;;;;;;;;;;;;;;;Gf9HA,MACEuyE,QAASuF,GACTnE,aAAcoE,GACd9D,mBAAoB+D,GACpBvF,SAAUwF,GACV5D,WAAY6D,GACZvF,QAASwF,GACTvF,UAAWwF,GACXvF,UAAWwF,GACX1D,aAAc2D,GACdxF,YAAayF,GACbxF,SAAUyF,GACVrD,aAAcsD,GACdzF,QAAS0F,GACTtD,QAASuD,GACT1F,YAAa2F,GACbxF,YAAayF,GACbxF,aAAcyF,GACdxD,QAASyD,GACTtD,SAAUuD,GACVnD,UAAWoD,GACX1F,UAAW2F,GACXpD,cAAeqD,GACfnD,UAAWoD,GACX7C,iBAAkB8C,GAClB5F,QAAS6F,GACT7C,SAAU8C,GACV7C,SAAU8C,GACVxC,cAAeyC,GACfvC,WAAYwC,IACVhG;;;;;;;;;;;;;;;;GgB1CE,SAAUiG,GAAez8F,EAAcjG,GAC3C,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKH,MAAM,EAAGG,GAAMC,KAAI2C,GAAK,GAAGqD,KAAQrD,KAC3E,CAEM,SAAU+/F,GAAY18F,EAAcjG,GACxC,OAAa,IAATA,EACK,CAACiG,GAEHy8F,GAAez8F,EAAMjG,EAC9B;;;;;;;;;;;;;;;;;ACLM,MAAO4iG,GAOXvoG,WAAAA,CACIg/C,GAPJ7+C,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAMb1uF,KAAK6+C,YAAcA,EACnB,MAAMr5C,EAAOq5C,EAAY78C,OAEzB,GAAa,IAATwD,EACFxF,KAAK+uF,SAAW,iGAKX,CACL,MAAMsZ,EAAWF,GAAY,KAAM3iG,GAC7BnE,EAAQ05F,GAAkBv1F,GAC1B8iG,EAyCZ,SACI9iG,EAAcpE,EAAiBy/C,GACjC,GAAa,IAATr7C,EACF,MAAO,QAAQpE,EAAM,KAGvB,IAAImnG,EAAO,GACX,IAAK,IAAI1lG,EAAI2C,EAAO,EAAG3C,EAAI2C,EAAM3C,IAC/B0lG,GAAQ,GAAG1nD,EAAKh+C,SAASzB,EAAMyB,KAC3BA,EAAI2C,EAAO,IACb+iG,GAAQ,MAIZ,OAAOA,CACT,CAvDUC,CAAwBhjG,EAAMq5C,EAAawpD,GACzCI,EAwDZ,SACIjjG,EAAcksF,EAAcpN,EAAczjC,GAC5C,GAAa,IAATr7C,EACF,MAAO,GAGT,MAAMkjG,EAAY7nD,EAAKx7C,OAAO,GAE9B,MAAO,iBACKqjG,EAAU,oBACVA,EAAU,8EAIEhX,+BACApN,QAE1B,CAzEoBqkB,CACVnjG,EAAMq5C,EAAYA,EAAY78C,OAAS,GACvC68C,EAAYA,EAAY78C,OAAS,GAAIqmG,GACnCluF,EAwEZ,SAAmB/Y,EAAiBy/C,GAClC,MAAMr7C,EAAOpE,EAAMY,OACb4mG,EAvDR,SAA4BpjG,EAAcq7C,GACxC,MAAM8sC,EAAS,GAEf,IAAK,IAAI3xE,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAI0zE,EAAM,EAAGA,GAAO,EAAGA,IAAO,CACjC,IAAImZ,EAAQ,GAAW,IAAR7sF,EAAY,IAAM,UAAkB,IAAR0zE,EAAY,IAAM,QAE7D,IAAK,IAAItnF,EAAI,EAAGA,EAAI5C,EAAM4C,IACxBygG,EAAQ,GAAGhoD,EAAKA,EAAK7+C,OAAS,EAAIoG,MAAQygG,EAG5Clb,EAAO9pF,KAAKglG,GAGhB,OAAOlb,CACT,CAwCuBmb,CAAmBtjG,EAAMq7C,GAC9C,GAAa,IAATr7C,EACF,MAAO,oCACapE,EAAM,4CAI5B,MAAO,QAAQwnG,EAAa,qCACAA,EAAa,qCACbA,EAAa,8CACJA,EAAa,KACpD;;;;;;;;;;;;;;;;GArFqBG,CAAUlqD,EAAawpD,GAEtCroG,KAAK+uF,SAAW,sCAEV1tF,6CAEGinG,0EAGDG,mCAEetuF,uCAK3B,EC7CI,MAAO6uF,GAOXnpG,WAAAA,CAAYg/C,EAAuC1jC,GANnDnb,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAOb1uF,KAAK6+C,YAAcA,EAEnB,IAAI4wC,EAAW,GACf,IAAK,IAAI5sF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIomG,EAAS,eACTpmG,EAAI,GAAM,IACZomG,GAAU,kBAERpmG,EAAI,IACNomG,GAAU,kBAGZxZ,GAAY,aACRwZ,cACApmG,EAAI,EAAI,0CAA4C,iOAM3CA,mGAETA,EAAI,EAAI,IAAM,aAyBxB,IAAgCzB;;;;;;;;;;;;;;;;GArB5BpB,KAAK+uF,SAAW,WAqBY3tF,EApBD+Z,EAwBtB,oEAFH6zE,GAA+C,CAAC,IAAK,IAAK,KAAM5tF,wDArB9D4tF,GAA+BnwC,oJAQlBA,EAAY,2BACZA,EAAY,kBAEvB4wC,gDAKR,ECnDI,MAAOyZ,GAUXrpG,WAAAA,CAAoBspG,GAAAnpG,KAAAmpG,MAAAA,EATZnpG,KAAAopG,gBAAkB,EAClBppG,KAAAqpG,gBAAkB,EAClBrpG,KAAAspG,mBAAqB,EACrBtpG,KAAAupG,cAAgB,EAEhBvpG,KAAAwpG,aAAkD,GAClDxpG,KAAAypG,YAAa,EACbzpG,KAAA0pG,aAAkD,EAEhB,CAE1CC,cAAAA,CACIC,EAA2BC,EAC3BvN,GACF,MAAMwN,EAAkBC,GAAkCF,EAAOvN,GAE3D0N,EAAWC,GAAuBL,EAASE,EAAiBxN,GAC5D0N,KAAYhqG,KAAKwpG,eACrBxpG,KAAKwpG,aAAaQ,GAAY,IAE1BA,KAAYhqG,KAAK0pG,eACrB1pG,KAAK0pG,aAAaM,GAAY,IAGhC,MAAME,EAAWC,GACbP,EAASE,EAAiB9pG,KAAKmpG,MAAM/lB,GAAIpjF,KAAKmpG,MAAM/X,cACpDkL,GAEJ,GAAIt8F,KAAKwpG,aAAaQ,GAAUhoG,OAAS,EAAG,CAC1ChC,KAAKqpG,kBACLrpG,KAAKopG,kBACLppG,KAAKupG,eAAiBW,EACtBlqG,KAAKqb,MACL,MAAM+uF,EAAapqG,KAAKwpG,aAAaQ,GAAUK,QAE/C,OADArqG,KAAK0pG,aAAaM,GAAUnmG,KAAKumG,GAC1BA,EAGT,IAAIA,EAuBJ,OAtBIN,IAAoB1lB,GAAoBkmB,mBAC1CF,EAAapqG,KAAKmpG,MAAMrV,0BAA0B8V,EAAQ,GAAIA,EAAQ,IAC7DE,IAAoB1lB,GAAoBmmB,mBACjDH,EACIpqG,KAAKmpG,MAAMtV,iCAAiC+V,EAAQ,GAAIA,EAAQ,IAC3DE,IAAoB1lB,GAAoBomB,iBACjDJ,EACIpqG,KAAKmpG,MAAM9V,2BAA2BuW,EAAQ,GAAIA,EAAQ,IACrDE,IAAoB1lB,GAAoBqmB,iBACjDL,EACIpqG,KAAKmpG,MAAM7V,2BAA2BsW,EAAQ,GAAIA,EAAQ,IAE5DE,IAAoB1lB,GAAoBsmB,2BAC1CN,EACIpqG,KAAKmpG,MAAM5V,iCAAiCqW,EAAQ,GAAIA,EAAQ,KAEtE5pG,KAAK0pG,aAAaM,GAAUnmG,KAAKumG,GAEjCpqG,KAAKopG,kBACLppG,KAAKspG,oBAAsBY,EAC3BlqG,KAAKqb,MAEE+uF,CACT,CAEAO,cAAAA,CACIlhB,EAAuBroF,EACvBwpG,EAA8BtO,GAChC,GAAyB,MAArBt8F,KAAKwpG,aAEP,OAEF,MAAMM,EACFC,GAAkCa,EAAgBtO,GAChD0N,EAAWC,GAAuB7oG,EAAO0oG,EAAiBxN,GAC1D0N,KAAYhqG,KAAKwpG,eACrBxpG,KAAKwpG,aAAaQ,GAAY,IAGhC,MAAME,EAAWC,GACb/oG,EAAO0oG,EAAiB9pG,KAAKmpG,MAAM/lB,GAAIpjF,KAAKmpG,MAAM/X,cAClDkL,GACEuO,EAAqB1+F,IAAM/L,IAAI,mCACT,IAAxByqG,GACA7qG,KAAKspG,mBAAqBuB,GAC5B7qG,KAAKmpG,MAAMpV,oBAAoBtK,GAC/BzpF,KAAKspG,oBAAsBY,IAE3BlqG,KAAKwpG,aAAaQ,GAAUnmG,KAAK4lF,GACjCzpF,KAAKqpG,kBACLrpG,KAAKupG,eAAiBW,GAGxBlqG,KAAKopG,kBAEL,MAAM0B,EAAU9qG,KAAK0pG,aAAaM,GAC5Be,EAAWD,EAAQ77E,QAAQw6D,GACjC,GAAIshB,EAAW,EACb,MAAM,IAAInpG,MACN,4EAGNkpG,EAAQj+D,OAAOk+D,EAAU,GACzB/qG,KAAKqb,KACP,CAEQA,GAAAA,GACN,IAAKrb,KAAKypG,WACR,OAEF,MAAMpxB,EAAQr4E,KAAKqpG,gBAAkBrpG,KAAKopG,gBAC1Cn/F,QAAQoR,IACJ,YAAa,GAAGrb,KAAKqpG,qBAAqBrpG,KAAKopG,kBAC/C,IAAI/wB,MACR,MAAM2yB,EAAYhrG,KAAKupG,cAAgBvpG,KAAKspG,mBAC5Cr/F,QAAQoR,IAAI,oBAAoBrb,KAAKspG,sBACrCr/F,QAAQoR,IAAI,iBAAiBrb,KAAKupG,kBAC9BpnG,KAAKwV,MAAM,IAAMqzF,OACvB,CAEA,qBAAIC,GACF,OAAOjrG,KAAKspG,kBACd,CAEA,gBAAI4B,GACF,OAAOlrG,KAAKupG,aACd,CAEA4B,kBAAAA,GACE,OAAOnrG,KAAKopG,eACd,CAEAgC,kBAAAA,GACE,OAAOprG,KAAKqpG,eACd,CAEA3nG,OAAAA,GACE,GAAyB,MAArB1B,KAAKwpG,aAAT,CAIA,IAAK,MAAM3a,KAAY7uF,KAAKwpG,aAC1BxpG,KAAKwpG,aAAa3a,GAAUxnF,SAAQgkG,IAClCrrG,KAAKmpG,MAAMpV,oBAAoBsX,EAAI,IAGvC,IAAK,MAAMxc,KAAY7uF,KAAK0pG,aAC1B1pG,KAAK0pG,aAAa7a,GAAUxnF,SAAQgkG,IAClCrrG,KAAKmpG,MAAMpV,oBAAoBsX,EAAI,IAGvCrrG,KAAKwpG,aAAe,KACpBxpG,KAAK0pG,aAAe,KACpB1pG,KAAKopG,gBAAkB,EACvBppG,KAAKqpG,gBAAkB,EACvBrpG,KAAKspG,mBAAqB,EAC1BtpG,KAAKupG,cAAgB,EACvB,EAqBI,SAAUY,GACZ/oG,EAAyB0oG,EACzB1mB,EAA2BgO,EAC3BkL,GAMF,MAAM/L,EAmBR,SACIuZ,EACA1Y,GACF,OAAQ0Y,GACN,KAAK1lB,GAAoBkmB,mBACvB,OAAO/Y,GAAwCH,GACjD,KAAKhN,GAAoBmmB,mBACvB,OAAO/Y,GAA+CJ,GACxD,KAAKhN,GAAoBomB,iBACvB,OAAOrZ,GAAyCC,GAClD,KAAKhN,GAAoBqmB,iBACvB,OAAOpZ,GAAyCD,GAClD,KAAKhN,GAAoBsmB,yBACvB,OAAOpZ,GAA+CF,GACxD,QACE,MAAM,IAAIxvF,MAAM,iCAAiCkoG,KAEvD,CAnCMwB,CAAiCxB,EAAiB1Y,GAEtD,IAAIma,EACJ,GAAIjP,EAAU,CACZ,MAAOkP,EAAaC,GAChBhnB,GAAuCrjF,EAAM,GAAIA,EAAM,IAC3DmqG,EAAcC,EAAcC,MAEvB,CACL,MAAOrnG,EAAOslC,GACV26C,GAAyCjjF,EAAM,GAAIA,EAAM,IAC7DmqG,EAAcnnG,EAAQslC,EAGxB,MAAMxiC,EA1CR,SACIk8E,EAA2BmN,GAE7B,MAAM3L,EAAQxB,EACd,GAAImN,IAAmB3L,EAAMW,KAC3B,OAAO,EACF,GAAIgL,IAAmB3L,EAAMY,KAClC,OAAO,EACF,GAAI+K,IAAmB3L,EAAMc,QAClC,OAAO,GACF,GAAI6K,IAAmBnN,EAAG0C,KAC/B,OAAO,GACF,GAAIyK,IAAmB3L,EAAMa,QAClC,OAAO,EAET,MAAM,IAAI7jF,MAAM,2BAA2B2uF,IAC7C,CA0B0Bmb,CAA0BtoB,EAAImN,GACtD,OAAOgb,EAAcrkG,CACvB,CAoCA,SAAS6iG,GACLa,EAA8BtO,GAChC,GAAIsO,IAAmBzmB,GAAawnB,OAClC,OAAOvnB,GAAoBkmB,mBACtB,GAAIM,IAAmBzmB,GAAaynB,QAA4B,MAAlBhB,EACnD,OApBJ,SAAwCtO,GAEtC,OAAInwF,IAAMxB,QAAQ,gCACZ2xF,EACKlY,GAAoBkmB,mBAEtBlmB,GAAoBomB,iBAGzBlO,EACKlY,GAAoBmmB,mBAEtBnmB,GAAoBqmB,gBAC7B,CAOWoB,CAA+BvP,GACjC,GACHsO,IAAmBzmB,GAAaiL,UAChCwb,IAAmBzmB,GAAa2nB,OAClC,OAAO1nB,GAAoBsmB,yBAE7B,MAAM,IAAI9oG,MAAM,gCAAgCgpG,IAClD,CAEA,SAASX,GACL8B,EAAgCjC,EAChCxN,GACF,MAAO,GAAGyP,EAAa,MAAMA,EAAa,MAAMjC,KAAmBxN,GACrE;;;;;;;;;;;;;;;;GCtQM,MAAO0P,GAKXnsG,WAAAA,CAAYkoD,EAAkBkkD,GAJ9BjsG,KAAA2zE,cAAgB,CAAC,KAKf3zE,KAAK6+C,YAAckJ,EACnB/nD,KAAK+uF,SAAW,oDAEVkd,uJAUR,EAGK,MAAMC,GAAoB,0BAEpBC,GAAS,YAETC,GAAM,iBAQNC,GAAM,0CAENC,GAAOJ,GAAoB,oCAI3BK,GAAQL,GAAoB,8CAI5BM,GAAQ,YC5CRL,GAAS,YAETE,GAAM,+PAWNC,GAAO,iRAYPC,GAAQ,gSAYf,MAAOE,GAOX5sG,WAAAA,CAAYkoD,EAAkBkkD,GAN9BjsG,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAGb1uF,KAAK6+C,YAAckJ,EACnB/nD,KAAK+uF,SAAW,kDAEVkd,qJAUR;;;;;;;;;;;;;;;;GCxDI,MAAOS,GAOX7sG,WAAAA,CAAYg/C,GANZ7+C,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAKb1uF,KAAK6+C,YAAcA,EACnB,MAAMr5C,EAAOq5C,EAAY78C,OAEnBqmG,EAAWF,GAAY,KAAM3iG,GAC7BnE,EAAQ05F,GAAkBv1F,GAC1BojG,ENNJ,SAA0BpjG,EAAcq7C,GAC5C,GAAa,IAATr7C,EACF,MAAO,KAGT,IAAImoF,EAAS,GACb,IAAK,IAAI9qF,EAAI,EAAGA,EAAI2C,EAAM3C,IACxB8qF,GAAU9sC,EAAKh+C,GACXA,EAAI2C,EAAO,IACbmoF,GAAU,KAGd,OAAOA,CACT,CMPyBgf,CAAgBnnG,EAAM6iG,GACrCK,EAAYL,EAAShjG,OAAO,GAC5BsoF,EAASnoF,GAAQ,EAAI,KAAO,QAAQkjG,EAAU98F,KAAK,QAEzD5L,KAAK+uF,SAAW,kCAEV1tF,8DACwBunG,oDAEUjb,qBAG1C;;;;;;;;;;;;;;;;GCDF,MAAM7xB,GAAY0d,GA+BZozB,GAAuE,CAAA,EA2BvE,MAAOC,WAAyBlsG,EAmCpCd,WAAAA,CAAYspG,GAEV,GADAzpF,QA/BM1f,KAAA8sG,YAAc,IAAI5sG,QAGlBF,KAAA+sG,gBAAkB,IAAIC,QAI9BhtG,KAAAitG,aAAe,IAAI/sG,QACXF,KAAAktG,cAAgB,EAOhBltG,KAAAmtG,aAAe,EAEfntG,KAAAotG,eAAiB,EAUjBptG,KAAAqtG,mBAAoB,EACpBrtG,KAAAstG,uBAAwB,EA8YxBttG,KAAAutG,eAAiB,EAwXjBvtG,KAAAoyF,UAAW,GAlwBZjmF,IAAMxB,QAAQ,aACjB,MAAM,IAAI/I,MAAM,yCAGlB,GAAa,MAATunG,EAAe,CACjB,MAAM/lB,EAAKT,GAAgBx2E,IAAMzB,UAAU,kBAC3C1K,KAAKwtG,cApEoB5qB,EAoESz2E,IAAMzB,UAAU,oBAnElCkiG,KAGpBA,GAAahqB,GAAgB,IAFpBgqB,GAAahqB,IAmElB5iF,KAAKmpG,MAAQ,IAAIjX,GAAa9O,GAC9BpjF,KAAK8pC,OAASs5C,EAAGt5C,OACjB9pC,KAAKytG,qBAAsB,OAE3BztG,KAAKmpG,MAAQA,EACbnpG,KAAKwtG,YAAc,GACnBxtG,KAAKytG,qBAAsB,EAC3BztG,KAAK8pC,OAASq/D,EAAM/lB,GAAGt5C,OA5EvB,IAAyB84C,EA8E3B5iF,KAAK0tG,eAAiB,IAAIxE,GAAelpG,KAAKmpG,OAC9CnpG,KAAK2tG,mBA9DoB,MAAvBxhG,IAAM1C,OAAOqoD,OACR,KAED3lD,IAAM1C,OAAOqoD,OAAOpoB,OAASv9B,IAAM1C,OAAOqoD,OAAO1tD,MACjDoI,OAAOohG,iBANc,IAOA,KAAO,KA2DlC5tG,KAAK6/F,QAAU,IAAIjgG,EAAYI,KAAMyyC,KACvC,CAEA/xC,UAAAA,GACE,OAAOV,KAAK6/F,QAAQn/F,cACfV,KAAK6tG,WAAa7tG,KAAK6tG,WAAWntG,aAAe,GAClDV,KAAKutG,cACX,CAEArsG,KAAAA,CAAMC,EAAuBC,EAAiBC,GAK5C,IAJI8K,IAAMxB,QAAQ,mCACdwB,IAAMxB,QAAQ,WAChB3K,KAAK8tG,uBAAuB3sG,GAEhB,cAAVE,GAAmC,MAAVF,EAC3B,MAAM,IAAIS,MACN,yEAGN,MAAMvB,EAAS,CAAA,EASf,OARAL,KAAK6/F,QAAQr/F,IAAIH,EAAQ,CACvBe,QACAC,QACAF,SACA0oG,MAAO1lB,GAAawnB,OACpB/hF,SAAU,EACVmkF,sBAAuB,IAElB1tG,CACT,CAGAuf,MAAAA,CAAOvf,GACWL,KAAK6/F,QAAQz/F,IAAIC,GACzBupB,UACV,CAGAokF,MAAAA,CAAO3tG,GACL,GAAIL,KAAK6/F,QAAQv/F,IAAID,GAAS,CACZL,KAAK6/F,QAAQz/F,IAAIC,GACzBupB,WAEZ,CAEAtoB,IAAAA,CAAKjB,EAAgBc,EAAuBC,EAAiBC,GAK3D,GAHI8K,IAAMxB,QAAQ,UAChB3K,KAAK8tG,uBAAuB3sG,GAEhB,cAAVE,EACF,MAAM,IAAIO,MACN,yEAGN5B,KAAK6/F,QAAQr/F,IAAIH,EAAQ,CACvBe,QACAC,QACAF,SACA0oG,MAAO1lB,GAAawnB,OACpB/hF,SAAU,EACVmkF,sBAAuB,GAE3B,CAEAE,6BAAAA,CAA8BrrF,GAC5B,MAAMviB,EAASuiB,EAAWviB,OAE1B,GAAIL,KAAK6/F,QAAQv/F,IAAID,GAAS,CAC5B,MAAM6tG,EAAcluG,KAAK6/F,QAAQz/F,IAAIC,GAErC6tG,EAAYtkF,WAERskF,EAAYtkF,SAAW,GACzB5pB,KAAKiB,YAAYZ,GAGvB,CAEAW,QAAAA,CAASX,GACP,MAAMw/F,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,IAC3Bc,OAACA,EAAME,MAAEA,EAAK8sG,mBAAEA,EAAkB9oG,MAAEA,EAAKjE,MAAEA,EAAKk7F,SAAEA,GAAYuD,EAKpE,GAAa,MAATx6F,EAAe,CACjB,IAAIqjF,EAEFA,EADE4T,EACQ,IAAImQ,GAAqBrrG,EAAOgtG,IAEhC,IAAIpC,GAAe5qG,EAAOgtG,IAEtC,MAAMloF,EACFlmB,KAAKquG,gBAAgB3lB,EAAS,CAAC,CAACroF,SAAQe,QAAOC,UAASA,GACtDpB,EAAOD,KAAKgB,SAASklB,EAAI7lB,QAE/B,OADAL,KAAKiuG,8BAA8B/nF,GAC5BjmB,EAET,GAAc,MAAVkB,EACF,OAAOnB,KAAKsuG,qBAAqBjuG,GAEnC,GAAc,WAAVgB,EACF,OAAOF,EAET,MAAMotG,EAAyC,MAArBvuG,KAAKwuG,aAC/B,IAAI1mG,EAKAvI,EACJ,GALIgvG,IACFzmG,EAAQmQ,MAII,cAAV5W,EAAuB,CAKzB9B,EAASs5E,GAHL74E,KAAKgB,SAASmtG,EAAmBl+E,KAAK5vB,QAEtCL,KAAKgB,SAASmtG,EAAmBj+E,KAAK7vB,cAG1Cd,EAASS,KAAKyuG,qBAAqBpuG,GAMrC,OAHIkuG,IACFvuG,KAAKotG,gBAAkBn1F,KAAanQ,GAE/B9H,KAAKsuG,qBAAqBjuG,EAAQd,EAC3C,CAEA,UAAMwB,CAAKV,GACT,GAAIL,KAAK8sG,YAAYxsG,IAAID,GAAS,CAChC,MAAMquG,EAAc1uG,KAAK8sG,YAAY1sG,IAAIC,GACzC,OAAO,IAAIvB,SAAoBC,GAAW2vG,EAAY7qG,KAAK9E,KAE7D,MAAM8gG,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,IAC3Bc,OAACA,EAAMC,MAAEA,EAAKiE,MAAEA,EAAKhE,MAAEA,EAAK8sG,mBAAEA,EAAkB7R,SAAEA,GAAYuD,EAKpE,GAAa,MAATx6F,EAAe,CACjB,IAAIqjF,EAEFA,EADE4T,EACQ,IAAImQ,GAAqBrrG,EAAOgtG,IAEhC,IAAIpC,GAAe5qG,EAAOgtG,IAEtC,MAAMloF,EACFlmB,KAAKquG,gBAAgB3lB,EAAS,CAAC,CAACroF,SAAQe,QAAOC,UAASA,GACtDpB,EAAOD,KAAKe,KAAKmlB,EAAI7lB,QAE3B,OADAL,KAAKiuG,8BAA8B/nF,GAC5BjmB,EAGT,GAAc,MAAVkB,EACF,OAAOnB,KAAKsuG,qBAAqBjuG,GAGnC,IAAK8L,IAAMxB,QAAQ,iCACsB,IAArCwB,IAAMzB,UAAU,iBAClB,MAAM,IAAI9I,MACN,gGAIN,IACI+sG,EAmBAjoG,EApBA2X,EAAS,KAGb,GAAc,cAAVhd,GAAyB8K,IAAM/L,IAAI,0BAA2B,CAEhEuuG,EAAoB3uG,KAAKgY,OAAO3X,GAChC,MAAMuuG,EAAU5uG,KAAK6/F,QAAQz/F,IAAIuuG,EAAkBtuG,QAEnDge,EAASre,KAAKmpG,MAAM/U,wBAChBwa,EAAQnlB,WAAYsI,GAA0B3wF,IAYpD,GATApB,KAAK8sG,YAAYtsG,IAAIH,EAAQ,IAEf,cAAVgB,SAEIrB,KAAKmpG,MAAMzU,wBAKL,cAAVrzF,EAAuB,CACzB,MAAMwtG,QAAW/vG,QAAQ+b,IAAI,CAC3B7a,KAAKe,KAAKotG,EAAmBl+E,KAAK5vB,QAClCL,KAAKe,KAAKotG,EAAmBj+E,KAAK7vB,UAKpCqG,EAAOmyE,GAFYg2B,EAAG,GACHA,EAAG,GAGvB,MAAM,GAAc,MAAVxwF,EACT3X,EAAO1G,KAAKyuG,qBAAqBpuG,OAC5B,CACL,MAAM0D,EAAOkU,EAAmB7W,GAChCsF,EAAO1G,KAAKmpG,MAAMhV,gCAAgC91E,EAAQta,GAEnC,MAArB4qG,GACF3uG,KAAKiuG,8BAA8BU,GAErC,MAAMG,EAAY9uG,KAAKsuG,qBAAqBjuG,EAAQqG,GAE9CgoG,EAAc1uG,KAAK8sG,YAAY1sG,IAAIC,GAUzC,OATAL,KAAK8sG,YAAYrsG,OAAOJ,GAGxBquG,EAAYrnG,SAAQtI,GAAWA,EAAQ+vG,KACnC9uG,KAAK+sG,gBAAgBzsG,IAAID,KAC3BL,KAAK+sG,gBAAgBtsG,OAAOJ,GAC5BL,KAAKiB,YAAYZ,GACjBL,KAAKutG,kBAEAuB,CACT,CAEAxwF,UAAAA,CAA2B9S,GACzB,MAAMvL,EAAOD,KAAKgB,SAASwK,EAAEnL,QAC7B,IAAI0iG,EAAc9iG,EAClB,GAAgB,WAAZuL,EAAEnK,MACJ,IAEE0hG,EAAe9iG,EAAsBwF,KAAI2C,GAAK6P,GAAkB7P,IACjE,CAAC,MAAAsW,GACA,MAAM,IAAI9c,MAAM,oDAGpB,OAAOyc,GAAO7S,EAAEpK,MAAsBoK,EAAEnK,MAAO0hG,EAEjD,CAEQ+K,sBAAAA,CAAuB3sG,GAC7B,GAAc,MAAVA,EAGJ,IAAK,IAAI0B,EAAI,EAAGA,EAAI1B,EAAOa,OAAQa,IAAK,CACtC,MAAM8D,EAAMxF,EAAO0B,GACnB,IAAKktF,GAA4BppF,GAAM,CACrC,GAAIwF,IAAMxB,QAAQ,gCAChB,MAAM/I,MACF,aAAa+E,kJAInB,MAAM/E,MAAM,aAAa+E,4CAG/B,CAEQ8nG,oBAAAA,CAAqBpuG,GAC3B,MAAMe,MAACA,EAAKC,MAAEA,EAAKi7F,SAAEA,GAAYt8F,KAAK6/F,QAAQz/F,IAAIC,GAC5C0D,EAAOkU,EAAmB7W,GAChC,GAAI+K,IAAMxB,QAAQ,gCAAiC,CACjD,MAAMokG,EAAY/uG,KAAKgY,OAAO3X,GACxBuuG,EAAU5uG,KAAK6/F,QAAQz/F,IAAI2uG,EAAU1uG,QACrCqG,EAAO1G,KAAKmpG,MACA3T,gCACGoZ,EAAQnlB,WAAYsI,GAA0B3wF,IACjDi/D,SAAS,EAAGt8D,GAI9B,OAFA/D,KAAKiuG,8BAA8Bc,GAE5BroG,EAGT,MAAMsoG,EACF7iG,IAAMxB,QAAQ,gBAA8B,IAAb2xF,EAC7Bz9C,EACFmwD,EAAyBjf,GAAwB3uF,GAASA,EACxDsnF,EAAUsmB,EACZ,IAAI3f,GAAyBxwC,GAC7B,IAAIqwC,GAAmBrwC,GACrB1kC,EAASna,KAAKquG,gBAChB3lB,EAAS,CAAC,CAACtnF,MAAOy9C,EAAax9C,QAAOhB,WAAU,WAC9CuuG,EAAU5uG,KAAK6/F,QAAQz/F,IAAI+Z,EAAO9Z,QAClCqG,EACF1G,KAAKmpG,MACAnV,gDACG4a,EAAQnlB,QAASmlB,EAAQ/f,SAAS,GAAI+f,EAAQ/f,SAAS,IAC1DxuB,SAAS,EAAGt8D,GAGrB,OAFA/D,KAAKiuG,8BAA8B9zF,GAE5BzT,CACT,CAEA,UAAM9F,CAAKC,GACT,MAAMouG,EAAkBjvG,KAAKwuG,aACvBU,EAA+B,GAErC,IAAIC,GAAgB,EACW,MAA3BnvG,KAAKovG,oBACPpvG,KAAKovG,mBAAqBF,EAC1BC,GAAgB,GAEhBnvG,KAAKwuG,aAAa3qG,KAAKqrG,GAEzBlvG,KAAKwuG,aAAeU,EAEpBruG,IAGA,MAAMwuG,EACFp3F,EAAajY,KAAKwuG,aAAa/oG,KAAK2C,GAAkBA,EAAE+hB,SACnDV,QAAOrhB,GAAU,MAALA,IACfknG,EACFr3F,EAAajY,KAAKwuG,aAAa/oG,KAAK2C,GAAkBA,EAAEqD,QACnDge,QAAOrhB,GAAU,MAALA,IAErBpI,KAAKwuG,aAAeS,EAEhBE,IACFnvG,KAAKovG,mBAAqB,MAG5B,MAAMlpF,EAAuB,CAC3BinF,aAAcntG,KAAKmtG,aACnBC,eAAgBptG,KAAKotG,eACrB5yF,SAAU,KACV6S,OAAQ,MAGV,GAAIlhB,IAAMzB,UAAU,iDAAmD,EAAG,CACxE,MAAM8P,QAAiB1b,QAAQ+b,IAAIw0F,GAEnCnpF,EAAc,SAAIjO,EAASuC,GAC3B0L,EAAyB,oBAAI,IACzB1L,EAAS/U,KAAI,CAAC2C,EAAGvF,KAAO,CAAC4I,KAAM6jG,EAA0BzsG,GAAI0sG,GAAInnG,MAC5D3C,KAAI2C,GAAK,GAAGA,EAAEqD,SAASrD,EAAEmnG,OACzB3jG,KAAK,WAEdsa,EAAc,SAAI,CAChBD,MAAO,6DAMX,OAFAjmB,KAAKmtG,aAAe,EACpBntG,KAAKotG,eAAiB,EACflnF,CACT,CACA3kB,MAAAA,GACE,MAAO,CACLyoB,YAAY,EACZkjF,cAAeltG,KAAKktG,cACpBsC,uBAAwBxvG,KAAK0tG,eAAezC,kBAC5CwE,kBAAmBzvG,KAAK0tG,eAAexC,aAE3C,CAEQwE,UAAAA,GACN,OAAIvjG,IAAMzB,UAAU,iDAAmD,EAC9D1K,KAAKmpG,MAAM9T,aAEb,CAACsa,QAAS13F,KAAY23F,MAAO,KACtC,CAEQC,QAAAA,CAAS1lF,GACf,OAAIhe,IAAMzB,UAAU,iDAAmD,GACrE1K,KAAKmpG,MAAM7T,WACJnrE,IAERA,EAAwBylF,MAAQ33F,KAC1BkS,EACT,CAEQ,kBAAMouE,CAAapuE,GACzB,GAAIhe,IAAMzB,UAAU,iDAAmD,EACrE,OAAO1K,KAAKmpG,MAAM7Q,uBAAuBnuE,GAE3C,MAAM2lF,EAAa3lF,EACnB,OAAO2lF,EAAWF,MAAQE,EAAWH,OACvC,CAIA1uG,WAAAA,CAAYZ,GACV,GAAIL,KAAK+sG,gBAAgBzsG,IAAID,GAC3B,OAEF,GAAIL,KAAK8sG,YAAYxsG,IAAID,GAGvB,OAFAL,KAAK+sG,gBAAgBvrF,IAAInhB,QACzBL,KAAKutG,iBAIP,IAAKvtG,KAAK6/F,QAAQv/F,IAAID,GACpB,OAOF,GAAIL,KAAK6/F,QAAQz/F,IAAIC,GAAQ0tG,sBAAwB,EAEnD,YADA/tG,KAAK6/F,QAAQz/F,IAAIC,GAAQupB,WAI3B5pB,KAAK+vG,eAAe1vG,GACpB,MAAM8tG,mBAACA,GAAsBnuG,KAAK6/F,QAAQz/F,IAAIC,GACpB,MAAtB8tG,IACFnuG,KAAK6/F,QAAQz/F,IAAI+tG,EAAmBl+E,KAAK5vB,QAAQ0tG,wBACjD/tG,KAAKiuG,8BAA8BE,EAAmBl+E,MAEtDjwB,KAAK6/F,QAAQz/F,IAAI+tG,EAAmBj+E,KAAK7vB,QAAQ0tG,wBACjD/tG,KAAKiuG,8BAA8BE,EAAmBj+E,OAExDlwB,KAAK6/F,QAAQp/F,OAAOJ,EACtB,CAEQ0vG,cAAAA,CAAe1vG,GACrB,MAAMopF,QAACA,EAAOpoF,MAAEA,EAAKwtF,SAAEA,EAAQgb,MAAEA,EAAKvN,SAAEA,EAAQj3F,MAAEA,GAC9CrF,KAAK6/F,QAAQz/F,IAAIC,GACf2L,EAAM3G,GAASA,EAAM2qG,YAAc3vG,EACnCupB,EAAW5pB,KAAKitG,aAAa7sG,IAAI4L,GAEnC4d,EAAW,EACb5pB,KAAKitG,aAAazsG,IAAIwL,EAAK4d,EAAW,IAEtC5pB,KAAKitG,aAAaxsG,OAAOuL,GACV,MAAXy9E,IACFzpF,KAAKktG,eAAiBltG,KAAKmqG,aAAatb,EAAUxtF,GAClDrB,KAAK0tG,eAAe/C,eAAelhB,EAASoF,EAAUgb,EAAOvN,KAIjE,MAAMuD,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,GACjCw/F,EAAQpW,QAAU,KAClBoW,EAAQhR,SAAW,KACnBgR,EAAQvD,UAAW,EACnBuD,EAAQx6F,MAAQ,IAClB,CAEA4qG,UAAAA,CAAW5vG,GAET,OADAL,KAAKkwG,YAAY7vG,GACVL,KAAK6/F,QAAQz/F,IAAIC,GAAQopF,OAClC,CAMA0mB,WAAAA,CAAY9vG,GACV,OAAOL,KAAK6/F,QAAQz/F,IAAIC,EAC1B,CAEQ+vG,aAAAA,GACN,OAAKjkG,IAAMxB,QAAQ,sBAII,MAAnB3K,KAAK6tG,aACP7tG,KAAK6tG,WAAap7D,KAASnuB,YAAY,QAGlCtkB,KAAK6tG,YAPH,IAQX,CASAwC,kBAAAA,CACIt2F,EACAu2F,EA5hB6B,KA6hB/B,MAAMzC,EAAa7tG,KAAKowG,gBAYxB,OAXKjkG,IAAMxB,QAAQ,YAAe3K,KAAKstG,uBACrB,MAAdO,IACF5jG,QAAQC,KACJ,6NAKJlK,KAAKstG,uBAAwB,GAGV,MAAdO,GACH9zF,EAAOnU,OACHsV,GAAmD,MAA1Clb,KAAK6/F,QAAQz/F,IAAI8a,EAAM7a,QAAQopF,SACpCxxE,EAAmBiD,EAAM9Z,OAASkvG,GAChD,CAEAC,eAAAA,GACE,OAAOvwG,KAAKmpG,KACd,CAEA7nD,KAAAA,CAAME,GACJq3B,GACI,yEAEJ,MAAM7c,EAAWxa,EAAUjjC,WAC3B,OAAOu9C,GAAUta,EAAUpgD,MAAO46D,EACpC,CAEQw0C,aAAAA,CAAcjuG,EAAeitB,EAAYnuB,GAC/C,MAAMqnF,EAAU,IAAI+jB,GAAqBlqG,EAAEnB,MAAOouB,GAClD,OAAOxvB,KAAKywG,cAAsB/nB,EAAS,CAACnmF,GAAIlB,EAClD,CAKAswC,GAAAA,CAAsBpvC,GAEpB,GAAIvC,KAAKqwG,mBAAmB,CAAC9tG,KAAmB,cAAZA,EAAElB,MAAuB,CAC3D,MAAMqvG,EACFhJ,GAAiB1nG,KAAK6/F,QAAQz/F,IAAImC,EAAElC,QAAQc,QAChD,OAAOnB,KAAK2wG,WAAWpuG,EAAEnB,MAAOmB,EAAElB,MAAOqvG,GAG3C,GAAIvkG,IAAMxB,QAAQ,+BAChB,OAAO3K,KAAKwwG,cAAcjuG,EAAG6rG,GAAc7rG,EAAElB,OAG/C,MAAMqnF,EAAU,IAAIsjB,GAAezpG,EAAEnB,MAAOgtG,IAC5C,OAAOpuG,KAAKywG,cAAc/nB,EAAS,CAACnmF,GACtC,CAEAquG,cAAAA,CACIxvG,EAAiBC,EACjBF,GACF,IAAId,EACJ,GAAc,WAAVgB,GAAgC,MAAVF,GAAkBA,EAAOa,OAAS,GACxDiW,EAAc9W,EAAO,IAAK,CAC5B,MAAM0vG,EACD1vG,EAA0BsE,KAAI2C,GAAK6P,GAAkB7P,KAE1D/H,EAASL,KAAKkB,MAAM2vG,EAAezvG,EAAOC,QAE1ChB,EAASL,KAAKkB,MAAMC,EAAsBC,EAAOC,GAInD,OADArB,KAAK6/F,QAAQz/F,IAAIC,GAAQwpG,MAAQ,KAC1B,CAACxpG,SAAQe,QAAOC,QACzB,CAEQsvG,UAAAA,CACJvvG,EAAiBC,EAAiBF,GACpC,MAAMd,OAACA,GAAUL,KAAK4wG,eAAexvG,EAAOC,EAAOF,GACnD,OAAOsxC,KAASlsB,qBAAqBlmB,EAAQe,EAAOC,EAAOrB,KAC7D,CAEQ8wG,YAAAA,CAAa51F,GACnB,MAAMwtE,EAAU,IAAIgkB,GAAcxxF,EAAM9Z,OACxC,OAAOpB,KAAKquG,gBAAgB3lB,EAAS,CAACxtE,GAAQA,EAAM7Z,MACtD,CAEQ0vG,UAAAA,CAAW71F,GACjB,MAAMwtE,EAAU,IAAI0f,GAAYltF,EAAM9Z,OAEtC,OAAOpB,KAAKquG,gBACR3lB,EAAS,CAACxtE,GAAQA,EAAM7Z,MAAO,MAFC,EAItC,CAEQ2vG,aAAAA,CAAc91F,EAAmB+1F,GACvC,MAAMC,EAAe,CACnBnhB,GAAuB70E,EAAM9Z,UAC1B2uF,GAAuB70E,EAAM9Z,QAE5B+vG,EAAsB,CAC1B9vG,MAAO6Z,EAAM7Z,MACbD,MAAO8vG,EACP7wG,OAAQ6a,EAAM7a,QAEV+wG,EAAiB,CACrBrhB,GAAuBkhB,MAAgBlhB,GAAuBkhB,IAG1DvoB,EAAU,IAAIsgB,GAAqBoI,EAAgBF,GAEnD/2F,EAASna,KAAKquG,gBAChB3lB,EAAS,CAACyoB,GAAUj2F,EAAM7Z,MAAO,MAFC,GAItC,MAAO,CAAChB,OAAQ8Z,EAAO9Z,OAAQe,MAAO6vG,EAAY5vG,MAAO8Y,EAAO9Y,MAClE,CAEQ2W,MAAAA,CAAO3X,GACb,MAAMw/F,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,IAC3Bi8F,SAACA,EAAQl7F,MAAEA,EAAKC,MAAEA,GAASw+F,EAC3BpU,EACFsE,GAAwB3uF,GAC5B,IAAIsnF,EAEFA,EADE4T,EACQ,IAAIrN,GAA0BxD,GAE9B,IAAI+C,GAAoB/C,GAMpC,MAAO,CAACpqF,QAAOD,QAAOf,OAHVL,KAAKquG,gBACb3lB,EAAS,CAAC,CAACtnF,MAAOqqF,EAAWpqF,QAAOhB,WAAUgB,EAC9C,MAHkC,GAIJhB,OACpC,CAEAguG,eAAAA,CACI3lB,EAAuB3uE,EAAsBs3F,EAC7CC,EACAC,GAAgC,GAClC,MAAMp3F,EAASna,KAAK4wG,eAAeloB,EAAQ7pC,YAAawyD,GAClDG,EAAUxxG,KAAK6/F,QAAQz/F,IAAI+Z,EAAO9Z,QAIxC,GAHIqoF,EAAQgG,eACV8iB,EAAQlV,UAAW,GAEjB5T,EAAQiG,mBAAqBoD,GAAuBnD,MAAO,CAC7D,MAAM6iB,EAAa1f,GAA0BrJ,EAAQ7pC,aAKrD2yD,EAAQ3iB,SAAW4iB,EAAWhsG,KAAI2C,GAAS,EAAJA,IAKzC,GAH2B,MAAvBsgF,EAAQyG,cACVqiB,EAAQ3H,MAAQnhB,EAAQyG,aAEe,IAArCl3E,EAAmBkC,EAAO/Y,OAK5B,OAFAowG,EAAQrwG,OACJ8W,EAA4BkC,EAAO9Y,MAAoB,GACpD8Y,EAGT,MAAMu3F,EAA8B,GAC9BC,EAA2B53F,EAAOtU,KAAIyV,IAC1C,GAAoB,cAAhBA,EAAM7Z,MACR,MAAM,IAAIO,MACN,mIAKN,IAAIi+F,EAAU7/F,KAAK6/F,QAAQz/F,IAAI8a,EAAM7a,QAErC,GAAuB,MAAnBw/F,EAAQpW,QAAiB,CAC3B,IAAKf,EAAQ+F,cACTx2E,EAAmBiD,EAAM9Z,QACrB+K,IAAMzB,UAAU,6BAMtB,MAAO,CACLtJ,MAAO8Z,EAAM9Z,MACby+F,QAAS,KACT7F,WAAW,EACX4X,cAAe/R,EAAQ1+F,QAMvBunF,EAAQ+F,eACVoR,EAAQvD,UAAW,EACnBuD,EAAQz+F,MAAQ8Z,EAAM9Z,MAEzB,MAAM,KAAMy+F,EAAQvD,YAAe5T,EAAQ+F,aAC1CvzE,EAAQ2kF,EAAQvD,SAAWt8F,KAAK8wG,aAAa51F,GAClBlb,KAAK+wG,WAAW71F,GAC3Cw2F,EAAc7tG,KAAKqX,GACnB2kF,EAAU7/F,KAAK6/F,QAAQz/F,IAAI8a,EAAM7a,aAC5B,GACHw/F,EAAQvD,WACPvM,GAAyB8P,EAAQz+F,MAAO8Z,EAAM9Z,OAAQ,CAQzD,MAAMywG,EAAa32F,EACb42F,EAAc52F,EAAM9Z,MAE1B8Z,EAAM9Z,MAAQy+F,EAAQz+F,MACtB8Z,EAAQlb,KAAKgxG,cAAc91F,EAAiB42F,GAC5CJ,EAAc7tG,KAAKqX,GACnB2kF,EAAU7/F,KAAK6/F,QAAQz/F,IAAI8a,EAAM7a,QAEjCwxG,EAAWzwG,MAAQ0wG,EAIrB,OADA9xG,KAAKkwG,YAAYh1F,EAAM7a,QAChB,CAACe,MAAO8Z,EAAM9Z,MAAOy+F,UAAS7F,WAAW,EAAM,IAGxDh6F,KAAKkwG,YAAY/1F,EAAO9Z,QACxB,MAAM0xG,EACW,CAAC3wG,MAAO+Y,EAAO/Y,MAAOy+F,QAAS2R,EAASxX,WAAW,GAC9DhuF,EzCxnBJ,SACF08E,EAAuB3uE,EAAsBI,GAC/C,IAAI63F,EAAY,GAChBj4F,EAAOpU,OAAOwU,GAAQ9S,SAAQ9E,IAC5B,MAAM0vG,EAAyB,MAAb1vG,EAAEs9F,SAAsC,MAAnBt9F,EAAEs9F,QAAQx6F,OAC7C9C,EAAEs9F,QAAQx6F,MAAM0pC,WAAa,EAC3B8/C,EAAWtsF,EAAEy3F,UAAY,UAAYz3F,EAAEs9F,QAAQhR,SACrDmjB,GAAa,GAAGzvG,EAAEnB,SAASytF,KAAYojB,GAAW,IAEpD,MAAMC,EAAcxpB,EAAQqG,SAC5B,IAAI/iF,EAAM08E,EAAQ7oF,YAAY4L,KAG9B,OADAO,GAAO,IAAMgmG,EAAY,IAAME,EACxBlmG,CACT,CyC0mBgBmmG,CAAyBzpB,EAASipB,EAAYI,GACpDK,EAASpyG,KAAKqyG,iBAAiBrmG,GAAK,IzCzxBxC,SACFm9F,EAAqBzgB,EAAuB3uE,EAC5CI,GACF,MAAM40E,EAAWrG,EAAQqG,SACnBujB,EAA0Bv4F,EAAOtU,KAAI,CAACyV,EAAOrY,KACjD,MAAMi3F,EAAuB,CAC3BC,aAAc7+E,EAAM9Z,MACpBytF,SAAU3zE,EAAM8+E,UAAY,KAAO9+E,EAAM2kF,QAAQhR,SACjDmL,UAAW9+E,EAAM8+E,UACjBsC,UAAUphF,EAAM8+E,WAAoB9+E,EAAM2kF,QAAQvD,SAClDvtD,WAAY,MAMd,OAJqB,MAAjB7zB,EAAM2kF,SAA0C,MAAvB3kF,EAAM2kF,QAAQx6F,OACvC6V,EAAM2kF,QAAQx6F,MAAM0pC,WAAa,IACnC+qD,EAAU/qD,WAAa7zB,EAAM2kF,QAAQx6F,MAAM0pC,YAEtC,CAACtjC,KAAMi9E,EAAQ/U,cAAc9wE,GAAIi3F,YAAU,IAE9CyY,EAAeD,EAAW7sG,KAAIlD,GAAKA,EAAEu3F,YACrCM,EAA0B,CAC9BL,aAAc5/E,EAAO/Y,MACrBytF,SAAU10E,EAAO0lF,QAAQhR,SACzBmL,WAAW,EACXsC,SAAUniF,EAAO0lF,QAAQvD,SACzBvtD,WAAY,MAERyjE,EAASC,GACXH,EAAYlY,EAAcrL,EAAUrG,EAAQ+F,cAE1CikB,EAAevJ,EAAMzT,cAAc8c,GAGzC,IAAIG,EAA+B,KACnC,MAAMC,EAASzJ,EAAMlT,mBAAmByc,EAAc,OAAO,GACpB,IAArCvmG,IAAMzB,UAAU,mBAClBioG,EAASxJ,EAAMlT,mBAAmByc,EAAc,YAAY,IAI9D,MAAMG,EAA2D,CAAA,EACjE,IAAK,IAAIhwG,EAAI,EAAGA,EAAI6lF,EAAQ/U,cAAc3xE,OAAQa,IAAK,CACrD,MAAMknB,EAAU2+D,EAAQ/U,cAAc9wE,GAChCszF,GAAc,EACpB0c,EAAiB9oF,GACbo/E,EAAMlT,mBAAmByc,EAAc3oF,EAASosE,GACpD0c,EAAiB,SAAS9oF,KACtBo/E,EAAMlT,mBAAmByc,EAAc,SAAS3oF,IAAWosE,GAGjE,MAAO,CACLzN,UACA8pB,SACAE,eACAG,mBACAN,eACAnY,eACAuY,SACAC,SAEJ,CyC+tBaT,CACHnyG,KAAKmpG,MAAOzgB,EAASipB,EAAYI,KAEjCxD,EAAyC,MAArBvuG,KAAKwuG,aAC/B,IAAIrkF,EAgBJ,GAfIokF,IACFpkF,EAAQnqB,KAAK0vG,czClsBb,SACFvG,EAAqBiJ,EAAqBr4F,EAC1CI,EACAm3F,GAEF7R,GAAyB2S,EAAOG,aAAcx4F,GAC9C0lF,GAAyB,CAAC2S,EAAOhY,cAAe,CAACjgF,IAEjD,MAAM24F,EAAS34F,EAAO0lF,QAAQpW,QACxB+R,EAAcrhF,EAAO0lF,QAAQhR,SAC/B10E,EAAO0lF,QAAQvD,SACjB6M,EAAMpS,6BAA6B+b,EAAQtX,EAAY,GAAIA,EAAY,IAEvE2N,EAAMvS,uBAAuBkc,EAAQtX,EAAY,GAAIA,EAAY,IAEnE2N,EAAMrT,WAAWsc,EAAOM,cAGiB,IAArCvmG,IAAMzB,UAAU,kBACI,OAAlB0nG,EAAOO,QACTxJ,EAAM/lB,GAAG2vB,UAAUX,EAAOO,OAAQp5F,KAGhB,OAAlB64F,EAAOQ,QACTzJ,EAAM/lB,GAAG2vB,UAAUX,EAAOQ,OAAQr/C,KAIpCx5C,EAAO1S,SAAQ,CAAC6T,EAAOrY,KACrB,MAAMknB,EAAUqoF,EAAO1pB,QAAQ/U,cAAc9wE,GACvCmwG,EAASZ,EAAOS,iBAAiB9oF,GACjCkpF,EAAeb,EAAOS,iBAAiB,SAAS9oF,KAEtD,GAAc,MAAVipF,EAKJ,GAAI93F,EAAM8+E,UAER,GAAI/hF,EAAmBiD,EAAM9Z,OAAS,EACpC+nG,EAAM/lB,GAAG2vB,UAAUC,EAAQ93F,EAAM02F,cAAc,QAC1C,CACL,IAAIlrG,EAAOwU,EAAM02F,cACXlrG,aAAgBL,eACpBK,EAAO,IAAIL,aAAaK,IAE1ByiG,EAAM/lB,GAAG8vB,WAAWF,EAAQtsG,QAML,MAAvBwU,EAAM2kF,QAAQx6F,OAAiC,MAAhB4tG,GACjC9J,EAAM/lB,GAAGuT,UAAUsc,EAAc/3F,EAAM2kF,QAAQx6F,MAAM0pC,YAGvDo6D,EAAM7S,sBAAsBp7E,EAAM2kF,QAAQpW,QAASupB,EAAQnwG,EAAE,IAG5C,MAAfyuG,GACFA,EAAYnI,EAAOiJ,EAAOM,cAE5BvJ,EAAM5R,gBACR,CyCqoBI4a,CACInyG,KAAKmpG,MAAOiJ,EAAQT,EAAYI,EAAYT,GAEhDI,EAAcrqG,SAAQme,GAAQxlB,KAAKiuG,8BAA8BzoF,KAE7D+oF,IACFpkF,EAAQnqB,KAAK6vG,SAAS1lF,GACtBnqB,KAAKwuG,aAAa3qG,KACd,CAAC4H,KAAMi9E,EAAQ7oF,YAAY4L,KAAM0e,MAAOnqB,KAAKu4F,aAAapuE,OAG3Dhe,IAAMxB,QAAQ,wBAA0B6mG,EAAQlV,WACf,IAAlCiV,EAAyC,CAC3C,MAAM4B,EAAWnzG,KAAK8wG,aAAa32F,GAEnC,OADAna,KAAKiuG,8BAA8B9zF,GAC5Bg5F,EAET,OAAOh5F,CACT,CAEAs2F,aAAAA,CACI/nB,EAAuB3uE,EAAsBs3F,EAC7CC,EACAC,GAAgC,GAClCF,EAAcA,GAAet3F,EAAO,GAAG1Y,MACvC,MAAM2mB,EAAUhoB,KAAKquG,gBACjB3lB,EAAS3uE,EAAQs3F,EAAaC,EAC9BC,GACJ,OAAO9+D,KAASlsB,qBACLyB,EAAQ3nB,OAAQ2nB,EAAQ5mB,MAAO4mB,EAAQ3mB,MACpD,CAEQgxG,gBAAAA,CAAiBrmG,EAAaonG,GAKpC,OAHMpnG,KAAOhM,KAAKwtG,cAChBxtG,KAAKwtG,YAAYxhG,GAAOonG,KAEnBpzG,KAAKwtG,YAAYxhG,EAC1B,CAEAqnG,iBAAAA,GACE,OAAOrzG,KAAK0tG,cACd,CAIAhsG,OAAAA,GACE,IAAI1B,KAAKoyF,SAAT,CAKA,IAAKjmF,IAAMxB,QAAQ,WAAY,CACbI,OAAOsZ,KAAKrkB,KAAKwtG,aACzBnmG,SAAQ2E,IACdhM,KAAKmpG,MAAMpT,cAAc/1F,KAAKwtG,YAAYxhG,GAAK0mG,qBACxC1yG,KAAKwtG,YAAYxhG,EAAI,IAGhChM,KAAK0tG,eAAehsG,UACD,MAAf1B,KAAK8pC,QAC2B,oBAAvBwpE,mBACRtzG,KAAK8pC,kBAAkBwpE,kBAC1BtzG,KAAK8pC,OAAOypE,SAEZvzG,KAAK8pC,OAAS,KAEZ9pC,KAAKytG,sBACPztG,KAAKmpG,MAAMzgB,QAAU,KACrB1oF,KAAKmpG,MAAMznG,WAEb1B,KAAKoyF,UAAW,EAClB,CAEA5wF,cAAAA,GAkBE,OAjBgC,MAA5BxB,KAAKwzG,sBACPxzG,KAAKwzG,oBAAsB7tF,IAAK,KAC9B,IAAKxZ,IAAM/L,IAAI,gCAAiC,CAG9C,MAAMqzG,EAAYtnG,IAAMxB,QAAQ,SAChCwB,IAAM3L,IAAI,SAAS,GACnB,MAAMkzG,EAAsB1zG,KAAK2xC,IAAI4kB,GAAO,OAAOh4C,WAAW,GAG9D,GAFApS,IAAM3L,IAAI,QAASizG,GAEfC,EAAsB,EACxB,OAAO,GAGX,OAAO,EAAE,KAGN1zG,KAAKwzG,mBACd,CAGA/xG,OAAAA,GACE,OAAiC,KAA1BzB,KAAKwB,iBAp5Be,KACA,IAo5B7B,CAEA0uG,WAAAA,CAAY7vG,GACV,MAAMw/F,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,IAC3Be,MAACA,EAAKC,MAAEA,EAAKF,OAAEA,EAAMsoF,QAAEA,EAAOogB,MAAEA,EAAKvN,SAAEA,GAAYuD,EAEzD,GAAe,MAAXpW,EAEF,OAEF,MAAM8kB,EAAyC,MAArBvuG,KAAKwuG,aAC/B,IAAI1mG,EACAymG,IACFzmG,EAAQmQ,MAGV,IAAI42E,EAAWgR,EAAQhR,SAMvB,GALgB,MAAZA,IACFA,EtD7mBA,SACF8kB,EAAoBrX,GAAW,GACjC,IAAIsX,EAAaznG,IAAMzB,UAAU,0BAsBjC,GArBI4xF,IACFsX,GAA0B,EAcF,KAPxBD,EAAWA,EAASluG,KAChB,CAAC2C,EAAGvF,IAAMA,GAAK8wG,EAAS3xG,OAAS,EAC7BiW,EAAuB07F,EAAS9wG,IAChC8wG,EAAS9wG,MAIJb,SACX2xG,EAAW,CAAC,EAAGA,EAAS,MAKJ,IAApBA,EAAS3xG,OAAc,CACzB,MAAM6xG,EAAgB57F,EAAkB07F,GACxCA,EAAWE,EAAczuG,SAG3B,IAAIrB,EAAOkU,EAAmB07F,GAC9B,GAAIA,EAAS3xG,QAAU,GAAK+B,GAAQ6vG,EAClC,MAAO,CAAC,EAAG7vG,GACN,GACiB,IAApB4vG,EAAS3xG,QAAgB2xG,EAAS,IAAMC,GACxCD,EAAS,IAAMC,EACjB,OAAOD,EACF,GACiB,IAApBA,EAAS3xG,QAAgB2xG,EAAS,GAAKA,EAAS,IAAMC,GACtDD,EAAS,IAAMC,EACjB,MAAO,CAACD,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACvC,GACiB,IAApBA,EAAS3xG,QAAgB2xG,EAAS,IAAMC,GACxCD,EAAS,GAAKA,EAAS,IAAMC,EAC/B,MAAO,CAACD,EAAS,GAAIA,EAAS,GAAKA,EAAS,IACvC,GACiB,IAApBA,EAAS3xG,QACT2xG,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMC,GAC3CD,EAAS,IAAMC,EACjB,MAAO,CAACD,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACrD,GACiB,IAApBA,EAAS3xG,QAAgB2xG,EAAS,IAAMC,GACxCD,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMC,EAC7C,MAAO,CAACD,EAAS,GAAIA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAE1D,GAAIrX,EAAU,CAOZ,MAAM5wD,EAAW2/C,GAAYsoB,GAC7B,IAAIrvB,EAAO,EAAGoN,EAAO,EAKrB,OAJIiiB,EAAS3xG,UACVsiF,EAAMoN,GAAQnG,GAAYooB,IAE7B5vG,EAAO2nC,GAAY44C,EAAO,IAAMoN,EAAO,GAChCz5E,EAAyBlU,GAAM0B,KAAI2C,GAAS,EAAJA,IAEjD,OAAO6P,EAAyBlU,EAEpC,CsDsiBiBgsF,CAA2C3uF,EAAOk7F,GAC7DuD,EAAQhR,SAAWA,GAGP,MAAV1tF,EAAgB,CAClB,MAAMsqF,EAAYsE,GAAwB3uF,GAE1C,IAAIsnF,EACAtkF,EAAQyqF,EAAS,GAAInlD,EAASmlD,EAAS,GAC3C,MAAMilB,EAAc3yG,aAAkBoF,WAElC+1F,IACDl4F,EAAOslC,GAAUqoD,GACdlD,EAAS,GAAIA,EAAS,IAC1BnG,EAAU,IAAI8G,GACV/D,EAAW,CAAC/hD,EAAQtlC,GAAQ0vG,IAEhCprB,EACI,IAAI4G,GAAoB7D,EAAW,CAAC/hD,EAAQtlC,GAAQ0vG,GAG1D,MAAMC,EAAuB/zG,KAAK4wG,eAAe,CAAClnE,EAAQtlC,GAAQ/C,GAEhErB,KAAK6/F,QAAQz/F,IAAI2zG,EAAqB1zG,QAAQwpG,MAD5CiK,EAEE3vB,GAAa2nB,OAGb3nB,GAAawnB,OAEnB3rG,KAAKmpG,MAAMzV,2BACP1zF,KAAKiwG,WAAW8D,EAAqB1zG,QAAS+D,EAAOslC,EACrDvoC,GAIJ,MAAM6yG,GAAwB,EACxBC,EAAsBj0G,KAAKquG,gBAC7B3lB,EAAS,CAACqrB,GAAuB1yG,EAAO,KAAM2yG,GAG5CE,EAAgBl0G,KAAK6/F,QAAQz/F,IAAI6zG,EAAoB5zG,QAC3Dw/F,EAAQpW,QAAUyqB,EAAczqB,QAChCoW,EAAQhR,SAAWqlB,EAAcrlB,SACjCgR,EAAQvD,SAAW4X,EAAc5X,SACjCuD,EAAQgK,MAAQqK,EAAcrK,MAE9B7pG,KAAKiuG,8BAA8B8F,GACnC/zG,KAAK6/F,QAAQp/F,OAAOwzG,EAAoB5zG,QAGxCw/F,EAAQ1+F,OAAS,KACbotG,IACFvuG,KAAKmtG,cAAgBl1F,KAAanQ,OAE/B,CACL,MAAMsiG,EAAapqG,KAAK2pG,eAAe9a,EAAUgb,EAAOxoG,EAAOi7F,GAC/DuD,EAAQpW,QAAU2gB,EAEtB,CAEQkE,oBAAAA,CAAqBjuG,EAAgB8zG,GAE3C,MAAMtU,EAAU7/F,KAAK6/F,QAAQz/F,IAAIC,IAC3BgB,MAACA,GAASw+F,EAOhB,OALA7/F,KAAK+vG,eAAe1vG,GAEC,MAAjB8zG,IACFtU,EAAQ1+F,OAyBd,SACIoC,EAAiBlC,GACnB,GAAc,YAAVA,GAAiC,cAAVA,EACzB,OAAOkC,EACF,GAAc,UAAVlC,GAA+B,SAAVA,EAAkB,CAChD,MAAM9B,EAAoB,UAAV8B,EAAqB,IAAIiF,WAAW/C,EAAEvB,QACjB,IAAIuE,WAAWhD,EAAEvB,QACtD,IAAK,IAAIa,EAAI,EAAGA,EAAItD,EAAOyC,SAAUa,EACnCtD,EAAOsD,GAAKV,KAAKwV,MAAMpU,EAAEV,IAE3B,OAAOtD,EAEP,MAAM,IAAIqC,MAAM,iBAAiBP,IAErC;;;;;;;;;;;;;;;;GAvCuB+yG,CAAoBD,EAAe9yG,IAE/Cw+F,EAAQ1+F,MACjB,CAEQwoG,cAAAA,CACJ9a,EAA4BwlB,EAAuBhzG,EACnDi7F,GAEF,GADAt8F,KAAKktG,eAAiBltG,KAAKmqG,aAAatb,EAAUxtF,IAC7CrB,KAAKqtG,mBACNrtG,KAAKktG,cAA0C,KAA1BltG,KAAK2tG,mBAA4B,KAAM,CAC9D,MAAM2G,GAAMt0G,KAAKktG,cAAgB,KAAO,MAAMxwF,QAAQ,GACtD1c,KAAKqtG,mBAAoB,EACzBpjG,QAAQC,KACJ,6BAA6BoqG,0CAGnC,OAAOt0G,KAAK0tG,eAAe/D,eAAe9a,EAAUwlB,EAAS/X,EAC/D,CAEQ6N,YAAAA,CAAa/oG,EAAyBC,GAC5C,OAAOD,EAAM,GAAKA,EAAM,GAAK6W,EAAqB5W,EACpD,ECzhCE8sB,MACF1J,GAAgB,SAAS,IAAM,IAAIooF,IAAoB;;;;;;;;;;;;;;;;ICHlD,MAAMX,GAAoB,2DAM3B,MAAOqI,GAKX10G,WAAAA,CAAY2vB,EAAYu4B,EAAkBg4C,GAJ1C//F,KAAA2zE,cAAgB,CAAC,IAAK,KAKpB3zE,KAAK6+C,YAAcg6B,GAAwC9wB,EAAQg4C,GACnE//F,KAAK+uF,SAAW,8DAEVv/D,yKASR;;;;;;;;;;;;;;;;GCtBK,MAAM08E,GAAoB,yLAgB3B,MAAOsI,GAQX30G,WAAAA,CACI2vB,EAAYu4B,EAAkBg4C,EAC9B0U,GAAmB,GATvBz0G,KAAA2zE,cAAgB,CAAC,IAAK,KAGtB3zE,KAAA00G,sBAAuB,EACvB10G,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAKb1uF,KAAK6+C,YAAcg6B,GAAwC9wB,EAAQg4C,GACnE,MAAMv6F,EAAOxF,KAAK6+C,YAAY78C,OAC9B,IAAI2yG,EAAyB,GAC7B,GAAIF,EACF,GAAa,IAATjvG,GAAuD,IAAzCyS,EAAmBjY,KAAK6+C,aACxC81D,EAAyB,+FAKpB,CAKL,GAHAA,EAAyB,eADX5Z,GAAkBv1F,2CAInB,IAATA,EACFmvG,GAA0B,4CACK30G,KAAK6+C,YAAY,8FAI3C,CACL,MAAMwpD,EAAWF,GAAY,SAAU3iG,GACvCmvG,GAA0B,2DAEnBtM,EAAS7iG,EAAO,cAAcxF,KAAK6+C,YAAYr5C,EAAO,8DAEtD6iG,EAAS7iG,EAAO,cAAcxF,KAAK6+C,YAAYr5C,EAAO,6NASnExF,KAAK+uF,SAAW,2DAEVv/D,wKAQAmlF,gDAKR;;;;;;;;;;;;;;;;GChFI,SAAUC,GACZ/kF,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAIZ,OAFAja,EAAQ8f,OAAOrd,EAAElC,QAEV,CAACA,OAAQkC,EAAElC,OAAQe,MAAOmB,EAAEnB,MAAOC,MAAOkB,EAAElB,MACrD,CAEO,MAAMwzG,GAA+B,CAC1ClzG,WAAYqP,GACZ6F,YAAa,QACb+Q,WAAYgtF;;;;;;;;;;;;;;;;GCFR,SAAU7kF,GACZF,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBI,KAACA,EAAIC,KAAEA,GAAQnW,EAEf+6F,EAAch1G,EAAQ8wG,eAAe3gF,EAAK7uB,MAAO,aACjD2uB,EAAUjwB,EAAQ+/F,QAAQz/F,IAAI00G,EAAYz0G,QAE1C00G,EAAiBH,GAAS,CAAC76F,OAAQ,CAACxX,EAAG0tB,GAAOnwB,YACnCA,EAAQ+/F,QAAQz/F,IAAI20G,EAAe10G,QAC3C0tG,wBAET,MAAMiH,EAAiBJ,GAAS,CAAC76F,OAAQ,CAACxX,EAAG2tB,GAAOpwB,YAMpD,OALiBA,EAAQ+/F,QAAQz/F,IAAI40G,EAAe30G,QAC3C0tG,wBAETh+E,EAAQo+E,mBAAqB,CAACl+E,KAAM8kF,EAAgB7kF,KAAM8kF,GAEnDF,CACT,CAEO,MAAMG,GAA8B,CACzCtzG,WAAY+M,GACZmI,YAAa,QACb+Q,WAAYmI,IClCDmlF,GAAY,+BACZC,GAAmB;;;;;;;;;;;;;;;;GA4BzB,MAAMC,GAAgC,CAC3CzzG,WAAY2P,GACZuF,YAAa,QACb+Q,WA1BI,SAAoBiI,GAKxB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNgrC,MAACA,GAASn+B,EAEVyuF,EAASv1G,EAAQ8wG,eACnB,GAAI,UACJ34F,GAAuB8sC,EAA0B,YAE/C2jC,EAAUv8E,IAAMxB,QAAQ,gCAC1B,IAAI6pG,GAAsBW,GAAkB5yG,EAAEnB,MAAOi0G,EAAOj0G,OAC5D,IAAImzG,GAAgBW,GAAW3yG,EAAEnB,MAAOi0G,EAAOj0G,OAC7C7B,EAASO,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAG8yG,GAAS9yG,EAAElB,OAI/D,OAFAvB,EAAQmuG,8BAA8BoH,GAE/B91G,CACT,GC1Ba+1G,GAAQ,+BACRC,GAAe;;;;;;;;;;;;;;;;GAgBrB,MAAMC,GAA4B,CACvC7zG,WAAY8R,GACZoD,YAAa,QACb+Q,WAdI,SAAgBiI,GAEpB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,EAACwiD,MAAEA,GAAShrC,EAEb2uE,EAAUv8E,IAAMxB,QAAQ,gCAC1B,IAAI6pG,GAAsBe,GAAchzG,EAAEnB,MAAO2jD,EAAM3jD,OACvD,IAAImzG,GAAgBe,GAAO/yG,EAAEnB,MAAO2jD,EAAM3jD,OAC9C,OAAOtB,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGwiD,GAAQxiD,EAAElB,MACxD,GCNao0G,GAA0B;;;;;;;;;;;;;;;;GA6BjC,SAAUC,IACZzJ,UAACA,EAAS0J,gBAAEA,EAAeC,cAAEA,EAAav0G,MAAEA,IAE9C,MAAO,EAAE0Y,SAAQja,cACf,MAAMyC,EAACA,GAAKwX,EACN87F,EAAe/1G,EAEfg2G,EAASz0G,GAASkB,EAAElB,MAC1B,GAAIw0G,EAAaxF,mBAAmB,CAAC9tG,KAAwB,MAAjBqzG,EAAuB,CACjE,MAAMG,EAAQF,EAAahW,QAAQz/F,IAAImC,EAAElC,QACnCqwG,EAAYkF,EAAcG,EAAM50G,OAAsB20G,GAC5D,OAAOD,EAAajF,eAAeruG,EAAEnB,MAAO00G,EAAQpF,GAKtD,IAAIhoB,EAOJ,OALEA,EAHEv8E,IAAMxB,QAAQ,gCAAqD,MAAnBgrG,EAGxC,IAAIlJ,GAAqBlqG,EAAEnB,MAAOu0G,GAElC,IAAI3J,GAAezpG,EAAEnB,MAAO6qG,GAGjC4J,EAAaxH,gBAAgB3lB,EAAS,CAACnmF,GAAIuzG,EAAO,CAE7D,CAqBM,SAAUE,IAAiB/J,UAC/BA,EAAS0J,gBACTA,EAAelB,iBACfA,GAAmB,EAAKwB,gBACxBA,GAAkB,EAAKL,cACvBA,EAAav0G,MACbA,IAEA,MAAO,EAAE0Y,SAAQja,cACf,MAAMyD,EAACA,EAACmV,EAAEA,GAAKqB,EACT87F,EAAe/1G,EAErB,GAAIm2G,GAA+B,cAAZ1yG,EAAElC,MAAuB,CAC9C,MAAM60G,EAAQL,EAAahW,QAAQz/F,IAAImD,EAAElD,QACnC81G,EAAQN,EAAahW,QAAQz/F,IAAIsY,EAAErY,SAElC4vB,EAAMC,GAAQ,CACnB,CAACgmF,EAAM/H,mBAAmBl+E,KAAMkmF,EAAMhI,mBAAmBl+E,MACzD,CAACimF,EAAM/H,mBAAmBj+E,KAAMimF,EAAMhI,mBAAmBj+E,OACzDzqB,KAAI2wG,IACJ,MAAOC,EAAOC,GAASF,EAEjBG,EAAU,CACdl2G,OAAQg2G,EAAMh2G,OACdgB,MAAOg1G,EAAMh1G,MACbD,MAAOmC,EAAEnC,OAELo1G,EAAU,CACdn2G,OAAQi2G,EAAMj2G,OACdgB,MAAOi1G,EAAMj1G,MACbD,MAAOsX,EAAEtX,OAGLsnF,EAAU,IAAI6rB,GAAgBtI,EAAW1oG,EAAEnC,MAAOsX,EAAEtX,OAC1D,OAAOy0G,EAAaxH,gBAChB3lB,EAAS,CAAC6tB,EAASC,GAAUh2F,GAAW61F,EAAMh1G,MAAOi1G,EAAMj1G,OAAO,IAGlEo1G,EACF1mF,GAAQ,CAAChW,OAAQ,CAACkW,OAAMC,QAAOpwB,QAAS+1G,IAO5C,OALAA,EAAa5H,8BAA8Bh+E,GAC3C4lF,EAAa5H,8BAA8B/9E,GAIpCumF,EAGT,MAAMX,EAASz0G,GAASmf,GAAWjd,EAAElC,MAAOqX,EAAErX,OAC9C,GAAIw0G,EAAaxF,mBAAmB,CAAC9sG,EAAGmV,KAAwB,MAAjBk9F,EAAuB,CACpE,MAAMM,EAAQL,EAAahW,QAAQz/F,IAAImD,EAAElD,QACnC81G,EAAQN,EAAahW,QAAQz/F,IAAIsY,EAAErY,SAClCqwG,EAAW7gE,GAAY+lE,EAC1BryG,EAAEnC,MAAOsX,EAAEtX,MAAO80G,EAAM/0G,OACxBg1G,EAAMh1G,OAAsB20G,GAE1BjuF,EAAMguF,EAAajF,eAAe/gE,EAAUimE,GAGlD,OAFgBD,EAAahW,QAAQz/F,IAAIynB,EAAIxnB,QACrCc,OAASuvG,EACV7oF,EAMT,IAAI6gE,EAQJ,OANEA,EAJEv8E,IAAMxB,QAAQ,iCACK,MAAnBgrG,EAGQ,IAAInB,GACVmB,EAAiBpyG,EAAEnC,MAAOsX,EAAEtX,MAAOqzG,GAE7B,IAAIF,GAAgBtI,EAAW1oG,EAAEnC,MAAOsX,EAAEtX,OAG/Cy0G,EAAaxH,gBAAgB3lB,EAAS,CAACnlF,EAAGmV,GAAIo9F,EAAO,CAEhE,CAEM,SAAUY,GACZh2C,EAAqCi2C,GAAS,GAChD,GAAmB,WAAfj2C,EACF,OAAIi2C,EACKC,GAEFxI,GACF,GAAmB,SAAf1tC,EACT,OAAIi2C,EACKC,GAEFxI,GACF,GAAmB,QAAf1tC,EACT,OAAIi2C,EACKC,GAEFxI,GACF,GAAmB,UAAf1tC,EACT,OAAIi2C,EACKC,GAEFxI,GACF,GAAmB,UAAf1tC,EACT,OAAIi2C,EACKpB,GAEFD,GACF,GAAmB,cAAf50C,EACT,OAAIi2C,EACKxB,GAEFD,GAET,MAAM,IAAItzG,MAAM,cACZ8+D,oDACN;;;;;;;;;;;;;;;;GCzMM,MAAOm2C,GAOXh3G,WAAAA,CACIkoD,EAAkCg4C,EAClClhD,EAAuC/X,GAAa,EACpDC,GAAa,EAAO+vE,GAAU,EAAOp2C,EAAqB,KAC1Dq2C,GAAqB,EAAOC,GAAyB,GAVzDh3G,KAAA2zE,cAAgB,CAAC,UAAW,WAC5B3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EASb1uF,KAAK6+C,YAAcA,EAEnB,MAAMo4D,EAAYnwE,EAAaihB,EAAO,GAAKA,EAAO,GAC5CmvD,EAAwB/0G,KAAKkC,KAAK4yG,EAAY,GAE9CE,EAAUrwE,EAAa,cAAgB,cACvCswE,EAAUrwE,EAAa,cAAgB,cACvCswE,EAAWvwE,EAAa,CAAC,SAAU,UAAY,CAAC,SAAU,UAC1DwwE,EAAWvwE,EAAa,CAAC,SAAU,UAAY,CAAC,SAAU,UAEhE,IAAIwwE,EAAoB,GAAIC,EAAyB,GACjD92C,IAEA62C,EADER,EACkB,oGAEhBr2C,eAEKs2C,EACW,4FAEhBt2C,eAGgB,wCAChBA,eAIN82C,EAAyB,gCAG3B,MAAMC,EAAiBX,EAAU,kCAAoC,GACjEA,GACF92G,KAAK2zE,cAAc9vE,KAAK,QAGtBkzG,GACF/2G,KAAK2zE,cAAc9vE,KAAK,0BAGtBmzG,GACFh3G,KAAK2zE,cAAc9vE,KAAK,kBAG1B,IAAI6zG,EAAgB,OAChBC,EAAgB,OAChB5vD,EAAO,GAAKg4C,EAAO,GACrB2X,EAAgB,wBAAwB3vD,EAAO,GAAK,OAC3Cg4C,EAAO,GAAKh4C,EAAO,KAC5B4vD,EAAgB,wBAAwB5X,EAAO,GAAK,QAGtD//F,KAAK+uF,SAAW,WACZwoB,4CAE8BL,8GAIRA,qCACLQ,8BACAC,6CACeR,8CACAC,oKAIjBC,EAAS,QAAQC,EAAS,8BAC1BD,EAAS,QAAQC,EAAS,wKASvCG,gBAEAD,gDAKR;;;;;;;;;;;;;;;;GC3FK,MAAMI,GAAmB,CAC9BC,KAAM,wCACNC,KAAM,yCAGF,MAAOC,GAKXl4G,WAAAA,CAAY2vB,EAAYu4B,EAAkBg4C,GAJ1C//F,KAAA2zE,cAAgB,CAAC,QAAS,QAAS,QAAS,SAK1C3zE,KAAK6+C,YAAcg6B,GAAwC9wB,EAAQg4C,GAEnE//F,KAAK+uF,SAAW,4GAGVv/D,2SAWR;;;;;;;;;;;;;;;;GCvBF,MAAMwoF,GAAM,gBAEN,SAAUC,GACZpoF,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBtsB,EAACA,EAACmV,EAAEA,GAAKqB,EACT1Y,EAAQw3E,GAAwBt1E,EAAElC,MAAOqX,EAAErX,OAEjD,GAAgB,cAAZkC,EAAElC,MAAuB,CAC3B,MAAM60G,EAAQp2G,EAAQ+/F,QAAQz/F,IAAImD,EAAElD,QAC9B81G,EAAQr2G,EAAQ+/F,QAAQz/F,IAAIsY,EAAErY,QAE9B63G,EAAc,IAAIH,GACpBI,GAAsCN,KAAMt0G,EAAEnC,MAAOsX,EAAEtX,OACrDg3G,EAAc,IAAIL,GACpBI,GAAsCL,KAAMv0G,EAAEnC,MAAOsX,EAAEtX,OAErD2Y,EAAS,CACb,CACE1Z,OAAQ61G,EAAM/H,mBAAmBl+E,KAAK5vB,OACtCgB,MAAO60G,EAAM/H,mBAAmBl+E,KAAK5uB,MACrCD,MAAOmC,EAAEnC,OAEX,CACEf,OAAQ61G,EAAM/H,mBAAmBj+E,KAAK7vB,OACtCgB,MAAO60G,EAAM/H,mBAAmBj+E,KAAK7uB,MACrCD,MAAOmC,EAAEnC,OAEX,CACEf,OAAQ81G,EAAMhI,mBAAmBl+E,KAAK5vB,OACtCgB,MAAO80G,EAAMhI,mBAAmBl+E,KAAK5uB,MACrCD,MAAOsX,EAAEtX,OAEX,CACEf,OAAQ81G,EAAMhI,mBAAmBj+E,KAAK7vB,OACtCgB,MAAO80G,EAAMhI,mBAAmBj+E,KAAK7uB,MACrCD,MAAOsX,EAAEtX,QAIPi3G,EAAWv4G,EAAQuuG,gBAAgB6J,EAAan+F,EAAQ,WACxDu+F,EAAWx4G,EAAQuuG,gBAAgB+J,EAAar+F,EAAQ,WAExD08F,EACF1mF,GAAQ,CAAChW,OAAQ,CAACkW,KAAMooF,EAAUnoF,KAAMooF,GAAWx4G,YAMvD,OAJAA,EAAQmuG,8BAA8BoK,GACtCv4G,EAAQmuG,8BAA8BqK,GAG/B7B,EAGT,GAAI32G,EAAQuwG,mBAAmB,CAAC9sG,EAAGmV,IAAK,CACtC,MAAMw9F,EAAQp2G,EAAQ+/F,QAAQz/F,IAAImD,EAAElD,QAC9B81G,EAAQr2G,EAAQ+/F,QAAQz/F,IAAIsY,EAAErY,SAC7BqwG,EAAW7gE,GAAY0oE,GAC1Bh1G,EAAEnC,MAAOsX,EAAEtX,MAAO80G,EAAM/0G,OACxBg1G,EAAMh1G,OAAsBE,GAE1BwmB,EAAM/nB,EAAQ8wG,eAAe/gE,EAAUxuC,GAG7C,OAFgBvB,EAAQ+/F,QAAQz/F,IAAIynB,EAAIxnB,QAChCc,OAASuvG,EACV7oF,EAGT,IAAI6gE,EAOJ,OALEA,EADEv8E,IAAMxB,QAAQ,gCACN,IAAI6pG,GAAsBwD,GAAKz0G,EAAEnC,MAAOsX,EAAEtX,OAE1C,IAAImzG,GAAgByD,GAAKz0G,EAAEnC,MAAOsX,EAAEtX,OAGzCtB,EAAQuuG,gBAAgB3lB,EAAS,CAACnlF,EAAGmV,GAAIrX,EAClD,CAEO,MAAMm3G,GAA+B,CAC1C72G,WAAYmR,GACZ+D,YAAa,QACb+Q,WAAYqwF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFR,SAAU9+D,GAAQtpB,GAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACN3Y,MAACA,GAASwlB,EACVivF,EAAe/1G,EAEf0lG,EAAQvtF,EAAmB1V,EAAEnB,OAC7Bq3G,EAASxgG,EAA4B7W,EAAOokG,GAC5CkT,EAASzgG,EAAmBwgG,GAElCxgG,EACIutF,IAAUkT,GACV,IAAM,kBAAkBD,UAAeC,iCACzBn2G,EAAEnB,cAAcokG,mFAGlC,MAAMmT,EAAW9C,EAAahW,QAAQz/F,IAAImC,EAAElC,QAC5C,OAAIs4G,EAASrc,UAAa3Q,GAAcppF,EAAEnB,MAAOq3G,IACtB,OAArBE,EAASlvB,SAAoBkC,GAAcgtB,EAASv3G,MAAOq3G,IAIjE5C,EAAaj2F,OAAOrd,EAAElC,QAEf,CAACA,OAAQkC,EAAElC,OAAQe,MAAOq3G,EAAQp3G,MAAOkB,EAAElB,QC5B9C,SACF6Z,EAAmB+1F,EACnBnxG,GACF,MAAMoxG,EACF,CAAC7lB,GAAYnwE,EAAM9Z,UACfmqF,GAAYrwE,EAAM9Z,QACpB+vG,EAAsB,CAC1B9vG,MAAO6Z,EAAM7Z,MACbD,MAAO8vG,EACP7wG,OAAQ6a,EAAM7a,QAEV+wG,EACF,CAAC/lB,GAAY4lB,MACT1lB,GAAY0lB,IAEdvoB,EAAU,IAAIsgB,GAAqBoI,EAAgBF,GAEnD/2F,EAASra,EAAQuuG,gBACnB3lB,EAAS,CAACyoB,GAAUj2F,EAAM7Z,MAAO,MAFC,GAItC,MAAO,CAAChB,OAAQ8Z,EAAO9Z,OAAQe,MAAO6vG,EAAY5vG,MAAO8Y,EAAO9Y,MAClE,CDEW2vG,CAAczuG,EAAGk2G,EAAQ5C,EAMpC,CAEO,MAAM+C,GAA8B,CACzCj3G,WAAYoS,GACZ8C,YAAa,QACb+Q,WAAYuxB;;;;;;;;;;;;;;;;GErCR,MAAO0/D,GAKXh5G,WAAAA,CAAYi5G,EAAqCC,GAJjD/4G,KAAA2zE,cAAgB,CAAC,KAKf,MAAMqlC,WAACA,EAAUjjE,UAAEA,EAASsgC,OAAEA,EAAMglB,QAAEA,GAAWyd,EACjD94G,KAAK6+C,YAAc,CAAC9I,EAAWslD,GAE/B,MAAM4d,EAAqD,EAA7B92G,KAAKiH,MAAM4vG,EAAa,GAChDE,EAA0BF,EAAa,EAE7C,IAAIG,EAAgB,iCACpB,GAAe,MAAXJ,EAAiB,CACnB,MAAMK,EAAc,EAAIL,EACxBI,EAAgB,4BACZlhG,EAAWmhG,GAAeA,EAAYC,YAAY,GACxBD,YAGhC,IAAI3E,EAAmB,GACnBp+B,EAAS2iC,EAAa,IACxBvE,EAAmB,uCACWp+B,kDAMhCr2E,KAAK+uF,SAAW,gHAIV0lB,sNAQwBuE,sEAIJC,8QASlBE,kDAGqBF,mBACS,IAA5BC,2FAGFC,yBACqC,IAA5BD,6IAKTC,yBACqC,IAA5BD,iLAMTC,2DAKV;;;;;;;;;;;;;;;;GC/EI,MAAOG,GAKXz5G,WAAAA,CACIi5G,EACAS,GANJv5G,KAAA2zE,cAAgB,CAAC,KAOf,MAAMqlC,WAACA,EAAUjjE,UAAEA,EAASsgC,OAAEA,EAAMglB,QAAEA,GAAWyd,EACjD94G,KAAK6+C,YAAc,CAAC9I,EAAWslD,GAE/B,IAAIme,EAAsB,MACtBC,EAAY,GAEG,SAAfF,EACFC,EAAsB,MACE,QAAfD,GAETC,EAAsB,cACtBC,EAAY,OACY,QAAfF,IAETC,EAAsB,eACtBC,EAAY,OAGd,IAAIvzB,EAAc,GAAGqzB,KAAcA,KAAcA,sEAG9B,QAAfA,EACFrzB,EAAc,WACU,SAAfqzB,EACTrzB,EAAc,YACU,QAAfqzB,EACTrzB,EAAc,WACU,QAAfqzB,IACTrzB,EAAc,YAGhB,MAAM+yB,EAAqD,EAA7B92G,KAAKiH,MAAM4vG,EAAa,GAChDE,EAA0BF,EAAa,EAE7C,IAAIG,EAAgB,eACG,QAAfI,kEAEsB,SAAfA,mKAIKE,yCAIhBC,EAAU,OAEK,QAAfH,GACFC,EAAsB,MACtBL,EAAgB,qMAKhBO,EAAU,SACc,QAAfH,IACTC,EAAsB,MACtBL,EAAgB,qMAKhBO,EAAU,SAGZ,IAAIjF,EAAmB,GACnBp+B,EAAS2iC,EAAa,IACxBvE,EAAmB,uCACWp+B,kEAKhCr2E,KAAK+uF,SAAW,6CACsByqB,kHAIhC/E,sNAQwBuE,yCAEAQ,mKAMJP,gEAElBS,cAAoBA,gMAOpBP,kDAGqBF,mBACS,IAA5BC,mBACFQ,cAAoBA,2KAOpBP,yBACqC,IAA5BD,mBACTQ,cAAoBA,kLAOpBP,yBACqC,IAA5BD,mBACTQ,cAAoBA,yLAOpBP,mCAEQjzB,oBAGlB;;;;;;;;;;;;;;;;GCzHI,SAAU39E,GACZhG,EAAelB,EAAiBs4G,EAChC75G,GACF,MAAM85G,EArBR,SAA4BzkE,GAE1B,MAAM0kE,EAAS,GAEf,KAAyB,IAAlBA,EAAO73G,QAAsD,IAAtC63G,EAAOA,EAAO73G,OAAS,GAAGq5F,SAAe,CACrE,MAAMA,EACFwe,EAAO73G,OAAS63G,EAAOA,EAAO73G,OAAS,GAAGq5F,QAAUlmD,EAAQ,GAC1D6jE,EAAangC,GAAsCwiB,GACzDwe,EAAOh2G,KAAK,CACVwyE,OAAQglB,EACR2d,aACA3d,QAASl5F,KAAKkC,KAAKg3F,EAAU2d,KAIjC,OAAOa,CACT,CAK0BC,CAAmBv3G,EAAEnB,OAE7C,IAAI7B,EAASgD,EACb,IAAK,IAAIM,EAAI,EAAGA,EAAI+2G,EAAgB53G,OAAQa,IAAK,CAC/C,MAAMwzE,OAACA,EAAM2iC,WAAEA,EAAU3d,QAAEA,GAAWue,EAAgB/2G,GAEtD,IAAI6lF,EACAqxB,EAEFrxB,EADoB,SAAlBixB,EACc,IAAN92G,EACN,IAAIg2G,GACA,CAACG,aAAY3iC,SAAQtgC,UAAWxzC,EAAEnB,MAAM,GAAIi6F,WAAUhlB,GAC1D,IAAIwiC,GAAY,CAACG,aAAY3iC,SAAQtgC,UAAWxzC,EAAEnB,MAAM,GAAIi6F,YAEtD,IAAIie,GACV,CAACN,aAAY3iC,SAAQtgC,UAAWxzC,EAAEnB,MAAM,GAAIi6F,WAAUse,GAG5DI,EAAiBx6G,EACjBA,EAASO,EAAQuuG,gBAAgB3lB,EAAS,CAACnpF,GAAS8B,GAEhD04G,EAAe15G,SAAWkC,EAAElC,QAC9BP,EAAQmuG,8BAA8B8L,GAI1C,OAAOx6G,CACT;;;;;;;;;;;;;;;;GCvDM,MAAOy6G,GAMXn6G,WAAAA,CAAYkoD,EAAkBkyD,GAL9Bj6G,KAAA2zE,cAAgB,CAAC,KAMf,MAAM90B,EAAwB,IAAIn7C,MAAMqkD,EAAO/lD,QAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIg8C,EAAY78C,OAAQa,IACtCg8C,EAAYh8C,GAAKklD,EAAOkyD,EAAOp3G,IAEjC7C,KAAK6+C,YAAcA,EACnB7+C,KAAKwF,KAAOq5C,EAAY78C,OACxB,MAAMX,EAAQ05F,GAAkB/6F,KAAKwF,MAC/B00G,EAWV,SAA2BD,GACzB,MAAMz0G,EAAOy0G,EAAOj4G,OACpB,GAAIwD,EAAO,EACT,MAAM5D,MAAM,sBAAsB4D,0BAEpC,MAAM20G,EACF,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACtDC,EAAiB,IAAI12G,MAAM8B,GACjC,IAAK,IAAI3C,EAAI,EAAGA,EAAIo3G,EAAOj4G,OAAQa,IACjCu3G,EAAeH,EAAOp3G,IAAMs3G,EAAct3G,GAE5C,OAAOu3G,EAAexuG,MACxB;;;;;;;;;;;;;;;;GAvBqByuG,CAAkBJ,GAEnCj6G,KAAK+uF,SAAW,8BAEZ1tF,sDACe64G,mBAGrB,ECrBI,MAAOI,GAQXz6G,WAAAA,CAAYkoD,EAAkBkyD,GAP9Bj6G,KAAA2zE,cAAgB,CAAC,KAIjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAGb,MAAM7vC,EAAwB,IAAIn7C,MAAMqkD,EAAO/lD,QAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIg8C,EAAY78C,OAAQa,IACtCg8C,EAAYh8C,GAAKklD,EAAOkyD,EAAOp3G,IAIjC,GAFA7C,KAAK6+C,YAAcA,EACnB7+C,KAAKwF,KAAOq5C,EAAY78C,OACpBhC,KAAKwF,KAAO,EACd,MAAM5D,MACF,6BAA6B5B,KAAKwF,8BAExC,MAAMnE,EAAQ05F,GAAkB/6F,KAAKwF,MAE/B+0G,EAAcrS,GAAe,KAAMloG,KAAKwF,MACxCg1G,EAAgB,IAAI92G,MAAM1D,KAAKwF,MACrC,IAAK,IAAI3C,EAAI,EAAGA,EAAIo3G,EAAOj4G,OAAQa,IACjC23G,EAAcP,EAAOp3G,IAAM03G,EAAY13G,GAEzC,MAAM6lG,EAAY,QAAQ8R,EAAcn1G,OAAO,GAAGuG,UAC5C6uG,EACF,KAAKF,EAAYv6G,KAAKwF,KAAO,QAAQq5C,EAAY7+C,KAAKwF,KAAO,KAC3Dk1G,EAAO,mBAAmBF,EAAc5uG,YAAY88F,KAE1D1oG,KAAK+uF,SAAW,8BAEZ1tF,+EAEYq5G,gBACTD,6BACWC,wBAEZH,EAAYv6G,KAAKwF,KAAO,mBACrB+0G,EAAYv6G,KAAKwF,KAAO,QAAQq5C,EAAY7+C,KAAKwF,KAAO,8BAC/Ck1G,kBACTD,+BACWC,+DAMtB;;;;;;;;;;;;;;;;GC9CI,SAAUnV,GACZhjG,EAAeklC,EAAgB3nC,GACjC,MAAM4oF,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAI2vG,GAAuB/3G,EAAEnB,MAAOqmC,GACpC,IAAIuyE,GAAiBz3G,EAAEnB,MAAOqmC,GAClC,OAAO3nC,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPM,SAAUsB,GACZktB,GACF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAE3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIouC,SAAEA,GAAY/sB,EAEzB,OCLI,SACFrkB,EAAegD,EAAuBouC,EACtC7zC,GACF,MAAM+mD,EAAmBthD,EAEnB2pC,EAAQ3sC,EAAEnB,MAAMY,OAEhB24G,EAAW1iG,EAAoB4uC,EAAkBtkD,EAAEnB,OACzD,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GACrD2rE,EAAuC,MAAhBD,EAE7B,IAAIE,EAAWv4G,EACXs4G,IACFC,EAAWvV,GAAchjG,EAAGq4G,EAAc96G,GAE1CmG,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,IAGpD2pC,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAO6rE,EAAa7W,GAChBrrB,GAAuCiiC,EAAS15G,MAAO6E,GAE3D,IAAI4pC,EAAWkrE,EACXpnE,IAEF9D,EAAWgpC,GAAkCkiC,EAAaJ,IAG5D,MAAMtkC,EAASp+D,EAAmBisF,GAG5B8W,EAAgB7hE,GAClB,CAACp/B,OAAQ,CAACxX,EAAGu4G,GAAWl0F,MAAO,CAACxlB,MAAO,CAH7B6W,EAAmB1V,EAAEnB,OACTi1E,EAE6BA,IAAUv2E,YAI3Dm7G,EAAU1yG,GAAOyyG,EAFPr6F,GAAWpe,EAAElB,OAEkB,MAAOvB,GAChD+nB,EACFsxB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUr0F,MAAO,CAACxlB,MAAOyuC,GAAW/vC,YAQ7D,OANAA,EAAQmuG,8BAA8B+M,GACtCl7G,EAAQmuG,8BAA8BgN,GAClCJ,GACF/6G,EAAQmuG,8BAA8B6M,GAGjCjzF,CACT,CD3CSqzF,CAAQ34G,EAAGgD,EAAMouC,EAAU7zC,EACpC,CAEO,MAAMq7G,GAA0B,CACrCx5G,WAAYuT,GACZ2B,YAAa,QACb+Q,WAAYjlB;;;;;;;;;;;;;;;;GEZR,SAAU4kC,GAAU1X,GAKxB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACN0tB,KAACA,GAAQ7gB,EACTivF,EAAe/1G,EAEfovC,EAAQ3sC,EAAEnB,MAAMY,OAEhBoD,EAAqB,IAAI1B,MAAMwrC,GACrC,IAAK,IAAIrsC,EAAI,EAAGA,EAAIuC,EAASpD,OAAQa,IACnCuC,EAASvC,GAAKN,EAAEnB,MAAMqmC,EAAK5kC,IAG7B,IAAIglB,EACJ,GAAIguF,EAAaxF,mBAAmB,CAAC9tG,IAAK,CACxC,MACMpB,EADW00G,EAAahW,QAAQz/F,IAAImC,EAAElC,QACpBc,OAClBuvG,EAAY0K,GAAaj6G,EAAQoB,EAAEnB,MAAOmB,EAAElB,MAAOomC,EAAMriC,GAE/DyiB,EAAMguF,EAAajF,eAAexrG,EAAU7C,EAAElB,OAC9Bw0G,EAAahW,QAAQz/F,IAAIynB,EAAIxnB,QACrCc,OAASuvG,OAEjB7oF,EAAM09E,GAAchjG,EAAGklC,EAAMouE,GAE/B,OAAOhuF,CACT,CAEO,MAAMwzF,GAAgC,CAC3C15G,WAAYoU,GACZc,YAAa,QACb+Q,WAAY2f,IC5BD+zE,GAA8B;;;;;;;;;;;;;;;;GAcrC,SAAUC,IAAgBh4G,EAC9BA,EAACmV,EACDA,EAACouB,WACDA,EAAUC,WACVA,EAAUjnC,QACVA,EAAO0lD,KACPA,EAAO,KAAIwb,uBACXA,EAAyB,KAAIC,eAC7BA,EAAiB,EAACP,WAClBA,EAAa,OAEb,MAAM0/B,EAAQ78F,EAAEnC,MAAMY,OAChBq+F,EAAQ3nF,EAAEtX,MAAMY,OAEhBogE,EAAct7B,EAAavjC,EAAEnC,MAAMg/F,EAAQ,GAAK78F,EAAEnC,MAAMg/F,EAAQ,GAChE/9B,EAAct7B,EAAaruB,EAAEtX,MAAMi/F,EAAQ,GAAK3nF,EAAEtX,MAAMi/F,EAAQ,GAEhE/9B,EAAcx7B,EAAavjC,EAAEnC,MAAMg/F,EAAQ,GAAK78F,EAAEnC,MAAMg/F,EAAQ,GAChE79B,EAAcx7B,EAAaruB,EAAEtX,MAAMi/F,EAAQ,GAAK3nF,EAAEtX,MAAMi/F,EAAQ,GAEhE79B,EAAaj/D,EAAEnC,MAAMiE,MAAM,GAAI,GAC/Bo9D,EAAa/pD,EAAEtX,MAAMiE,MAAM,GAAI,GAE/Bq9D,EAAYzqD,EAAmBuqD,GAC/BG,EAAY1qD,EAAmBwqD,GAKrCxqD,EACImoF,GAAS,GAAKC,GAAS,IAHvB39B,IAAcC,GAA2B,IAAdD,GAAiC,IAAdC,IAI9C,IAEI,uJAAwBH,WAAoBC,QAEpD,MAEM5yB,GADF6yB,EAAYC,EAAYp/D,EAAEnC,MAAMiE,MAAM,GAAI,GAAKqT,EAAEtX,MAAMiE,MAAM,GAAI,IAClCM,OAAO,CAAC28D,EAAaC,IAExDtqD,EACImqD,IAAgBC,GAChB,IAAM,kCAAkCD,WACjCC,6BAAuC9+D,EAAEnC,aACzCsX,EAAEtX,wBAAwB0lC,oBACVC,kBAE3B,MAAMy0E,EAAqC10E,EACvC,CAAC47B,EAAWN,EAAaE,GACzB,CAACI,EAAWJ,EAAaF,GACvBq5C,EAAqC10E,EACvC,CAAC47B,EAAWJ,EAAaF,GACzB,CAACM,EAAWN,EAAaE,GAGvBm5C,EAAMviE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGgB,GAAIzD,UAAS8mB,MAAO,CAACxlB,MAAOo6G,KACvDG,EAAMxiE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGmW,GAAI5Y,UAAS8mB,MAAO,CAACxlB,MAAOq6G,KAEvDG,EAA8B,CAACF,EAAKC,GAEpCjwE,EAAWvpC,KAAKK,IAAIkgE,EAAWC,GAC/Bs0C,EAAYnwE,EAAa40E,EAAIt6G,MAAM,GAAKs6G,EAAIt6G,MAAM,GAElDy6G,EAAkB,MAARr2D,EACVs2D,EAAsD,MAA1B96C,EAC5B+6C,EAAmC,cAAfr7C,EACpBs7C,EAAgC,MAAdt7C,EACpBg2C,GAA6Bh2C,GAAY,GACzC,KAGJ,IAAI74C,EAIJ,IAAqB,IAAhBy6C,GAAqC,IAAhBC,IACtB00C,EAAYqE,KAAoD,KAP3CO,GAAWC,GAChCC,GAAwC,MAAnBC,GAMkD,CACzE,IAAIC,EAAOP,EACPQ,EAAOP,EACP70E,IACFm1E,EAAO10E,GAAU,CAACxtB,OAAQ,CAACxX,EAAGm5G,GAAM57G,UAAS8mB,MAAO,CAAC6gB,KAAM,CAAC,EAAG,EAAG,MAClEm0E,EAAc/3G,KAAKo4G,IAEjBl1E,IACFm1E,EAAO30E,GAAU,CAACxtB,OAAQ,CAACxX,EAAGo5G,GAAM77G,UAAS8mB,MAAO,CAAC6gB,KAAM,CAAC,EAAG,EAAG,MAClEm0E,EAAc/3G,KAAKq4G,IAGrB,MACMC,EAAiC,IAAhB55C,EAEvB,IAAI65C,EAASH,EAH0B,IAAhB15C,IAKrB65C,EAASjjE,GAAQ,CACfp/B,OAAQ,CAACxX,EAAG05G,GACZn8G,UACA8mB,MAAO,CAACxlB,MAAO,CAACsqC,EAAUurE,EAAW,MAGvC2E,EAAc/3G,KAAKu4G,IAGrB,MAAM72G,EAAuB,IAAhBg9D,EAAoB,EAAI,EAErC,IAAI85C,EAASH,EACTC,IACFE,EAASljE,GAAQ,CACfp/B,OAAQ,CAACxX,EAAG25G,GACZp8G,UACA8mB,MAAO,CAACxlB,MAAO,CAACsqC,EAAU,EAAGurE,MAG/B2E,EAAc/3G,KAAKw4G,IAGrB,MAAMh0E,EAAU4vE,GAAS,CAACl+F,OAAQ,CAACxW,EAAG64G,EAAQ1jG,EAAG2jG,GAASv8G,YAC1D+nB,EAAMllB,GAAI,CAACoX,OAAQ,CAACxX,EAAG8lC,GAAUvoC,UAAS8mB,MAAO,CAACrhB,OAAMouC,UAAU,KAClEioE,EAAc/3G,KAAKwkC,OACd,CACL,MAAMhnC,EAAQmf,GAAWjd,EAAElC,MAAOqX,EAAErX,OAE9BqnF,EAAU,IAAImuB,GAChB2E,EAAUC,EAAU,CAAC/vE,EAAU42B,EAAaC,GAAcz7B,EAC1DC,EAAY80E,EAASG,EAAiBF,EACtCC,GAEEhiG,EAAuB,CAAC2hG,EAAKC,GAOnC,GANY,MAARn2D,GACFzrC,EAAOlW,KAAK2hD,GAEVs2D,GACF/hG,EAAOlW,KAAKm9D,GAEV+6C,EAAmB,CACrB,MAAMO,EAAkBx8G,EAAQ8wG,eAC5B,GAAI,UACJ34F,GAAuBgpD,EAAmC,YAC9DlnD,EAAOlW,KAAKy4G,GACZV,EAAc/3G,KAAKy4G,GAGrBz0F,EAAM/nB,EAAQuuG,gBAAgB3lB,EAAS3uE,EAAQ1Y,GAGjD,MAAMk7G,EACFpjE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGslB,GAAM/nB,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KACvD+rE,EAAc/3G,KAAKgkB,GACnB,IAAK,MAAMhlB,KAAK+4G,EACd97G,EAAQmuG,8BAA8BprG,GAExC,OAAO05G,CACT;;;;;;;;;;;;;;;;GCvJO,MAAMC,GAAmC,CAC9C76G,WAAY4U,GACZM,YAAa,QACb+Q,WAzBI,SAAuBiI,GAK3B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtsB,EAACA,EAACmV,EAAEA,EAAC8sC,KAAEA,EAAIwb,uBAAEA,GAA0BjnD,GACvC+sB,WAACA,EAAUC,WAAEA,EAAU25B,WAAEA,EAAUO,eAAEA,GAAkBr6C,EAE7D,OAAO20F,GAAgB,CACrBh4G,IACAmV,IACAouB,aACAC,aACAjnC,UACA0lD,OACAwb,yBACAC,iBACAP,cAEJ,GClBM0rC,GAAM;;;;;;;;;;;;;;;;GAwBL,MAAMqQ,GAA0B,CACrC96G,WAAYuL,EACZ2J,YAAa,QACb+Q,WAzBI,SAAciI,GAElB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAIZ,GAAIja,EAAQuwG,mBAAmB,CAAC9tG,KAAmB,cAAZA,EAAElB,MAAuB,CAC9D,MAAM00G,EAAQj2G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QAC9BqwG,EAAYhJ,GAAiBqO,EAAM50G,QACzC,OAAOrB,EAAQ8wG,eAAeruG,EAAEnB,MAAOmB,EAAElB,MAAOqvG,GAGlD,IAAIhoB,EAMJ,OAJEA,EADEv8E,IAAMxB,QAAQ,+BACN,IAAI8hG,GAAqBlqG,EAAEnB,MAAOgrG,IAElC,IAAIJ,GAAezpG,EAAEnB,MAAOgrG,IAEjCtsG,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD,GCjBa6xC,GAAOwiE,GAAgB,CAACzJ,UAPxBC,GAAoB,sEASpBwQ,GAA2B,CACtC/6G,WAAYwL,GACZ0J,YAAa,QACb+Q,WAAYsrB,ICPDE,GAAQsiE,GAAgB,CAACzJ,UAJxBC,GAAoB,qEAMrByQ,GAA4B,CACvCh7G,WAAYyL,GACZyJ,YAAa,QACb+Q,WAAYwrB,ICVRwpE,GAAM,gBAECC,GAAgB7G,GAAiB,CAC5C/J,UAAW2Q,GACXjH,gBAAiBiH,GACjB3G,iBAAiB,EACjBL,cAAekH,KAGJC,GAA0B,CACrCp7G,WAAY0L,GACZwJ,YAAa,QACb+Q,WAAYi1F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfR,MAAOG,GAKXn9G,WAAAA,CAAYg/C,EAAuBo3B,GAHnCj2E,KAAA6+C,YAAwB,GAItB7+C,KAAK6+C,YAAcA,EACnB7+C,KAAK2zE,cAAgBsC,EAAOxwE,KAAI,CAACikB,EAAG7mB,IAAM,IAAIA,MAE9C,MAAMo6G,EAAqB,GAE3Bj9G,KAAK2zE,cAActsE,SAAQ2X,IACzBi+F,EAASp5G,KAAK,UAAUmb,UAAiBA,kBAAyB,IAIpE,MAAMk+F,EAAYl9G,KAAK2zE,cACAluE,KAAIuZ,GACI,IAAIA,MAEZpT,KAAK,OAE5B5L,KAAK+uF,SAAW,kCAEVkuB,EAASrxG,KAAK,2CAECsxG,+CAIvB;;;;;;;;;;;;;;;;GC9BI,MAAOC,GAOXt9G,WAAAA,CAAYg/C,EAAuBo3B,GALnCj2E,KAAA6+C,YAAwB,GAExB7+C,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAGb1uF,KAAK6+C,YAAcA,EACnB7+C,KAAK2zE,cAAgBsC,EAAOxwE,KAAI,CAACikB,EAAG7mB,IAAM,IAAIA,MAE9C,MAAMo6G,EAAqB,GAE3Bj9G,KAAK2zE,cAActsE,SAAQ2X,IACzBi+F,EAASp5G,KAAK,SAASmb,UAAiBA,kBAAyB,IAInE,MAAMk+F,EAAYl9G,KAAK2zE,cACAluE,KAAIuZ,GACI,IAAIA,MAEZpT,KAAK,OAE5B5L,KAAK+uF,SAAW,kCAEVkuB,EAASrxG,KAAK,0CAEAsxG,+CAItB;;;;;;;;;;;;;;;;GCCK,MAAME,GAA2B,CACtCz7G,WAAY2L,GACZuJ,YAAa,QACb+Q,WA/BI,SAAU0rB,EAAKzjB,GAEnB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,EAEpBvH,EAAUvO,EAChB,GAAuB,IAAnBuO,EAAQtmB,OACV,OAAO4yG,GAAS,CAAC76F,OAAQ,CAACxX,EAAG+lB,EAAQ,IAAKxoB,YAI5C,GAAIwoB,EAAQtmB,OAASmK,IAAM/L,IAAI,gCAAiC,CAC9D,MAAMi9G,EAAWl7G,KAAKiH,MAAMkf,EAAQtmB,OAAS,GACvCs7G,EAAWhqE,EAAK,CAACv5B,OAAQuO,EAAQjjB,MAAM,EAAGg4G,GAAWv9G,YACrDy9G,EAAYjqE,EAAK,CAACv5B,OAAQuO,EAAQjjB,MAAMg4G,GAAWv9G,YACzD,OAAOwzC,EAAK,CAACv5B,OAAQ,CAACujG,EAAUC,GAAYz9G,YAG9C,MAAMuB,EACFinB,EAAQ7iB,KAAI+F,GAAKA,EAAEnK,QAAOkH,QAAO,CAACi1G,EAAIC,IAAOj9F,GAAWg9F,EAAIC,KAC1DxnC,EAAS3tD,EAAQ7iB,KAAI+F,GAAKA,EAAEpK,QAG5BsnF,EADcv8E,IAAMxB,QAAQ,cAE9B,IAAIwyG,GAAkB70F,EAAQ,GAAGlnB,MAAO60E,GACxC,IAAI+mC,GAAY10F,EAAQ,GAAGlnB,MAAO60E,GACtC,OAAOn2E,EAAQuuG,gBAAgB3lB,EAASpgE,EAASjnB,EACnD;;;;;;;;;;;;;;;;GCoBO,MAAMq8G,GAA0B,CACrC/7G,WAAY4L,GACZsJ,YAAa,QACb+Q,WAhDI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIouC,SAAEA,GAAY/sB,EAEnBsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhB24G,EAAW1iG,EAAoB1S,EAAMhD,EAAEnB,OAC7C,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GAC3D,IAAIyuE,EAAYp7G,EACI,MAAhBq4G,IACF+C,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KAC3D30G,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,IAGpD2pC,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAOW,EAAUq0D,GACbrrB,GAAuC8kC,EAAUv8G,MAAO6E,GAGtD23G,EACFzkE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGo7G,GAAY79G,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAHhD6W,EAAmBisF,OAI5B+W,EAAU1yG,GAAOq1G,EAAKA,EAAIv8G,MAAO,MAAOvB,GAE9C,IAAIomB,EACJ,GAAIytB,EAAU,CAEZztB,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MADrCy3E,GAAkChpC,EAAU8qE,WAG7Dz0F,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAU/D,OAPA/vC,EAAQmuG,8BAA8B2P,GACtC99G,EAAQmuG,8BAA8BgN,GAElB,MAAhBL,GACF96G,EAAQmuG,8BAA8B0P,GAGjCz3F,CACT;;;;;;;;;;;;;;;;GCCO,MAAM23F,GAA0B,CACrCl8G,WAAY6L,GACZqJ,YAAa,QACb+Q,WAhDI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIouC,SAAEA,GAAY/sB,EAEnBsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhB24G,EAAW1iG,EAAoB1S,EAAMhD,EAAEnB,OAC7C,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GAC3D,IAAIyuE,EAAYp7G,EACI,MAAhBq4G,IACF+C,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KAC3D30G,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,IAGpD2pC,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAOW,EAAUq0D,GACbrrB,GAAuC8kC,EAAUv8G,MAAO6E,GAGtD23G,EACFzkE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGo7G,GAAY79G,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAHhD6W,EAAmBisF,OAI5B+W,EAAU1yG,GAAOq1G,EAAKA,EAAIv8G,MAAO,MAAOvB,GAE9C,IAAIomB,EACJ,GAAIytB,EAAU,CAEZztB,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MADrCy3E,GAAkChpC,EAAU8qE,WAG7Dz0F,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAU/D,OAPA/vC,EAAQmuG,8BAA8B2P,GACtC99G,EAAQmuG,8BAA8BgN,GAElB,MAAhBL,GACF96G,EAAQmuG,8BAA8B0P,GAGjCz3F,CACT;;;;;;;;;;;;;;;;GC/CM,MAAO43F,GAKXj+G,WAAAA,CACIi5G,EAAqCtpF,EACrCuuF,GANJ/9G,KAAA2zE,cAAgB,CAAC,KAOf,MAAMqlC,WAACA,EAAUjjE,UAAEA,EAASslD,QAAEA,GAAWyd,EACpCiF,GACH/9G,KAAK2zE,cAAc9vE,KAAK,gBAE1B7D,KAAK6+C,YAAc,CAAC9I,EAAWslD,GAC/B,MAAM2iB,EAAiB,QAAPxuF,EAAgB,IAAM,IAChCyuF,EAAeF,EACjB,gBACA,+CAEJ/9G,KAAK+uF,SAAW,sKAKciqB,6HAKJA,oCACNiF,gFAEED,iKAQxB;;;;;;;;;;;;;;;;GCpCI,MAAOE,GAOXr+G,WAAAA,CACIuB,EAAiB43G,EAAoBxpF,EACrCuuF,GARJ/9G,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAKbz2E,EACI7W,EAAMY,OAAS,GACf,IAAM,aACFwtB,EAAGkrE,OAAO,GAAGC,cACbnrE,EAAGnqB,MAAM,+CACjB,MAAMgxE,EAASj1E,EAAMA,EAAMY,OAAS,GAC9Bq5F,EAAUl5F,KAAKkC,KAAKgyE,EAAS2iC,GACnCh5G,KAAK6+C,YAAcz9C,EAAMiE,MAAM,GAAI,GAC/Bg2F,EAAU,GACZr7F,KAAK6+C,YAAYh7C,KAAKw3F,GAEnB0iB,GACH/9G,KAAK2zE,cAAc9vE,KAAK,gBAE1B,MAAMgsC,EAAW7vC,KAAK6+C,YAChBr5C,EAAOqqC,EAAS7tC,OAChBX,EAAQ05F,GAAkBv1F,GAC1BmoF,EAASwa,GAAY,SAAU3iG,GAErC,IAAI24G,EACAC,EACJ,GAAgB,IAAZ/iB,EAAe,CACjB+iB,EAAa54G,EAAO,EACpB,MAAM64G,EAAiBtjB,GAAkBqjB,GACzCD,EAAiB,aACbE,kBAA+BA,KAAkB1wB,EAAO/hF,0BACtD+hF,EAAOnoF,EAAO,gBAChB64G,kBAA+BA,KAAkB1wB,EAAO/hF,0BACtD+hF,EAAOnoF,EAAO,gBAChB64G,kBAA+BA,KAAkB1wB,EAAO/hF,0BACtD+hF,EAAOnoF,EAAO,gBAChB64G,kBAA+BA,KAAkB1wB,EAAO/hF,0BACtD+hF,EAAOnoF,EAAO,WAEpB44G,EAAa54G,EACb24G,EAAiB,aACb98G,qCACEssF,EAAOnoF,EAAO,gBAChBnE,qCACEssF,EAAOnoF,EAAO,gBAChBnE,qCACEssF,EAAOnoF,EAAO,gBAChBnE,qCACEssF,EAAOnoF,EAAO,MAEtB,MAAM6iG,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKhjG,MAAM,EAAG+4G,GACnDE,EAAY,IAAMjW,EAAS+V,EAAa,GACxCG,EAAclW,EAAS5iG,KAAIlD,GAAK,OAASA,IACzCi8G,EACFrW,GAAY,aAAciW,EAAa,GAAGz4G,OAAO,WAC/C84G,EACFtW,GAAY,aAAciW,EAAa,GAAGz4G,OAAO,WAC/C+4G,EACFvW,GAAY,aAAciW,EAAa,GAAGz4G,OAAO,WAC/Cg5G,EACFxW,GAAY,aAAciW,EAAa,GAAGz4G,OAAO,WAE/Cq4G,EAAiB,QAAPxuF,EAAgB,cAAgB,WAC1CovF,EAAoBb,EAAY,GAAK,yDACOS,EAAW5yG,iEACX6yG,EAAW7yG,iEACX8yG,EAAW9yG,iEACX+yG,EAAW/yG,aAEvDizG,EAAa,kCACGL,EAAW5yG,kDACE6yG,EAAW7yG,uDACX8yG,EAAW9yG,qEACG+yG,EAAW/yG,gBAEtDkzG,EAAgCf,EAAY,GAAK,wCACtBQ,EAAY3yG,wDACLy8F,EAASz8F,4DACJy8F,EAAShjG,OAAO,GAAGuG,qBAGhE5L,KAAK+uF,SAAW,6BACMwvB,EAAY3yG,6CACLy8F,EAASz8F,iDACJy8F,EAAShjG,OAAO,GAAGuG,6BAEjDkzG,mCAEEz9G,4DACkBssF,EAAOnoF,EAAO,QAAQqqC,EAASrqC,EAAO,GAAK,iCAC3CmoF,EAAOnoF,EAAO,QAAQqqC,EAASrqC,EAAO,GAAK,eAC7D24G,6CAC+BG,gBAAwBA,2BAC3CA,gBAAwBA,QAAgBtF,sGAGnC6F,qCAEG7F,mDAElB4F,iCACiBC,mGAGVb,0dAYjB;;;;;;;;;;;;;;;;GCxHF,SAASe,GACLj/G,EAA2ByC,EAAeg3G,EAC1CyF,EAA2B,MAC7B,IAAIjpE,EAAYxzC,EAAEnB,MAAM,GACpBi1E,EAAS9zE,EAAEnB,MAAM,GACD,MAAhB49G,IACFjpE,EAAYipE,EAAa59G,MAAM,GAC/Bi1E,EAAS2oC,EAAa59G,MAAM,IAE9B,MAAM43G,EAAangC,GAAsCxC,GACnDyiC,EACF,CAACE,aAAY3iC,SAAQtgC,YAAWslD,QAASl5F,KAAKkC,KAAKgyE,EAAS2iC,IAC1DtwB,EACF,IAAIo1B,GAAiBhF,EAAYS,EAA4B,MAAhByF,GAC3CjlG,EAAS,CAACxX,GACI,MAAhBy8G,GACFjlG,EAAOlW,KAAKm7G,GAEd,MAAM7kG,EAASra,EAAQuuG,gBAAgB3lB,EAAS3uE,EAAQ,SAExD,GAAwB,IAApBI,EAAO/Y,MAAM,GACf,OAAO+Y,EAET,MAAM5a,EAASw/G,GAAUj/G,EAASyC,EAAGg3G,EAAYp/F,GAEjD,OADAra,EAAQmuG,8BAA8B9zF,GAC/B5a,CACT,CAEA,SAAS0/G,GACLn/G,EAA2ByC,EAAeg3G,EAC1CyF,EAA2B,MAC7B,MAAM7pE,EAA0B,MAAhB6pE,EAAuBA,EAAa59G,MAAQmB,EAAEnB,MAExD43G,EAAangC,GADJ1jC,EAAQA,EAAQnzC,OAAS,IAElC0mF,EAAU,IAAIw1B,GAChB/oE,EAAS6jE,EAAYO,EAA4B,MAAhByF,GAC/BjlG,EAAyB,MAAhBilG,EAAuB,CAACz8G,GAAK,CAACA,EAAGy8G,GAC1C7kG,EAASra,EAAQuuG,gBAAgB3lB,EAAS3uE,EAAQ,SACxD,GAAII,EAAO/Y,MAAMY,SAAWO,EAAEnB,MAAMY,OAAQ,CAC1C,MAAMzC,EAAS0/G,GAAgBn/G,EAASyC,EAAGg3G,EAAYp/F,GAEvD,OADAra,EAAQmuG,8BAA8B9zF,GAC/B5a,EAET,OAAO4a,CACT,CAEM,SAAU+kG,GACZp/G,EAA2ByC,EAAegD,EAC1Cg0G,GACF,MAAMtzG,EAAO,CAACV,GAId,GAHAszE,GACI,MAAQ0gC,EAAW7e,OAAO,GAAGC,cAAgB4e,EAAWl0G,MAAM,GAAIY,EAClE1D,EAAEnB,MAAMY,SACPmK,IAAMxB,QAAQ,sBAAwBpI,EAAEnB,MAAMY,QAAU,EAAG,CAC9D,MAAMm9G,EAA0B,IACzBtvE,EAAUq0D,GACbrrB,GAAuCt2E,EAAEnB,MAAO6E,GAC9CowE,EAASp+D,EAAmBisF,GAC5B0Z,EAAMzkE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAAGi1E,MAC/D8oC,EAAwBt7G,KAAK+5G,GAE7B,MAAM3C,EAAU8D,GAAUj/G,EAAS89G,EAAKrE,GACxC4F,EAAwBt7G,KAAKo3G,GAC7B,MAAMtkC,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAI3D,OAFAsvE,EAAwB93G,SACpBmE,GAAK1L,EAAQmuG,8BAA8BziG,KACxCmrE,EAET,OAAOsoC,GAAgBn/G,EAASyC,EAAGg3G,EACrC;;;;;;;;;;;;;;;;GC7CO,MAAM6F,GAA6B,CACxCz9G,WAAY8L,GACZoJ,YAAa,QACb+Q,WA7BI,SACFiI,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,GAAQqhB,EAEf,IAAI3gB,EAAOgS,EAAoB1S,EAAMhD,EAAEnB,OACvC,MAAMw5G,EAAe/hC,GAAgC5yE,EAAM1D,EAAEnB,MAAMY,QACnE,IAAIg7B,EAAKz6B,EACT,MAAM48G,EAA0B,GACZ,MAAhBvE,IACF59E,EAAKuK,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KACpDuE,EAAwBt7G,KAAKm5B,GAC7B/2B,EAAO4yE,GAA8B5yE,EAAKjE,OAAQg7B,EAAG57B,MAAMY,SAG7D62E,GAAwC,SAAU,CAAC5yE,EAAK,IAAK+2B,EAAG57B,MAAMY,QACtE,MAAM6lB,EAAMq3F,GAAgBp/G,EAASk9B,EAAI/2B,EAAK,GAAI,OAIlD,OAFAk5G,EAAwB93G,SACpBmE,GAAK1L,EAAQmuG,8BAA8BziG,KACxCqc,CACT;;;;;;;;;;;;;;;;GCEO,MAAMw3F,GAA6B,CACxC19G,WAAY+L,GACZmJ,YAAa,QACb+Q,WA9BI,SACFiI,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,GAAQqhB,EAEf,IAAI3gB,EAAOgS,EAAoB1S,EAAMhD,EAAEnB,OACvC,MAAMw5G,EAAe/hC,GAAgC5yE,EAAM1D,EAAEnB,MAAMY,QACnE,IAAIg7B,EAAKz6B,EACT,MAAM48G,EAA0B,GACZ,MAAhBvE,IACF59E,EAAKuK,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KACpDuE,EAAwBt7G,KAAKm5B,GAC7B/2B,EAAO4yE,GAA8B5yE,EAAKjE,OAAQg7B,EAAG57B,MAAMY,SAG7D62E,GAAwC,SAAU,CAAC5yE,EAAK,IAAK+2B,EAAG57B,MAAMY,QAEtE,MAAM6lB,EAAMq3F,GAAgBp/G,EAASk9B,EAAI/2B,EAAK,GAAI,OAIlD,OAFAk5G,EAAwB93G,SACpBmE,GAAK1L,EAAQmuG,8BAA8BziG,KACxCqc,CACT,GCnBaqsB,GAAOwhE,GAAgB,CAACzJ,UAPxBC,GAAoB,sEASpBoT,GAA2B,CACtC39G,WAAYgM,GACZkJ,YAAa,QACb+Q,WAAYssB,ICVDE,GAAQshE,GAAgB,CAACzJ,UAFxBC,GAAoB,uCAIrBqT,GAA4B,CACvC59G,WAAYiM,GACZiJ,YAAa,QACb+Q,WAAYwsB,ICHDE,GAAOohE,GAAgB,CAACzJ,UAJxBC,GAAoB,0BAMpBsT,GAA2B,CACtC79G,WAAYkM,GACZgJ,YAAa,QACb+Q,WAAY0sB,ICGDE,GACTwhE,GAAiB,CAAC/J,UAbRwT,mFAa0B9J,gBATnB,iTAWR+J,GAA4B,CACvC/9G,WAAYoM,GACZ8I,YAAa,QACb+Q,WAAY4sB,ICdDE,GAAQghE,GAAgB,CAACzJ,UAJxBC,GAAoB,8FAMrByT,GAA4B,CACvCh+G,WAAYmM,GACZ+I,YAAa,QACb+Q,WAAY8sB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXR,MAAOkrE,GAKX//G,WAAAA,CACIutD,EAAmCyyD,EACnCC,EAA2BC,GAAmB,EAC9Cz2D,GAAsB,GACxB,GARFtpD,KAAA2zE,cAAgB,CAAC,KAQE,QAAbksC,GAAsBC,EACxB,MAAM,IAAIl+G,MAAM,8CAGlB,MAAM2zC,EAAc6X,EAAS7X,YACvBa,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBC,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhCspE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KACjCh3C,KAAK6+C,YAAcuO,EAASvd,SAE5B,MAAMqwE,EAAyB,QAAbL,EACZM,EAA0B,cAAc/yD,EAASpX,oBACnDoX,EAASnX,mBAAmBmX,EAASlX,iBACnCkqE,EACF,SAAShzD,EAASnX,mBAAmBmX,EAASlX,iBAElD,IAAIsjE,EAAsB,MAM1B,GALK0G,IAEH1G,EAAsB,gBAGpBsG,EAAkB,CACpB,MAAMrG,EAAY,KAyDlB,YAvDAz5G,KAAK+uF,SAAW,yCACgB34C,MAAiBC,yCACpB2pE,MAAWC,qiBAkBZzpE,2BACZF,gFAGY8W,EAASpX,4FAIPU,6BACZH,oFAGY6W,EAASnX,0WAUnBwjE,yIAIhBsG,EAAoBz2D,EAAsB62D,EACAC,EACvB,QAAQ1pE,0HAYjC,IAAIwvC,EAAc,GAAG25B,KAAYA,KAAYA,sEAE5B,QAAbA,IACF35B,EAAc,oBAGhB,MAAMm6B,EAAuD,EAA9Bl+G,KAAKiH,MAAMmsC,EAAc,GAClD+qE,EAA2B/qE,EAAc,EAEzC4jE,EAAgB,eACd+G,+HAORlgH,KAAK+uF,SAAW,uCACgB34C,MAAiBC,uCACpB2pE,MAAWC,gDACFzG,8KAMZpsD,EAASnX,igBAkBLujE,6FAIFhjE,yBACZF,4EAGY8W,EAASpX,sFAIPqqE,uDACK9pE,4HAIEA,sDACIA,sDACAA,wCAG/B4iE,mDAGkBkH,qBACa,IAA7BC,8NAQFnH,2BACsC,IAA7BmH,4HAGkB/pE,gHAK3B4iE,2BACsC,IAA7BmH,4HAGkB/pE,sDACIA,4EAI/B4iE,gDAGMjzB,oBAGlB,EAGI,MAAOq6B,GAKX1gH,WAAAA,CACIutD,EAAmCyyD,EACnCC,EAA2BC,GAAmB,EAC9Cz2D,GAAsB,GACxB,GARFtpD,KAAA2zE,cAAgB,CAAC,KAQE,QAAbksC,GAAsBC,EACxB,MAAM,IAAIl+G,MAAM,8CAGlB,MAAM2zC,EAAc6X,EAAS7X,YACvBwC,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2B,EAAgBoV,EAASpV,cACzB1B,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzB0B,EAAuBmV,EAASnV,qBAChCzB,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhC8pE,EAAWpzD,EAASzW,QAAQwB,MAC5B6nE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KACjCh3C,KAAK6+C,YAAcuO,EAASvd,SAE5B,MAAMqwE,EAAyB,QAAbL,EAElB,IAAIrG,EAAsB,MAM1B,GALK0G,IAEH1G,EAAsB,gBAGpBsG,EAAkB,CACpB,MAAMrG,EAAY,KAyElB,YAvEAz5G,KAAK+uF,SAAW,sDAEFh3C,MAAgB3B,MAAiBC,yCAClBmqE,MAAaR,MAAWC,qkBAkBzBhoE,2BACZD,gFAGYoV,EAAStV,2FAIPtB,6BACZF,oFAGY8W,EAASpX,kGAIPU,+BACZH,wFAGY6W,EAASnX,+XAUnBwjE,+IAIlBsG,EACKz2D,EACI,cAAc8D,EAAStV,mBACnBsV,EAASpX,oBAAoBoX,EAASnX,mBACtCmX,EAASlX,kBACb,UAAUkX,EAASpX,oBACfoX,EAASnX,mBAAmBmX,EAASlX,kBAC9C,QAAQM,OAA2BE,mCACpBA,6IAazB,IAAIwvC,EAAc,GAAG25B,KAAYA,KAAYA,sEAE5B,QAAbA,IACF35B,EAAc,oBAGhB,MAAMm6B,EAAuD,EAA9Bl+G,KAAKiH,MAAMmsC,EAAc,GAClD+qE,EAA2B/qE,EAAc,EAEzC4jE,EAAgB,eACd+G,+HAORlgH,KAAK+uF,SAAW,gDAEJh3C,MAAgB3B,MAAiBC,uCAChBmqE,MAAaR,MAAWC,gDACfzG,uLAMZpsD,EAASnX,okBAmBLujE,6FAIFvhE,yBACZD,4EAGYoV,EAAStV,qFAIPtB,yBACdF,gFAGc8W,EAASpX,4FAIPqqE,yDACK9pE,2IAIMA,6DACIA,6DACAA,6CAGnC4iE,uDAGkBkH,uBACa,IAA7BC,iPAQFnH,6BACsC,IAA7BmH,2IAGsB/pE,yHAK/B4iE,6BACsC,IAA7BmH,2IAGsB/pE,6DACIA,mFAInC4iE,sDAGMjzB,+BAIpB;;;;;;;;;;;;;;;;GCpZK,MAAMu6B,GAA8B,CACzC9+G,WAAYqM,GACZ6I,YAAa,QACb+Q,WA9BI,SAAkBiI,GAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,EACZizE,GAAiBzqF,EAAG,WACpB,MAAM6yC,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,GAAmB3yB,EAGpD3O,EACI4gE,GAA4C7wE,EAH9B,IAId,IACI,wEAAeA,wBAEvB,MAAMolD,EAAWyrB,GACbt2E,EAAEnB,MAA2Cg0C,EAAYptC,EAR3C,EASHuU,EAAKg9B,GACpB,GAA6B,IAAzB6T,EAAS7X,aAA+C,IAA1B6X,EAAS9X,cACvCr9B,EAAiBm1C,EAASjY,QAASiY,EAASvd,UAC9C,OAAO+kE,GAAS,CAAC76F,OAAQ,CAACxX,KAAIzC,YAEhC,MAAM4gH,EAAiB,IAAId,GAAcxyD,EAAU,OAAO,GAC1D,OAAOttD,EAAQuuG,gBAAgBqS,EAAgB,CAACn+G,GAAI,UACtD;;;;;;;;;;;;;;;;GCVO,MAAMo+G,GAAgC,CAC3Ch/G,WAAYuM,GACZ2I,YAAa,QACb+Q,WApBI,SAAoBiI,GAKxB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNq7B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,EAAezE,WAAEA,GAAcluB,EAG1DwmC,EAAWyrB,GACbt2E,EAAEnB,MAAmDg0C,EAAYptC,EAHzB,CAAC,EAAG,EAAG,GAIpCuU,EAAKg9B,EAAiBzE,GAC/B4rE,EAAiB,IAAIH,GAAcnzD,EAAU,OAAO,GAC1D,OAAOttD,EAAQuuG,gBAAgBqS,EAAgB,CAACn+G,GAAI,UACtD;;;;;;;;;;;;;;;;GChBM,MAAOq+G,GAKX/gH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,MAKf3zE,KAAK6+C,YAAcuO,EAASjY,QAC5B,MAAMG,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBa,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBC,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhCspE,EAASxpE,EAAwB,EAAI4W,EAASzW,QAAQG,IACtDmpE,EAAUvpE,EAAuB,EAAI0W,EAASzW,QAAQK,KAEtD6pE,EAAgB,GAAKvrE,EAAeC,GAE1Cv1C,KAAK+uF,SAAW,oCACaixB,MAAWC,gDACFY,kdAcVrqE,yBACZF,uDAC4BF,6CAEZgX,EAASxW,6IAKXF,wBACfH,yDAC+BF,+CAEZ+W,EAASvW,6SAc7C,EAGI,MAAOiqE,GAKXjhH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,MAKf3zE,KAAK6+C,YAAcuO,EAASjY,QAC5B,MAAMO,EAAc0X,EAAS1X,YACvBJ,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBwC,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2B,EAAgBoV,EAASpV,cACzB1B,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzB0B,EAAuBmV,EAASnV,qBAChCzB,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhC8pE,EAAWvoE,EAAuB,EAAImV,EAASzW,QAAQwB,MACvD6nE,EAASxpE,EAAwB,EAAI4W,EAASzW,QAAQG,IACtDmpE,EAAUvpE,EAAuB,EAAI0W,EAASzW,QAAQK,KAEtD6pE,EAAgB,GAAKnrE,EAAcJ,EAAeC,GAExDv1C,KAAK+uF,SAAW,oCACayxB,MAAaR,MAAWC,gDACfY,wiBAiBV5oE,yBACZD,uDAC4BD,6CAEZqV,EAASlV,4IAKX1B,2BACZF,yDAC4BF,+CAEZgX,EAASxW,sKAMXF,6BACZH,2DAC4BF,iDAEZ+W,EAASvW,mVAe/C;;;;;;;;;;;;;;;;GCnIK,MAAMkqE,GAAoC,CAC/Cp/G,WAAYwM,GACZ0I,YAAa,QACb+Q,WArBI,SAAwBiI,GAK5B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAExL,MAAEA,GAASnB,EACdxX,EAAI2Y,GACJk6B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,GAAmB3yB,EAG9CwmC,EAAWyrB,GACbt2E,EAAEnB,MAAmDg0C,EAAYptC,EAHzB,CAAC,EAAG,EAAG,GAIpCuU,EAAKg9B,GACdynE,EAAyB,IAAIF,GAAyB1zD,GAC5D,OAAOttD,EAAQuuG,gBAAgB2S,EAAwB,CAACt6F,GAAKnkB,EAAElB,MACjE;;;;;;;;;;;;;;;;GCGO,MAAM4/G,GAAkC,CAC7Ct/G,WAAYsM,GACZ4I,YAAa,QACb+Q,WArBI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAExL,MAAEA,GAASnB,EACdxX,EAAI2Y,EACV8xE,GAAiB,CAACtmE,EAAIxL,GAAQ,eAC9B,MAAMk6B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,GAAOqK,EAE7BwmC,EAAWyrB,GACbt2E,EAAEnB,MAA2Cg0C,EAAYptC,EACzD,EAAmBuU,GACjBykG,EAAyB,IAAIJ,GAAyBxzD,GAC5D,OAAOttD,EAAQuuG,gBAAgB2S,EAAwB,CAACt6F,GAAKnkB,EAAElB,MACjE;;;;;;;;;;;;;;;;GCJO,MAAM6/G,GAAkC,CAC7Cv/G,WAAYyM,GACZyI,YAAa,QACb+Q,WAfI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtsB,EAACA,EAACmV,EAAEA,GAAKqB,GACT+sB,WAACA,EAAUC,WAAEA,GAAcngB,EAEjC,OAAO20F,GAAgB,CAACh4G,IAAGmV,IAAGouB,aAAYC,aAAYjnC,WACxD;;;;;;;;;;;;;;;;GCZM,MAAOqhH,GAKXthH,WAAAA,CACIwvC,EAAkB+xE,EAAqBC,EACvCC,EAA4BC,EAC5BzlE,GANJ97C,KAAA6+C,YAAwB,GAOtB7+C,KAAK2zE,cAAgB,CAAC,IAAK,OAAQ,YACnCkF,GAAwCxpC,EAAQ+xE,GAChDvoC,GAAwCxpC,EAAQgyE,GAEhD,IAAIG,EAAgB,MACD,MAAfF,IACFzoC,GAAwCxpC,EAAQiyE,GAChDthH,KAAK2zE,cAAc9vE,KAAK,UACxB29G,EAAgB,0BAGlB,IAAIC,EAAe,MACD,MAAdF,IACF1oC,GAAwCxpC,EAAQkyE,GAChDvhH,KAAK2zE,cAAc9vE,KAAK,SACxB49G,EAAe,yBAGjBzhH,KAAK6+C,YAAcxP,EACnBrvC,KAAK+uF,SAAW,uLAKKyyB,6BACDC,gEACmC3lE,yFAIzD;;;;;;;;;;;;;;;;GCvCI,MAAO4lE,GAOX7hH,WAAAA,CACIwvC,EAAkB+xE,EAAqBC,EACvCC,EAA4BC,EAC5BzlE,GANJ97C,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAMb1uF,KAAK2zE,cAAgB,CAAC,IAAK,OAAQ,YACnCkF,GAAwCxpC,EAAQ+xE,GAChDvoC,GAAwCxpC,EAAQgyE,GAEhD,IAAIG,EAAgB,YACD,MAAfF,IACFzoC,GAAwCxpC,EAAQiyE,GAChDthH,KAAK2zE,cAAc9vE,KAAK,UACxB29G,EAAgB,0BAGlB,IAAIC,EAAe,YACD,MAAdF,IACF1oC,GAAwCxpC,EAAQkyE,GAChDvhH,KAAK2zE,cAAc9vE,KAAK,SACxB49G,EAAe,yBAGjBzhH,KAAK6+C,YAAcxP,EACnBrvC,KAAK+uF,SAAW,gDAEIyyB,4BACDC,qMAMkC3lE,sEAKvD;;;;;;;;;;;;;;;;GCxCK,MAoDM6lE,GAAgC,CAC3ChgH,WAAYgP,GACZkG,YAAa,QACb+Q,WAnDiB8zB,EAAE3hC,SAAQja,UAAS8mB,YACpC,MAAMrkB,EAACA,EAACq5C,KAAEA,EAAIC,SAAEA,EAAQ3zC,OAAEA,EAAMqpB,MAAEA,GAASxX,EAE3C9B,EACI2jC,EAAKx6C,MAAMY,SAAW65C,EAASz6C,MAAMY,QACrC,IAAM,iFAEViW,EACc,MAAV/P,GAAkB0zC,EAAKx6C,MAAMY,SAAWkG,EAAO9G,MAAMY,QACrD,IAAM,+EAEViW,EACa,MAATsZ,GAAiBqqB,EAAKx6C,MAAMY,SAAWuvB,EAAMnwB,MAAMY,QACnD,IAAM,8EAGV,IAAI85C,gBAACA,GAAmBl1B,EACD,MAAnBk1B,IACFA,EAAkB,MAGpB,MAAM8lE,EAAc,CAACr/G,EAAGq5C,EAAMC,GAE9B,IAAIylE,EAAc,KACJ,MAAVp5G,IACFo5G,EAAcp5G,EAAO9G,MACrBwgH,EAAY/9G,KAAKqE,IAGnB,IAAIq5G,EAAa,KACJ,MAAThwF,IACFgwF,EAAahwF,EAAMnwB,MACnBwgH,EAAY/9G,KAAK0tB,IAGnB,MAAMm3D,EAAUv8E,IAAMxB,QAAQ,4BAC1B,IAAI+2G,GACAn/G,EAAEnB,MAAOw6C,EAAKx6C,MAAOy6C,EAASz6C,MAAOkgH,EAAaC,EAClDzlE,GACJ,IAAIqlE,GACA5+G,EAAEnB,MAAOw6C,EAAKx6C,MAAOy6C,EAASz6C,MAAOkgH,EAAaC,EAClDzlE,GAIR,OAFIh8C,EAAQuuG,gBAAgB3lB,EAASk5B,EAAaA,EAAY,GAAGvgH,MAEpD;;;;;;;;;;;;;;;;;ACpDT,MAAOwgH,GASXhiH,WAAAA,CAAYiiH,GARZ9hH,KAAA2zE,cAAgB,CAAC,UASf3zE,KAAK6+C,YAAcijE,EACnB9hH,KAAKwF,KAAOs8G,EAAS9/G,OAErB,MAAMX,EAAQ05F,GAAkB/6F,KAAKwF,MAC/Bu8G,EAAc,qBAAqB/hH,KAAKwF,SACxCojG,EA0CV,SAAmBpjG,GACjB,GAAa,IAATA,EACF,MAAO,YACF,GAAIA,GAAQ,EACjB,OAAOmoF,GAAOtoF,MAAM,EAAGG,GAAMC,KAAIlD,GAAK,aAAeA,IAAGqJ,KAAK,KAE7D,MAAMhK,MAAM,oBAAoB4D,yBAEpC;;;;;;;;;;;;;;;;GAlDyBw8G,CAAUhiH,KAAKwF,MAEpC,IAAIi+B,EAIJA,EAAO,aACDpiC,yBACAA,0CALWygH,EAASr8G,KAAI,CAACikB,EAAG7mB,IACzB,aAAa8qF,GAAO9qF,cAAcA,eAAe8qF,GAAO9qF,QAKlD+I,KAAK,gBAEpB5L,KAAK+uF,SAAW,WACZgzB,mCAEEt+E,kCACoBmlE,qBAG5B,CAEAqZ,kBAAAA,CAAmBn6G,GACjB,GAAIA,EAAM9F,SAAWhC,KAAKwF,KACxB,MAAM5D,MACF,aAAa5B,KAAKwF,wDACEsC,EAAM9F,WAEhC,MAAO,CAACmnG,EAAqBuJ,KACN,MAAjB1yG,KAAKkiH,WACPliH,KAAKkiH,SAAW/Y,EAAM9S,0BAA0Bqc,EAAc,SACzC,MAAjB1yG,KAAKkiH,WAMX/Y,EAAM/lB,GAAG++B,WAAWniH,KAAKkiH,SAAUp6G,EAAM,CAE7C,EAGF,MAAM6lF,GAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KCtDnC,MAAOy0B,GAWXviH,WAAAA,CAAYiiH,GAVZ9hH,KAAA2zE,cAAgB,CAAC,UACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EASb1uF,KAAK6+C,YAAcijE,EACnB9hH,KAAKwF,KAAOs8G,EAAS9/G,OAErB,MAAMX,EAAQ05F,GAAkB/6F,KAAKwF,MAC/BmoF,EAASwa,GAAY,SAAUnoG,KAAKwF,MACpC68G,EAAYla,GAAY,YAAanoG,KAAKwF,MAE1CkjG,EACY,IAAd1oG,KAAKwF,KAAa,YAAc,QAAQ68G,EAAUh9G,OAAO,GAAGuG,UAC1D02G,EACF,wBAAwBD,EAAUz2G,YAAY88F,KAC5C6Z,EAAW,sBACFD,mBACL30B,EAAO3tF,KAAKwF,KAAO,QAAQs8G,EAAS9hH,KAAKwF,KAAO,oBAClD68G,EAAUriH,KAAKwF,KAAO,2BACb88G,iBACTD,EAAUriH,KAAKwF,KAAO,qBAGxBg9G,EAAyB,IAAdxiH,KAAKwF,KAAa,GAAK,aAClCmoF,EAAO3tF,KAAKwF,KAAO,oBACfmoF,EAAO3tF,KAAKwF,KAAO,QAAQs8G,EAAS9hH,KAAKwF,KAAO,oBAClD68G,EAAUriH,KAAKwF,KAAO,2BACb88G,qBACL30B,EAAO3tF,KAAKwF,KAAO,QAAQs8G,EAAS9hH,KAAKwF,KAAO,sBAClD68G,EAAUriH,KAAKwF,KAAO,6BACb88G,+BAKbnE,EAAiBn+G,KAAKwF,MAAQ,EAChC,qCACMnE,KAASygH,EAASr8G,KAAI,CAACikB,EAAG7mB,IAAM,SAASA,OAAM+I,WACrDk2G,EAASr8G,KAAI,CAACikB,EAAG7mB,IAAM,GAAGw/G,EAAUx/G,QAAQ8qF,EAAO9qF,cAAcA,QAC5D+I,KAAK,MACd5L,KAAK+uF,SAAW,6BACM/uF,KAAKwF,wCAErBnE,0CACAA,yBACA88G,+CAEAoE,cACAC,8CAIR,CAEAP,kBAAAA,CAAmBn6G,GACjB,GAAIA,EAAM9F,SAAWhC,KAAKwF,KACxB,MAAM5D,MACF,aAAa5B,KAAKwF,wDACEsC,EAAM9F,WAEhC,MAAO,CAACmnG,EAAqBuJ,KACN,MAAjB1yG,KAAKkiH,WACPliH,KAAKkiH,SAAW/Y,EAAM9S,0BAA0Bqc,EAAc,SACzC,MAAjB1yG,KAAKkiH,WAMX/Y,EAAM/lB,GAAG++B,WAAWniH,KAAKkiH,SAAUp6G,EAAM,CAE7C;;;;;;;;;;;;;;;;GCjDI,SAAUzC,GACZwqB,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNsyB,MAACA,EAAKtoC,KAAEA,GAAQ6iB,GAEf4oB,EAAQizE,GAAS1yE,GAA4BxtC,EAAG8pC,EAAOtoC,GAG9D,GAFAgsC,GAA6BxtC,EAAGitC,EAAQizE,GAEN,IAA9BxqG,EAAmBwqG,GACrB,OAAO3iH,EAAQ8wG,eAAe6R,EAAOlgH,EAAElB,MAAO,IAShD,GAAIvB,EAAQuwG,mBAAmB,CAAC9tG,KAAmB,WAAZA,EAAElB,MAAoB,CAC3D,MAAMs3G,EAAW74G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QACjCqwG,EAAY/I,GACdgR,EAASx3G,OAAsBquC,EAAQizE,EAAOlgH,EAAEnB,MAAOmB,EAAElB,OAC7D,OAAOvB,EAAQ8wG,eAAe6R,EAAOlgH,EAAElB,MAAOqvG,GAGhD,MAAMpU,SAACA,GAAYx8F,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QACnCmkG,EAAcz0D,GAA4BxtC,EAAEnB,MAAOouC,EAAQizE,GACjE,GAAInmB,IAAakI,EAAa,CAC5B,MAAM9b,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAIy3G,GAAmBK,GACvB,IAAIZ,GAAaY,GACfnR,EAAc5oB,EAAQu5B,mBAAmBzyE,GAC/C,OAAO1vC,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAAOiwG,GAGxD,OADAxxG,EAAQowG,YAAY3tG,EAAElC,QAhExB,SACIkC,EAAe8pC,EAAiBtoC,EAAgBjE,GAClD,MAAM64G,EAAW74G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QACjCmL,EAAI1L,EAAQ8wG,eAAe7sG,EAAMxB,EAAElB,OACnCqhH,EAAa5iH,EAAQ+/F,QAAQz/F,IAAIoL,EAAEnL,QAEzC0K,OAAOC,OAAO03G,EAAY/J,GAC1B+J,EAAWthH,MAAQ2C,EACnB2+G,EAAWrhH,MAAQkB,EAAElB,MACrB,IAAI0tC,EACAgB,GAA6B1D,EAAOp0B,EAAoB1V,EAAEnB,QAC1Du3G,EAAStzG,QAGX0pC,GAAc4pE,EAAStzG,MAAM0pC,YAE/B2zE,EAAWr9G,MAAQ,CACjB0pC,aAEAihE,WAAY2I,EAAStzG,OAASszG,EAAStzG,MAAM2qG,YAAcztG,EAAElC,QAI/D,MAAMupB,EAAW9pB,EAAQmtG,aAAa7sG,IAAIsiH,EAAWr9G,MAAM2qG,aAAe,EAE1E,OADAlwG,EAAQmtG,aAAazsG,IAAIkiH,EAAWr9G,MAAM2qG,WAAYpmF,EAAW,GAC1Dpe,CACT,CAuCSm3G,CAAapgH,EAAGitC,EAAQizE,EAAO3iH,EACxC,CAEO,MAAM8iH,GAA4B,CACvCjhH,WAAYgT,GACZkC,YAAa,QACb+Q,WAAYviB,ICpBDw9G,GAAqC,CAChDlhH,WAAY0M,GACZwI,YAAa,QACb+Q,WArD6BiI,IAK7B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNwhC,WAACA,EAAUC,MAAEA,GAAS50B,EAE5B3O,EACI1V,EAAEnB,MAAMY,QAAU,GAClB,IAAM,yEAEV,MAAMy5C,EAAOF,EAAWhzC,QAAO,CAAChF,EAAGmV,IAAMnV,EAAImV,IAEvCi+D,EAAWkC,GAAyBt2E,EAAEnB,MAAOm6C,EAAYE,GACzDu7B,EAAW6B,GAAyBlC,EAAS30E,OAAQu5C,EAAWv5C,QAChEo1E,EACFyB,GAAiCt2E,EAAEnB,MAAOm6C,EAAYE,GACpD67B,EACFuB,GAAiCr9B,EAAOD,EAAWv5C,QACjDqpC,EACFwtC,GAA0BzB,EAAkB57B,EAAOD,EAAWv5C,QAE5D8gH,EAAY,GAEZC,EACF5pE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAOu1E,KAC5CqsC,EAAyBz7E,GAC3B,CAACxtB,OAAQ,CAACxX,EAAGwgH,GAAuBjjH,UAAS8mB,MAAO,CAAC6gB,KAAMuvC,KACzDisC,EAAwB9pE,GAAQ,CACpCp/B,OAAQ,CAACxX,EAAGygH,GACZljH,UACA8mB,MAAO,CAACxlB,MAAOg2E,KAEX8rC,EAAS79G,GAAM,CACnB0U,OAAQ,CAACxX,EAAG0gH,GACZnjH,UACA8mB,MAAO,CAACylB,MAAOirC,EAAkBvzE,KAAMsnC,KASzC,OANAy3E,EAAUj/G,KAAKk/G,GACfD,EAAUj/G,KAAKm/G,GACfF,EAAUj/G,KAAKo/G,GAEfH,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAEtD03G,CAAM;;;;;;;;;;;;;;;;GChCR,MAAMC,GAA+B,CAC1CxhH,WAAY2M,GACZuI,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AArBI,SAAmBiI,GAKvB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACq7B,QAAEA,GAAW7jB,GACfhW,KAACA,GAAQ6iB,EAETuwC,EAAQr3D,EAAQkB,SAASuB,EAAElC,QAC3B8hG,EAAcriG,EAAQkB,SAAS48B,EAAQv9B,QAEvCkiG,EACF+D,GAAgBnvC,EAAOgrC,EAAavkE,EAAQv8B,MAAOu8B,EAAQx8B,MAAO2C,GAEtE,OAAOjE,EAAQ8wG,eAAe,CAAC7sG,GAAO65B,EAAQv8B,MAAOkhG,EACvD,GCfa/2C,GAAWwqD,GAAiB,CAAC/J,UAFxB,wBAE8C5qG,MAAO,SAE1D+hH,GAA+B,CAC1CzhH,WAAYqR,GACZ6D,YAAa,QACb+Q,WAAY4jC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNR,SAAUv7B,GAAKJ,GAEnB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpB3U,MAACA,GAASnB,EAGhB,OAAO66F,GAAS,CAAC76F,OAAQ,CAACxX,EAFRzC,EAAQ+/F,QAAQz/F,IAAI8a,EAAM7a,QAEL8tG,mBAAmBl+E,MAAOnwB,WACnE,CAEO,MAAMujH,GAA2B,CACtC1hH,WAAYiS,GACZiD,YAAa,QACb+Q,WAAYqI,ICZRqzF,GAAS;;;;;;;;;;;;;;;;GCiER,MAAMC,GAA2B,CACtC5hH,WAAY4M,GACZsI,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AA9DI,SAAU7I,EACZ8Q,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACN1Y,MAACA,GAASulB,EAGhB,GAAc,cAAVvlB,EAAuB,CACzB,GAAgB,cAAZkB,EAAElB,MACJ,OAAOuzG,GAAS,CAAC76F,OAAQ,CAACxX,KAAIzC,YAIhC,MAAM0jH,EAAc3pC,GAASt3E,EAAEnB,OACzBqiH,EAAS1kG,EAAK,CAAChF,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACvlB,MAAO,aAEpD9B,EACFwwB,GAAQ,CAAChW,OAAQ,CAACkW,KAAMwzF,EAAQvzF,KAAMszF,GAAc1jH,YAKxD,OAHA0jH,EAAY9hH,UACZ5B,EAAQmuG,8BAA8BwV,GAE/BlkH,EAIT,GAAgB,cAAZgD,EAAElB,MAAuB,CAC3B,MAAMg3G,EAAWpoF,GAAK,CAAClW,OAAQ,CAACmB,MAAO3Y,GAAIzC,YACrCP,EAASwf,EAAK,CAAChF,OAAQ,CAACxX,EAAG81G,GAAWv4G,UAAS8mB,MAAO,CAACvlB,WAE7D,OADAvB,EAAQmuG,8BAA8BoK,GAC/B94G,EAGT,IAAK0Y,EAAqB1V,EAAElB,MAAOA,GAAQ,CAGzC,MAAM9B,EAASq1G,GAAS,CAAC76F,OAAQ,CAACxX,KAAIzC,YACtC,MAAO,CAACO,OAAQd,EAAOc,OAAQe,MAAO7B,EAAO6B,MAAOC,SAGtD,GAAc,UAAVA,EACF,OD9CE,SAAc6Z,EAAmBpb,GACrC,MAAM4oF,EAAU,IAAIsjB,GAAe9wF,EAAM9Z,MAAOkiH,IAC1CnpG,EAASra,EAAQuuG,gBAAgB3lB,EAAS,CAACxtE,GAAQ,SACzD,MAAO,CAAC7a,OAAQ8Z,EAAO9Z,OAAQe,MAAO+Y,EAAO/Y,MAAOC,MAAO8Y,EAAO9Y,MACpE,CC0CWqiH,CAAInhH,EAAGzC,GAGhB,GAAc,SAAVuB,EAAkB,CACpB,MAAMsiH,EAAkB7jH,EAAQ8wG,eAC5B,GAAI,OAAQ34F,EAA4B,OAAQ,IAI9C1Y,EAASisD,GAAS,CAACzxC,OAFU,CAACxW,EAAGhB,EAAGmW,EAAGirG,GAEE7jH,YAE/C,OADAA,EAAQmuG,8BAA8B0V,GAC/BpkH,EAGT,MAAM,IAAIqC,MAAM,iCAAiCW,EAAElB,YAAYA,IACjE,GChEMuiH,GAAO,kBAEAv/G,GAAOqxG,GAChB,CAACzJ,UAAW2X,GAAMjO,gBAAiBiO,GAAMhO,cAAepP,KAE/Cqd,GAA2B,CACtCliH,WAAY6M,GACZqI,YAAa,QACb+Q,WAAYvjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTR,MAAOy/G,GASXjkH,WAAAA,CAAYkoD,GARZ/nD,KAAA2zE,cAAgB,CAAC,KASf3zE,KAAK6+C,YAAckJ,EACnB/nD,KAAK+uF,SAAW,wRAclB,CAEAkzB,kBAAAA,CAAmB3/G,EAAaE,GAC9B,MAAO,CAAC2mG,EAAqBuJ,KACR,MAAf1yG,KAAK+jH,SACP/jH,KAAK+jH,OAAS5a,EAAM9S,0BAA0Bqc,EAAc,UAC5D1yG,KAAKgkH,OAAS7a,EAAM9S,0BAA0Bqc,EAAc,WAE9DvJ,EAAM/lB,GAAG2vB,UAAU/yG,KAAK+jH,OAAQzhH,GAChC6mG,EAAM/lB,GAAG2vB,UAAU/yG,KAAKgkH,OAAQxhH,EAAI,CAExC;;;;;;;;;;;;;;;;GCpCI,MAAOyhH,GAWXpkH,WAAAA,CAAYkoD,GAVZ/nD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EASb1uF,KAAK6+C,YAAckJ,EACnB/nD,KAAK+uF,SAAW,0SAelB,CAEAkzB,kBAAAA,CAAmB3/G,EAAaE,GAC9B,MAAO,CAAC2mG,EAAqBuJ,KACR,MAAf1yG,KAAK+jH,SACP/jH,KAAK+jH,OAAS5a,EAAM9S,0BAA0Bqc,EAAc,UAC5D1yG,KAAKgkH,OAAS7a,EAAM9S,0BAA0Bqc,EAAc,WAE9DvJ,EAAM/lB,GAAG2vB,UAAU/yG,KAAK+jH,OAAQzhH,GAChC6mG,EAAM/lB,GAAG2vB,UAAU/yG,KAAKgkH,OAAQxhH,EAAI,CAExC;;;;;;;;;;;;;;;;GCjBK,MAAM0hH,GAAkC,CAC7CviH,WAAY8M,GACZoI,YAAa,QACb+Q,WAtBI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNqjC,aAACA,EAAYC,aAAEA,GAAgBz2B,EAErC,IAAI8hE,EAEFA,EADEv8E,IAAMxB,QAAQ,mBACN,IAAIs5G,GAAkB1hH,EAAEnB,OAExB,IAAI0iH,GAAYvhH,EAAEnB,OAE9B,MAAMkwG,EAAc5oB,EAAQu5B,mBAAmB7kE,EAAcC,GAC7D,OAAOv9C,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAAOiwG,EACxD;;;;;;;;;;;;;;;;GCrBM,MAAO6S,GAKXtkH,WAAAA,CAAYuB,GAJZpB,KAAA2zE,cAAgB,CAAC,OAAQ,QAKvB3zE,KAAK6+C,YAAcz9C,EACnBpB,KAAK+uF,SAAW,ocAclB;;;;;;;;;;;;;;;;GCfF,SAASq1B,GACLC,EAA2BC,GAC7B,MAAO,CACLjkH,OAAQikH,EAAYjkH,OACpBgB,MAAOijH,EAAYjjH,MACnBD,MAAOijH,EAAcjjH,MAEzB,CAmBO,MAAMmjH,GAAiC,CAC5C5iH,WAAYgN,GACZkI,YAAa,QACb+Q,WApBI,SACFiI,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAENg8F,EAAQj2G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QAE9BqoF,EAAU,IAAIy7B,GAAkB5hH,EAAEnB,OAClCojH,EAAgB,CACpBJ,GAA+B7hH,EAAGwzG,EAAM5H,mBAAmBl+E,MAC3Dm0F,GAA+B7hH,EAAGwzG,EAAM5H,mBAAmBj+E,OAG7D,OAAOpwB,EAAQuuG,gBACX3lB,EAAS87B,EAAeA,EAAc,GAAGnjH,MAC/C;;;;;;;;;;;;;;;;GC7BM,MAAOojH,GAMX5kH,WAAAA,CAAYo2E,GAJZj2E,KAAA6+C,YAAwB,GAKtB7+C,KAAK6+C,YAAcg6B,GAA6B5C,EAAQ,GACxDj2E,KAAK2zE,cAAgBsC,EAAOxwE,KAAI,CAACikB,EAAG7mB,IAAM,IAAIA,MAE9C,MAAM6hH,EAAoB,IAAIhhH,MAAMuyE,EAAOj0E,OAAS,GACpD0iH,EAAQ,GAAKzuC,EAAO,GAAG,GACvB,IAAK,IAAIpzE,EAAI,EAAGA,EAAI6hH,EAAQ1iH,OAAQa,IAClC6hH,EAAQ7hH,GAAK6hH,EAAQ7hH,EAAI,GAAKozE,EAAOpzE,GAAG,GAG1C,MAAMo6G,EAAW,CAAC,YAAYyH,EAAQ,iCACtC,IAAK,IAAI7hH,EAAI,EAAGA,EAAI6hH,EAAQ1iH,OAAQa,IAAK,CACvC,MAAMwnG,EAAQqa,EAAQ7hH,EAAI,GAC1Bo6G,EAASp5G,KACL,iBAAiB6gH,EAAQ7hH,qBACRA,YAAYwnG,QAEnC,MAAMsa,EAAYD,EAAQ1iH,OACpB4iH,EAAYF,EAAQA,EAAQ1iH,OAAS,GAC3Ci7G,EAASp5G,KAAK,sBAAsB8gH,YAAoBC,QAExD5kH,KAAK+uF,SAAW,uIAMVkuB,EAASrxG,KAAK,8BAGtB;;;;;;;;;;;;;;;;GCjCI,MAAOi5G,GAOXhlH,WAAAA,CAAYo2E,EAAoB1wE,GALhCvF,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EACf1uF,KAAA6+C,YAAwB,GAItB7+C,KAAK6+C,YAAcg6B,GAA6B5C,EAAQ1wE,GACxD,MAAMnE,EAAQpB,KAAK6+C,YACbr5C,EAAOpE,EAAMY,OACbX,EAAQ05F,GAAkBv1F,GAC1BmoF,EAASwa,GAAY,SAAU3iG,GAC/B6iG,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKhjG,MAAM,EAAGG,GACzDxF,KAAK2zE,cAAgBsC,EAAOxwE,KAAI,CAACikB,EAAG7mB,IAAM,IAAIA,MAE9C,MAAM6hH,EAAoB,IAAIhhH,MAAMuyE,EAAOj0E,OAAS,GACpD0iH,EAAQ,GAAKzuC,EAAO,GAAG1wE,GACvB,IAAK,IAAI1C,EAAI,EAAGA,EAAI6hH,EAAQ1iH,OAAQa,IAClC6hH,EAAQ7hH,GAAK6hH,EAAQ7hH,EAAI,GAAKozE,EAAOpzE,GAAG0C,GAG1C,MAAM0kC,EAAUo+D,EAAS9iG,GACnBu/G,EAAezc,EAAShjG,OAAO,GAC/B0/G,EAAc1c,EAASz8F,OAE7B,IAAIo5G,EAAkB,OAAO/6E,OAAay6E,EAAQ,wDAElCK,YAAsBD,EAAal5G,uBAEnD,IAAK,IAAI/I,EAAI,EAAGA,EAAI6hH,EAAQ1iH,OAAQa,IAAK,CACvC,MAAMwnG,EAAQqa,EAAQ7hH,EAAI,GAK1BmiH,GAAmB,iBACX/6E,OAAay6E,EAAQ7hH,UAAUonC,QAAcy6E,EAAQ7hH,EAAI,wDAErDA,KAAKoiH,GAAgB5c,EAAUp+D,EAASogE,0BACvC4a,GAAgBH,EAAc76E,EAASogE,mBAGtD,MAAMsa,EAAYD,EAAQ1iH,OACpBqoG,EAAQqa,EAAQA,EAAQ1iH,OAAS,GACvCgjH,GAAmB,+CAEPL,KAAaM,GAAgB5c,EAAUp+D,EAASogE,wBAC/C4a,GAAgBH,EAAc76E,EAASogE,QAEpDrqG,KAAK+uF,SAAW,0BACGsZ,EAAS5iG,KAAIlD,GAAK,OAASA,mBACxCyiH,8CAIA3jH,sEAC4BssF,+BAE5BA,EAAOnoF,EAAO,QAAQmoF,EAAOnoF,EAAO,wBAChCmoF,EAAOnoF,EAAO,QAAQpE,EAAMoE,EAAO,wCACjBmoF,6BAGtBA,EAAOnoF,EAAO,QAAQmoF,EAAOnoF,EAAO,wBAChCmoF,EAAOnoF,EAAO,QAAQpE,EAAMoE,EAAO,wCACjBmoF,6BAGtBA,EAAOnoF,EAAO,QAAQmoF,EAAOnoF,EAAO,wBAChCmoF,EAAOnoF,EAAO,QAAQpE,EAAMoE,EAAO,sBACnCmoF,EAAOnoF,EAAO,QAAQpE,EAAMoE,EAAO,wCACjBmoF,2DAK9B,EAcF,SAASs3B,GAAgB5c,EAAoBp+D,EAAiBogE,GAC5D,MAAM6a,EAAa7c,EAASp5E,QAAQgb,GAQpC,OAPYo+D,EAAS5iG,KAAI,CAACgD,EAAGo8F,IACvBA,IAAQqgB,EACH,GAAGz8G,OAAO4hG,IAEV5hG,IAGAmD,MACb;;;;;;;;;;;;;;;;GCtGM,SAAUskB,GAAKL,GAEnB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpB3U,MAACA,GAASnB,EAGhB,OAAO66F,GAAS,CAAC76F,OAAQ,CAACxX,EAFRzC,EAAQ+/F,QAAQz/F,IAAI8a,EAAM7a,QAEL8tG,mBAAmBj+E,MAAOpwB,WACnE,CAEO,MAAMqlH,GAA2B,CACtCxjH,WAAYuP,GACZ2F,YAAa,QACb+Q,WAAYsI;;;;;;;;;;;;;;;;GCLR,SAAU0yE,GACZ7oF,EAAsBxU,EAAczF,GACtC,MAAMuB,EAAQ0Y,EAAO,GAAG1Y,MACxB,GAAc,cAAVA,EAAuB,CACzB,MAAM+jH,EAAQrrG,EAAOtU,KAAK+F,GAAMykB,GAAK,CAAClW,OAAQ,CAACmB,MAAO1P,GAAI1L,cACpDulH,EAAQtrG,EAAOtU,KAAK+F,GAAM0kB,GAAK,CAACnW,OAAQ,CAACmB,MAAO1P,GAAI1L,cAEpDwlH,EAAe1iB,GAAWwiB,EAAO7/G,EAAMzF,GACvCylH,EAAe3iB,GAAWyiB,EAAO9/G,EAAMzF,GAEvCP,EACFwwB,GAAQ,CAAChW,OAAQ,CAACkW,KAAMq1F,EAAcp1F,KAAMq1F,GAAezlH,YAO/D,OALAslH,EAAM/9G,SAAQ+R,GAAKtZ,EAAQmuG,8BAA8B70F,KACzDisG,EAAMh+G,SAAQxE,GAAK/C,EAAQmuG,8BAA8BprG,KACzD/C,EAAQmuG,8BAA8BqX,GACtCxlH,EAAQmuG,8BAA8BsX,GAE/BhmH,EAST,GAAc,WAAV8B,EAAoB,CACtB,MAAMmkH,UAACA,EAAS31E,SAAEA,GAAY41E,GAAiB1rG,EAAQxU,EAAMzF,GACvD4lH,EAAkBF,EAAU//G,KAAI+F,IAC7B,CAAC9E,KAAM5G,EAAQkB,SAASwK,EAAEnL,QAASe,MAAOoK,EAAEpK,UAE/CyhG,EAAyC,IAA1B2iB,EAAU,GAAGpkH,MAAM,GAClCmhG,EACFkE,GAAcif,EAAiB71E,EAAUxuC,EAAOwhG,GAE9C8iB,EACF9sC,GAA6B9+D,EAAOtU,KAAI+F,GAAKA,EAAEpK,QAAQmE,GAErDyiB,EAAUloB,EAAQ8wG,eAAe+U,EAAetkH,EAAOkhG,GAI7D,OAFAijB,EAAUn+G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAEtDwc,EAGT,GAAIjO,EAAO/X,OAASmK,IAAMzB,UAAU,gCAAiC,CACnE,MAAM2yG,EAAWl7G,KAAKiH,MAAM2Q,EAAO/X,OAAS,GACtCs7G,EAAW1a,GAAW7oF,EAAO1U,MAAM,EAAGg4G,GAAW93G,EAAMzF,GACvDy9G,EAAY3a,GAAW7oF,EAAO1U,MAAMg4G,GAAW93G,EAAMzF,GAErDP,EAASqjG,GAAW,CAAC0a,EAAUC,GAAYh4G,EAAMzF,GAKvD,OAHAA,EAAQmuG,8BAA8BqP,GACtCx9G,EAAQmuG,8BAA8BsP,GAE/Bh+G,EAGT,GAAI4M,IAAMxB,QAAQ,gCACdoP,EAAO,GAAG3Y,MAAMY,OAAS,EAAG,CAC9B,MAAM0mF,EAAU,IAAIm8B,GAAoB9qG,EAAOtU,KAAI+F,GAAKA,EAAEpK,QAAQmE,GAClE,OAAOzF,EAAQuuG,gBAAgB3lB,EAAS3uE,EAAQ1Y,GAGlD,MAAMmkH,UAACA,EAAS31E,SAAEA,GAAY41E,GAAiB1rG,EAAQxU,EAAMzF,GACvD4oF,EACF,IAAI+7B,GAAce,EAAU//G,KAAI+F,GAAKA,EAAEpK,SACrC7B,EAASO,EAAQuuG,gBAAgB3lB,EAAS88B,EAAWnkH,GAE3DmkH,EAAUn+G,SAAQ+R,GAAKtZ,EAAQmuG,8BAA8B70F,KAC7D,MAAMwsG,EACFzsE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGhD,GAASqnB,MAAO,CAACxlB,MAAOyuC,GAAW/vC,YAG5D,OAFAA,EAAQmuG,8BAA8B1uG,GAE/BqmH,CACT,CAEA,SAASH,GACL1rG,EAAsBxU,EAAczF,GAQtC,MAAM+vC,EAAWgpC,GAA6B9+D,EAAOtU,KAAI+F,GAAKA,EAAEpK,QAAQmE,GAQxE,MAAO,CAACigH,UAPUzrG,EAAOtU,KACrBlD,GAAK42C,GAAQ,CACXp/B,OAAQ,CAACxX,KACTqkB,MAAO,CAACxlB,MAAO,EAAE,EAAG6W,EAAmB1V,EAAEnB,MAAMiE,MAAME,MACrDzF,cAGa+vC,WACrB;;;;;;;;;;;;;;;;GCtGM,SAAUlqC,GACZkqB,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtqB,KAACA,GAAQqhB,EAET8+E,EAAQztF,EAAoB1S,EAAMwU,EAAO,GAAG3Y,OAAO,GACnDyuC,EACFgpC,GAA6B9+D,EAAOtU,KAAI+F,GAAKA,EAAEpK,QAAQskG,GAE3D,GAAqC,IAAjCztF,EAAmB43B,GACrB,OAAO/vC,EAAQ8wG,eAAe/gE,EAAU91B,EAAO,GAAG1Y,MAAO,IAI3D,MAAMwkH,EAAU9rG,EAAO0P,QAAOje,GAAKyM,EAAmBzM,EAAEpK,OAAS,IACjE,GAAuB,IAAnBykH,EAAQ7jH,OACV,OAAO4yG,GAAS,CAAC76F,OAAQ,CAACxX,EAAGsjH,EAAQ,IAAK/lH,YAM5C,OAFA+4E,GADegtC,EAAQpgH,KAAI+F,GAAKA,EAAEpK,QACUskG,GAErC9C,GAAWijB,EAASngB,EAAO5lG,EACpC,CAEO,MAAMgmH,GAA6B,CACxCnkH,WAAYiN,GACZiI,YAAa,QACb+Q,WAAYjiB;;;;;;;;;;;;;;;;GCjCR,MAAOogH,GAKXlmH,WAAAA,CACIutD,EAAmC0pD,GAAU,EAC7Cp2C,EAAqB,KAAMo7C,GAA4B,EACvDC,GAAoB,GAPxB/7G,KAAA2zE,cAAgB,CAAC,IAAK,KAQpB3zE,KAAK6+C,YAAcuO,EAASvd,SAC5B,MAAMmwE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3BZ,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBjB,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YAEvBywE,EAA8D,EAAtC7jH,KAAKiH,MAAMgkD,EAASlX,WAAa,GACzD+vE,EAA0B74D,EAASlX,WAAa,EAChDgwE,EAAyC,iBAAxB94D,EAAStY,WAE1BqxE,EAASD,EAAiB,EAAI,EAC9BE,EAASF,EAAiB,EAAI,EAC9BG,EAAaH,EAAiB,EAAI,EAExC,IAAI3O,EAAoB,GAAIC,EAAyB,GACjD92C,IAEA62C,EADEuE,EACkB,uGAEhBp7C,eAEKq7C,EACW,+FAEhBr7C,eAGgB,wDAEdA,2BAKR82C,EAAyB,gCAG3B,MAAMC,EAAiBX,EAAU,kCAAoC,GACjEA,GACF92G,KAAK2zE,cAAc9vE,KAAK,QAGtBi4G,GACF97G,KAAK2zE,cAAc9vE,KAAK,0BAGtBk4G,GACF/7G,KAAK2zE,cAAc9vE,KAAK,kBAG1B7D,KAAK+uF,SAAW,WACZwoB,0CAE4BnhE,MAAiBC,uCACpB2pE,MAAWC,kIAKlBoG,8DAGCF,cAAmBC,oTAOd9wE,kDACKgB,uCAEL8W,EAASpX,sFAIPT,oDACKgB,yCAEL6W,EAASnX,2FAIP+vE,mQAQhBE,mqBAmB0B,IAA5BD,6BAEEC,6EAEsBF,0CACPA,gGAGDA,kDACCA,sDAGkB,IAA5BC,0EAEMD,yCACAA,qDAGXE,qFAEoBF,8CACAA,8KAKRA,8CACAA,oIAKqB,IAA5BC,0EAEMD,yCACAA,6CACAA,qDAGXE,qFAEoBF,8CACAA,kDACAA,8KAKRA,8CACAA,kDACAA,+LAUtBvO,cACAD,8CAIR,EAGI,MAAO8O,GAKXzmH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,IAAK,KAKpB3zE,KAAK6+C,YAAcuO,EAASvd,SAC5B,MAAM2wE,EAAWpzD,EAASzW,QAAQwB,MAC5B6nE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3Be,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2B,EAAgBoV,EAASpV,cACzB1B,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBb,EAAc0X,EAAS1X,YACvBJ,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YAEvBywE,EAA8D,EAAtC7jH,KAAKiH,MAAMgkD,EAASlX,WAAa,GACzD+vE,EAA0B74D,EAASlX,WAAa,EAEtDl2C,KAAK+uF,SAAW,uCACgBh3C,MAAgB3B,MAC5CC,uCACyBmqE,MAAaR,MAAWC,ijBAgBzBvqE,kDACKsC,uCAELoV,EAAStV,qFAIPxC,oDACKgB,yCAEL8W,EAASpX,4FAIPT,sDACKgB,2CAEL6W,EAASnX,iGAIP+vE,0mBAiBU,IAA5BC,+EAEwBD,4CACPA,qCACkB,IAA5BC,yFAEiBD,kDACAA,wGAGPA,+CACAA,+GAGkB,IAA5BC,yFAEiBD,kDACAA,sDACAA,wGAGPA,+CACAA,mDACAA,uLAUnC;;;;;;;;;;;;;;;;GC/SI,MAAOO,GAOX1mH,WAAAA,CACIg/C,EAAuB1jC,EACvBiyC,GARJptD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAOb1uF,KAAK6+C,YAAcA,EAEnB,MAAMtJ,YACJA,EAAWW,WACXA,EAAUG,YACVA,EAAWD,aACXA,EAAYO,QACZA,EAAOE,SACPA,EAAQN,cACRA,EAAaD,eACbA,EAAcxB,WACdA,GACEsY,GACEpW,KAACA,EAAIF,IAAEA,GAAOH,EACd6vE,EAAmBtwE,EAAaX,EAChCu5C,EAAO7B,KACPi5B,EAAgC,iBAAfpxE,EACjBqxE,EAASD,EAAiB,EAAI,EAC9BE,EAASF,EAAiB,EAAI,EAEpC,IAAIO,EAAW,GAEf,IAAK,IAAIzqG,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAI0zE,EAAM,EAAGA,GAAO,EAAGA,IAC1B+2B,GAAY,mCACY/2B,8BACP1zE,mCAEG6iC,EAAY,eAAeA,EAAY,kDACzBhI,SAAgBT,OAC9CU,kCACiBR,cAA2BkwE,8BAElCrrG,EAAWgrG,0EAEoBtvE,SACzCR,QAAkBW,sCACCT,4BACnBiwE,SAAwBtwE,kCAEZ/6B,EAAWirG,gEAEQlwE,gCAErBgwE,+EAEW,EAANlqG,EAAU0zE,yNAKJ,EAAN1zE,EAAU0zE,iMAWjC1vF,KAAK+uF,SAAW,oMASV03B,gBAEA33B,EAAK30E,iCAGb;;;;;;;;;;;;;;;;GChEI,SAAUusG,IAAenkH,EAC7BA,EAACknB,OACDA,EAAM2jC,SACNA,EAAQttD,QACRA,EAAO0lD,KACPA,EAAO,KAAIwb,uBACXA,EAAyB,KAAIC,eAC7BA,EAAiB,EAACP,WAClBA,EAAa,OAIb,MAAMrxB,EAAS9sC,EAAEnB,MACXu3G,EAAW74G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QACjCsmH,EAAkBv5D,EAASlX,WAC3B0wE,EAAcv3E,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC7Cw3E,EAAmBz5D,EAASvV,YAC5BquE,EAAyC,iBAAxB94D,EAAStY,WAC1BhO,GAAa,EACbC,GAAa,EAEnB,IAAIlf,EACJ,MAAM+zF,EAA8B,GAI9BkL,GACe,IAAhBF,GAA0C,IAArBC,IACtBF,EAAkBrL,GAChByL,EAAyB13E,EAAO,GAAK,GAAM,KAAOspE,EAASrc,SAEjE,IAAIwqB,GAA8B36G,IAAMxB,QAAQ,wBAC3CwB,IAAMxB,QAAQ,iCACdo8G,EA+BE,CASL,MAAMjV,EAAcoU,EAChB72E,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAK,GACrCA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAK,GACnC23E,EAAwB,CAC5B3mH,OAAQkC,EAAElC,OACVe,MAAO,CAAC,EAAG0wG,EAAa1kD,EAASlX,YACjC70C,MAAOkB,EAAElB,OAUL4lH,EAAwBtO,EAASv3G,MACvCu3G,EAASv3G,MAAQu3G,EAASv3G,MAAMiE,QAChCszG,EAASv3G,MAAMu3G,EAASv3G,MAAMY,OAAS,KACvCiW,EACI83E,GAAyB4oB,EAASv3G,MAAO4lH,EAAU5lH,QACnD,IAAM,kBAAkBu3G,EAASv3G,YAC7B4lH,EAAU5lH,qBAClB,MAAM8lH,EAAiB/tE,GAAQ,CAC7Bp/B,OAAQ,CAACxX,EAAGknB,GACZ3pB,UACA8mB,MAAO,CAACxlB,MAAO,CAAC,EAAGgsD,EAASlX,WAAYkX,EAASvV,gBAEnD+jE,EAAc/3G,KAAKqjH,GACnB,MAAMC,EAAgB5L,GAAgB,CACpCh4G,EAAGyjH,EACHtuG,EAAGwuG,EACHpnH,UACAgnC,aACAC,aACAye,OACAkb,aACAM,yBACAC,mBAGImmD,EAAuBtnH,EAAQ+/F,QAAQz/F,IAAI+mH,EAAc9mH,QAC/D4X,EACImvG,EAAqB9qB,UACrB,IAAM,gDAEVqc,EAASv3G,MAAQ6lH,EAGjBG,EAAqBhmH,MAAQgsD,EAASvd,SAEtChoB,EAAM+sF,GAAS,CAAC76F,OAAQ,CAACxX,EAAG4kH,GAAgBrnH,YAC5C+nB,EAAIzmB,MAAQgsD,EAASvd,SAErB+rE,EAAc/3G,KAAKsjH,OA9FQ,CAC3B,MAEMH,EAAY7tE,GAAQ,CACxBp/B,OAAQ,CAACxX,KACTzC,UACA8mB,MAAO,CAACxlB,MAAO,CAAC,EALE8kH,EAAiB72E,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAC/BA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAIlC+d,EAASlX,eAErCgxE,EAAiB/tE,GAAQ,CAC7Bp/B,OAAQ,CAACxX,EAAGknB,GACZ3pB,UACA8mB,MAAO,CAACxlB,MAAO,CAAC,EAAGgsD,EAASlX,WAAYkX,EAASvV,gBAE7Ct4C,EAASg8G,GAAgB,CAC7Bh4G,EAAGyjH,EACHtuG,EAAGwuG,EACHpgF,aACAC,aACAjnC,UACA0lD,OACAkb,aACAM,yBACAC,mBAGFp5C,EAAMsxB,GACF,CAACp/B,OAAQ,CAACxX,EAAGhD,GAASO,UAAS8mB,MAAO,CAACxlB,MAAOgsD,EAASvd,YAE3D+rE,EAAc/3G,KAAKmjH,GACnBpL,EAAc/3G,KAAKqjH,GACnBtL,EAAc/3G,KAAKtE,GAmErB,IAAK,MAAMsD,KAAK+4G,EACd97G,EAAQmuG,8BAA8BprG,GAGxC,OAAOglB,CACT,CAIM,SAAUw/F,IAAiB9kH,EAC/BA,EAACknB,OACDA,EAAM2jC,SACNA,EAAQttD,QACRA,EAAO0lD,KACPA,EAAO,KAAIwb,uBACXA,EAAyB,KAAIC,eAC7BA,EAAiB,EAACP,WAClBA,EAAa,OAQb,MAAMnrB,YACJA,EAAWD,aACXA,EAAYY,WACZA,EAAUW,SACVA,EAAQD,UACRA,EAAS9B,WACTA,GACEsY,EAEE84D,EAAgC,iBAAfpxE,EAEjBmiE,EAAY1hE,EAAcD,EAAeY,EACzCt6B,EAAUg7B,EAAYC,EACtBywE,EAAa,CAACrQ,EAAWr7F,GAIzBggG,EAA8B,GAE9B2L,EACFpuE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAOmB,EAAEnB,MAAMiE,MAAM,MAC1DmiH,EAAQruE,GAAQ,CACpBp/B,OAAQ,CAACxX,EAAGknB,GACZ3pB,UACA8mB,MAAO,CAACxlB,MAAO,CAAC,EAAG61G,EAAWh/F,EAAmBwR,EAAOroB,OAAS61G,MAGnE2E,EAAc/3G,KAAK0jH,GACnB3L,EAAc/3G,KAAK2jH,GAEnB,MAAMC,EACF,IAAIlB,GAAoBe,EAAYC,EAAUnmH,MAAOgsD,GACnDs6D,EAAS5nH,EAAQuuG,gBAAgBoZ,EAAe,CAACF,GAAY,WAC7DI,EAAiBxuE,GAAQ,CAC7Bp/B,OAAQ,CAACxX,EAAGmlH,GACZ5nH,UACA8mB,MAAO,CAACxlB,MAAO,CAAC,EAAGkmH,EAAW,GAAIA,EAAW,OAG/C1L,EAAc/3G,KAAK6jH,GACnB9L,EAAc/3G,KAAK8jH,GAEnB,MAAM9L,EAAkB,MAARr2D,EACVs2D,EAAsD,MAA1B96C,EAC5B+6C,EAAmC,cAAfr7C,EACpBs7C,EACFt7C,EAAag2C,GAA6Bh2C,GAAY,GAAQ,KAC5DknD,EAAgB,IAAI/Q,GACtB8Q,EAAevmH,MACfomH,EAAMpmH,MACN,CAAC,EAAGwa,EAASwxC,EAASvV,cApCP,GACA,EAmC6CgkE,EAC5DG,EAAiBF,EAA2BC,GAC1ChiG,EAAuB,CAAC4tG,EAAgBH,GAO9C,GANIhiE,GACFzrC,EAAOlW,KAAK2hD,GAEVs2D,GACF/hG,EAAOlW,KAAKm9D,GAEV+6C,EAAmB,CACrB,MAAMO,EAAkBx8G,EAAQ8wG,eAC5B,GAAI,UACJ34F,GAAuBgpD,EAAmC,YAC9DlnD,EAAOlW,KAAKy4G,GACZV,EAAc/3G,KAAKy4G,GAErB,MAAMj0E,EAAUvoC,EAAQuuG,gBAAgBuZ,EAAe7tG,EAAQ,WAKzD8N,EACFsxB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG8lC,GAAUvoC,UAAS8mB,MAAO,CAACxlB,MAJnC8kH,EACb,CAAC,EAAGtvE,EAAWC,EAAUuW,EAASvV,aAClC,CAAC,EAAGuV,EAASvV,YAAajB,EAAWC,MAIzC+kE,EAAc/3G,KAAKwkC,GACnB,IAAK,MAAMxlC,KAAK+4G,EACd97G,EAAQmuG,8BAA8BprG,GAGxC,OAAOglB,CACT;;;;;;;;;;;;;;;;GC7NO,MAAMggG,GAA6B,CACxClmH,WAAYkN,GACZgI,YAAa,QACb+Q,WApCI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,GAAU1P,GACd/R,QAACA,EAAOuU,IAAEA,EAAGu4B,WAAEA,EAAUC,UAAEA,EAASwE,gBAAEA,GAAmB3yB,EAEzDgvB,EAAcijC,GAAqC/jC,GACnDsY,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAA2C4G,EAAS+sC,EAAWx4B,EACtEg9B,GAAiB,EAAuB3D,GAC5C,IAAI/tB,EAEJ,GAA8B,IAA1BulC,EAAS9X,cAA+C,IAAzB8X,EAAS7X,aACZ,IAA5B6X,EAAS9W,gBAAmD,IAA3B8W,EAAS7W,eAChB,IAA1B6W,EAAShX,cAA+C,IAAzBgX,EAAS/W,aACb,SAA1B+W,EAASzW,QAAQ/1B,MAA6C,UAA1BwsC,EAASzW,QAAQ/1B,KAEnD,GAAIzU,IAAMxB,QAAQ,sBAAuC,IAAfpI,EAAEnB,MAAM,GACvDymB,EAAMw/F,GAAiB,CAAC9kH,IAAGknB,SAAQ2jC,WAAUttD,gBACxC,CACL,MAAM4oF,EAAU,IAAIq9B,GAAc34D,GAClCvlC,EAAM/nB,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGknB,GAAS,gBALpD5B,EAAM6+F,GAAe,CAACnkH,IAAGknB,SAAQ2jC,WAAUttD,YAQ7C,MAAMy8G,EACFpjE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGslB,GAAM/nB,UAAS8mB,MAAO,CAACxlB,MAAOgsD,EAASvd,YAGhE,OAFA/vC,EAAQmuG,8BAA8BpmF,GAE/B00F,CACT;;;;;;;;;;;;;;;;GCnCM,MAAOuL,GAKXjoH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,IAAK,MAKpB3zE,KAAK6+C,YAAcuO,EAASvY,YAE5B,MAAMuB,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2pE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3BkvE,EAAyC,iBAAxB94D,EAAStY,WAEhC90C,KAAK+uF,SAAW,uYAYU3hC,EAASrX,sDACLqX,EAASxW,sDACVR,OAAkB4pE,yCAEjB5yD,EAASpX,4FAIPoX,EAASvW,uDACVR,OAAiB4pE,2CAEhB7yD,EAASnX,+EAIzBiwE,4bAgBlB,EAGI,MAAO6B,GAKXloH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,KAAM,KAKrB3zE,KAAK6+C,YAAcuO,EAASjY,QAE5B,MAAMG,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBa,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB6vE,EAAyC,iBAAxB94D,EAAStY,WAE1BkrE,EAAS1qE,EAAe,EAAI8X,EAASzW,QAAQG,IAC7CmpE,EAAU1qE,EAAc,EAAI6X,EAASzW,QAAQK,KAE7CmvE,EAASD,EAAiB,EAAI,EAC9BE,EAASF,EAAiB,EAAI,EAC9BG,EAAaH,EAAiB,EAAI,EAExClmH,KAAK+uF,SAAW,oCACaixB,MAAWC,kIAKlBoG,gDAEcF,cAAmBC,gTAO3B9wE,6DACgBc,6CAEZgX,EAASxW,oIAKpBtB,kDAESC,+DACgBc,+CAEZ+W,EAASvW,4JAMpBtB,oDAES6X,EAASvV,6CAEzBquE,sdAgBlB,EAGI,MAAO8B,GAKXnoH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,IAAK,MAKpB3zE,KAAK6+C,YAAcuO,EAASvY,YAE5B,MAAMkD,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBmqE,EAAWpzD,EAASzW,QAAQwB,MAC5B6nE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAEjCh3C,KAAK+uF,SAAW,+QAWU3hC,EAASrX,sDACLqX,EAASlV,qDACVH,OAAiByoE,yCAEhBpzD,EAAStV,2FAIPsV,EAASxW,wDACVR,OAAkB4pE,2CAEjB5yD,EAASpX,kGAIPoX,EAASvW,yDACVR,OAAiB4pE,6CAEhB7yD,EAASnX,sUAc7C,EAGI,MAAOgyE,GAKXpoH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,KAAM,KAKrB3zE,KAAK6+C,YAAcuO,EAASjY,QAE5B,MAAMO,EAAc0X,EAAS1X,YACvBJ,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBwC,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YAEvBmqE,EAAW9qE,EAAc,EAAI0X,EAASzW,QAAQwB,MAC9C6nE,EAAS1qE,EAAe,EAAI8X,EAASzW,QAAQG,IAC7CmpE,EAAU1qE,EAAc,EAAI6X,EAASzW,QAAQK,KAEnDh3C,KAAK+uF,SAAW,oCACayxB,MAAaR,MAAWC,4XAczBvqE,6DACgBqC,6CAEZqV,EAASlV,mIAKpBxC,kDAESJ,+DACgBc,+CAEZgX,EAASxW,2JAMpBtB,oDAESC,iEACgBc,iDAEZ+W,EAASvW,sKAMpBtB,sDAES6X,EAASvV,iTAW7C;;;;;;;;;;;;;;;;GC/PK,MAAMqwE,GAA2C,CACtDvmH,WAAYmN,GACZ+H,YAAa,QACb+Q,WAtBI,SAA+BiI,GAKnC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACmkB,GAAEA,GAAM3M,GACV/R,QAACA,EAAOuU,IAAEA,EAAGu4B,WAAEA,EAAUyE,gBAAEA,EAAe1E,YAAEA,GAAejuB,EAE3DgvB,EAAcijC,GAAqC/jC,GACnDsY,EAAWyrB,GACbt2E,EAAEnB,MAA2CyzC,EAAa7sC,EAC1D,EAAmBuU,EAAKg9B,GAAiB,EACzC3D,GAEE8yC,EAAU,IAAIo/B,GAAuB16D,GAC3C,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGmkB,GAAK,UACnD;;;;;;;;;;;;;;;;GCCO,MAAMyhG,GAA0C,CACrDxmH,WAAYoN,GACZ8H,YAAa,QACb+Q,WArBI,SAA8BiI,GAKlC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAE+C,OAAEA,GAAU1P,GACfoB,WAACA,EAAUnT,QAAEA,EAAOuU,IAAEA,EAAGu4B,WAAEA,EAAUyE,gBAAEA,GAAmB3yB,EAE1DgvB,EAAcijC,GAAqC/jC,GACnDsY,EAAWyrB,GACb19D,EAAYsO,EAAOroB,MAA2C4G,EAC9D,EAAmBuU,EAAKg9B,GAAiB,EAAO3D,GAE9C8yC,EAAU,IAAIq/B,GAAsB36D,GAC1C,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,EAAI+C,GAAS,UACxD;;;;;;;;;;;;;;;;GCAO,MAAM2+F,GAA6B,CACxCzmH,WAAYqN,GACZ6H,YAAa,QACb+Q,WAnBI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,GAAU1P,GACd/R,QAACA,EAAOuU,IAAEA,EAAGw4B,UAAEA,GAAanuB,EAE5BwmC,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAAmD4G,EAC1D+sC,EAAWx4B,GAETmsE,EAAU,IAAI49B,GAAcl5D,GAClC,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGknB,GAAS,UACvD;;;;;;;;;;;;;;;;GCGO,MAAM4+F,GAA6C,CACxD1mH,WAAYsN,GACZ4H,YAAa,QACb+Q,WApBI,SAAiCiI,GAKrC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACmkB,GAAEA,GAAM3M,GACV/R,QAACA,EAAOuU,IAAEA,EAAGs4B,YAAEA,GAAejuB,EAE9BwmC,EAAWyrB,GACbt2E,EAAEnB,MAAmDyzC,EAAa7sC,EAClE,EAAmBuU,GAEjBmsE,EAAU,IAAIs/B,GAAuB56D,GAC3C,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGmkB,GAAK,UACnD;;;;;;;;;;;;;;;;GCEO,MAAM4hG,GAA0C,CACrD3mH,WAAYuN,GACZ2H,YAAa,QACb+Q,WApBI,SAA8BiI,GAKlC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAE+C,OAAEA,GAAU1P,GACfwC,IAACA,EAAGvU,QAAEA,EAAOmT,WAAEA,GAAcyL,EAE7BwmC,EAAWyrB,GACb19D,EAAYsO,EAAOroB,MACnB4G,EAAS,EAAmBuU,GAE1BmsE,EAAU,IAAIu/B,GAAsB76D,GAC1C,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,EAAI+C,GAAS,UACxD,GCZa61B,GAAMo2D,GAAgB,CAACzJ,UAJxBwJ,GAA0B,yBAMzB8S,GAA0B,CACrC5mH,WAAYwN,GACZ0H,YAAa,QACb+Q,WAAY03B,ICLDE,GAAOk2D,GAAgB,CAACzJ,UALxB,kEAOAuc,GAA2B,CACtC7mH,WAAYyN,GACZyH,YAAa,QACb+Q,WAAY43B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXR,MAAOipE,GAKX5oH,WAAAA,CACI6oH,EAA8CC,EAC9CrkD,EAA4B5gC,EAC5B6gC,GAPJvkE,KAAA2zE,cAAgB,CAAC,QAAS,QAAS,UACnC3zE,KAAA6+C,YAAwB,GAOtB,MAAO+Z,EAAO2d,EAAaC,EAAYpvC,GAASshF,GACzC/jD,GAAcgkD,GACdC,EAAYC,GAAavkD,EAChCtkE,KAAK6+C,YAAc,CAAC8lB,EAAUikD,EAAYC,EAAWzhF,GACrD,MAAM0hF,EAAsB,aAAXplF,EAAwB,EAAI,GAEtCqlF,EAAkBC,GACrB,CAAIzyC,EAAc,EAAjB,KAA2BC,EAAa,EAAhB,OAEtByyC,EAAaC,EAAaC,GAAOP,EAAa,EACjD,CACE,IAAIryC,EAAc,IAAMqyC,EAAa,GACrC,yBACA,MAAMG,+BAER,CACE,MACA,MACA,mBAAmBA,MAElBK,EAAYC,EAAYC,GAAOT,EAAY,EAC9C,CACE,IAAIryC,EAAa,IAAMqyC,EAAY,GACnC,wBACA,MAAMG,8BAER,CACE,MACA,MACA,mBAAmBA,KAMzBhpH,KAAK+uF,SAAW,4CACqBk6B,8CACDG,8cAgBPxwD,sEAIFswD,mCACDG,8BAEPF,wCACYJ,oCACPxkD,4DAGL+kD,wCACYN,oCACPzkD,uGAKfukD,qmCAyBX;;;;;;;;;;;;;;;;GCvGK,MAeMS,GAAoC,CAC/C5nH,WAAY2N,GACZuH,YAAa,QACb+Q,WAlB4BiI,IAK5B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3B+B,MAACA,EAAKwyC,MAAEA,EAAKC,OAAEA,GAAUtqD,GACzBuqD,SAACA,EAAQ5gC,OAAEA,EAAM6gC,mBAAEA,GAAsB39C,EAEzC8hE,EAAU,IAAI+/B,GAChB72F,EAAMxwB,MACNgjE,EAAMhjE,MAA2BkjE,EAAU5gC,EAAQ6gC,GACvD,OAAOzkE,EAAQuuG,gBAAgB3lB,EAAS,CAAC92D,EAAOwyC,EAAOC,GAAS,UAAU,GCdtE,MAAOmlD,GAQX3pH,WAAAA,CAAYuB,EAAiBw+C,EAAoBlY,GAPjD1nC,KAAA2zE,cAAgB,CAAC,KAQf3zE,KAAK6+C,YAAcz9C,EACnB,MAAMoE,EAAOpE,EAAMY,OACbU,EAAMk9C,EAAY,MAAQ,QAAQoiE,GAAUx8G,EAAM,aAClDxD,EAASZ,EAAMA,EAAMY,OAAS,GACpC,IAAIw/C,EAAY,GACZioE,EAAY,GAIZ7pE,GACF4B,EAAY9Z,EAAU,WAAU1lC,EAAS,GAAM,WAC/CynH,EAAY/hF,EAAU,UAAY,YAElC8Z,EAAY9Z,EAAU,gBAAgB1lC,IAAW,cACjDynH,EAAa/hF,EAAU,aAAe,cAGxC1nC,KAAK+uF,SAAW,8DAGVgM,GAAkBv1F,qDACRkkH,GAAclkH,EAAM,mCAClB9C,6DAER8+C,6BACQioE,iBACVC,GAAclkH,EAAM,2CACRw8G,GAAUx8G,EAAM,gEAKtC,CAEAy8G,kBAAAA,CAAmB//G,GACjB,MAAO,CAACinG,EAAqBuJ,KACT,MAAd1yG,KAAKkC,QACPlC,KAAKkC,MAAQinG,EAAMlT,mBAAmByc,EAAc,UAEtDvJ,EAAM/lB,GAAG2vB,UAAU/yG,KAAKkC,MAAOA,EAAM,CAEzC,EAGF,SAAS8/G,GAAUx8G,EAAciG,GAC/B,GAAa,IAATjG,EACF,MAAO,GAAGiG,IACL,GAAa,IAATjG,EACT,MAAO,GAAGiG,QAAWA,MAChB,GAAa,IAATjG,EACT,MAAO,GAAGiG,QAAWA,QAAWA,MAC3B,GAAa,IAATjG,EACT,MAAO,GAAGiG,QAAWA,QAAWA,QAAWA,MAE3C,MAAM7J,MAAM,2BAA2B4D,yBAE3C,CAEA,SAASkkH,GAAclkH,EAAciG,GACnC,GAAa,IAATjG,EACF,MAAO,GAAGiG,IACL,GAAa,IAATjG,EACT,MAAO,GAAGiG,MACL,GAAa,IAATjG,EACT,MAAO,GAAGiG,MACL,GAAa,IAATjG,EACT,MAAO,GAAGiG,MAEV,MAAM7J,MAAM,2BAA2B4D,yBAE3C;;;;;;;;;;;;;;;;GChBO,MAAMmkH,GAA6B,CACxChoH,WAAY0N,GACZwH,YAAa,QACb+Q,WA7DI,SACFiI,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIq6C,UAAEA,EAASlY,QAAEA,GAAW9gB,EAE7BsoB,EAAQ3sC,EAAEnB,MAAMY,OAChB4nH,EAAc/wC,GAAgC,CAACtzE,GAAO2pC,GAC5D,IAAIyuE,EAAYp7G,EACG,MAAfqnH,IACFjM,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmiF,MAE7D,MAAMC,EAAehxC,GAA8B,EAAG3pC,GAAO,GAE7D,GAAI26E,IAAiB36E,EAAQ,EAC3B,MAAM,IAAIttC,MACN,kDACIW,EAAEnB,MAAMY,OAAS,kBACLuD,KAEtB,MAAMxB,EAAOxB,EAAEnB,MAAMyoH,GACrB,IAAItqH,EAASq1G,GAAS,CAAC76F,OAAQ,CAACxX,EAAGo7G,GAAY79G,YAI/C,IAAK,IAAI+C,EAAI,EAAGA,GAAKV,KAAKkC,KAAKlC,KAAK2nH,KAAK/lH,IAAS,EAAGlB,IAAK,CACxD,MAAM6lF,EAAU,IAAI8gC,GAAc7L,EAAUv8G,OAAO,EAAOsmC,GACpD4pE,EAAc5oB,EAAQu5B,mBAAmBp/G,GACzCknH,EAAaxqH,EACnBA,EACIO,EAAQuuG,gBAAgB3lB,EAAS,CAACnpF,GAASA,EAAO8B,MAAOiwG,GAC7DxxG,EAAQmuG,8BAA8B8b,GAIxC,GAAInqE,EAAW,CACb,MAAM8oC,EAAU,IAAI8gC,GAAc7L,EAAUv8G,MAAOw+C,EAAWlY,GACxDqiF,EAAaxqH,EACnBA,EAASO,EAAQuuG,gBAAgB3lB,EAAS,CAACnpF,GAASA,EAAO8B,OAC3DvB,EAAQmuG,8BAA8B8b,GAGxC,GAAmB,MAAfH,EAAqB,CACvB,MACMI,EAA0BziF,GAC5B,CAACxtB,OAAQ,CAACxX,EAAGhD,GAASO,UAAS8mB,MAAO,CAAC6gB,KAFhBoxC,GAAoC+wC,MAO/D,OAHA9pH,EAAQmuG,8BAA8B1uG,GACtCO,EAAQmuG,8BAA8B0P,GAE/BqM,EAGT,OAAOzqH,CACT;;;;;;;;;;;;;;;;GC5BO,MAAM0qH,GAAoC,CAC/CtoH,WAAY4N,GACZsH,YAAa,QACb+Q,WAlCI,SAAwBiI,GAK5B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACq7B,QAAEA,GAAW7jB,GACfhW,KAACA,EAAIg8C,aAAEA,GAAgBn5B,EAE7B,GAAuB,IAAnBrkB,EAAEnB,MAAMY,OAAc,CACxB,MAAMm1D,EAAQr3D,EAAQkB,SAASuB,EAAElC,QAC3B8hG,EAAcriG,EAAQkB,SAAS48B,EAAQv9B,QAEvCkiG,EACF+D,GAAgBnvC,EAAOgrC,EAAavkE,EAAQv8B,MAAOu8B,EAAQx8B,MAAO2C,GAEtE,OAAOjE,EAAQ8wG,eAAe,CAAC7sG,GAAO65B,EAAQv8B,MAAOkhG,EACtD,CAAM,GAAuB,IAAnBhgG,EAAEnB,MAAMY,OAAc,CAC/B,MAAMygG,EAAO3iG,EAAQwe,WAAW/b,GAC1BmgG,EAAa5iG,EAAQwe,WAAWsf,GAEhC+kE,EAAS4D,GAAsB9D,EAAMC,EAAY3+F,EAAMg8C,GAE7D,OAAOjgD,EAAQ8wG,eAAejO,EAAOvhG,MAAOw8B,EAAQv8B,MAAOshG,EAAOxhG,QAGpE,MAAM,IAAIS,MAEN,qEAAGW,EAAEnB,MAAMY,UACjB;;;;;;;;;;;;;;;;GChCM,MAAOkoH,GAOXrqH,WAAAA,CACIg/C,EAAuBqB,EAAmBpL,GAP9C90C,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAA6+C,YAAwB,GAOtB7+C,KAAK6+C,YAAcA,EACnB7+C,KAAKkgD,UAAYA,EACjBlgD,KAAK80C,WAAaA,EAClB90C,KAAK+uF,SAAW,yGAIJ/uF,KAAKmqH,0CACLnqH,KAAKoqH,yCACLpqH,KAAKqqH,kDAEEnqE,oCACQA,6BACRA,oCACQA,yCACIA,4BACzBlgD,KAAKsqH,iFAGQtqH,KAAKuqH,gEAI1B,CAEQJ,oBAAAA,GACN,MAAwB,SAApBnqH,KAAK80C,WACA,YAEA,WAEX,CAEQs1E,mBAAAA,GACN,MAAwB,SAApBpqH,KAAK80C,WACA,YAEA,WAEX,CAEQu1E,mBAAAA,GACN,MAAwB,SAApBrqH,KAAK80C,WACA,YAEA,WAEX,CAEQw1E,kBAAAA,GACN,MAAwB,SAApBtqH,KAAK80C,WACA90C,KAAK6+C,YAAY,GAEjB7+C,KAAK6+C,YAAY,EAE5B,CAEQ0rE,sBAAAA,GACN,MAAwB,SAApBvqH,KAAK80C,WACA,4BAEA,2BAEX;;;;;;;;;;;;;;;;GCvCK,MAAM01E,GAAmC,CAC9C7oH,WAAY6N,GACZqH,YAAa,QACb+Q,WAjCI,SAAuBiI,GAK3B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNmmC,UAACA,EAASpL,WAAEA,GAAcluB,EAEhC3O,EACIioC,EAAY,GACZ,IAAM,sDAAsDA,MAEhE,MAAMnK,EAAYxzC,EAAEnB,MAAM,GACpB++C,EAA8B,SAAfrL,EAAyBvyC,EAAEnB,MAAM,GAAKmB,EAAEnB,MAAM,GAC7Dg/C,EAA6B,SAAftL,EAAyBvyC,EAAEnB,MAAM,GAAKmB,EAAEnB,MAAM,GAC5Di3C,EAA6B,SAAfvD,EAAyBvyC,EAAEnB,MAAM,GAAKmB,EAAEnB,MAAM,GAE5DqpH,EAAetqE,EAAcD,EAC7BwqE,EAActqE,EAAaF,EAC3ByqE,EAActyE,GAAc6H,EAAYA,GAMxCwoC,EAAU,IAAIwhC,GAJgB,SAAfp1E,EACjB,CAACiB,EAAW00E,EAAcC,EAAaC,GACvC,CAAC50E,EAAW40E,EAAaF,EAAcC,GAEUxqE,EAAWpL,GAChE,OAAOh1C,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD;;;;;;;;;;;;;;;;GC9BM,MAAOupH,GAKX/qH,WAAAA,CACIutD,EAAmC0pD,GAAU,EAC7Cp2C,EAAqB,KAAMq2C,GAAqB,EAChD8T,GAAoB,GAPxB7qH,KAAA2zE,cAAgB,CAAC,IAAK,KAQpB3zE,KAAK6+C,YAAcuO,EAASvd,SAE5B,MAAMi7E,EAAW19D,EAASpX,SACpB+0E,EAAW39D,EAASnX,QACpB+pE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3BZ,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBjB,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBy1E,EAAa59D,EAASvV,YAAcuV,EAASlX,WAEnD,IAAIqhE,EAAoB,GAAIC,EAAyB,GACjD92C,IAEA62C,EADER,EACkB,uGAEhBr2C,eAEKmqD,EACW,+FAEhBnqD,eAGgB,wDAEdA,2BAKR82C,EAAyB,gCAG3B,MAAMC,EAAiBX,EAAU,kCAAoC,GACjEA,GACF92G,KAAK2zE,cAAc9vE,KAAK,QAGtBkzG,GACF/2G,KAAK2zE,cAAc9vE,KAAK,0BAEtBgnH,GACF7qH,KAAK2zE,cAAc9vE,KAAK,kBAG1B7D,KAAK+uF,SAAW,WACZwoB,0CAE4BnhE,MAAiBC,uCACpB2pE,MAAWC,kNAOpB+K,iCACIA,kXASI11E,kDACKgB,uCAELw0E,+EAIEv1E,oDACKgB,yCAELw0E,6PAWxBtT,cACAD,8CAIR;;;;;;;;;;;;;;;;GCxGI,MAAOyT,GAOXprH,WAAAA,CACIutD,EAAmC0pD,GAAU,EAC7Cp2C,EAAqB,KAAMq2C,GAAqB,EAChD8T,GAAoB,GATxB7qH,KAAA2zE,cAAgB,CAAC,IAAK,KACtB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAQb1uF,KAAK6+C,YAAcuO,EAASvd,SAE5B,MAAMi7E,EAAW19D,EAASpX,SACpB+0E,EAAW39D,EAASnX,QACpB+pE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3BZ,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzBjB,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvB21E,EAAe31E,EAErB,IAAIk6C,EAAW,gCAEf,IAAK,IAAIr2E,EAAI,EAAGA,EAAIk8B,EAAcl8B,IAChC,IAAK,IAAI3Q,EAAI,EAAGA,EAAI8sC,EAAa9sC,IAC/BgnF,GAAY,2BACIr2E,KAAS,EAAJ3Q,mCACV2Q,KAAK3Q,mCACL2Q,KAAK3Q,gBAYpB,IAAK,IAAI2Q,EAAI,EAAGA,EAAIk8B,EAAcl8B,IAChC,IAAK,IAAI+xG,EAAS,EAAGA,EAASD,EAAcC,IAAU,CACpD,MAAM1iH,EAAa,EAAT0iH,EAOV,GALA17B,GAAY,+BACQr2E,EAAIk9B,iCACJ7tC,EAAI8tC,eAGJ,IAAhBF,GACF,GAAI5tC,EAAI8sC,IAYJk6C,GAVEwwB,EAAU,GAAM,EAUN,4EAEW6K,oCACnBC,kCACS3xG,KAAK3Q,8MAIOsiH,oCACV3xG,KAAK3Q,6FAGP2Q,KAAK3Q,kHAIKqiH,oCACnBC,kPAKqBA,iGAIjB3xG,KAAK3Q,gCAAgC2Q,KAAK3Q,yDAE1C2Q,KAAK3Q,yBAAyB2Q,KAAK3Q,4CAK/B,wCACWqiH,wBAA+BC,kCACzC3xG,KAAK3Q,oFAEL2Q,KAAK3Q,yDAGZ2Q,KAAK3Q,cAAc2Q,KAAK3Q,qBAI5BA,EAAI,EAAI8sC,GAAa,CAOvB,MAAM61E,EAAkBnL,EAAU,GAAM,EACpChoG,EAAuBs+B,GACvBA,EAECA,EAAgB,GAAM,GAAK0pE,EAAU,GAAM,GAC3C1pE,EAAgB,GAAM,GAAK0pE,EAAU,GAAM,GAC9CxwB,GAAY,uCACQwwB,EAAU,OAAOmL,8CAEdN,yDACWC,oCACrB3xG,KAAK3Q,EAAI,4EAMlB8tC,EAAgB,IAClBk5C,GAAY,gFAEWq7B,2DACWC,sCACrB3xG,KAAK3Q,kGAEL2Q,KAAK3Q,4DAKpBgnF,GAAY,yBACNr2E,KAAK3Q,EAAI,yCACF2Q,KAAK3Q,gBAAgB2Q,KAAK3Q,EAAI,4BAG3CgnF,GAAY,uCACQ27B,8CAEGN,yDACWC,oCACrB3xG,KAAK3Q,EAAI,kFAGhB2Q,KAAK3Q,EAAI,cAAc2Q,KAAK3Q,EAAI,6BAMxCA,EAAI8sC,IACNk6C,GAAY,sCACWq7B,qBASnB7K,EAAU,GAAM,GAClBxwB,GAAY,yCACYp5C,sDACW00E,kCACtB3xG,KAAK3Q,0FAEL2Q,KAAK3Q,kFAGasiH,kCAClB3xG,KAAK3Q,EAAI,wFAET2Q,KAAK3Q,EAAI,yDAGhB2Q,KAAK3Q,uCACE2Q,KAAK3Q,gBAAgB2Q,KAAK3Q,EAAI,yBAGvCA,EAAI,EAAI8sC,IACVk6C,GAAY,qFAEYp5C,wDACW00E,8GAG7B3xG,KAAK3Q,EAAI,mBAAmB2Q,KAAK3Q,EAAI,wCAI7CgnF,GAAY,wCACWs7B,kCACV3xG,KAAK3Q,oFAEL2Q,KAAK3Q,uEAGE4tC,sDACe00E,kCACtB3xG,KAAK3Q,EAAI,0FAET2Q,KAAK3Q,EAAI,yDAGhB2Q,KAAK3Q,uCACE2Q,KAAK3Q,gBAAgB2Q,KAAK3Q,EAAI,yBAGvCA,EAAI,EAAI8sC,IACVk6C,GAAY,yBACNr2E,KAAK3Q,EAAI,yCACF2Q,KAAK3Q,gBAAgB2Q,KAAK3Q,EAAI,6BAK/CgnF,GAAY,KAIZhnF,EAAI8sC,IACNk6C,GAAY,6BACIr2E,KAAK3Q,YAAY2Q,MAAM3Q,6BACjC2Q,KAAK3Q,mBAAmB2Q,KAAK3Q,gBAAgB2Q,KAAK3Q,qBAGpDA,EAAI,EAAI8sC,IACVk6C,GAAY,+BACIr2E,KAAK3Q,EAAI,YAAY2Q,MAAM3Q,EAAI,+BACzC2Q,KAAK3Q,EAAI,oCACG2Q,KAAK3Q,EAAI,gBAAgB2Q,KAAK3Q,EAAI,WAM5D,IAAK,IAAI2Q,EAAI,EAAGA,EAAIk8B,EAAcl8B,IAChC,IAAK,IAAI3Q,EAAI,EAAGA,EAAI8sC,EAAa9sC,IAC/BgnF,GAAY,gBAAgBr2E,KAAK3Q,SAAS2Q,KAAK3Q,KAInD,IAAI8uG,EAAoB,GAAIC,EAAyB,GACjD92C,IAEA62C,EADER,EACkB,oGAEhBr2C,eAEKmqD,EACW,4FAEhBnqD,eAGgB,wCAChBA,eAIN82C,EAAyB,gCAG3B,MAAMC,EAAiBX,EAAU,kCAAoC,GACjEA,GACF92G,KAAK2zE,cAAc9vE,KAAK,QAGtBkzG,GACF/2G,KAAK2zE,cAAc9vE,KAAK,0BAEtBgnH,GACF7qH,KAAK2zE,cAAc9vE,KAAK,kBAG1B7D,KAAK+uF,SAAW,WACZwoB,0CAE4BnhE,MAAiBC,uCACpB2pE,MAAWC,gWAelCxwB,gDAGAgoB,cACAD,8CAIR;;;;;;;;;;;;;;;;GCzRK,MAAM6T,GAA4C,CACvD1pH,WAAY8N,GACZoH,YAAa,QACb+Q,WAtCI,SAAgCiI,GAKpC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,GAAU1P,GACd/R,QAACA,EAAOuU,IAAEA,EAAGw4B,UAAEA,EAASwE,gBAAEA,GAAmB3yB,EAEnD,IAAI0kG,EAAav2E,EACC,MAAdu2E,IACFA,EAAa,CAAC,EAAG,IAGnBrzG,EACI4gE,GAA4C7wE,EAASsjH,IACrD,IACI,gFAAkBtjH,oBAA0BsjH,OAEpD,MAAMl+D,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAA2C4G,EAASsjH,EAC3D/uG,EAAKg9B,GAAiB,GAE1B,IAAImvC,EAQJ,OALEA,EAFEv8E,IAAMxB,QAAQ,6BAA+ByiD,EAAS/W,aAAe,GACrE+W,EAASvV,YAAcuV,EAASlX,YAAe,EACvC,IAAI+0E,GAA6B79D,GAEjC,IAAIw9D,GAAuBx9D,GAGhCttD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGknB,GAAS,UACvD;;;;;;;;;;;;;;;;GCpCM,MAAO8hG,GAKX1rH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,IAAK,MAKpB3zE,KAAK6+C,YAAcuO,EAASvY,YAE5B,MAAMuB,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2pE,EAAS5yD,EAASzW,QAAQG,IAC1BmpE,EAAU7yD,EAASzW,QAAQK,KAC3Bg0E,EAAa59D,EAASvV,YAAcuV,EAASlX,WAEnDl2C,KAAK+uF,SAAW,2MAOIi8B,sHAKM59D,EAASrX,sDACLqX,EAASxW,sDACVR,OAAkB4pE,yCAEjB5yD,EAASpX,4FAIPoX,EAASvW,uDACVR,OAAiB4pE,2CAEhB7yD,EAASnX,mSAa3C,EAGI,MAAOu1E,GAKX3rH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,KAAM,KAKrB3zE,KAAK6+C,YAAcuO,EAASjY,QAE5B,MAAMG,EAAe8X,EAAS9X,aACxBC,EAAc6X,EAAS7X,YACvBa,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YAEvB2pE,EAAS1qE,EAAe,EAAI8X,EAASzW,QAAQG,IAC7CmpE,EAAU1qE,EAAc,EAAI6X,EAASzW,QAAQK,KAC7Cg0E,EAAa59D,EAASvV,YAAcuV,EAASlX,WAEnDl2C,KAAK+uF,SAAW,oCACaixB,MAAWC,6TAYZ3qE,6DACgBc,6CAEZgX,EAASxW,oIAKpBtB,kDAESC,+DACgBc,+CAEZ+W,EAASvW,4JAMpBtB,oGAGSy1E,2CACNA,+PAU5B;;;;;;;;;;;;;;;;GCjGK,MAAMS,GAA0D,CACrE9pH,WAAY+N,GACZmH,YAAa,QACb+Q,WApBI,SAA8CiI,GAKlD,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACmkB,GAAEA,GAAM3M,GACV/R,QAACA,EAAO+sC,UAAEA,EAASx4B,IAAEA,EAAGg9B,gBAAEA,EAAe1E,YAAEA,GAAejuB,EAE1DwmC,EAAWyrB,GACbt2E,EAAEnB,MAA2CyzC,EAAa7sC,EAC1D+sC,EAAWx4B,EAAKg9B,GAAiB,GAE/BmvC,EAAU,IAAI6iC,GAAgCn+D,GACpD,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGmkB,GAAK,UACnD;;;;;;;;;;;;;;;;GCEO,MAAMglG,GAAyD,CACpE/pH,WAAYgO,GACZkH,YAAa,QACb+Q,WApBI,SAA6CiI,GAKjD,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAE+C,OAAEA,GAAU1P,GACf/R,QAACA,EAAO+sC,UAAEA,EAASx4B,IAAEA,EAAGg9B,gBAAEA,EAAep+B,WAAEA,GAAcyL,EAEzDwmC,EAAWyrB,GACb19D,EAAYsO,EAAOroB,MAA2C4G,EAC9D+sC,EAAWx4B,EAAKg9B,GAAiB,GAE/BmvC,EAAU,IAAI8iC,GAA+Bp+D,GACnD,OAAOttD,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,EAAI+C,GAAS,UACxD;;;;;;;;;;;;;;;;GClBM,MAAOkiG,GAKX9rH,WAAAA,CAAYkE,GAJZ/D,KAAA2zE,cAAgB,CAAC,KAKf3zE,KAAK6+C,YAAc,CAAC96C,EAAMA,GAC1B/D,KAAK+uF,SAAW,qLAOlB;;;;;;;;;;;;;;;;GCWK,MAAM68B,GAA2B,CACtCjqH,WAAYiO,GACZiH,YAAa,QACb+Q,WAxBI,SAAeiI,GAEnB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAEN81B,EAAW,IAAIttC,EAAEnB,SAAUmB,EAAEnB,OAC7BokG,EAAQvtF,EAAmB1V,EAAEnB,OAE7ByqH,EAAO1yE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAO,CAACokG,MAEtD9c,EAAU,IAAIijC,GAAYnmB,GAC1Bt/E,EAAMpmB,EAAQuuG,gBAAgB3lB,EAAS,CAACmjC,GAAOA,EAAKxqH,OAEpDwmB,EAAMsxB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAK/D,OAHA/vC,EAAQmuG,8BAA8B4d,GACtC/rH,EAAQmuG,8BAA8B/nF,GAE/B2B,CACT;;;;;;;;;;;;;;;;GCtBM,MAAOikG,GAKXjsH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,IAAK,KAKpB3zE,KAAK6+C,YAAcuO,EAASvd,SAE5B,MAAMmG,SACJA,EAAQC,QACRA,EAAOU,QACPA,EAAOP,aACPA,EAAYC,YACZA,EAAWf,aACXA,EAAYC,YACZA,EAAWe,eACXA,EAAcC,cACdA,GACE6W,GAEGtW,IAAKkpE,EAAQhpE,KAAMipE,GAAWtpE,EAErC32C,KAAK+uF,SAAW,uCACgB34C,MAAiBC,uCACpB2pE,MAAWC,+YAad3qE,6CACGgB,yCAECN,yCACAT,iDACGgB,6CAECN,uXAiBpC;;;;;;;;;;;;;;;;GCjCK,MAAM81E,GAAiC,CAC5CpqH,WAAYkO,GACZgH,YAAa,QACb+Q,WA5BI,SAAqBiI,GAKzB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,GAAU1P,GACd/R,QAACA,EAAOuU,IAAEA,EAAGw4B,UAAEA,GAAanuB,EAE5BwmC,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAAmC4G,EAASuU,EACnD,OAAyBw4B,GAC7B,IAAIltB,EAEJ,MAAM6gE,EAAU,IAAIojC,GAAkB1+D,GACtCvlC,EAAM/nB,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAGknB,GAAS,WAEpD,MAAM8yF,EACFpjE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGslB,GAAM/nB,UAAS8mB,MAAO,CAACxlB,MAAOgsD,EAASvd,YAGhE,OAFA/vC,EAAQmuG,8BAA8BpmF,GAE/B00F,CACT,GCbMx5D,GAAM2yD,GAAgB,CAACzJ,UAbjB,0CAaiC0J,gBAX1B,iQAaNqW,GAA0B,CACrCrqH,WAAYoO,GACZ8G,YAAa,QACb+Q,WAAYm7B,ICEDkpE,GAA8B,CACzCtqH,WAAYqO,GACZ6G,YAAa,QACb+Q,WAbGiI,IACC,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBnJ,GAACA,EAAEJ,EAAEA,GAAKvM,EAEV2uE,EAAUv8E,IAAMxB,QAAQ,gCAC1B,IAAI6pG,GAXS,0IAW6B9tF,EAAGtlB,MAAOklB,EAAEllB,OACtD,IAAImzG,GAbE,yCAauB7tF,EAAGtlB,MAAOklB,EAAEllB,OAC7C,OAAOtB,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,EAAIJ,GAAII,EAAGrlB,MAAM,GCXnD+/C,GAAQ40D,GACjB,CAAC/J,UAHS,wBAGS0J,gBAPF,kCAOiCt0G,MAAO,SAEhD6qH,GAA4B,CACvCvqH,WAAYuO,GACZ2G,YAAa,QACb+Q,WAAYw5B,ICMD6B,GAAMyyD,GAAgB,CAACzJ,UAjBxB,wNAIEpzB,qBACCA,qBACAA,qBACAA,qBACAA,qBACAA,qKAUFszC,GAA0B,CACrCxqH,WAAYsO,GACZ4G,YAAa,QACb+Q,WAAYq7B,ICrBDmpE,GAAM,iBACN3yG,GAAMi8F,GACf,CAACzJ,UAAWmgB,GAAKzW,gBAAiByW,GAAKxW,cAAelP,KAE7C2lB,GAA0B,CACrC1qH,WAAYwO,GACZ0G,YAAa,QACb+Q,WAAYnO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPR,SAAU2pC,GAAWvzB,GAKzB,MAAM9V,OAACA,EAAM6M,MAAEA,EAAK9mB,QAAEA,GAAW+vB,GAC3BixB,IAACA,GAAOl6B,GACR1L,MAACA,GAASnB,EAEVqB,EAAYF,EAAM9Z,MAAMY,OACxBoD,EAAW8V,EAAM9Z,MAAMiE,QAC7B,IAAIinH,EAAOxrE,EAWX,OAVIA,EAAM,IAER7oC,IACMmD,EAAY,IAAM0lC,GACpB,IAAM,mCAAoC1lC,EAAY,OAClDA,OACRkxG,EAAOlxG,EAAY0lC,EAAM,GAE3B17C,EAASynC,OAAOy/E,EAAM,EAAG,GAElBnzE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2Y,GAAQpb,UAAS8mB,MAAO,CAACxlB,MAAOgE,IAC9D,CAEO,MAAMmnH,GAAiC,CAC5C5qH,WAAYyO,GACZyG,YAAa,QACb+Q,WAAYw7B,IC7BRopE,GAAQ,uBAEDlpE,GAAQoyD,GACjB,CAACzJ,UAAWugB,GAAO7W,gBAAiB6W,GAAO5W,cAAejP,KAEjD8lB,GAA4B,CACvC9qH,WAAY0O,GACZwG,YAAa,QACb+Q,WAAY07B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVR,MAAOopE,GAKX7sH,WAAAA,CACI8sH,EAA0BxxG,EAC1Bg+D,GANJn5E,KAAA2zE,cAAgB,CAAC,OAAQ,QAOvB,MAAMi5C,EAAWzxG,EAAW,GAC5Bnb,KAAK6+C,YAAc1jC,EAEnB,MAAM0xG,EACF1zC,EAAU,SAASh3E,KAAK29D,KAAO,UAAU39D,KAAK29D,KAC5CgtD,EAAoB3zC,EAAU,GAAGyzC,MAAe,MAEtD,IAAIG,EACJ,GAAkB,SAAdJ,EACFI,EAAW,wCACN,IAAkB,SAAdJ,EAGT,MAAM,IAAI/qH,MACN,sDAAsD+qH,MAH1DI,EAAW,oCAMb/sH,KAAK+uF,SAAW,4CACqB89B,+FAG/BE,gHAIwCH,sKAMpBA,oWAS2BE,wLAWvD;;;;;;;;;;;;;;;;GCrDI,SAAUE,GACZzqH,EAAe42E,EAAkBr5E,GACnC,MAAMi2G,EAAQj2G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,QAE9B4sH,EAAYh1G,EAAmB1V,EAAEnB,OAEjCu3D,EAAqBp2D,EAAEnB,MAAMmB,EAAEnB,MAAMY,OAAS,GAM9CqtC,EAHU8J,GACZ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAO,CAH5B6rH,EAAYt0D,EAGwBA,MAE3Bv3D,MACjB82G,EAAc,IAAIwU,GAAW,OAAQr9E,EAAQ8pC,GAC7Ci/B,EAAc,IAAIsU,GAAW,OAAQr9E,EAAQ8pC,GAE7Cp/D,EAAS,CACb,CACE1Z,OAAQ01G,EAAM5H,mBAAmBl+E,KAAK5vB,OACtCgB,MAAO00G,EAAM5H,mBAAmBl+E,KAAK5uB,MACrCD,MAAOiuC,GAET,CACEhvC,OAAQ01G,EAAM5H,mBAAmBj+E,KAAK7vB,OACtCgB,MAAO00G,EAAM5H,mBAAmBj+E,KAAK7uB,MACrCD,MAAOiuC,IAILgpE,EAAWv4G,EAAQuuG,gBAAgB6J,EAAan+F,EAAQ,WACxDu+F,EAAWx4G,EAAQuuG,gBAAgB+J,EAAar+F,EAAQ,WAExD08F,EACF1mF,GAAQ,CAAChW,OAAQ,CAACkW,KAAMooF,EAAUnoF,KAAMooF,GAAWx4G,YAEvDA,EAAQmuG,8BAA8BoK,GACtCv4G,EAAQmuG,8BAA8BqK,GAEtC,MAAM4U,EACF/zE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGk0G,GAAgB32G,UAAS8mB,MAAO,CAACxlB,MAAOmB,EAAEnB,SAInE,OAFAtB,EAAQmuG,8BAA8Bif,GAE/BA,CACT;;;;;;;;;;;;;;;;GCtCO,MAAMC,GAA0B,CACrCxrH,WAAY2O,GACZuG,YAAa,QACb+Q,WAXI,SAAciI,GAElB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpB3U,MAACA,GAASnB,EAEhB,OAAOizG,GAAQ9xG,GAAO,EAAqBpb,EAC7C;;;;;;;;;;;;;;;;GCTM,MAAOstH,GAOXvtH,WAAAA,CAAYuB,EAAiBlC,GAL7Bc,KAAA6+C,YAAwB,GAMtB7+C,KAAK2zE,cAAgB,CAAC,KACtB3zE,KAAK6+C,YAAcz9C,EAEnBpB,KAAK+uF,SAAW,mJAOlB,CAEAkzB,kBAAAA,CAAmB/iH,GACjB,MAAO,CAACiqG,EAAqBuJ,KACN,MAAjB1yG,KAAKqtH,WACPrtH,KAAKqtH,SAAWlkB,EAAM9S,0BAA0Bqc,EAAc,UAEhEvJ,EAAM/lB,GAAG2vB,UAAU/yG,KAAKqtH,SAAUnuH,EAAM,CAE5C;;;;;;;;;;;;;;;;GCzBI,SAAU2c,GAAKgU,GAEnB,MAAM/vB,QAACA,EAAO8mB,MAAEA,GAASiJ,GACnBzuB,MAACA,EAAKlC,MAAEA,GAAS0nB,EACvB,IAAIvlB,MAACA,GAASulB,EAId,GAFAvlB,EAAQA,GAAS4W,EAAgB/Y,GAEnB,WAAVmC,EAAoB,CAEtB,MAAMF,EAAS8W,EAAuB5W,EAAO4W,EAAmB7W,IAEhE,OADAD,EAAO0a,KAAK3c,GACLY,EAAQ8wG,eAAexvG,EAAOC,EAAOF,GACvC,CACL,MAAMunF,EAAU,IAAI0kC,GAAYhsH,EAAOlC,GACjCoyG,EAAc5oB,EAAQu5B,mBAAmB/iH,GAC/C,OAAOY,EAAQuuG,gBAAgB3lB,EAAS,GAAIrnF,EAAOiwG,GAEvD,CAEO,MAAMgc,GAA2B,CACtC3rH,WAAY4O,GACZsG,YAAa,QACb+Q,WAAY/L;;;;;;;;;;;;;;;;GC1BR,MAAO0xG,GAKX1tH,WAAAA,CAAY6oH,GAJZ1oH,KAAA2zE,cAAgB,CAAC,SACjB3zE,KAAA6+C,YAAwB,GAItB,MAAM23B,EAAakyC,EAAW,GAC9B1oH,KAAK6+C,YAAc6pE,EAEnB1oH,KAAK+uF,SAAW,gIAKKvY,8EAEcA,0PAQrC;;;;;;;;;;;;;;;;GCpBK,MAAMg3C,GAAoC,CAC/C7rH,WAAY6O,GACZqG,YAAa,QACb+Q,WAAYA,EAAE7N,SAAQja,cACpB,MAAM8xB,MAACA,GAAS7X,EACV87F,EAAe/1G,EAEf4oF,EAAU,IAAI6kC,GAAsB37F,EAAmBxwB,OAE7D,OADey0G,EAAaxH,gBAAgB3lB,EAAS,CAAC92D,GAAQA,EAAMvwB,MACvD,GCVXosH,GAAQ,mBAEDrkH,GAAQssG,GACjB,CAACzJ,UAAWwhB,GAAO9X,gBAAiB8X,GAAO7X,cAAehP,KAEjD8mB,GAA4B,CACvC/rH,WAAY8O,GACZoG,YAAa,QACb+Q,WAAYxe,IC8BDupC,GAAWqjE,GACpB,CAAC/J,UApCW,uPAoCS0J,gBAxBF,sgBAwBmCt0G,MAAO,UAEpDssH,GAA+B,CAC1ChsH,WAAY+O,GACZmG,YAAa,QACb+Q,WAAY+qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CR,MAAOi7E,GAKX/tH,WAAAA,CAAYg/C,GAJZ7+C,KAAA2zE,cAAgB,CAAC,KAKf,MAAMmb,EAAO7B,MACNvjD,EAAQtlC,GAAWy6C,EAC1B7+C,KAAK6+C,YAAcA,EACnB7+C,KAAK+uF,SAAW,wNAMmC3qF,QAAYslC,kCAE3ColD,EAAKzB,0WAe3B;;;;;;;;;;;;;;;;GChCI,MAAOwgC,GAOXhuH,WAAAA,CAAYg/C,GANZ7+C,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAGb,MAAMI,EAAO7B,MACNvjD,EAAQtlC,GAAWy6C,EAC1B7+C,KAAK6+C,YAAcA,EACnB7+C,KAAK+uF,SAAW,0bAeU3qF,QAAYslC,oCACdolD,EAAKzB,ybAgBvByB,EAAK30E,iCAGb;;;;;;;;;;;;;;;;GCxCK,MAAM2zG,GAAiC,CAC5CnsH,WAAY0U,GACZQ,YAAa,QACb+Q,WAKF,SAAoBiI,GAKlB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,EACjC,IAAI8Y,OAACA,GAAU5uB,EACf,MAAM6uB,YAACA,GAAehiB,EAEhBmiB,EAAwC,oBAAtBK,kBACpBT,aAAkBS,iBAChBJ,EAAwC,oBAAtBK,kBACpBV,aAAkBU,iBAChBH,EAAwC,oBAAjBK,aACzBZ,aAAkBY,aACfnlC,EAAOslC,GAAUX,EACpB,CACGJ,EAA4BgB,WAC5BhB,EAA4BiB,aAE/B,CAACjB,EAAOvkC,MAAOukC,EAAOe,QAEpBmlD,EAA6B,CAACnlD,EAAQtlC,GACtCyrC,EAAW,CAACnG,EAAQtlC,EAAOwkC,IAE7BI,GAAWD,GAAWG,KACG,MAAvBV,KACFA,GAAsBva,SAAS+P,cAAc,UAAUsL,WAAW,OAGpEd,GAAoBsB,OAAO1lC,MAAQA,EACnCokC,GAAoBsB,OAAOJ,OAASA,EACpClB,GAAoBuB,UAChBpB,EACA,EAAG,EAAGvkC,EAAOslC,GACjBf,EAASH,GAAoBsB,QAG/B,MAAMikF,EAAkBjuH,EAAQ8wG,eAAe/hB,EAAU,SAEzD/uF,EAAQ+/F,QAAQz/F,IAAI2tH,EAAgB1tH,QAAQwpG,MAAQ1lB,GAAa2nB,OACjEhsG,EAAQqpG,MAAM1V,yBACV3zF,EAAQmwG,WAAW8d,EAAgB1tH,QAASsoC,GAChD,MAAM+/C,EAAUv8E,IAAMxB,QAAQ,cAC1B,IAAIkjH,GAAwBh+E,GAC5B,IAAI+9E,GAAkB/9E,GACpB3pB,EAAMpmB,EAAQuuG,gBAAgB3lB,EAAS,CAACqlC,GAAkB,SAEhE,OADAjuH,EAAQmB,YAAY8sH,EAAgB1tH,QAC7B6lB,CACT;;;;;;;;;;;;;;;;KAnDA,IAAIsiB,GC+EG,MAAMwlF,GAAkC,CAC7CrsH,WAAY6U,GACZK,YAAa,QACb+Q,WAxFI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,EAAM+7B,KAAEA,EAAIwb,uBAAEA,GAA0BjnD,GAC5C/R,QACJA,EAAOuU,IACPA,EAAGu4B,WACHA,EAAUC,UACVA,EAASwE,gBACTA,EAAemnB,WACfA,EAAUO,eACVA,GACEr6C,EAEEgvB,EAAcijC,GAAqC/jC,GACnDsY,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAA2C4G,EAAS+sC,EAAWx4B,EACtEg9B,GAAiB,EAAuB3D,GAC5C,IAAI/tB,EACJ,MAAM+zF,EAA8B,GAEpC,GAA8B,IAA1BxuD,EAAS9X,cAA+C,IAAzB8X,EAAS7X,aACZ,IAA5B6X,EAAS9W,gBAAmD,IAA3B8W,EAAS7W,eAChB,IAA1B6W,EAAShX,cAA+C,IAAzBgX,EAAS/W,aACb,SAA1B+W,EAASzW,QAAQ/1B,MAA6C,UAA1BwsC,EAASzW,QAAQ/1B,KAWnD,GAAIzU,IAAMxB,QAAQ,sBAAuC,IAAfpI,EAAEnB,MAAM,GACvDymB,EAAMw/F,GAAiB,CACrB9kH,IACAknB,SACA2jC,WACAttD,UACA0lD,OACAkb,aACAM,yBACAC,uBAEG,CACL,MAAM46C,EAAkB,MAARr2D,EACVs2D,EAAsD,MAA1B96C,EAC5B+6C,EAAmC,cAAfr7C,EACpBs7C,EACFt7C,EAAag2C,GAA6Bh2C,GAAY,GAAS,KAC7DgoB,EAAU,IAAIq9B,GAChB34D,EAAUyuD,EAASG,EAAiBF,EACpCC,GACEhiG,EAAuB,CAACxX,EAAGknB,GAOjC,GANI+7B,GACFzrC,EAAOlW,KAAK2hD,GAEVwb,GACFjnD,EAAOlW,KAAKm9D,GAEV+6C,EAAmB,CACrB,MAAMO,EAAkBx8G,EAAQ8wG,eAC5B,GAAI,UACJ34F,GAAuBgpD,EAAmC,YAC9DlnD,EAAOlW,KAAKy4G,GACZV,EAAc/3G,KAAKy4G,GAErBz0F,EAAM/nB,EAAQuuG,gBAAgB3lB,EAAS3uE,EAAQ,gBA5C/C8N,EAAM6+F,GAAe,CACnBnkH,IACAknB,SACA2jC,WACAttD,UACA0lD,OACAkb,aACAM,yBACAC,mBAuCJ,MAAMs7C,EACFpjE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGslB,GAAM/nB,UAAS8mB,MAAO,CAACxlB,MAAOgsD,EAASvd,YAKhE,OAHA+rE,EAAc/3G,KAAKgkB,GACnB+zF,EAAcv0G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAE1D+wG,CACT;;;;;;;;;;;;;;;;GCdO,MAAM0R,GAA2C,CACtDtsH,WAAY8U,GACZI,YAAa,QACb+Q,WA1EI,SAA+BiI,GAKnC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACknB,OAAEA,EAAM+7B,KAAEA,EAAIwb,uBAAEA,GAA0BjnD,GAC5C/R,QAACA,EAAOuU,IAAEA,EAAGw4B,UAAEA,EAASwE,gBAAEA,EAAemnB,WAAEA,EAAUO,eAAEA,GACzDr6C,EAEEg1F,EAA8B,GAEpC,IAAI0P,EAAav2E,EACC,MAAdu2E,IACFA,EAAa,CAAC,EAAG,IAGnBrzG,EACI4gE,GAA4C7wE,EAASsjH,IACrD,IACI,gFAAkBtjH,oBAA0BsjH,OAEpD,MAAMl+D,EAAWyrB,GACbt2E,EAAEnB,MACFqoB,EAAOroB,MAA2C4G,EAASsjH,EAC3D/uG,EAAKg9B,GAAiB,GAEpB20E,EAA0B/hH,IAAMxB,QAAQ,6BAC1CyiD,EAAS/W,aAAe,GACxB+W,EAASvV,YAAcuV,EAASlX,YAAe,EAC7C8lE,EAAkBt7C,EACpBg2C,GAA6Bh2C,EAAYwtD,GACzC,KACE1J,EAA8B,CAACjiH,EAAGknB,GAElCoyF,EAAkB,MAARr2D,EACVs2D,EAAsD,MAA1B96C,EAC5B+6C,EAAmC,cAAfr7C,EAQ1B,GANIm7C,GACF2I,EAAc3gH,KAAK2hD,GAEjBs2D,GACF0I,EAAc3gH,KAAKm9D,GAEjB+6C,EAAmB,CACrB,MAAMO,EAAkBx8G,EAAQ8wG,eAC5B,GAAI,UACJ34F,GAAuBgpD,EAAmC,YAC9DujD,EAAc3gH,KAAKy4G,GACnBV,EAAc/3G,KAAKy4G,GAGrB,IAAI5zB,EAEFA,EADEwlC,EACQ,IAAIjD,GACV79D,EAAUyuD,EAASG,EAAiBF,EACpCC,GAEM,IAAI6O,GACVx9D,EAAUyuD,EAASG,EAAiBF,EACpCC,GAGN,MAAMx8G,EAASO,EAAQuuG,gBAAgB3lB,EAAS87B,EAAe,WAI/D,OAFA5I,EAAcv0G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAE1DjM,CACT,GC1EM,MAAO4uH,GAIXtuH,WAAAA,CACY4rC,EAA0BzjC,EAAmB5G,GAA7CpB,KAAAyrC,SAAAA,EAA0BzrC,KAAAgI,QAAAA,EAJtChI,KAAA2zE,cAAgB,CAAC,IAAK,WAKpB3zE,KAAK6+C,YAAcz9C,EACnB,MAAMgtH,EAAcrzB,GAAkB/yF,EAAQhG,QACxCX,EAAQ05F,GAAkB35F,EAAMY,QAChCqsH,EAAeruH,KAAKyrC,SAAW,EAAI,aAAe,UACxDzrC,KAAK+uF,SAAW,aACVq/B,eAAyBA,KAAepuH,KAAKgI,gDAE3C3G,iGAEoBrB,KAAKyrC,mHAEC4iF,yFAKpC;;;;;;;;;;;;;;;;GCgBK,MAAMC,GAA+B,CAC1C3sH,WAAYkP,GACZgG,YAAa,QACb+Q,WArCI,SACFiI,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBvkB,OAACA,EAAMijB,QAAEA,GAAWxU,EAEpBkxB,EAAe1c,EAAQntB,MACvB8pC,EAAYD,EAAaA,EAAajpC,OAAS,IAE9CopC,EAAamjF,EAAWljF,EAAWrjC,GACtC6wE,GAAgCvtE,EAAQijB,GAEtCigG,EAAiBr1E,GACnB,CAACp/B,OAAQ,CAACxX,EAAGgsB,GAAUzuB,UAAS8mB,MAAO,CAACxlB,MAAO,CAACmtH,EAAWrjF,MACzDujF,EAAWt1E,GAAQ,CACvBp/B,OAAQ,CAACxX,EAAG+I,GACZxL,UACA8mB,MAAO,CAACxlB,MAAO,CAAE6W,EAAmB3M,EAAOlK,OAASiqC,EAAYA,MAG5Dq9C,EACF,IAAIylC,GAAgBjjF,EAAWljC,EAAS,CAACumH,EAAWljF,IAClDnlB,EAAMpmB,EAAQuuG,gBAChB3lB,EAAS,CAAC+lC,EAAUD,GAAiBC,EAASptH,OAE5Cs1E,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,MAAOgqC,KAMvD,OAJAtrC,EAAQmuG,8BAA8BugB,GACtC1uH,EAAQmuG,8BAA8BwgB,GACtC3uH,EAAQmuG,8BAA8B/nF,GAE/BywD,CACT;;;;;;;;;;;;;;;;GCnCM,MAAO+3C,GAMX7uH,WAAAA,CAAYkoD,EAAkBlJ,GAL9B7+C,KAAA2zE,cAAgB,CAAC,IAAK,WAMpB3zE,KAAK6+C,YAAcA,EACnB7+C,KAAKwF,KAAOq5C,EAAY78C,OACxB,MAAMX,EAAQ05F,GAAkB/6F,KAAKwF,MAC/BojG,EAYV,SAAyB7gD,EAAkBxiD,GACzC,MAAMopH,EAAgB,CAAC,UAAW,UAAW,UAAW,WAElD/lB,EAAe,GACrB,IAAK,IAAI/lG,EAAI,EAAGA,EAAIklD,EAAO/lD,OAAQa,IACvB,IAANA,EACF+lG,EAAa/kG,KAAK,qCAElB+kG,EAAa/kG,KAAK,GAAG8qH,EAAc9rH,MAGvC,OAAO+lG,EAAah9F,MACtB;;;;;;;;;;;;;;;;GAxByB+gG,CAAgB5kD,GAErC/nD,KAAK+uF,SAAW,kCAEV1tF,wDACeunG,qBAGvB,ECmDK,MAAMgmB,GAA+B,CAC1CjtH,WAAYiP,GACZiG,YAAa,QACb+Q,WAnEI,SAAmBiI,GAKvB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACgsB,QAAEA,GAAWxU,GACfxU,KAACA,EAAI4+C,UAAEA,GAAav9B,EAGpBkzE,EAAYjhB,GACdt2E,EAAGgsB,EAFYtW,EAAoB1S,EAAMhD,EAAEnB,OAAO,GAE1B+iD,GAEtB0qE,EAAc52G,EAAmBsW,EAAQntB,OAEzC0hH,EAAY,GAEZ2L,EAAWt1E,GAAQ,CACvBp/B,OAAQ,CAACxX,KACTzC,UACA8mB,MAAO,CACLxlB,MAAO,CACL04F,EAAU/jD,UAAW+jD,EAAUthB,UAAWshB,EAAUhxF,QACpDgxF,EAAUzuD,cAKVyjF,EAAe31E,GAAQ,CAC3Bp/B,OAAQ,CAACxX,EAAGgsB,GACZzuB,UACA8mB,MAAO,CAACxlB,MAAO,CAAC04F,EAAU/jD,UAAW84E,EAAc/0B,EAAU/jD,cAG/D+sE,EAAUj/G,KAAK4qH,GACf3L,EAAUj/G,KAAKirH,GAEf,MAAM1rB,EAAqB,CACzBtJ,EAAU/jD,UAAW+jD,EAAUthB,UAAWq2C,EAAc/0B,EAAU/jD,UAClE+jD,EAAUzuD,WAGZ,GAAIvrC,EAAQuwG,mBAAmB,CAAC9tG,EAAGgsB,KAAyB,WAAZhsB,EAAElB,MAAoB,CACpE,MAAM8hG,EAAarjG,EAAQwe,WAAWwwG,GAChCrsB,EAAO3iG,EAAQwe,WAAWmwG,GAC1B9rB,EAASkE,GAAgBpE,EAAMU,EAAYC,GAIjD,OAFA0f,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAEtD1L,EAAQ8wG,eACX9W,EAAUj7C,YAAa8jD,EAAOthG,MAAOshG,EAAOxhG,QAGlD,MAAMunF,EAAU,IAAIgmC,GAAcD,EAASrtH,MAAOgiG,GAC5Cl9E,EAAMpmB,EAAQuuG,gBAChB3lB,EAAS,CAAC+lC,EAAUK,GAAeL,EAASptH,OAChDyhH,EAAUj/G,KAAKqiB,GAEf,MAAMywD,EAAWx9B,GACb,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,MAAO04F,EAAUj7C,eAEzD,OADAikE,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KACtDmrE,CACT,GC5DavyB,GAAU4xD,GAAiB,CACtC/J,UANc,uBAOd0J,gBANqB,wCAOrBC,cAAe9O,GACfzlG,MAAO,SAGI0tH,GAA8B,CACzCptH,WAAYmP,GACZ+F,YAAa,QACb+Q,WAAYw8B,ICZDE,GAAe0xD,GAAiB,CAC3C/J,UANoB,wBAOpB0J,gBAN2B,6CAO3Bt0G,MAAO,SAGI2tH,GAAmC,CAC9CrtH,WAAYoP,GACZ8F,YAAa,QACb+Q,WAAY08B;;;;;;;;;;;;;;;;GCHP,MAAM2qE,GAA2B,CACtCttH,WAAYsP,GACZ4F,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AAXI,SAAeiI,GAEnB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpB3U,MAACA,GAASnB,EAEhB,OAAOizG,GAAQ9xG,GAAO,EAAoBpb,EAC5C,GCPa+G,GAAW6uG,GAAgB,CAACzJ,UAFvB,wCAE6C5qG,MAAO,SAEzD6tH,GAA+B,CAC1CvtH,WAAYwP,GACZ0F,YAAa,QACb+Q,WAAY/gB,ICLD69C,GAAQgxD,GAAgB,CAACzJ,UAFvB,0BAE0C5qG,MAAO,SAEnD8tH,GAA4B,CACvCxtH,WAAYyP,GACZyF,YAAa,QACb+Q,WAAY88B,ICLD99C,GAAQ8uG,GAAgB,CAACzJ,UAFvB,0BAE0C5qG,MAAO,SAEnD+tH,GAA4B,CACvCztH,WAAY0P,GACZwF,YAAa,QACb+Q,WAAYhhB,ICADo+C,GAAOgxD,GAAiB,CACnC/J,UANW,uBAOX0J,gBANkB,qCAOlBC,cAAe7O,GACf1lG,MAAO,SAGIguH,GAA2B,CACtC1tH,WAAY4P,GACZsF,YAAa,QACb+Q,WAAYo9B,ICXDE,GAAY8wD,GACrB,CAAC/J,UANqB,wBAME0J,gBALK,0CAK+Bt0G,MAAO,SAE1DiuH,GAAgC,CAC3C3tH,WAAY6P,GACZqF,YAAa,QACb+Q,WAAYs9B;;;;;;;;;;;;;;;;GCAP,MAAMqqE,GAA+B,CAC1C5tH,WAAY8P,GACZoF,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AAbI,SACFiI,GACF,MAAM/vB,QAACA,EAAO8mB,MAAEA,GAASiJ,GACnB/nB,MAACA,EAAK6mC,KAAEA,EAAIhoC,IAAEA,GAAOigB,EAGrB27E,EAAUyE,GAAgBl/F,EAAO6mC,EAAMhoC,GAC7C,OAAO7G,EAAQ8wG,eAAe,CAACrO,EAAQvgG,QAAS,UAAWugG,EAC7D,GCKalnF,GAAMq6F,GACf,CAACzJ,UAfO,6CAeS0J,gBAZF,4RAY+BC,cAAe3O,KAEpDuoB,GAA0B,CACrC7tH,WAAY+P,GACZmF,YAAa,QACb+Q,WAAYvM,ICnBDsqC,GAAQ+vD,GAAgB,CAACzJ,UAFxB,yBAIDwjB,GAA4B,CACvC9tH,WAAYgQ,GACZkF,YAAa,QACb+Q,WAAY+9B,ICCD6C,GAAawtD,GAAiB,CACzC/J,UARkB,sCASlB0J,gBARyB,6GASzBt0G,MAAO,SAGIquH,GAAiC,CAC5C/tH,WAAYiQ,GACZiF,YAAa,QACb+Q,WAAY4gC,ICfDE,GAAagtD,GAAgB,CAACzJ,UAFvB,+BAIP0jB,GAAiC,CAC5ChuH,WAAYkQ,GACZgF,YAAa,QACb+Q,WAAY8gC,ICEDE,GAAYotD,GACrB,CAAC/J,UATc,sCASS0J,gBARF,4HAQsCt0G,MAAO,SAE1DuuH,GAAgC,CAC3CjuH,WAAYmQ,GACZ+E,YAAa,QACb+Q,WAAYghC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBR,MAAOinE,GAKXhwH,WAAAA,CACIwvC,EAAkBygF,EAAgBtqE,EAAcT,EAChDU,GANJzlD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAA6+C,YAAwB,GAMtB,MAAMkxE,EAAMD,EACNE,EAAO3gF,EAAO,GAAK,EAOzB,IAAI4gF,EANJjwH,KAAK6+C,YAAcxP,EAOnB,MAAM6gF,EAAQ,SAAS1qE,cAAiBT,WAEtCkrE,EADW,KAATxqE,EACY,eAAeyqE,KACX,IAATzqE,EACK,QAAQyqE,KAER,WAAWA,eAAmBzqE,OAG9CzlD,KAAK+uF,SAAW,0QASIghC,WAAaA,4EAEDC,+HAKVC,4CAIxB;;;;;;;;;;;;;;;;GC9CI,MAAOE,GAOXtwH,WAAAA,CACIwvC,EAAkBygF,EAAgBtqE,EAAcT,EAChDU,GARJzlD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAA6+C,YAAwB,GAExB7+C,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAKb,MAAMqhC,EAAMD,EACNE,EAAO3gF,EAAO,GAAK,EAOzB,IAAI4gF,EANJjwH,KAAK6+C,YAAcxP,EAOnB,MAAM6gF,EAAQ,SAAS1qE,cAAiBT,WAEtCkrE,EADW,KAATxqE,EACY,eAAeyqE,KACX,IAATzqE,EACK,QAAQyqE,KAER,WAAWA,eAAmBzqE,OAG9CzlD,KAAK+uF,SAAW,iNAQY/uF,KAAK6+C,YAAY,sCACjB7+C,KAAK6+C,YAAY,mhBAehBkxE,2ZAWRA,WAAaA,+KAGuBC,wyBAqBnBC,+CAIxC;;;;;;;;;;;;;;;;GCvFK,MAcMG,GAA0B,CACrCzuH,WAAYoQ,GACZ8E,YAAa,QACb+Q,WAhBGiI,IAEK,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNwrC,YAACA,EAAWC,KAAEA,EAAIT,MAAEA,EAAKU,KAAEA,GAAQ7+B,EAEnC8hE,EAAUv8E,IAAMxB,QAAQ,4BAC1B,IAAIwlH,GAAiB5tH,EAAEnB,MAAOmkD,EAAaC,EAAMT,EAAOU,GACxD,IAAIoqE,GAAWttH,EAAEnB,MAAOmkD,EAAaC,EAAMT,EAAOU,GACtD,OAAO3lD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAAM;;;;;;;;;;;;;;;;;ACdzD,MAAOgvH,GAUXxwH,WAAAA,CACIsb,EAAsBoqC,EAAqBC,EAAcT,EACzDU,GAXJzlD,KAAA2zE,cAAgB,CAAC,aAAc,cAAe,MAC9C3zE,KAAA6+C,YAAwB,GAWtB7+C,KAAK6+C,YAAc1jC,EACnBnb,KAAKonC,MAAQjsB,EAAW,GACxBnb,KAAKulD,YAAcA,EACnBvlD,KAAKwlD,KAAOA,EACZxlD,KAAK+kD,MAAQA,EACb/kD,KAAKylD,KAAOA,EACZzlD,KAAK+uF,SAAW,oNAQU/uF,KAAKonC,oEACiBme,iDACXvlD,KAAKonC,oCACpBme,8FAGYvlD,KAAKonC,4aAelB2d,qBAAyBS,oPAOTT,+BACfU,+KAIgBA,8RAexC;;;;;;;;;;;;;;;;GCxEK,MAcM6qE,GAA8B,CACzC3uH,WAAYqQ,GACZ6E,YAAa,QACb+Q,WAjBsBiI,IAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAAC+jB,EAAEA,EAACI,GAAEA,GAAM3M,GACbwrC,YAACA,EAAWC,KAAEA,EAAIT,MAAEA,EAAKU,KAAEA,GAAQ7+B,EAEnC8hE,EAAU,IAAI2nC,GAAe9tH,EAAEnB,MAAOmkD,EAAaC,EAAMT,EAAOU,GACtE,OAAO3lD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,EAAG+jB,EAAGI,GAAKnkB,EAAElB,MAAM;;;;;;;;;;;;;;;;;ACNxD,SAAUmB,GACZqtB,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACN8sC,iBAACA,EAAgBlT,SAAEA,GAAY/sB,EAE/BsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhB24G,EAAW1iG,EAAoB4uC,EAAkBtkD,EAAEnB,OACzD,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GACrDqhF,EAAuC,MAAhB3V,EACvBvK,EAAqBvwG,EAAQuwG,mBAAmB,CAAC9tG,IAEvD,IAAIiuH,EAAWjuH,EACf,GAAIguH,EAAsB,CACxB,GAAIlgB,EAAoB,CACtB,MACMlvG,EADWrB,EAAQ+/F,QAAQz/F,IAAIowH,EAASnwH,QACtBc,OAElBiE,EAAqB,IAAI1B,MAAMwrC,GACrC,IAAK,IAAIrsC,EAAI,EAAGA,EAAIuC,EAASpD,OAAQa,IACnCuC,EAASvC,GAAKN,EAAEnB,MAAMw5G,EAAa/3G,IAErC,MAAM4tH,EACFzoB,GAAiB7mG,EAAQoB,EAAEnB,MAAOmB,EAAElB,MAAOu5G,EAAcx1G,GAE7DorH,EAAW1wH,EAAQ8wG,eAAexrG,EAAU7C,EAAElB,OACzBvB,EAAQ+/F,QAAQz/F,IAAIowH,EAASnwH,QACrCc,OAASsvH,OAEtBD,EAAWjrB,GAAchjG,EAAGq4G,EAAc96G,GAG5CmG,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,GAGpD2pC,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAOwhF,EAAaxsB,GAChBrrB,GAAuC23C,EAASpvH,MAAO6E,GAE3D,IAMI4hB,EANAgoB,EAAW6gF,EAOf,GANI/8E,IAEF9D,EAAWgpC,GAAkC63C,EAAa/V,IAIxDtK,EAAoB,CACtB,MACMlvG,EADWrB,EAAQ+/F,QAAQz/F,IAAIowH,EAASnwH,QACtBc,OAElBuvG,EACFxJ,GAAW/lG,EAAQ8W,EAAmBisF,GAAcr0D,EAAUttC,EAAElB,OAEpEwmB,EAAM/nB,EAAQ8wG,eAAe/gE,EAAUttC,EAAElB,OACzBvB,EAAQ+/F,QAAQz/F,IAAIynB,EAAIxnB,QAChCc,OAASuvG,OAEjB7oF;;;;;;;;;;;;;;;;;AC/DE,SACFtlB,EAAe2hG,EAAuBr0D,EACtC/vC,GACF,MAAMu2E,EAASp+D,EAAmBisF,GAG5B8W,EACF7hE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIqkB,MAAO,CAACxlB,MAAO,CAH3B6W,EAAmB1V,EAAEnB,OACTi1E,EAE2BA,IAAUv2E,YAEzDm7G,EAAU1yG,GAAOyyG,EAAez4G,EAAElB,MAAO,MAAOvB,GAChD6wH,EACFx3E,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUr0F,MAAO,CAACxlB,MAAOyuC,GAAW/vC,YAK7D,OAHAA,EAAQmuG,8BAA8B+M,GACtCl7G,EAAQmuG,8BAA8BgN,GAE/B0V,CACT,CD8CUhtB,CAAQ6sB,EAAUtsB,EAAar0D,EAAU/vC,GAOjD,OAJIywH,GACFzwH,EAAQmuG,8BAA8BuiB,GAGjC3oG,CACT,CAEO,MAAM+oG,GAA0B,CACrCjvH,WAAYsQ,GACZ4E,YAAa,QACb+Q,WAAYplB,IE/DDgnD,GAAUwsD,GAAiB,CACtC/J,UAbcC,GAAoB,0BAclCyJ,gBAVqB,0GAInBkb,GAA2B,uBAO7Bjb,cAAezO,KAGJ2pB,GAA8B,CACzCnvH,WAAYuQ,GACZ2E,YAAa,QACb+Q,WAAY4hC;;;;;;;;;;;;;;;;GCKP,MAAMunE,GAA8B,CACzCpvH,WAAYwQ,GACZ0E,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AA9BI,SAAkBiI,GAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,EACZizE,GAAiBzqF,EAAG,WACpB,MAAM6yC,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,GAAmB3yB,EAGpD3O,EACI4gE,GAA4C7wE,EAH9B,IAId,IACI,wEAAeA,wBAEvB,MAAMolD,EAAWyrB,GACbt2E,EAAEnB,MAA2Cg0C,EAAYptC,EAR3C,EASHuU,EAAKg9B,GACpB,GAA6B,IAAzB6T,EAAS7X,aAA+C,IAA1B6X,EAAS9X,cACvCr9B,EAAiBm1C,EAASjY,QAASiY,EAASvd,UAC9C,OAAO+kE,GAAS,CAAC76F,OAAQ,CAACxX,KAAIzC,YAEhC,MAAMkxH,EAAiB,IAAIpR,GAAcxyD,EAAU,OAAO,GAC1D,OAAOttD,EAAQuuG,gBAAgB2iB,EAAgB,CAACzuH,GAAIA,EAAElB,MACxD;;;;;;;;;;;;;;;;GCVO,MAAM4vH,GAAgC,CAC3CtvH,WAAY0Q,GACZwE,YAAa,QACb+Q,WApBI,SAAoBiI,GAKxB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNq7B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGu4B,WAAEA,EAAUyE,gBAAEA,GAAmB3yB,EAG1DwmC,EAAWyrB,GACbt2E,EAAEnB,MAAmDg0C,EAAYptC,EAHzB,CAAC,EAAG,EAAG,GAIpCuU,EAAKg9B,EAAiBzE,GAC/Bk8E,EAAiB,IAAIzQ,GAAcnzD,EAAU,OAAO,GAC1D,OAAOttD,EAAQuuG,gBAAgB2iB,EAAgB,CAACzuH,GAAIA,EAAElB,MACxD;;;;;;;;;;;;;;;;GChBM,MAAO6vH,GAKXrxH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,KAAM,UAKrB3zE,KAAK6+C,YAAcuO,EAASjY,QAC5B,MAAMiB,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvBC,EAAiB8W,EAAS9W,eAC1BE,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhCspE,EAASxpE,EAAwB,EAAI4W,EAASzW,QAAQG,IACtDmpE,EAAUvpE,EAAuB,EAAI0W,EAASzW,QAAQK,KAEtD2tE,EAAYnuE,EAAwBE,EAAuB,EACjE12C,KAAK+uF,SAAW,oCACaixB,MAAWC,kdAcZzpE,uBACdF,uDAC8BF,6CAEZgX,EAASxW,6IAKXF,+DACgBL,+CAEZ+W,EAASvW,uNAOf8tE,2LAIKjuE,gMASnC,EAGI,MAAOy6E,GAKXtxH,WAAAA,CAAYutD,GAJZptD,KAAA2zE,cAAgB,CAAC,KAAM,UAKrB3zE,KAAK6+C,YAAcuO,EAASjY,QAC5B,MAAM4C,EAAcqV,EAASrV,YACvB3B,EAAegX,EAAShX,aACxBC,EAAc+W,EAAS/W,YACvB2B,EAAgBoV,EAASpV,cACzB1B,EAAiB8W,EAAS9W,eAC1BC,EAAgB6W,EAAS7W,cACzB0B,EAAuBmV,EAASnV,qBAChCzB,EAAwB4W,EAAS5W,sBACjCE,EAAuB0W,EAAS1W,qBAEhC8pE,EAAWvoE,EAAuB,EAAImV,EAASzW,QAAQwB,MACvD6nE,EAASxpE,EAAwB,EAAI4W,EAASzW,QAAQG,IACtDmpE,EAAUvpE,EAAuB,EAAI0W,EAASzW,QAAQK,KAEtD2tE,EACF1sE,EAAuBzB,EAAwBE,EAAuB,EAC1E12C,KAAK+uF,SAAW,oCACayxB,MAAaR,MAAWC,wiBAiBzBhoE,wBACbD,uDAC6BD,6CAEZqV,EAASlV,4IAKX1B,2BACZF,yDAC4BF,+CAEZgX,EAASxW,sKAMXF,6BACZH,2DAC4BF,iDAEZ+W,EAASvW,8OAOf8tE,kPAMTnuE,OAA2BE,+BAC3BA,mNAUvB;;;;;;;;;;;;;;;;GC/HK,MAAM06E,GAAoC,CAC/CzvH,WAAY2Q,GACZuE,YAAa,QACb+Q,WA7BI,SAAwBiI,GAK5B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAExL,MAAEA,GAASnB,EACdxX,EAAI2Y,GACJk6B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,GAAmB3yB,EAG9CwmC,EAAWyrB,GACbt2E,EAAEnB,MAAmDg0C,EAAYptC,EAHzB,CAAC,EAAG,EAAG,GAIpCuU,EAAKg9B,GAEd83E,EACF,IAAI9Q,GAAcnzD,EAAU,OAAO,GACjCkkE,EACFxxH,EAAQuuG,gBAAgBgjB,EAA2B,CAAC9uH,GAAIA,EAAElB,OACxDkwH,EAAyB,IAAIJ,GAAyB/jE,GACtD7tD,EAASO,EAAQuuG,gBACnBkjB,EAAwB,CAAC7qG,EAAI4qG,GAAqB/uH,EAAElB,OAExD,OADAvB,EAAQmuG,8BAA8BqjB,GAC/B/xH,CACT;;;;;;;;;;;;;;;;GCIO,MAAMiyH,GAAkC,CAC7C7vH,WAAYyQ,GACZyE,YAAa,QACb+Q,WA9BI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BnJ,GAACA,EAAExL,MAAEA,EAAKf,OAAEA,GAAUJ,EACtBxX,EAAI2Y,EACV8xE,GAAiB,CAAC9xE,EAAOf,GAAS,eAClC,MAAMi7B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAGg9B,gBAAEA,GAAmB3yB,EAE9CwmC,EAAWyrB,GACbt2E,EAAEnB,MAA2Cg0C,EAAYptC,EACzD,EAAmBuU,EAAKg9B,GAEtBk4E,EACF,IAAI7R,GAAcxyD,EAAU,OAFX,GAGfskE,EACF5xH,EAAQuuG,gBAAgBojB,EAAyB,CAAClvH,GAAIA,EAAElB,OAEtDswH,EAAyB,IAAIT,GAAyB9jE,GACtD7tD,EAASO,EAAQuuG,gBACnBsjB,EAAwB,CAACjrG,EAAIgrG,GAAmBnvH,EAAElB,OAEtD,OADAvB,EAAQmuG,8BAA8ByjB,GAC/BnyH,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBO,MAAMqyH,GAAwC,CACnDjwH,WAAY4Q,GACZsE,YAAa,QACb+Q,WAAYA,EAAE7N,SAAQ6M,QAAO9mB,cAC3B,MAAMyC,EAACA,GAAKwX,GACNq7B,WAACA,EAAUptC,QAAEA,EAAOuU,IAAEA,EAAG+sC,oBAAEA,GAC7B1iC,EACEivF,EAAe/1G,EAErBmY,EACuB,IAAnB1V,EAAEnB,MAAMY,QACR,IAAM,uDACFO,EAAEnB,MAAMY,YAChB,MAAM+yC,EAA8B,CAAC,EAAG,GACxC98B,EACI4gE,GAA4C7wE,EAAS+sC,IACrD,IACI,wEAAe/sC,oBAA0B+sC,OAEjD,MAAMqY,EAAWyrB,GACbt2E,EAAEnB,MAA2Cg0C,EAAYptC,EACzD+sC,EAAWx4B,IAERhd,EAAQgqD,GCzBb,SACFhnD,EAAe+mD,EACf8D,EACAttD,GACF,IAAI4oF,EAAU,IAAIk3B,GAAcxyD,EAAU,OAAO,GACjD,MAAMykE,EAAa/xH,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAI,WAIzD,OAFAmmF,EAAU,IAAIk3B,GAAcxyD,EAAU,OAAO,GAAM,EAAM9D,GAElD,CAACuoE,EADY/xH,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAI,WAE5D,CDgBQuvH,CAAsBvvH,EAAG+mD,EAAqB8D,EAAUyoD,GAC5D,MAAO,CAACt2G,EAAQgqD,EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBrB,MAAMwoE,GAA2B,CACtCpwH,WAAY6Q,GACZqE,YAAa,QACb+Q,WAAYA,EAAE7N,SAAQ6M,QAAO9mB,cAC3B,MAAMyC,EAACA,GAAKwX,GACN45B,SAACA,EAAQpuC,KAAEA,GAAQqhB,EACnBivF,EAAe/1G,EAEfovC,EAAQ3sC,EAAEnB,MAAMY,OAChB24G,EAAW1iG,EAAoB1S,EAAMhD,EAAEnB,OAE7C,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GACrD8iF,EAAwC,MAAhBpX,EACxBvK,EAAqBwF,EAAaxF,mBAAmB,CAAC9tG,IAEtDq5G,EAA8B,GAEpC,IAAIqW,EAAY1vH,EAChB,GAAIyvH,EAAuB,CACzB,GAAI3hB,EAAoB,CACtB,MACMlvG,EADW00G,EAAahW,QAAQz/F,IAAI6xH,EAAU5xH,QAC5Bc,OAElBiE,EAAqB,IAAI1B,MAAMwrC,GACrC,IAAK,IAAIrsC,EAAI,EAAGA,EAAIuC,EAASpD,OAAQa,IACnCuC,EAASvC,GAAKN,EAAEnB,MAAMw5G,EAAa/3G,IAErC,MAAMqvH,EACFlqB,GAAiB7mG,EAAQoB,EAAEnB,MAAOmB,EAAElB,MAAOu5G,EAAcx1G,GAE7D6sH,EAAYpc,EAAajF,eAAexrG,EAAU7C,EAAElB,OAC9Bw0G,EAAahW,QAAQz/F,IAAI6xH,EAAU5xH,QAC3Cc,OAAS+wH,OAEvBD,EAAY1sB,GAAchjG,EAAGq4G,EAAc/E,GAG7C+F,EAAc/3G,KAAKouH,GACnBhsH,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,GAGpD2pC,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAOijF,EAAcjuB,GACjBrrB,GAAuCo5C,EAAU7wH,MAAO6E,GAE5D,IAAI4pC,EAAWsiF,EACXx+E,IAEF9D,EAAWgpC,GAAkCs5C,EAAcxX,IAG7D,MAAM9yF,ECrDJ,SACFtlB,EAAe2hG,EAAuBr0D,EACtC/vC,GACF,MAAMu2E,EAASp+D,EAAmBisF,GAG5B8W,EACF7hE,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIqkB,MAAO,CAACxlB,MAAO,CAH3B6W,EAAmB1V,EAAEnB,OACTi1E,EAE2BA,IAAUv2E,YAEzDm7G,EAAU1yG,GAAOyyG,EAAe,UAAW,OAAQl7G,GACnD6wH,EACFx3E,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUr0F,MAAO,CAACxlB,MAAOyuC,GAAW/vC,YAK7D,OAHAA,EAAQmuG,8BAA8B+M,GACtCl7G,EAAQmuG,8BAA8BgN,GAE/B0V,CACT,CDoCgByB,CAASH,EAAW/tB,EAAar0D,EAAUgmE,GACvD,IAAK,MAAMhzG,KAAK+4G,EACd/F,EAAa5H,8BAA8BprG,GAG7C,OAAOglB,CAAG;;;;;;;;;;;;;;;;GEZP,MAAMwqG,GAA0B,CACrC1wH,WAAY8Q,GACZoE,YAAa,QACb+Q,WA/CI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIouC,SAAEA,GAAY/sB,EAEnBsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhB24G,EAAW1iG,EAAoB1S,EAAMhD,EAAEnB,OAC7C,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GAC3D,IAAIyuE,EAAYp7G,EACI,MAAhBq4G,IACF+C,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KAC3D30G,EAAO4yE,GAA8B5yE,EAAKjE,OAAQO,EAAEnB,MAAMY,SAG5D62E,GAAwC,MAAO5yE,EAAMipC,GACrD,MAAOW,EAAUq0D,GACbrrB,GAAuC8kC,EAAUv8G,MAAO6E,GAEtD23G,EACFzkE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGo7G,GAAY79G,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAFhD6W,EAAmBisF,OAG5B+W,EAAU1yG,GAAOq1G,EAAKA,EAAIv8G,MAAO,MAAOvB,GAE9C,IAAIomB,EACJ,GAAIytB,EAAU,CAEZztB,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MADrCy3E,GAAkChpC,EAAU8qE,WAG7Dz0F,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAU/D,OAPA/vC,EAAQmuG,8BAA8B2P,GACtC99G,EAAQmuG,8BAA8BgN,GAElB,MAAhBL,GACF96G,EAAQmuG,8BAA8B0P,GAGjCz3F,CACT,GC/Ba0jC,GAAUosD,GAAiB,CACtC/J,UAbcC,GAAoB,0BAclCyJ,gBAVqB,0GAInBkb,GAA2B,uBAO7Bjb,cAAexO,KAGJkrB,GAA8B,CACzC3wH,WAAY+Q,GACZmE,YAAa,QACb+Q,WAAYgiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBR,MAAO2oE,GAKX1yH,WAAAA,CACIwvC,EAAkB2a,EAClBC,GANJjqD,KAAA2zE,cAAgB,CAAC,KAOf3zE,KAAK6+C,YAAcmL,EAASvkD,KACxB,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAqBoJ,EAAOxsC,GAAKojC,EAAE,KACnD,MAAMzgC,EAAO6pC,EAAOrtC,OACdX,EAAQ05F,GAAkBv1F,GAE1BsC,EAAQkiD,EAASvkD,KAAIwgC,GAAKA,EAAE,KAAIr6B,KAAK,KACrC0R,EAAM0sC,EAASvkD,KAAI,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAKoJ,EAAOxsC,KAAI+I,KAAK,KACpD4mH,EACF,CAAC,YAAa,YAAa,YAAa,aAAantH,MAAM,EAAGG,GAC5D0C,EAAkB,YAAT+hD,EAAqB,EAAI,EAmBxCjqD,KAAK+uF,SAjBQ,IAATvpF,EAiBY,WACZnE,aAAiBA,KAASyG,cAC1BzG,WAAeA,KAASic,uCAGtBjc,4DACoBmE,kGAEmB0C,oGAEIA,uCAG3C7G,oDACemxH,sBA9BH,yBACA1qH,yBACFwV,8IAKoBpV,qFAEIA,8EAwB1C;;;;;;;;;;;;;;;;GCbI,MAAOuqH,GAOX5yH,WAAAA,CACIwvC,EAAkB2a,EAClBC,GARJjqD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAOb1uF,KAAK6+C,YAAcmL,EAASvkD,KACxB,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAqBoJ,EAAOxsC,GAAKojC,EAAE,KACnD,MAAMzgC,EAAO6pC,EAAOrtC,OACdX,EAAQ05F,GAAkBv1F,GAE1BsC,EAAQkiD,EAASvkD,KAAIwgC,GAAKA,EAAE,KAAIr6B,KAAK,KACrC0R,EAAM0sC,EAASvkD,KAAI,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAKoJ,EAAOxsC,KAAI+I,KAAK,KACpD+hF,EAASwa,GAAY,KAAM3iG,GAC3BgtG,EAASrK,GAAY,SAAU3iG,GAC/BktH,EAAS,GAAG/kC,EAAOnoF,EAAO,QAAQxF,KAAK6+C,YAAYr5C,EAAO,KAC1DkjG,EACO,IAATljG,EAAa,SAAW,QAAQgtG,EAAOntG,OAAO,GAAGuG,UAC/C1D,EAAkB,YAAT+hD,EAAqB,EAAI,EAExC,IAAIwlC,EAAW,GACf,GAAa,IAATjqF,EAAY,CACd,MAAMmtH,EAAW,aACbtxH,0FAEgC6G,wFAEIA,kDAIxCunF,EAAW,aACPpuF,8BACAsxH,0CAC4BngB,EAAO5mG,YAAY88F,gBAC/C/a,EAAOnoF,EAAO,wBACXktH,mBACDC,4CAC4BngB,EAAO5mG,YAAY88F,6BAGhD,CACL,MAAMiqB,EAAW,aACbtxH,2BACAA,UAAcA,wCACdA,WAAeA,8CACfA,0GAEmC6G,yDACKA,wCAI5CunF,EAAW,aACPpuF,8BACAsxH,0CAC4BngB,EAAO5mG,YAAY88F,gBAC/C/a,EAAOnoF,EAAO,wBACXktH,mBACDC,4CAC4BngB,EAAO5mG,YAAY88F,oDAGjD/a,EAAOnoF,EAAO,wBACXmoF,EAAOnoF,EAAO,QAAQxF,KAAK6+C,YAAYr5C,EAAO,oBAC/CmtH,4CAC4BngB,EAAO5mG,YAAY88F,kBAC/C/a,EAAOnoF,EAAO,0BACXktH,qBACDC,8CAC4BngB,EAAO5mG,YAAY88F,sCAMzD1oG,KAAK+uF,SAAW,iBACN1tF,aAAiBA,KAASyG,oBAC1BzG,WAAeA,KAASic,uCAG5Bjc,8EAEAouF,8CAIR;;;;;;;;;;;;;;;;GChIK,MAiBMmjC,GAAgC,CAC3CjxH,WAAYgR,GACZkE,YAAa,QACb+Q,WAhBiBirG,EAAE94G,SAAQja,UAAS8mB,YACpC,MAAMrkB,EAACA,GAAKwX,GACNiwC,SAACA,EAAQC,KAAEA,GAAQrjC,EAEnB8hE,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAI8nH,GAAuBlwH,EAAEnB,MAAO4oD,EAAUC,GAC9C,IAAIsoE,GAAiBhwH,EAAEnB,MAAO4oD,EAAUC,GAI5C,OAFenqD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAE1C,GCJF8oD,GAAM6rD,GAAiB,CAClC/J,UAZU,iDAaV0J,gBAViB,8EAIfzJ,GAAoB,yBASX4mB,GAA0B,CACrCnxH,WAAYiR,GACZiE,YAAa,QACb+Q,WAAYuiC;;;;;;;;;;;;;;;;;ACrBR,MAAO4oE,GAQXlzH,WAAAA,CAAYk2C,EAAmBuV,EAAqBH,GAPpDnrD,KAAA2zE,cAAgB,CAAC,SAQf3zE,KAAK6+C,YAAc,CAAC9I,EAAWoV,GAE/BnrD,KAAK+uF,SAAW,6NAUUzjC,EAAc,sPAUlBA,EAAc,qBAGtC,CAEA22D,kBAAAA,CAAmB72D,GACjB,MAAO,CAAC+9C,EAAqBuJ,KACP,MAAhB1yG,KAAKgzH,UACPhzH,KAAKgzH,QAAU7pB,EAAMlT,mBAAmByc,EAAc,SAExDvJ,EAAM/lB,GAAG2vB,UAAU/yG,KAAKgzH,QAAS5nE,EAAK,CAE1C;;;;;;;;;;;;;;;;GCxCF,MA4Ba6nE,GAAUjd,GACnB,CAAC/J,UA7BO,oDA6BS0J,gBArBF,uTAqB+BlB,kBAAkB,IAEvDye,GAA8B,CACzCvxH,WAAYmO,GACZ+G,YAAa,QACb+Q,WAAYqrG,ICnCRE,GAAM,gBAECrsE,GAAMkvD,GAAiB,CAClC/J,UAAWknB,GACXxd,gBAAiBwd,GACjBld,iBAAiB,EACjBL,cAAewd,KAGJC,GAA0B,CACrC1xH,WAAY6T,GACZqB,YAAa,QACb+Q,WAAYk/B;;;;;;;;;;;;;;;;;ACNR,SAAUS,GAAQ13B,GAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bs3B,OAACA,GAAUptC,GACX+mC,IAACA,GAAOl6B,EAER3gB,EAAOgS,EAAoB,CAAC6oC,GAAMqG,EAAO/lD,OAEzCkyH,EAAW9wH,GAAI,CACnBuX,OAAQ,CAACxX,EAAG4kD,GACZrnD,UACA8mB,MAAO,CAACigC,iBAAkB5gD,EAAM0tC,UAAU,KAGtC4/E,EAAgB16C,GAAkCy6C,EAASlyH,MAAO6E,GAElEutH,EACFr6E,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG+wH,GAAWxzH,UAAS8mB,MAAO,CAACxlB,MAAOmyH,KACtDhwH,EACFujD,GAAI,CAAC/sC,OAAQ,CAACxW,EAAG4jD,EAAQzuC,EAAG86G,GAAoB1zH,YAC9C4Y,EAAIe,GAAI,CAACM,OAAQ,CAACxX,EAAGgB,GAAIzD,YACzB2zH,EACF9wH,GAAI,CAACoX,OAAQ,CAACxX,EAAGmW,GAAI5Y,UAAS8mB,MAAO,CAACrhB,KAAMU,EAAM0tC,UAAU,KAC1D+/E,EACFv6E,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGkxH,GAAS3zH,UAAS8mB,MAAO,CAACxlB,MAAOmyH,KAEpDrtG,EACF+sG,GAAQ,CAACl5G,OAAQ,CAACxW,EAAGmV,EAAGA,EAAGg7G,GAAiB5zH,YAShD,OAPAA,EAAQmuG,8BAA8BqlB,GACtCxzH,EAAQmuG,8BAA8BulB,GACtC1zH,EAAQmuG,8BAA8B1qG,GACtCzD,EAAQmuG,8BAA8Bv1F,GACtC5Y,EAAQmuG,8BAA8BwlB,GACtC3zH,EAAQmuG,8BAA8BylB,GAE/BxtG,CACT,CAEO,MAAMytG,GAA8B,CACzChyH,WAAY0T,GACZwB,YAAa,QACb+Q,WAAY2/B;;;;;;;;;;;;;;;;GCxBP,MAAMqsE,GAAkC,CAC7CjyH,WAAYkR,GACZgE,YAAa,QACb+Q,WA5BI,SAAsBiI,GAK1B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bs3B,OAACA,GAAUptC,GACXoxC,WAACA,EAAUC,KAAEA,EAAIC,WAAEA,GAAczkC,EAEjCitG,EAAQxoE,EACVlE,EACAI,GACI,CAACxtC,OAAQ,CAACotC,UAASrnD,UAAS8mB,MAAO,CAACk6B,IAAKqG,EAAO/lD,MAAMY,OAAS,KACjE+zC,EAAY89E,EAAMzyH,MAAM,GACxBkqD,EAAcuoE,EAAMzyH,MAAM,GAC1BsnF,EAAU,IAAIqqC,GAAmBh9E,EAAWuV,EAAaH,GACzDmmD,EAAc5oB,EAAQu5B,mBAAmB72D,GAEzCllC,EAAMpmB,EAAQuuG,gBAAgB3lB,EAAS,CAACmrC,GAAQ,QAASviB,GAI/D,OAHKjmD,GACHvrD,EAAQmuG,8BAA8B4lB,GAEjC3tG,CACT,GCxBM4tG,GAAM;;;;;;;;;;;;;;;;GA0BL,MAAMC,GAA0B,CACrCpyH,WAAYoR,GACZ8D,YAAa,QACb+Q,WAzBI,SAAciI,GAElB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAEZ,GAAIja,EAAQuwG,mBAAmB,CAAC9tG,IAAK,CACnC,MAAMwzG,EAAQj2G,EAAQ+/F,QAAQz/F,IAAImC,EAAElC,SAC7BqwG,EAAWtrG,GACdkiG,GAAWyO,EAAM50G,OAAsBoB,EAAEnB,MAAOmB,EAAElB,OACtD,OAAOvB,EAAQ8wG,eAAexrG,EAAU7C,EAAElB,MAAOqvG,GAGnD,IAAIhoB,EAOJ,OALEA,EADEv8E,IAAMxB,QAAQ,+BACN,IAAI8hG,GAAqBlqG,EAAEnB,MAAO0yH,IAElC,IAAI9nB,GAAezpG,EAAEnB,MAAO0yH,IAGjCh0H,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD,GC5BMilE,GAA0BkT;;;;;;;;;;;;;;;;GA0BzB,MAAMw6C,GAA0C,CACrDryH,WAAYsR,GACZ4D,YAAa,QACb+Q,WA1BI,SAA8BiI,GAKlCgpD,GACI,iGAGJ,MAAM9+D,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bu0C,MAACA,EAAKgB,OAAEA,GAAUrrD,GAClBsrD,cAACA,EAAaC,aAAEA,EAAYC,eAAEA,GAAkB3+C,EAEhDsiD,EAAYppE,EAAQkB,SAASojE,EAAM/jE,QACnC8oE,EAAarpE,EAAQkB,SAASokE,EAAO/kE,SAErC6mE,gBAACA,GAAmBZ,GACtB4C,EAAWC,EAAY9D,EAAeC,EAAcC,GAExD,OAAOzlE,EAAQ8wG,eACX,CAAC1pC,EAAgBllE,QAAS,QAAS,IAAIsE,WAAW4gE,GACxD,GCzBMV,GAA0BgT;;;;;;;;;;;;;;;;GAgCzB,MAAMy6C,GAA0C,CACrDtyH,WAAYuR,GACZ2D,YAAa,QACb+Q,WA/BI,SAA8BiI,GAKlCgpD,GACI,iGAGJ,MAAM9+D,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bu0C,MAACA,EAAKgB,OAAEA,GAAUrrD,GAClBsrD,cAACA,EAAaC,aAAEA,EAAYC,eAAEA,EAAckB,mBAAEA,GAChD7/C,EAEEsiD,EAAYppE,EAAQkB,SAASojE,EAAM/jE,QACnC8oE,EAAarpE,EAAQkB,SAASokE,EAAO/kE,SAErC6mE,gBAACA,EAAeQ,aAAEA,GAAgBlB,GACpC0C,EAAWC,EAAY9D,EAAeC,EAAcC,EACpDkB,GAEJ,MAAO,CACL3mE,EAAQ8wG,eACJ,CAAC1pC,EAAgBllE,QAAS,QAAS,IAAIsE,WAAW4gE,IACtDpnE,EAAQ8wG,eAAe,GAAI,QAAS,IAAItqG,WAAW,CAACohE,KAExD,GC7BMhB,GAA0B8S;;;;;;;;;;;;;;;;GAoCzB,MAAM06C,GAA0C,CACrDvyH,WAAYwR,GACZ0D,YAAa,QACb+Q,WApCI,SAA8BiI,GAKlCgpD,GACI,iGAGJ,MAAM9+D,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bu0C,MAACA,EAAKgB,OAAEA,GAAUrrD,GAClBsrD,cAACA,EAAaC,aAAEA,EAAYC,eAAEA,EAAcC,aAAEA,GAAgB5+C,EAE9DsiD,EAAYppE,EAAQkB,SAASojE,EAAM/jE,QACnC8oE,EAAarpE,EAAQkB,SAASokE,EAAO/kE,QAErC8zH,EAAmB9uD,EACnB+uD,EAAkB9uD,EAClB+uD,EAAoB9uD,EACpB+uD,EAAkB9uD,GAElB0B,gBAACA,EAAeC,eAAEA,GAAkBT,GACtCwC,EAAWC,EAAYgrD,EAAkBC,EACzCC,EAAmBC,GAEvB,MAAO,CACLx0H,EAAQ8wG,eACJ,CAAC1pC,EAAgBllE,QAAS,QAAS,IAAIsE,WAAW4gE,IACtDpnE,EAAQ8wG,eACJ,CAACzpC,EAAenlE,QAAS,UAAW,IAAIqE,aAAa8gE,IAE7D;;;;;;;;;;;;;;;;GClCM,MAAOotD,GAQX10H,WAAAA,CACI20H,EAAoBptF,EAAeC,EAAiBC,GARxDtnC,KAAA2zE,cAAgB,CAAC,WASf3zE,KAAK6+C,YAAc,CAAC21E,EAAYptF,GAEhCpnC,KAAK+uF,SAAW,mJAIUznD,aAAoBD,uEAIhD;;;;;;;;;;;;;;;;GChBK,MAsBMotF,GAA6B,CACxC9yH,WAAY0R,GACZwD,YAAa,QACb+Q,WAzBqBiI,IAKrB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtB,QAACA,GAAWxU,GACZqtB,MAACA,EAAKC,QAAEA,EAAOC,SAAEA,GAAY1gB,EAE7BioG,EAAc52G,EAAmBsW,EAAQntB,OACzCsnF,EAAU,IAAI6rC,GAAc1F,EAAaznF,EAAOC,EAASC,GACzDqvC,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGgsB,GAAUzuB,UAAS8mB,MAAO,CAACxlB,MAAO,CAACytH,MACtDtvH,EAASO,EAAQuuG,gBAAgB3lB,EAAS,CAAC/R,GAAWpoD,EAAQltB,OACpEvB,EAAQmuG,8BAA8Bt3B,GAEtC,MACM9uD,EAAMsxB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGhD,GAASO,UAAS8mB,MAAO,CAACxlB,MAD1C,IAAImtB,EAAQntB,MAAOgmC,MAGpC,OADAtnC,EAAQmuG,8BAA8B1uG,GAC/BsoB,CAAG;;;;;;;;;;;;;;;;;AChBN,SAAUg6B,GACZhyB,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAEZ,GAAgB,cAAZxX,EAAElB,MAAuB,CAC3B,MAAMg3G,EAAWpoF,GAAK,CAAClW,OAAQ,CAACmB,MAAO3Y,GAAIzC,YACrCsZ,EAAIyoC,GAAU,CAAC9nC,OAAQ,CAACxX,EAAG81G,GAAWv4G,YACtCw4G,EAAWpoF,GAAK,CAACnW,OAAQ,CAACmB,MAAO3Y,GAAIzC,YACrC+C,EAAIg/C,GAAU,CAAC9nC,OAAQ,CAACxX,EAAG+1G,GAAWx4G,YAEtCP,EAASwwB,GAAQ,CAAChW,OAAQ,CAACkW,KAAM7W,EAAG8W,KAAMrtB,GAAI/C,YAOpD,OALAA,EAAQmuG,8BAA8BoK,GACtCv4G,EAAQmuG,8BAA8B70F,GACtCtZ,EAAQmuG,8BAA8BqK,GACtCx4G,EAAQmuG,8BAA8BprG,GAE/BtD,EAEP,OAAOsc,GAAK,CACV+K,MAAO,CACLxlB,MAAOmB,EAAEnB,MACTC,MAAOkB,EAAElB,MACTnC,MAAmB,WAAZqD,EAAElB,MAAqB,GAAK,GAErCvB,WAGN,CAEO,MAAM40H,GAAgC,CAC3C/yH,WAAYwU,GACZU,YAAa,QACb+Q,WAAYi6B;;;;;;;;;;;;;;;;GCLP,MAAM8yE,GAA+B,CAC1ChzH,WAAYyR,GACZyD,YAAa,QACb+Q,WA/BI,SAAU8jC,EACZ77B,GACF,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpBttB,EAACA,GAAKwX,EAEZ,GAAgB,WAAZxX,EAAElB,MACJ,MAAM,IAAIO,MAAM,gDACX,GAAgB,cAAZW,EAAElB,MAAuB,CAClC,MAAMg3G,EAAWpoF,GAAK,CAAClW,OAAQ,CAACmB,MAAO3Y,GAAIzC,YACrCsZ,EAAIsyC,EAAS,CAAC3xC,OAAQ,CAACxX,EAAG81G,GAAWv4G,YACrCw4G,EAAWpoF,GAAK,CAACnW,OAAQ,CAACmB,MAAO3Y,GAAIzC,YACrC+C,EAAIg/C,GAAU,CAAC9nC,OAAQ,CAACxX,EAAG+1G,GAAWx4G,YAEtCP,EAASwwB,GAAQ,CAAChW,OAAQ,CAACkW,KAAM7W,EAAG8W,KAAMrtB,GAAI/C,YAOpD,OALAA,EAAQmuG,8BAA8BoK,GACtCv4G,EAAQmuG,8BAA8B70F,GACtCtZ,EAAQmuG,8BAA8BqK,GACtCx4G,EAAQmuG,8BAA8BprG,GAE/BtD,EAIP,OAAOsc,GAAK,CAAC+K,MAAO,CAACxlB,MAAOmB,EAAEnB,MAAOC,MAAOkB,EAAElB,MAAOnC,MAAO,GAAIY,WAEpE;;;;;;;;;;;;;;;;GCSO,MAAM80H,GAA2B,CACtCjzH,WAAY2R,GACZuD,YAAa,QACb+Q,WA1CI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtqB,KAACA,GAAQqhB,EAEf,GAAsB,IAAlB7M,EAAO/X,OACT,OAAOohD,GACH,CAACrpC,OAAQ,CAACmB,MAAOnB,EAAO,IAAKja,UAAS8mB,MAAO,CAACk6B,IAAKv7C,KAGzD,MAAMnE,EAAQ2Y,EAAO,GAAG3Y,MAClBC,EAAQ0Y,EAAO,GAAG1Y,MAExB0Y,EAAO1S,SAAQmE,IACbyM,EACI7W,EAAOoK,EAAEpK,MACT,yDACJ6W,EACI5W,IAAUmK,EAAEnK,OACZ,IAAM,yDAAwD,IAGpE,MAAM89G,EAAwC,GAQxC5/G,EAASoG,GAAO,CAACoU,OAPCA,EAAOtU,KAAI+F,IACjC,MAAMqpH,EACFzxE,GAAW,CAACrpC,OAAQ,CAACmB,MAAO1P,GAAI1L,UAAS8mB,MAAO,CAACk6B,IAAKv7C,KAE1D,OADA45G,EAAwBt7G,KAAKgxH,GACtBA,CAAS,IAG8B/0H,UAAS8mB,MAAO,CAACrhB,UAKjE,OAHA45G,EAAwB93G,SACpBmE,GAAK1L,EAAQmuG,8BAA8BziG,KAExCjM,CACT;;;;;;;;;;;;;;;;GCxCM,MAAOu1H,GAKXj1H,WAAAA,CACIwvC,EAAkB2a,EAClBqC,GANJrsD,KAAA2zE,cAAgB,CAAC,KAOf3zE,KAAK6+C,YAAcmL,EAASvkD,KACxB,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAqBoJ,EAAOxsC,GAAKojC,EAAE,KACnD,MAAMzgC,EAAO6pC,EAAOrtC,OACd4e,EAAOm6E,GAAkBv1F,GAEzBsC,EAAQkiD,EAASvkD,KAAIwgC,GAAKA,EAAE,KAAIr6B,KAAK,KACrC0R,EAAM0sC,EAASvkD,KAAI,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAKoJ,EAAOxsC,KAAI+I,KAAK,KACpD4mH,EACF,CAAC,YAAa,YAAa,YAAa,aAAantH,MAAM,EAAGG,GAkBlExF,KAAK+uF,SAhBQ,IAATvpF,EAgBY,WACZob,aAAgBA,KAAQ9Y,cACxB8Y,WAAcA,KAAQtD,uCAGpBsD,yIAEkByrC,qCAEhBzrC,sDACe4xG,iCAzBL,yBACA1qH,yBACFwV,mJAKU+uC,sGAsB5B;;;;;;;;;;;;;;;;GC/CI,MAAO0oE,GAOXl1H,WAAAA,CACIwvC,EAAkB2a,EAClBqC,GARJrsD,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAOb1uF,KAAK6+C,YAAcmL,EAASvkD,KACxB,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAqBoJ,EAAOxsC,GAAKojC,EAAE,KACnD,MAAMzgC,EAAO6pC,EAAOrtC,OACdX,EAAQ05F,GAAkBv1F,GAE1BsC,EAAQkiD,EAASvkD,KAAIwgC,GAAKA,EAAE,KAAIr6B,KAAK,KACrC0R,EAAM0sC,EAASvkD,KAAI,CAACwgC,EAAGpjC,IAAMojC,EAAE,GAAKoJ,EAAOxsC,KAAI+I,KAAK,KACpD+hF,EAASwa,GAAY,KAAM3iG,GAC3BgtG,EAASrK,GAAY,SAAU3iG,GAC/BktH,EAAS,GAAG/kC,EAAOnoF,EAAO,QAAQxF,KAAK6+C,YAAYr5C,EAAO,KAC1DkjG,EACO,IAATljG,EAAa,SAAW,QAAQgtG,EAAOntG,OAAO,GAAGuG,UAE/CopH,EAAiB,CACrB,GAAG3zH,oBAAyB,GAAGssF,EAAOnoF,EAAO,uBACvCktH,eAEG,IAATltH,EAAa,GAAK,qCAEfmoF,EAAOnoF,EAAO,uBACXmoF,EAAOnoF,EAAO,QAAQxF,KAAK6+C,YAAYr5C,EAAO,QAC3C,IAATA,EAAa,GAAK,KAAKmoF,EAAOnoF,EAAO,yBAC7BktH,QAGJuC,EAAuB,IAATzvH,EAChB,0BACA,6DACJ,IAAIiqF,EAAW,GACf,IAAK,IAAI5sF,EAAI,EAAGsD,EAAa,IAATX,EAAa,EAAI,EAAG3C,EAAIsD,EAAGtD,IAC7C4sF,GAAY,aACRulC,EAAenyH,mBACXoyH,0BACKpyH,cAAcwpD,oCAErBhrD,4CACOwB,wBAAwB2vG,EAAO5mG,YAAY88F,yBAI1DjZ,GAAsB,IAATjqF,EAAa,KAAO,KAEjCxF,KAAK+uF,SAAW,iBACN1tF,aAAiBA,KAASyG,oBAC1BzG,WAAeA,KAASic,uCAG5Bjc,8EAEAouF,8CAIR;;;;;;;;;;;;;;;;GC7DK,MAAMylC,GACRrlG,IAEK,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNiwC,SAACA,EAAQqC,cAAEA,GAAiBzlC,EAE5B8hE,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAIoqH,GAAiBxyH,EAAEnB,MAAO4oD,EAAUqC,GACxC,IAAIyoE,GAAWvyH,EAAEnB,MAAO4oD,EAAUqC,GACtC,OAAOvsD,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAAM,EAGlD8zH,GAA4B,CACvCxzH,WAAY4R,GACZsD,YAAa,QACb+Q,WAAYstG,ICaD5mE,GACT0nD,GAAiB,CAAC/J,UA/BV,4LA+B0B0J,gBApBnB,uoBAefzJ,GAAoB,yBAOXkpB,GAA0B,CACrCzzH,WAAY6R,GACZqD,YAAa,QACb+Q,WAAY0mC,ICqBP,MAAM+mE,GAA2B,CACtC1zH,WAAY+R,GACZmD,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AAxDI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNxU,KAACA,EAAIouC,SAAEA,GAAY/sB,EAEnBsoB,EAAQ3sC,EAAEnB,MAAMY,OAChB8gH,EAAY,GAEZnI,EAAW1iG,EAAoB1S,EAAMhD,EAAEnB,OAC7C,IAAI6E,EAAO00G,EACX,MAAMC,EAAe/hC,GAAgC5yE,EAAMipC,GAC3D,IASIhpB,EATAy3F,EAAYp7G,EAUhB,GAToB,MAAhBq4G,IACF+C,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmzE,KAC3D30G,EAAO4yE,GAA8B5yE,EAAKjE,OAAQktC,GAClD4zE,EAAUj/G,KAAK85G,IAGjB9kC,GAAwC,OAAQ5yE,EAAMipC,GAGlDpvC,EAAQuwG,mBAAmB,CAACsN,IAAa,CAC3C,MAAMxmD,EAAQr3D,EAAQ+/F,QAAQz/F,IAAIu9G,EAAUt9G,QAAQc,QAC9CohG,QAACA,EAAO1yD,SAAEA,EAAQs0D,SAAEA,GACtBoD,GAAYoW,EAAUv8G,MAAOu8G,EAAUt8G,MAAO81D,EAAOlxD,GACzDigB,EAAMpmB,EAAQ8wG,eAAe/gE,EAAUs0D,EAAU5B,OAC5C,CACL,MAAO1yD,EAAUq0D,GACbrrB,GAAuC8kC,EAAUv8G,MAAO6E,GACtDowE,EAASp+D,EAAmBisF,GAC5B0Z,EAAMzkE,GACR,CAACp/B,OAAQ,CAACxX,EAAGo7G,GAAY79G,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAAGi1E,MAEpD4kC,EAAU1yG,GAAOq1G,EADHj9F,GAAWpe,EAAElB,OACQ,OAAQvB,GACjDomB,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG04G,GAAUn7G,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAE7DizE,EAAUj/G,KAAK+5G,GACfkF,EAAUj/G,KAAKo3G,GAGjB,GAAItnE,EAAU,CACZmvE,EAAUj/G,KAAKqiB,GACf,MAAM9gB,EAAWyzE,GAAkC3yD,EAAI9kB,MAAOu5G,GAC9Dz0F,EAAMizB,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,MAAOgE,KAK3D,OAFA09G,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAEtD0a,CACT,GCvDauuC,GACR5kC,IACC,MAAM/vB,QAACA,EAAO8mB,MAAEA,GAASiJ,GACnB/nB,MAACA,EAAK6mC,KAAEA,EAAIxvC,KAAEA,EAAIkC,MAAEA,GAASulB,EAC7BzlB,EAASqmG,GAAa1/F,EAAO6mC,EAAMxvC,EAAMkC,GAC/C,OAAOvB,EAAQ8wG,eAAe,CAACzvG,EAAOa,QAASX,EAAOF,EAAO,EAGtDm0H,GAA4B,CACvC3zH,WAAYgS,GACZkD,YAAa,QACb+Q,WAAY6sC,ICXDY,GAAaqgD,GAAgB,CAACzJ,UAFxB,oBAINspB,GAAiC,CAC5C5zH,WAAYkS,GACZgD,YAAa,QACb+Q,WAAYytC,ICUDE,GACTmgD,GAAgB,CAACzJ,UAjBRC,GAAoB,oCAiBKyJ,gBAblB,mRAeP6f,GAA2B,CACtC7zH,WAAYmS,GACZ+C,YAAa,QACb+Q,WAAY2tC,ICNDE,GACTigD,GAAgB,CAACzJ,UAjBPC,GAAoB,8CAiBKyJ,gBAblB,kSAeR8f,GAA4B,CACvC9zH,WAAYyS,GACZyC,YAAa,QACb+Q,WAAY6tC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBR,MAAOigE,GAKX71H,WAAAA,CACIsb,EAA8Cw6G,EAC9CC,EAAkB5rD,EAAuBC,GAN7CjqE,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAA6+C,YAAwB,GAMtB,MAAO+Z,EAAOi9D,EAAWC,EAAU1uF,GAASjsB,EAC5Cnb,KAAK6+C,YAAc,CAAC+Z,EAAO+8D,EAAWC,EAAUxuF,GAEhD,MAAM2uF,EAAoC,CACvC/rD,GAAgB2rD,EAAY,EAAKE,EAAY,EAAIA,EACjD7rD,GAAgB4rD,EAAW,EAAKE,EAAW,EAAIA,GAG5CE,EAAqC,CACxChsD,GAAgB2rD,EAAY,EAAKA,EAAY,EAAIA,EACjD3rD,GAAgB4rD,EAAW,EAAKA,EAAW,EAAIA,GAGlD,IAAIK,EAEFA,EADEhsD,EAEE,wEAGgB,8CAGtBjqE,KAAK+uF,SAAW,yEAERgnC,EAAgB,GAAKC,EAAiB,kBACtCD,EAAgB,GAAKC,EAAiB,8CACXH,QAAgBC,4OASpBG,4zBAqBjC;;;;;;;;;;;;;;;;GChEI,MAAOC,GAOXr2H,WAAAA,CACIsb,EAA8Cw6G,EAC9CC,EAAkB5rD,EAAuBC,GAR7CjqE,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EACf1uF,KAAA6+C,YAAwB,GAMtB,MAAO+Z,EAAOi9D,EAAWC,EAAU1uF,GAASjsB,EAC5Cnb,KAAK6+C,YAAc,CAAC+Z,EAAO+8D,EAAWC,EAAUxuF,GAEhD,MAAM2uF,EAAoC,CACvC/rD,GAAgB2rD,EAAY,EAAKE,EAAY,EAAIA,EACjD7rD,GAAgB4rD,EAAW,EAAKE,EAAW,EAAIA,GAG5CE,EAAqC,CACxChsD,GAAgB2rD,EAAY,EAAKA,EAAY,EAAIA,EACjD3rD,GAAgB4rD,EAAW,EAAKA,EAAW,EAAIA,GAGlD,IAAIK,EAEFA,EADEhsD,EACkB,wEAGA,8CAGtBjqE,KAAK+uF,SAAW,yEAERgnC,EAAgB,GAAKC,EAAiB,kBACtCD,EAAgB,GAAKC,EAAiB,kBACtCD,EAAgB,GAAKC,EAAiB,8CACXH,QAAgBC,8CAChBA,+aAcJG,oVAQH7uF,EAAQ,4CACDwuF,EAAW,mhEAiDhD;;;;;;;;;;;;;;;;GCpFK,MAAMO,GAAqC,CAChDx0H,WAAYuS,GACZ2C,YAAa,QACb+Q,WAxBI,SAAyBiI,GAK7B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bk6C,OAACA,GAAUhwD,GACXiwD,aAACA,EAAYC,iBAAEA,EAAgBlmE,KAAEA,GAAQ6iB,GAExC+uG,EAAWC,GAAY7xH,EAExB2kF,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAIurH,GACAnsD,EAAO3oE,MAA2Cu0H,EAAWC,EAC7D5rD,EAAcC,GAClB,IAAIyrD,GACA3rD,EAAO3oE,MAA2Cu0H,EAAWC,EAC7D5rD,EAAcC,GACtB,OAAOnqE,EAAQuuG,gBAAgB3lB,EAAS,CAAC3e,GAAS,UACpD;;;;;;;;;;;;;;;;GCvBM,MAAOqsD,GAKXv2H,WAAAA,CACIywE,EACAn1D,EAA8C6uD,GANlDhqE,KAAA2zE,cAAgB,CAAC,MACjB3zE,KAAA6+C,YAAwB,GAMtB7+C,KAAK6+C,YAAc1jC,EACnB,OAASk7G,EAASC,GAAYn7G,IACrBo7G,EAASC,GAAUlmD,EAMtBmmD,EAAmC,CACtCzsD,GAAgBusD,EAAU,EAAKF,EAAU,EAAIA,EAC7CrsD,GAAgBwsD,EAAS,EAAKF,EAAS,EAAIA,GAGxCI,EAAmC,CACtC1sD,GAAgBusD,EAAU,EAAKA,EAAU,EAAIA,EAC7CvsD,GAAgBwsD,EAAS,EAAKA,EAAS,EAAIA,GAGxCtN,EAAcuN,EAAe,GAAKC,EAAe,GACjDrN,EAAaoN,EAAe,GAAKC,EAAe,GAEhDC,EAAiB,EAAIzN,EACrB0N,EAAgB,EAAIvN,EAIpBwN,EAAyC,EAA5B10H,KAAKkC,KAAKsyH,GAAuB,EAC9CG,EAAuC,EAA3B30H,KAAKkC,KAAKuyH,GAAsB,EAElD52H,KAAK+uF,SAAW,mQAUsBm6B,+CACDG,qDAEIsN,kDACDC,4CAERC,yCACDC,+iBAcDP,4QAQEC,0MAMkBH,EAAU,6QAMXC,EAAS,+8BA+B5D;;;;;;;;;;;;;;;;GCpGK,MAAMS,GAAyC,CACpDp1H,WAAYwS,GACZ0C,YAAa,QACb+Q,WAnBI,SAA6BiI,GAKjC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bk6C,OAACA,EAAMrjD,GAAEA,GAAM3M,GACfiwD,aAACA,GAAgBpjD,EAEjB8hE,EAAU,IAAI0tC,GAChB1vG,EAAGtlB,MACH2oE,EAAO3oE,MAA2C4oE,GAEtD,OAAOlqE,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,GAAKA,EAAGrlB,MACnD;;;;;;;;;;;;;;;;GCjBM,MAAO21H,GAKXn3H,WAAAA,CACIsb,EAA8Cw6G,EAC9CC,EAAkB5rD,EAAuBC,GAN7CjqE,KAAA2zE,cAAgB,CAAC,KACjB3zE,KAAA6+C,YAAwB,GAMtB,MAAO+Z,EAAOi9D,EAAWC,EAAU1uF,GAASjsB,EAC5Cnb,KAAK6+C,YAAc,CAAC+Z,EAAO+8D,EAAWC,EAAUxuF,GAEhD,MAAM2uF,EAAoC,CACvC/rD,GAAgB2rD,EAAY,EAAKE,EAAY,EAAIA,EACjD7rD,GAAgB4rD,EAAW,EAAKE,EAAW,EAAIA,GAG5CE,EAAqC,CACxChsD,GAAgB2rD,EAAY,EAAKA,EAAY,EAAIA,EACjD3rD,GAAgB4rD,EAAW,EAAKA,EAAW,EAAIA,GAI5CqB,EAAYjtD,EAAe,MAAQ,MAEzC,IAAIisD,EAEFA,EADEhsD,EAEE,4EAGgB,8CAEtBjqE,KAAK+uF,SAAW,yEAERgnC,EAAgB,GAAKC,EAAiB,kBACtCD,EAAgB,GAAKC,EAAiB,8CACXH,QAAgBC,4OASpBG,6KAI2BgB,kIAM5D;;;;;;;;;;;;;;;;GCnCK,MAAMC,GAA4C,CACvDv1H,WAAYqS,GACZ6C,YAAa,QACb+Q,WApBI,SAAgCiI,GAKpC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bk6C,OAACA,GAAUhwD,GACXiwD,aAACA,EAAYC,iBAAEA,EAAgBlmE,KAAEA,GAAQ6iB,GAExC+uG,EAAWC,GAAY7xH,EAExB2kF,EAAU,IAAIsuC,GAChBjtD,EAAO3oE,MAA2Cu0H,EAAWC,EAC7D5rD,EAAcC,GAClB,OAAOnqE,EAAQuuG,gBAAgB3lB,EAAS,CAAC3e,GAASA,EAAO1oE,MAC3D;;;;;;;;;;;;;;;;GClBM,MAAO81H,GAKXt3H,WAAAA,CACIywE,EACAn1D,EAA8C6uD,GANlDhqE,KAAA2zE,cAAgB,CAAC,MACjB3zE,KAAA6+C,YAAwB,GAMtB7+C,KAAK6+C,YAAc1jC,EACnB,OAASk7G,EAASC,GAAYn7G,IACrBo7G,EAASC,GAAUlmD,EAMtBmmD,EAAmC,CACtCzsD,GAAgBusD,EAAU,EAAKF,EAAU,EAAIA,EAC7CrsD,GAAgBwsD,EAAS,EAAKF,EAAS,EAAIA,GAGxCI,EAAmC,CACtC1sD,GAAgBusD,EAAU,EAAKA,EAAU,EAAIA,EAC7CvsD,GAAgBwsD,EAAS,EAAKA,EAAS,EAAIA,GAGxCtN,EAAcuN,EAAe,GAAKC,EAAe,GACjDrN,EAAaoN,EAAe,GAAKC,EAAe,GAEhDC,EAAiB,EAAIzN,EACrB0N,EAAgB,EAAIvN,EAIpBwN,EAAyC,EAA5B10H,KAAKkC,KAAKsyH,GAAuB,EAC9CG,EAAuC,EAA3B30H,KAAKkC,KAAKuyH,GAAsB,EAElD52H,KAAK+uF,SAAW,mQAUsBm6B,+CACDG,qDAEIsN,kDACDC,4CAERC,yCACDC,6jBAcDP,4QAQEC,0GAKdC,EAAe,8CACCC,EAAe,qEAG7BD,EAAe,gDACCC,EAAe,mFAG3BL,6BACVrsD,iLAIUssD,6BACVtsD,qVAahB;;;;;;;;;;;;;;;;GC1FK,MAAMotD,GAAgD,CAC3Dz1H,WAAYsS,GACZ4C,YAAa,QACb+Q,WAlBI,SAAoCiI,GAKxC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3Bk6C,OAACA,EAAMrjD,GAAEA,GAAM3M,GACfiwD,aAACA,GAAgBpjD,EAEjB8hE,EAAU,IAAIyuC,GAChBzwG,EAAGtlB,MACH2oE,EAAO3oE,MAA2C4oE,GACtD,OAAOlqE,EAAQuuG,gBAAgB3lB,EAAS,CAAChiE,GAAKA,EAAGrlB,MACnD;;;;;;;;;;;;;;;;GCfM,MAAOg2H,GAKXx3H,WAAAA,CAAYwvC,EAAkB9pC,GAJ9BvF,KAAA2zE,cAAgB,CAAC,KAKf,MAAMnuE,EAAO6pC,EAAOrtC,OACpB,GAAIwD,EAAO,EACT,MAAM,IAAI5D,MACN,kCAAkC4D,iCAIxC,GAFAxF,KAAK6+C,YAAcxP,EAEN,IAAT7pC,EAOF,YANAxF,KAAK+uF,SAAW,+FAGK1/C,EAAO,wCAK9B,MAMMioF,EAAWjoF,EAAO5pC,KAAI,CAACikB,EAAG7mB,IANZA,KACO,IAArB0C,EAAK0pB,QAAQpsB,IAA2B,IAAdwsC,EAAOxsC,GAC5B,GAAGwsC,EAAOxsC,eAAeA,SAE3B,UAAUA,KAEmB00H,CAAW10H,KAAI+I,KAAK,KACpDgV,EAAOm6E,GAAkBv1F,GAE/BxF,KAAK+uF,SAAW,kCAEVnuE,yDACe02G,qBAGvB;;;;;;;;;;;;;;;;GCpCI,MAAOE,GAOX33H,WAAAA,CAAYwvC,EAAkB9pC,GAN9BvF,KAAA2zE,cAAgB,CAAC,KAGjB3zE,KAAAyuF,cAAe,EACfzuF,KAAA0uF,cAAe,EAGb,MAAMlpF,EAAO6pC,EAAOrtC,OACpB,GAAIwD,EAAO,EACT,MAAM,IAAI5D,MACN,kCAAkC4D,iCAExCxF,KAAK6+C,YAAcxP,EACnB,MAAMg5D,EAAWF,GAAY,KAAM3iG,GAC7Bi1G,EACF,GAAGpS,EAAS7iG,EAAO,YAAYxF,KAAK6+C,YAAYr5C,EAAO,KACrDiyH,EAAU,GAAGpvB,EAAS7iG,EAAO,YAAYxF,KAAK6+C,YAAYr5C,EAAO,KACjEob,EAAOm6E,GAAkBv1F,GAuD/B,SAAS88G,EAAWja,GAClB,MAAMqvB,EAAgBroF,EAAO5pC,KAAI,CAACikB,EAAG7mB,IAMvC,SAAoBA,EAAW80H,GAC7B,OAAyB,IAArBpyH,EAAK0pB,QAAQpsB,IAA2B,IAAdwsC,EAAOxsC,GAC5B,GAAGwsC,EAAOxsC,QAAQ80H,EAAU90H,SAE5B,GAAG80H,EAAU90H,IAExB,CAZ6C00H,CAAW10H,EAAGwlG,KAGzD,MAAO,mBAFUqvB,EAAc9rH,KAAK,eAClB8rH,EAAcryH,OAAO,GAAGuG,KAAK,QAEjD,CA1DE5L,KAAK+uF,SADM,IAATvpF,EACc,0IAIiB6pC,EAAO,8BAChCA,EAAO,+BACNorE,iDAC4BprE,EAAO,yCAChCA,EAAO,qFAMH,sCAEVzuB,sFAiBR,SAAcynF,GACZ,OAAOia,EAAWja,EACpB,CAjBmBuvB,CAAKvvB,EAAShjG,2BACtBo1G,+BAkBX,SAAcpS,GAEZ,OADAA,EAAS7iG,EAAO,GAAK,IAAM6iG,EAAS7iG,EAAO,GAAK,QACzC88G,EAAWja,EACpB,CApBqBwvB,CAAKxvB,EAAShjG,wCAExBoyH,gCAoBX,SAAcpvB,GAEZ,OADAA,EAAS7iG,EAAO,GAAK,IAAM6iG,EAAS7iG,EAAO,GAAK,QACzC88G,EAAWja,EACpB,CAtBqByvB,CAAKzvB,EAAShjG,6BACtBo1G,kCAuBb,SAAcpS,GAGZ,OAFAA,EAAS7iG,EAAO,GAAK,IAAM6iG,EAAS7iG,EAAO,GAAK,QAChD6iG,EAAS7iG,EAAO,GAAK,IAAM6iG,EAAS7iG,EAAO,GAAK,QACzC88G,EAAWja,EACpB,CA1BuB0vB,CAAK1vB,EAAShjG,sFA0CvC;;;;;;;;;;;;;;;;GC5DK,MAAM2yH,GAA8B,CACzCr2H,WAAY0S,GACZwC,YAAa,QACb+Q,WA1BI,SAAkBiI,GAKtB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACN8mC,KAACA,GAAQj6B,EAETsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhBi2H,EAAQhgH,EAAoB4oC,EAAMt+C,EAAEnB,OAC1C,GAAc,IAAV8tC,EACF,OAAO0lE,GAAS,CAAC76F,OAAQ,CAACxX,KAAIzC,YAGhC,MAAM4oF,EAAUv8E,IAAMxB,QAAQ,+BAC1B,IAAI6sH,GAAqBj1H,EAAEnB,MAAO62H,GAClC,IAAIZ,GAAe90H,EAAEnB,MAAO62H,GAEhC,OAAOn4H,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD;;;;;;;;;;;;;;;;GCzBM,MAAO62H,GAKXr4H,WAAAA,CACI6oH,EAA8C1jD,EAC9CC,EACAC,GAPJllE,KAAA2zE,cAAgB,CAAC,SACjB3zE,KAAA6+C,YAAwB,GAOtB,MAAM03B,EAAcmyC,EAAW,GACzBlyC,EAAakyC,EAAW,GACxByP,EAAYh2H,KAAKq1D,IAAIwN,GAAStoD,QAAQ,GACtC07G,EAAYj2H,KAAKm9C,IAAI0lB,GAAStoD,QAAQ,GAC5C1c,KAAK6+C,YAAc6pE,EAEnB,MAAO2P,EAASC,GACZz/C,GAA4B3T,EAAQqR,EAAaC,GAC/C+hD,EAAgBF,EAAQ37G,QAAQ,GAChC87G,EAAgBF,EAAQ57G,QAAQ,GAEtC,IAAI+7G,EAAc,GAEhBA,EADuB,iBAAdxzD,EACK,uBAAuBA,EAAUvoD,QAAQ,MAEzC,8BACOuoD,EAAUr5D,KAAK,uDAItC5L,KAAK+uF,SAAW,+KAKwBwpC,QACpCH,mBAA2BI,QAAoBL,iDACXI,QACpCJ,mBAA2BK,QAAoBJ,sDACNG,wDACAC,mBACrCC,2CAC2BjiD,gCAC/BD,kJAMN;;;;;;;;;;;;;;;;GC9CK,MAAMmiD,GAAuC,CAClD/2H,WAAY2U,GACZO,YAAa,QACb+Q,WAAYA,EAAE7N,SAAQ6M,QAAO9mB,cAC3B,MAAM8xB,MAACA,GAAS7X,GACVirD,QAACA,EAAOC,UAAEA,EAASC,OAAEA,GAAUt+C,EAC/BivF,EAAe/1G,EAEf4oF,EAAU,IAAIwvC,GACftmG,EAAmBxwB,MAAO4jE,EAASC,EAAWC,GAEnD,OADe2wC,EAAaxH,gBAAgB3lB,EAAS,CAAC92D,GAAQA,EAAMvwB,MACvD,GCGJsW,GAAQ+9F,GAAgB,CAACzJ,UAjBxB,mWAmBD0sB,GAA4B,CACvCh3H,WAAY2S,GACZuC,YAAa,QACb+Q,WAAYjQ,ICnBD0+C,GACTq/C,GAAgB,CAACzJ,UAHP,yBAGyB2J,cAAenO,KAEzCmxB,GAA4B,CACvCj3H,WAAY4S,GACZsC,YAAa,QACb+Q,WAAYyuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTR,MAAOwiE,GAKXh5H,WAAAA,CACIi5H,EAAoBrtF,EAAkBT,EACtC+tF,EAAqB/wH,EAAmB5G,EACxC43H,GAAmB,GAPvBh5H,KAAA2zE,cAAgB,CAAC,UAAW,UAAW,gBAQrC3zE,KAAK6+C,YAAcz9C,EACnB,MAAMgtH,EAAcrzB,GAAkB/yF,EAAQhG,QACxCX,EAAQ05F,GAAkB35F,EAAMY,QACtC,IAAIi3H,EAAgB,GACA,IAAhBjuF,EACFiuF,EAAgB,IACS,IAAhBjuF,IACTiuF,EAAgB,QAElB,MAAMC,EAAiB,cAAcD,KAErC,IAAIE,EAAgB,GACA,IAAhBJ,EACFI,EAAgB,IACS,IAAhBJ,IACTI,EAAgB,gBAElB,MAAMC,EAAiB,cAAcD,KAE/B9K,EAAe5iF,EAAW,EAAI,aAAe,UACnDzrC,KAAK+uF,SAAW,aACVq/B,eAAyBA,KAAepmH,2CAGtC3G,2HAGoBy3H,mFAEErtF,8CACAytF,gDACQ7K,2FAGnB+K,iJAOrB;;;;;;;;;;;;;;;;GCNK,MAAMC,GAAgC,CAC3C13H,WAAY6S,GACZqC,YAAa,QACb+Q,WA5CI,SAAoBiI,GAKxB,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BtB,QAACA,EAAOid,QAAEA,GAAWzxB,GACrB3Y,MAACA,GAASwlB,GAEVskB,UAACA,EAASc,WAAEA,EAAUX,UAAEA,EAASrjC,QAAEA,EAAOikC,WAAEA,GAC9C4sC,GAA6BrtC,EAASjd,EAASntB,GAE7Ck4H,EAAe,CAACrtF,EAAaZ,EAAWA,GAE9C,GAAmB,IAAfY,EACF,OAAOnsC,EAAQ8wG,eAAexvG,EAAOmtB,EAAQltB,OAG/C,MAAMmtH,EAAiBr1E,GACnB,CAACp/B,OAAQ,CAACxX,EAAGgsB,GAAUzuB,UAAS8mB,MAAO,CAACxlB,MAAO,CAAC4qC,EAAYd,MAC1DujF,EAAWt1E,GACb,CAACp/B,OAAQ,CAACxX,EAAGipC,GAAU1rC,UAAS8mB,MAAO,CAACxlB,MAAO,CAAC4qC,EAAYX,MAE1DgzB,EAAev+D,EAAQ8wG,eACzB,GAAI,UAAW,IAAIvqG,aAAa,CAAC,KAC/BqiF,EAAU,IAAImwC,GAChB7sF,EAAYd,EAAWsjF,EAAeptH,MAAMY,OAAQysH,EAASrtH,MAAMY,OACnEgG,EAASsxH,GACPpzG,EAAMpmB,EAAQuuG,gBAChB3lB,EAAS,CAAC+lC,EAAUD,EAAgBnwD,GAAeowD,EAASptH,OAE1Ds1E,EAAWx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,WAO7D,OALAtB,EAAQmuG,8BAA8BugB,GACtC1uH,EAAQmuG,8BAA8BwgB,GACtC3uH,EAAQmuG,8BAA8B/nF,GACtCpmB,EAAQmuG,8BAA8B5vC,GAE/BsY,CACT;;;;;;;;;;;;;;;;GC1CM,MAAO4iD,GAKX15H,WAAAA,CAAY25H,EAAep4H,EAAiBoE,GAG1C,IAAIi0H,EACAC,EACJ,GATF15H,KAAA2zE,cAAgB,CAAC,IAAK,IAAK,KAKzB3zE,KAAK6+C,YAAcz9C,EAIfoE,EAAO,EACT,MAAM5D,MAAM,kBAAkB4D,0BAGhC,GAAa,IAATA,EACFk0H,EAAW,QACXD,EAAU,YACL,CACL,MAAM9K,EAAgB,CAAC,UAAW,UAAW,UAAW,WAClDgL,EAAa,GACbC,EAAc,GACpB,IAAK,IAAI/2H,EAAI,EAAGA,EAAIzB,EAAMY,OAAQa,IAChC+2H,EAAY/1H,KAAK,GAAG8qH,EAAc9rH,MAC9BA,EAAI22H,GACNG,EAAW91H,KAAK,GAAG8qH,EAAc9rH,MAGrC42H,EAAUE,EAAW/tH,OACrB8tH,EAAWE,EAAYhuH,OAGzB,MAAMvK,EAAQ05F,GAAkBv1F,GAEhCxF,KAAK+uF,SAAW,kCAEV1tF,2DACkBo4H,6DAEDC,oDAEAA,gCAIzB;;;;;;;;;;;;;;;;GC/BK,MAAMG,GAA6B,CACxCl4H,WAAY8S,GACZoC,YAAa,QACb+Q,WAdI,SAAiBiI,GAErB,MAAM9V,OAACA,EAAMja,QAAEA,GAAW+vB,GACpB2xB,UAACA,EAASh2C,EAAEA,EAACnM,EAAEA,GAAK0a,EAEpB2uE,EACF,IAAI6wC,GAAc/3E,EAAUpgD,MAAMY,OAAQwJ,EAAEpK,MAAOoK,EAAEpK,MAAMY,QAC/D,OAAOlC,EAAQuuG,gBACX3lB,EAAS,CAAClnC,EAAWh2C,EAAGnM,GAAImhB,GAAWhV,EAAEnK,MAAOhC,EAAEgC,OACxD,GCFam1D,GAAOk/C,GAAgB,CAACzJ,UARxB,kLAIKpzB,0EAMLihD,GAA2B,CACtCn4H,WAAY+S,GACZmC,YAAa,QACb+Q,WAAY4uC,ICZDvc,GAAUy7D,GAAgB,CAACzJ,UAFxB,wCAIH8tB,GAA8B,CACzCp4H,WAAYoT,GACZ8B,YAAa,QACb+Q,WAAYqyB,ICADqd,GAAOo+C,GAAgB,CAACzJ,UALxB,2DAOA+tB,GAA2B,CACtCr4H,WAAYmT,GACZ+B,YAAa,QACb+Q,WAAY0vC,ICPDE,GAAMk+C,GAAgB,CAACzJ,UAJxBwJ,GAA0B,yBAMzBwkB,GAA0B,CACrCt4H,WAAYiT,GACZiC,YAAa,QACb+Q,WAAY4vC,ICLDE,GAAOg+C,GAAgB,CAACzJ,UALxB,iEAOAiuB,GAA2B,CACtCv4H,WAAYkT,GACZgC,YAAa,QACb+Q,WAAY8vC,ICYDnR,GAAWmvD,GAAgB,CAACzJ,UAtBxB,4WAwBJkuB,GAA+B,CAC1Cx4H,WAAYqT,GACZ6B,YAAa,QACb+Q,WAAY2+B,ICsCD6zE,GAAqC,CAChDz4H,WAAYwT,GACZ0B,YAAa,QACb+Q,WA/D6BiI,IAK7B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNwhC,WAACA,EAAUyO,SAAEA,GAAYpjC,EAE/B3O,EACI1V,EAAEnB,MAAMY,QAAU,GAClB,IAAM,yEAGV,MAAMy5C,EAAOF,EAAWhzC,QAAO,CAAChF,EAAGmV,IAAMnV,EAAImV,IAEvC2hH,EAA4C,CAAC,CAAC,EAAG,IACvDA,EAAiBx2H,QAAQmmD,GACzB,IAAK,IAAInnD,EAAI,EAAI04C,EAAWv5C,OAAQa,EAAIN,EAAEnB,MAAMY,SAAUa,EACxDw3H,EAAiBx2H,KAAK,CAAC,EAAG,IAG5B,MAAMi/G,EAAY,GAEZwX,EAAUpF,GAAM,CACpBn7G,OAAQ,CAACxX,KACTzC,UACA8mB,MAAO,CAACojC,SAAUqwE,EAAkBhuE,cAAe,KAG/CkuE,EACF1hD,GAAyByhD,EAAQl5H,MAAOm6C,EAAYE,GAAM,GAExD++E,EAAoC3hD,GACtC0hD,EAAoBv4H,OAAQu5C,EAAWv5C,QAAQ,GAE7Cs3H,EACFzgD,GAAiCyhD,EAAQl5H,MAAOm6C,EAAYE,GAAM,GAEhEg/E,EAAkBthF,GACpB,CAACp/B,OAAQ,CAACxX,EAAG+3H,GAAUx6H,UAAS8mB,MAAO,CAACxlB,MAAOm5H,KAE7CG,EAAWnzF,GAAU,CACzBxtB,OAAQ,CAACxX,EAAGk4H,GACZ36H,UACA8mB,MAAO,CAAC6gB,KAAM+yF,KAGVj7H,EACF45C,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGm4H,GAAW56H,UAAS8mB,MAAO,CAACxlB,MAAOk4H,KAQ5D,OANAxW,EAAUj/G,KAAKy2H,GACfxX,EAAUj/G,KAAK42H,GACf3X,EAAUj/G,KAAK62H,GAEf5X,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KAEtDjM,CAAM;;;;;;;;;;;;;;;;GChCR,MAAMo7H,GAAoC,CAC/Ch5H,WAAY8T,GACZoB,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AA9BI,SAAwBiI,GAK5B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BsuC,cAACA,EAAaC,aAAEA,EAAYC,aAAEA,GAAgBtkD,GAC9C8kC,YAACA,GAAej4B,GAEhBskB,UAACA,EAASc,WAAEA,EAAUhkC,QAAEA,EAAOikC,WAAEA,GACnC4sC,GAA6Bza,EAAcD,EAAetf,GAGxD6pC,EAAU,IAAImwC,GAChB7sF,EAAYd,EAAWizB,EAAc/8D,MAAMY,OAC3Co8D,EAAah9D,MAAMY,OAAQgG,EAAS,CAACikC,EAAY,IAH9B,GAKjB/lB,EAAMpmB,EAAQuuG,gBAChB3lB,EAAS,CAACtqB,EAAcD,EAAeE,GAAeD,EAAa/8D,OAEjEs1E,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2jB,GAAMpmB,UAAS8mB,MAAO,CAACxlB,MAAOy9C,KAGvD,OADA/+C,EAAQmuG,8BAA8B/nF,GAC/BywD,CACT;;;;;;;;;;;;;;;;GCDO,MAAMikD,GAA6B,CACxCj5H,WAAYyT,GACZyB,YAAa,QACb+Q,WA5BI,SACFiI,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNo/C,gBAACA,EAAe5zD,KAAEA,GAAQqhB,EAE1B8+E,EAAQztF,EAAoB1S,EAAMhD,EAAEnB,OAAO,GAC3C+2E,EAAaU,GAA8Bt2E,EAAG42D,EAAiBusC,GAE/Dx2D,EAAQ3sC,EAAEnB,MAAMY,OAChBqqC,EAAQ,IAAI3oC,MAAMwrC,GAAOrzB,KAAK,GAC9B9X,EAAOxB,EAAEnB,MAAMiE,QAErB,OAAO8yE,EAAW1yE,KAAIC,IACpB,MAAM2lC,EAAY,IAAItnC,GACtBsnC,EAAUq6D,GAAShgG,EACnB,MAAMm1H,EACFx1H,GAAM,CAAC0U,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACylB,QAAOtoC,KAAMsnC,KAEtD,OADAgB,EAAMq5D,IAAUhgG,EACTm1H,CAAM,GAEjB,GCvBav2H,GAAOoxG,GAAgB,CAACzJ,UAFxB,oBAIA6uB,GAA2B,CACtCn5H,WAAYsT,GACZ4B,YAAa,QACb+Q,WAAYtjB,ICFDy2H,GAA6B,CACxCp5H,WAAY4T,GACZsB,YAAa,QACb+Q,WALoB8tF,GAAgB,CAACzJ,UAFxB,mBCAT+uB,GAAqB,4BAEdhhE,GAAoBg8C,GAC7B,CAAC/J,UAAW+uB,GAAoBrlB,gBAAiBqlB,KAExCC,GAAwC,CACnDt5H,WAAY2T,GACZuB,YAAa,QACb+Q,WAAYoyC;;;;;;;;;;;;;;;;GCOP,MAAMkhE,GAA2B,CACtCv5H,WAAYyU,GACZS,YAAa,QACb+Q;;;;;;;;;;;;;;;;;AAjBI,UACF7N,OAACA,EAAM6M,MAAEA,EAAK9mB,QAAEA,IAGlB,MAAMyC,EAACA,GAAKwX,EACNkyF,EAAYC,GAAoB,sCACLtlF,EAAMm+B,cAGjC2jC,EAAU,IAAIsjB,GAAezpG,EAAEnB,MAAO6qG,GAE5C,OAAOnsG,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MACjD;;;;;;;;;;;;;;;;GCdM,MAAO85H,GAKXt7H,WAAAA,CAAYwsC,EAAiBrkC,EAAmBjE,GAJhD/D,KAAA2zE,cAAgB,CAAC,KAKf3zE,KAAK6+C,YAAc96C,EACnB,MAAMyB,EAAOzB,EAAK/B,OACZo5H,EAAargC,GAAkBh3F,EAAK/B,QACpCX,EAAQ05F,GAAkBh3F,EAAK/B,QAErC,IAAIq5H,EAAY,GAChB,GAAa,IAAT71H,EACF61H,EAAY,+BACP,CACL,IAAIC,EAAa,EACjBD,EACIt3H,EAAK0B,KAAI,CAACikB,EAAG7mB,KACPy4H,IACuB,IAAhBv3H,EAAK/B,OACR,oBAAoBa,cAAcA,KAClC,UAAUy4H,EAAa,gBAAgBz4H,cAAcA,QAE1D+I,KAAK,KAGhB5L,KAAK+uF,SAAW,WACZqsC,aAAsBA,KAAc/uF,cACpC+uF,eAAwBA,KAAcpzH,uCAGpC3G,yDACeg6H,qBAGvB;;;;;;;;;;;;;;;;GC6BK,MAAME,GAAmC,CAC9C55H,WAAY+T,GACZmB,YAAa,QACb+Q,WA7DI,SAAuBiI,GAK3B,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNsyB,MACJA,EAAK/uB,IACLA,EAAGtV,QACHA,EAAOqlC,UACPA,EAASC,QACTA,EAAOC,aACPA,EAAY+B,YACZA,EAAWC,eACXA,GACE3oB,GAEEkpB,WAACA,EAAUN,OAAEA,EAAME,SAAEA,EAAQ3rC,KAAEA,EAAIqB,SAAEA,EAAQyqC,SAAEA,GACjDE,GACIxtC,EAAEnB,MAAOirC,EAAO/uB,EAAKtV,EAASqlC,EAAWC,EAASC,EAClD+B,EAAaC,GAEfvS,EAAKmc,GAAQ,CAACp/B,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACxlB,MAAOgE,KAEzD,IAAI7F,EACJ,GAAIuwC,EAAY,CACd,MAAMozE,EACF79G,GAAM,CAAC0U,OAAQ,CAACxX,EAAGy6B,GAAKl9B,UAAS8mB,MAAO,CAACylB,MAAOmD,EAAQzrC,UAC5DxE,EAAS45C,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2gH,GAASpjH,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAE/D/vC,EAAQmuG,8BAA8BiV,QACjC,GAAIrzE,EAAShuB,MAAKtc,GAAiB,IAATA,IAC/BhG,EAASO,EAAQ8wG,eAAe/gE,EAAUttC,EAAElB,MAAO,QAC9C,CAEL,GAD2BvB,EAAQuwG,mBAAmB,CAACrzE,IAC/B,CACtB,MACM77B,EADWrB,EAAQ+/F,QAAQz/F,IAAI48B,EAAG38B,QAChBc,OAClBshG,EAAOpkF,GAAO2e,EAAG57B,MAAO47B,EAAG37B,MAAOF,GAClCmjG,EACFsD,GAAoB/3D,EAAU4yD,EAAM/yD,EAAUF,GAClDjwC,EAASO,EAAQ8wG,eAAe/gE,EAAU7S,EAAG37B,MAAOijG,EAAanjG,YAC5D,CACL,MAAMunF,EAAU,IAAIyyC,GAAoB3rF,EAAQE,EAAUG,GAC1DtwC,EAASO,EAAQuuG,gBAAgB3lB,EAAS,CAAC1rD,GAAKA,EAAG37B,QAIvD,MAAMm6H,EACFriF,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGhD,GAASO,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAK1D,OAHA/vC,EAAQmuG,8BAA8BjxE,GACtCl9B,EAAQmuG,8BAA8B1uG,GAE/Bi8H,CACT,GC3DahhE,GAAMk7C,GAAgB,CAACzJ,UAFxB,mBAICwvB,GAA0B,CACrC95H,WAAYgU,GACZkB,YAAa,QACb+Q,WAAY4yC,ICHDlhD,GAAOo8F,GAAgB,CAACzJ,UALxB,yFAOAyvB,GAA2B,CACtC/5H,WAAYiU,GACZiB,YAAa,QACb+Q,WAAYtO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVR,MAAOqiH,GAMX97H,WAAAA,CAAYkoD,EAAkB/K,GAL9Bh9C,KAAA2zE,cAAgB,CAAC,KAMf,MAAM90B,EAAwB,IAAIn7C,MAAMqkD,EAAO/lD,QAC/C,IAAK,IAAIa,EAAI,EAAGA,EAAIg8C,EAAY78C,OAAQa,IACtCg8C,EAAYh8C,GAAKklD,EAAOllD,GAAKm6C,EAAKn6C,GAEpC7C,KAAK6+C,YAAcA,EACnB7+C,KAAKwF,KAAOq5C,EAAY78C,OACxB,MAAMX,EAAQ05F,GAAkB/6F,KAAKwF,MAC/BojG,EAWV,SAAyB7gD,GACvB,MAAMviD,EAAOuiD,EAAO/lD,OACpB,GAAIwD,EAAO,EACT,MAAM5D,MAAM,iBAAiB4D,0BAE/B,GAAa,IAATA,EACF,MAAO,eAAeuiD,EAAO,MAG/B,MAAM4mE,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,WAE7D/lB,EAAe,GACrB,IAAK,IAAI/lG,EAAI,EAAGA,EAAIklD,EAAO/lD,OAAQa,IACjC+lG,EAAa/kG,KAAK,QAAQ8qH,EAAc9rH,OAAOklD,EAAOllD,OAExD,OAAO+lG,EAAah9F,MACtB;;;;;;;;;;;;;;;;GA3ByB+gG,CAAgB5kD,GAErC/nD,KAAK+uF,SAAW,kCAEV1tF,wDACeunG,qBAGvB,ECnBI,SAAUplD,GACZl4C,GAEF,MAAMyO,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAAStb,GAC3B/I,EAACA,GAAKwX,GACNijC,KAACA,GAAQp2B,EAEf,GAAgB,WAAZrkB,EAAElB,MAAoB,CAGxB,MACM0hG,EADOjjG,EAAQkB,SAASuB,EAAElC,QACPoF,KAAI2C,GAAK6P,GAAkB7P,KAC9CmxB,EAAMlb,GAAO9b,EAAEnB,MAAOmB,EAAElB,MAAO0hG,GAC/BJ,EAASmF,GAAYvuE,EAAKyjB,GAChC,OAAOl9C,EAAQ8wG,eAAejO,EAAOvhG,MAAOuhG,EAAOthG,MAAOshG,EAAOxhG,QAGnE,MAAMunF,EAAU,IAAIizC,GAAYp5H,EAAEnB,MAAO47C,GAGzC,OAFel9C,EAAQuuG,gBAAgB3lB,EAAS,CAACnmF,GAAIA,EAAElB,MAGzD,CAEO,MAAMu6H,GAA2B,CACtCj6H,WAAYkU,GACZgB,YAAa,QACb+Q,WAAY47B;;;;;;;;;;;;;;;;GCRP,MAAMq4E,GAA2B,CACtCl6H,WAAYmU,GACZe,YAAa,QACb+Q,WAtBI,SACFiI,GAEF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,GAAKwX,GACNwH,EAACA,EAAC05C,OAAEA,GAAUr0C,EAEduwC,EAAQr3D,EAAQkB,SAASuB,EAAElC,SAC1B6kG,EAAaC,GAChB4C,GAAY5wC,EAAO50D,EAAEnB,MAAOmB,EAAElB,MAA0BkgB,EAAG05C,GAE/D,MAAO,CACLn7D,EAAQ8wG,eACJ1L,EAAY9jG,MAAO8jG,EAAY7jG,MAAO6jG,EAAY/jG,QACtDrB,EAAQ8wG,eACJzL,EAAe/jG,MAAO+jG,EAAe9jG,MAAO8jG,EAAehkG,QAEnE;;;;;;;;;;;;;;;;GCMO,MAAM26H,GAA6B,CACxCn6H,WAAYqU,GACZa,YAAa,QACb+Q,WAzBI,SACFiI,GAGF,MAAM9V,OAACA,EAAM6M,MAAEA,EAAK9mB,QAAEA,GAAW+vB,GAC3BtqB,KAACA,GAAQqhB,GACTrkB,EAACA,GAAKwX,EACZizE,GAAiBzqF,EAAG,UAGpB0H,QAAQC,KACJ,YACA,8DACJ,MAAM/I,EAASrB,EAAQkB,SAASuB,EAAElC,SAC5B+lG,aAACA,EAAYvnD,YAAEA,EAAWtwB,QAAEA,GAC9B05E,GAAc9mG,EAAQoE,EAAMhD,EAAEnB,MAAOmB,EAAElB,OAC3C,MAAO,CACLvB,EAAQ8wG,eAAe/xD,EAAat8C,EAAElB,MAAO+kG,GAC7CtmG,EAAQ8wG,eAAe,CAACriF,EAAQvsB,QAAS,QAASusB,GAEtD;;;;;;;;;;;;;;;;GCyBO,MAAMwtG,GAA6B,CACxCp6H,WAAYsU,GACZY,YAAa,QACb+Q,WA/CI,SACFiI,GAGF,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3B3wB,MAACA,GAAS6a,EAChB,IAAIxU,KAACA,GAAQqhB,EAETrhB,EAAO,IACTA,GAAQrG,EAAMkC,MAAMY,QAGtB,MAAMO,EAAIrD,EACJgwC,EAAQ3sC,EAAEnB,MAAMY,OAEhB2E,EAAMzH,EAAMkC,MAAMmE,GAClBsqC,EAAqB,IAAInsC,MAAMwrC,EAAQ,GAC7C,IAAI8sF,EAAW,EACf,IAAK,IAAIn5H,EAAI,EAAGA,EAAIqsC,EAAOrsC,IACrBA,IAAM0C,IACRsqC,EAASmsF,KAAcz5H,EAAEnB,MAAMyB,IAInC,MAAMigH,EAAY,GAEZz2E,EAAQ,IAAI3oC,MAAMwrC,GAAOrzB,KAAK,GAC9B9X,EAAOxB,EAAEnB,MAAMiE,QACrBtB,EAAKwB,GAAQ,EACb,MAAM2gB,EAAoB,IAAIxiB,MAAMiD,GACpC,IAAK,IAAI9D,EAAI,EAAGA,EAAIqjB,EAAIlkB,OAAQa,IAAK,CACnCwpC,EAAM9mC,GAAQ1C,EACd,MAAMqgH,EAAS79G,GAAM,CAAC0U,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAACylB,QAAOtoC,UACrD4yE,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAAG2gH,GAASpjH,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAC1D3pB,EAAIrjB,GAAK8zE,EAETmsC,EAAUj/G,KAAKq/G,GAIjB,OADAJ,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KACtD0a,CACT;;;;;;;;;;;;;;;;GC9CM,MAAO+1G,GAKXp8H,WAAAA,CACIq8H,EACAC,GANJn8H,KAAA2zE,cAAgB,CAAC,IAAK,cAOpB,MAAMqlC,EAAakjB,EAAUljB,WACvBjjE,EAAYmmF,EAAUnmF,UACtBsgC,EAAS6lD,EAAU7lD,OACnB3a,EAAcwgE,EAAUxgE,YACxB2/B,EAAU3/B,EAAcv5D,KAAKkC,KAAKgyE,EAAS2iC,GACjDh5G,KAAK6+C,YAAc,CAAC9I,EAAWslD,GAE/B,MAGM4d,EAAqD,EAA7B92G,KAAKiH,MAAM4vG,EAAa,GAChDE,EAA0BF,EAAa,EAEvCG,EAAgB,sDAItB,IAAIijB,EAAwB,GACxB/lD,EAAS2iC,EAAa,IACxBojB,EAAwB,uCACM/lD,kEAMhC,IAAIgmD,EAA4B,GAC5BhmD,EAAS2iC,EAAa,IACxBqjB,EAA4B,uCACEhmD,mDAMhCr2E,KAAK+uF,SAAW,2GAIVqtC,2GAKAC,2PASE3gE,eAAyBs9C,+DACmBt9C,yEAI1Bu9C,2lBAgBlBE,kDAGqBF,mBACS,IAA5BC,8aAiBFC,yBACqC,IAA5BD,obAeTC,yBACqC,IAA5BD,+eAeTC,2DAKV;;;;;;;;;;;;;;;;GCnDK,MAAMmjB,GAAyC,CACpD36H,WAAYuU,GACZW,YAAa,QACb+Q,WArFI,SAA6BiI,GAKjC,MAAM9V,OAACA,EAAMja,QAAEA,EAAO8mB,MAAEA,GAASiJ,GAC3BttB,EAACA,EAACk5D,WAAEA,GAAc1hD,GAClB2hD,YAACA,GAAe90C,EAEhBsoB,EAAQ3sC,EAAEnB,MAAMY,OAEhB8gH,EAAY,GAElB,IAAIv9G,EAAO,EACX,MAAMqkH,EAAc/wC,GAAgC,CAACtzE,GAAO2pC,GAC5D,IAAIyuE,EAAYp7G,EACG,MAAfqnH,IACFjM,EAAYp2E,GAAU,CAACxtB,OAAQ,CAACxX,KAAIzC,UAAS8mB,MAAO,CAAC6gB,KAAMmiF,KAC3D9G,EAAUj/G,KAAK85G,GACfp4G,EAAOszE,GAA8B,EAAG3pC,GAAO,IAGjD,MAAMW,EAAWgpC,GACb8kC,EAAUv8G,MAAOmE,EAAMm2D,GACrB2a,EAASp+D,EAAmB,CAAC0lG,EAAUv8G,MAAMmE,KAC7Cq4G,EACFzkE,GAAQ,CAACp/B,OAAQ,CAACxX,EAAGo7G,GAAY79G,UAAS8mB,MAAO,CAACxlB,MAAO,EAAE,EAAGi1E,MAClEysC,EAAUj/G,KAAK+5G,GAEf,MAAM2e,EAAc57G,GAAWpe,EAAElB,OAE3Bm7H,EACFA,CAACj6H,EAAe45H,EAAiC1gE,EAChDp6D,EAAiBq6D,KAChB,MAAM3lB,EAAYxzC,EAAEnB,MAAM,GACpBi1E,EAAS9zE,EAAEnB,MAAM,GACjB43G,EACFngC,GACIxC,EAAQ3a,GAEVgtB,EAAU,IAAIuzC,GADF,CAACjjB,aAAY3iC,SAAQtgC,YAAW2lB,eACFygE,GAC1ChiH,EAASra,EAAQ2wG,cAAc/nB,EAAS,CAACnmF,EAAGk5D,GAAap6D,GAG/D,GAFAyhH,EAAUj/G,KAAKsW,GAEXA,EAAO/Y,MAAM,KAAOs6D,EACtB,OAAOvhD,EAET,MAAMsiH,EAAYhoE,GAAM,CACtB30D,UACA8mB,MAAO,CAAC9e,MAAO,EAAG6mC,KAAM+sB,EAAav8D,KAAM,EAAGkC,MAAO,aAEjDq7H,EAAWl5E,GAAK,CACpBzpC,OAAQ,CAACxX,EAAGk6H,GACZ38H,UACA8mB,MAAO,CAACo2B,KAAM,CAACq5B,EAAS2iC,MAG1B8J,EAAUj/G,KAAK44H,GACf3Z,EAAUj/G,KAAK64H,GAIf,OADIF,EAAariH,EAAQgiH,EAAWO,EAAUr7H,EAAOq6D,EACxC,EAMbib,EACFx9B,GAAQ,CAACp/B,OAAQ,CAACxX,EAJFi6H,EAChB5e,EAAK,qBAAsBniD,EAAY8gE,EAAa7gE,IAGjB57D,UAAS8mB,MAAO,CAACxlB,MAAOyuC,KAE/D,IAAItwC,EAASo3E,EACb,GAAmB,MAAfizC,EAAqB,CACvB9G,EAAUj/G,KAAK8yE,GACf,MAAMlvC,EAAOoxC,GAAoC+wC,GACjDrqH,EAASgoC,GAAU,CAACxtB,OAAQ,CAACxX,EAAGhD,GAASO,UAAS8mB,MAAO,CAAC6gB,UAI5D,OADAq7E,EAAUz7G,SAAQmE,GAAK1L,EAAQmuG,8BAA8BziG,KACtDjM,CACT,GCiEMo9H,GAAgC,CACpCvM,GACAE,GACA9T,GACAC,GACAC,GACAC,GACAI,GACAK,GACAM,GACAG,GACAuB,GACAC,GACAC,GACAC,GACAG,GACAF,GACAG,GACAgB,GACAF,GACAM,GACAE,GACAC,GACAS,GACAkB,GACAM,GACAI,GACAM,GACAK,GACAK,GACAtP,GACA6Q,GACAoC,GACAC,GACAN,GACAQ,GACAC,GACAF,GACAG,GACAC,GACAe,GACAI,GACAM,GACAO,GACAiB,GACAC,GACAL,GACAO,GACAG,GACAC,GACAC,GACAC,GACAC,GACAE,GACAE,GACAE,GACAU,GACAG,GACAE,GACAE,GACAC,GACAG,GACAE,GACAC,GACAK,GACAM,GACAG,GACAC,GACAna,GACAoa,GACA9J,GACA+J,GACAC,GACAC,GACAha,GACAia,GACAC,GACAC,GACAE,GACAD,GACAE,GACAC,GACAC,GACAgB,GACAK,GACAF,GACAK,GACAI,GACAI,GACAd,GACAiB,GACAM,GACAC,GACAM,GACAE,GACAc,GACApb,GACAub,GACAC,GACAC,GACAC,GACA9Q,GACAqR,GACAE,GACAC,GACAO,GACAC,GACA5f,GACA6f,GACAC,GACAjS,GACA6P,GACAqC,GACAE,GACAD,GACA5c,GACAud,GACAY,GACAG,GACAE,GACAY,GACAU,GACAC,GACAC,GACAS,GACAQ,GACAC,GACAC,GACAC,GACAC,GACAC,GACAtX,GACA+Q,GACAwG,GACAC,GACAO,GACAC,GACAE,GACAC,GACAE,GACAC,GACAK,GACAlI,GACAlY,GACAsgB,GACAC,GACAE,GACAC,GACAxgB,GACAygB,GACAC,GACAO,GACA5H;;;;;;;;;;;;;;;;GAGF,IAAK,MAAM54C,KAAgB6gD,GACzBvlH,GAAe0kE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1SjB,IAAY8gD,GAmTKC,GC9TL1wH,IAGRhC,aAAa,6BAA6B,KAAM,IAAOklB,IACrDA,GACFplB,QAAQC,KACJ,oPDKR,SAAY0yH,GAGVA,EAAAA,EAAc,WAAA,GAAA,aAIdA,EAAAA,EAAY,SAAA,GAAA,WACZA,EAAAA,EAAa,UAAA,GAAA,YACbA,EAAAA,EAAY,SAAA,GAAA,WACZA,EAAAA,EAAY,SAAA,GAAA,WACZA,EAAAA,EAAY,SAAA,GAAA,WACZA,EAAAA,EAAW,QAAA,GAAA,UACXA,EAAAA,EAAa,UAAA,GAAA,YACbA,EAAAA,EAAgB,aAAA,GAAA,eAChBA,EAAAA,EAAY,SAAA,GAAA,WACZA,EAAAA,EAAY,QAAA,IAAA,UACZA,EAAAA,EAAa,SAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658]}